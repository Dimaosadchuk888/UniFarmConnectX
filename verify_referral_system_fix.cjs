#!/usr/bin/env node
/**
 * –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´
 * –ü–æ–ª–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –≤—Å–µ—Ö –≤–Ω–µ—Å–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
 */

const { exec } = require('child_process');
const fs = require('fs');

console.log('üîç –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´');
console.log('===========================================\n');

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ ValidationResult —Å–æ–¥–µ—Ä–∂–∏—Ç start_param
console.log('üìã 1. –ü–†–û–í–ï–†–ö–ê –ò–ù–¢–ï–†–§–ï–ô–°–ê ValidationResult:');
try {
  const telegramUtils = fs.readFileSync('utils/telegram.ts', 'utf8');
  const hasStartParam = telegramUtils.includes('start_param?: string');
  const hasReturnStartParam = telegramUtils.includes('start_param }');
  
  console.log('   ‚úÖ start_param –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:', hasStartParam);
  console.log('   ‚úÖ start_param –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏:', hasReturnStartParam);
  
  if (!hasStartParam || !hasReturnStartParam) {
    console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: start_param –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ utils/telegram.ts');
  }
} catch (e) {
  console.log('   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è utils/telegram.ts:', e.message);
}

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º AuthService –∏–∑–º–µ–Ω–µ–Ω–∏—è
console.log('\nüìã 2. –ü–†–û–í–ï–†–ö–ê –ò–ó–ú–ï–ù–ï–ù–ò–ô AuthService:');
try {
  const authService = fs.readFileSync('modules/auth/service.ts', 'utf8');
  const hasValidationStartParam = authService.includes('validation.start_param');
  const hasLogStartParam = authService.includes('start_param:');
  
  console.log('   ‚úÖ validation.start_param –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è:', hasValidationStartParam);
  console.log('   ‚úÖ start_param –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è:', hasLogStartParam);
  
  if (!hasValidationStartParam) {
    console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: validation.start_param –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ AuthService');
  }
} catch (e) {
  console.log('   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è modules/auth/service.ts:', e.message);
}

// 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint
console.log('\nüìã 3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API ENDPOINT:');

const testInitData = 'user=%7B%22id%22%3A999999999%2C%22first_name%22%3A%22TestUser%22%2C%22username%22%3A%22testuser%22%7D&auth_date=1642632825&start_param=REF123&hash=valid_test_hash';

const curlCommand = `curl -s -X POST http://localhost:3000/api/auth/telegram -H "Content-Type: application/json" -d '{"initData":"${testInitData}"}'`;

console.log('   –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å start_param=REF123...');

exec(curlCommand, (error, stdout, stderr) => {
  if (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    return;
  }
  
  try {
    const response = JSON.parse(stdout);
    console.log('   üìä –û—Ç–≤–µ—Ç API:');
    console.log('      - success:', response.success);
    console.log('      - error:', response.error || '–Ω–µ—Ç –æ—à–∏–±–æ–∫');
    
    if (response.success) {
      console.log('   ‚úÖ API endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç');
    } else {
      console.log('   ‚ö†Ô∏è  API endpoint –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', response.error);
    }
  } catch (e) {
    console.log('   üìä –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', stdout.substring(0, 200));
  }
});

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞
console.log('\nüìã 4. –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –õ–û–ì–û–í:');
console.log('   –ò—â–∏—Ç–µ –≤ –ª–æ–≥–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏:');
console.log('   ‚úÖ "[INFO] ‚úÖ Telegram initData validation successful" —Å start_param');
console.log('   ‚úÖ "[INFO] [AuthService] –í–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram –ø–æ–ª—É—á–µ–Ω—ã" —Å start_param –∏ ref_by');
console.log('   ‚úÖ "–†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–í–Ø–ó–¨ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù–ê" –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
console.log('\nüìã 5. –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:');
console.log('   –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ SQL –∑–∞–ø—Ä–æ—Å—ã:');
console.log('   SELECT COUNT(*) FROM referrals; -- –¥–æ–ª–∂–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è');
console.log('   SELECT COUNT(*) FROM users WHERE referred_by IS NOT NULL; -- –¥–æ–ª–∂–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è');
console.log('   SELECT * FROM referrals ORDER BY created_at DESC LIMIT 5; -- –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏');

console.log('\nüìã 6. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í –ë–†–ê–£–ó–ï–†–ï:');
console.log('   –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
console.log('   –û—Ç–∫—Ä–æ–π—Ç–µ DevTools Console');
console.log('   –í—ã–ø–æ–ª–Ω–∏—Ç–µ:');
console.log(`   fetch("/api/auth/telegram", {
     method: "POST",
     headers: { "Content-Type": "application/json" },
     body: JSON.stringify({
       initData: "${testInitData}"
     })
   }).then(r => r.json()).then(console.log)`);

console.log('\nüéØ –û–ñ–ò–î–ê–ï–ú–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
console.log('   ‚úÖ start_param –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏–∑ initData');
console.log('   ‚úÖ AuthService –ø–æ–ª—É—á–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –∏–∑ validation.start_param');
console.log('   ‚úÖ –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —Å referred_by != null');
console.log('   ‚úÖ –í —Ç–∞–±–ª–∏—Ü–µ referrals —Å–æ–∑–¥–∞—é—Ç—Å—è –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏');
console.log('   ‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é 95-100%');

setTimeout(() => {
  console.log('\n‚úÖ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
  console.log('–í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!');
}, 2000);