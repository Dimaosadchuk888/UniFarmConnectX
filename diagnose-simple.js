// –ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ TON –±–∞–ª–∞–Ω—Å–∞
const { execSync } = require('child_process');

console.log('\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TON BALANCE UPDATE');
console.log('='.repeat(50));

async function checkServer() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
    
    const netstat = execSync('netstat -tuln | grep :3000 || echo "Port 3000 not found"', { encoding: 'utf8' });
    console.log('–°—Ç–∞—Ç—É—Å –ø–æ—Ä—Ç–∞ 3000:', netstat.trim());
    
    const processes = execSync('ps aux | grep "npm\\|node\\|vite" | grep -v grep || echo "No processes found"', { encoding: 'utf8' });
    console.log('–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:', processes.trim());
    
    console.log('\n‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
    console.log('–î–ª—è –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:3000/debug/balance-flow');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
  }
}

checkServer();