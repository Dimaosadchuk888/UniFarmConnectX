#!/usr/bin/env tsx

/**
 * –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –°–ö–†–ò–ü–¢ –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô USER 25
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ü–µ–ø–æ—á–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ø–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
 */

import { supabase } from './core/supabaseClient';
import { logger } from './core/logger';
import { UnifiedTransactionService } from './core/TransactionService';
import { BalanceManager } from './core/BalanceManager';

async function testUser25DepositFlow() {
  console.log('üîç [–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è User 25...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ User 25
    const { data: user25, error: userError } = await supabase
      .from('users')
      .select('id, telegram_id, username, balance_uni, balance_ton, created_at')
      .eq('id', 25)
      .single();

    if (userError || !user25) {
      console.log('‚ùå User 25 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ:', userError?.message);
      return;
    }

    console.log('‚úÖ User 25 –Ω–∞–π–¥–µ–Ω:', {
      id: user25.id,
      telegram_id: user25.telegram_id,
      username: user25.username,
      balance_uni: user25.balance_uni,
      balance_ton: user25.balance_ton,
      created_at: user25.created_at
    });

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ User 25
    const { data: recentTransactions, error: txError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 25)
      .order('created_at', { ascending: false })
      .limit(10);

    console.log('\nüìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π User 25:');
    if (recentTransactions && recentTransactions.length > 0) {
      recentTransactions.forEach((tx, index) => {
        console.log(`${index + 1}. ${tx.type} | ${tx.amount_ton} TON | ${tx.created_at} | ${tx.description}`);
      });
    } else {
      console.log('   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏...');
    
    const transactionService = UnifiedTransactionService.getInstance();
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º hash
    const testTxHash = `test_${Date.now()}_user25_diagnostic`;
    
    const testResult = await transactionService.createTransaction({
      user_id: 25,
      type: 'TON_DEPOSIT',
      amount_ton: 0.1,
      currency: 'TON',
      description: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –¥–µ–ø–æ–∑–∏—Ç–∞ User 25',
      metadata: {
        ton_tx_hash: testTxHash,
        test: true,
        diagnostic: 'fix_verification'
      }
    });

    console.log('üß™ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞:', testResult);

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º BalanceManager
    console.log('\nüí∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ BalanceManager...');
    
    const balanceManager = BalanceManager.getInstance();
    const currentBalance = await balanceManager.getUserBalance(25);
    
    console.log('üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å User 25:', currentBalance);

    // 5. –ü–æ–ø—ã—Ç–∫–∞ –Ω–µ–±–æ–ª—å—à–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞
    const balanceUpdateResult = await balanceManager.updateUserBalance(
      25,
      'add',
      0,
      0.001, // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç 0.001 TON
      'diagnostic_test'
    );

    console.log('üí∞ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', balanceUpdateResult);

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const { data: finalUser25, error: finalError } = await supabase
      .from('users')
      .select('balance_uni, balance_ton, created_at')
      .eq('id', 25)
      .single();

    if (!finalError && finalUser25) {
      console.log('\n‚úÖ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ User 25:', {
        balance_uni: finalUser25.balance_uni,
        balance_ton: finalUser25.balance_ton,
        created_at: finalUser25.created_at,
        change_ton: parseFloat(finalUser25.balance_ton.toString()) - parseFloat(user25.balance_ton.toString())
      });
    }

    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã');
    console.log('‚úÖ –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ—á–Ω–µ–µ');
    console.log('‚úÖ BalanceManager –æ–±–Ω–æ–≤–ª–µ–Ω');
    console.log('‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è User 25 –≤–∫–ª—é—á–µ–Ω–∞');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
    logger.error('[DIAGNOSTIC] –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è User 25', { error });
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
testUser25DepositFlow().catch(console.error);