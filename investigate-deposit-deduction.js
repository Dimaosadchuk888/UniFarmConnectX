/**
 * –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å–ø–∏—Å–∞–Ω–∏—è –º–æ–Ω–µ—Ç –ø—Ä–∏ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö
 * –¶–µ–ª—å: –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ—á–µ–º—É —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ 1 –º–æ–Ω–µ—Ç–∞ –≤–º–µ—Å—Ç–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—É–º–º—ã
 */

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);

async function investigateDepositDeduction() {
  console.log('üîç –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ü—Ä–æ–±–ª–µ–º–∞ —Å–ø–∏—Å–∞–Ω–∏—è –º–æ–Ω–µ—Ç –ø—Ä–∏ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö');
  console.log('='.repeat(60));

  const userId = 62;
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n1. –¢–ï–ö–£–©–ò–ô –ë–ê–õ–ê–ù–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:');
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('id, username, balance_uni, balance_ton, uni_deposit_amount, uni_farming_rate')
      .eq('id', userId)
      .single();
    
    if (userError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
      return;
    }
    
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.username} (ID: ${user.id})`);
    console.log(`üí∞ –ë–∞–ª–∞–Ω—Å UNI: ${user.balance_uni}`);
    console.log(`üí∞ –ë–∞–ª–∞–Ω—Å TON: ${user.balance_ton}`);
    console.log(`üìä –û–±—â–∏–π –¥–µ–ø–æ–∑–∏—Ç: ${user.uni_deposit_amount}`);
    console.log(`‚ö° –°—Ç–∞–≤–∫–∞ —Ñ–∞—Ä–º–∏–Ω–≥–∞: ${user.uni_farming_rate}`);

    // 2. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã transactions
    console.log('\n2. –°–•–ï–ú–ê –¢–ê–ë–õ–ò–¶–´ TRANSACTIONS:');
    const { data: tableInfo, error: tableError } = await supabase
      .from('transactions')
      .select('*')
      .limit(1);
    
    if (tableError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ö–µ–º—ã —Ç–∞–±–ª–∏—Ü—ã:', tableError);
      return;
    }
    
    if (tableInfo && tableInfo.length > 0) {
      console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏:', Object.keys(tableInfo[0]));
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    console.log('\n3. –ü–û–°–õ–ï–î–ù–ò–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –î–ï–ü–û–ó–ò–¢–û–í:');
    const { data: deposits, error: depositsError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', userId)
      .order('created_at', { ascending: false })
      .limit(10);

    if (depositsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', depositsError);
      return;
    }

    deposits.forEach((tx, index) => {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–µ–π
      const amount = tx.amount_uni || tx.amount_ton || tx.amount || 'N/A';
      const type = tx.type || 'UNKNOWN';
      const description = tx.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è';
      const currency = tx.currency || (tx.amount_uni ? 'UNI' : 'TON');
      
      console.log(`${index + 1}. ${type}: ${amount} ${currency} - ${description}`);
      console.log(`   –°–æ–∑–¥–∞–Ω–æ: ${new Date(tx.created_at).toLocaleString()}`);
    });

    // 4. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    console.log('\n4. –ê–ù–ê–õ–ò–ó –ü–ê–¢–¢–ï–†–ù–û–í –î–ï–ü–û–ó–ò–¢–û–í:');
    const farmingDeposits = deposits.filter(tx => tx.type === 'FARMING_DEPOSIT' || tx.type === 'FARMING_REWARD');
    const farmingRewards = deposits.filter(tx => tx.type === 'FARMING_REWARD');
    
    console.log(`üìà –î–µ–ø–æ–∑–∏—Ç—ã —Ñ–∞—Ä–º–∏–Ω–≥–∞: ${farmingDeposits.length}`);
    console.log(`üéÅ –ù–∞–≥—Ä–∞–¥—ã —Ñ–∞—Ä–º–∏–Ω–≥–∞: ${farmingRewards.length}`);
    
    if (farmingDeposits.length > 0) {
      const amounts = farmingDeposits.map(tx => {
        const amount = tx.amount_uni || tx.amount_ton || tx.amount || 0;
        return parseFloat(amount);
      });
      const totalDeposited = amounts.reduce((sum, amount) => sum + amount, 0);
      const avgDeposit = totalDeposited / amounts.length;
      
      console.log(`üí∏ –û–±—â–∞—è —Å—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${totalDeposited.toFixed(6)} UNI`);
      console.log(`üìä –°—Ä–µ–¥–Ω–∏–π –¥–µ–ø–æ–∑–∏—Ç: ${avgDeposit.toFixed(6)} UNI`);
      console.log(`üî¢ –°—É–º–º—ã –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${amounts.join(', ')}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–µ–ø–æ–∑–∏—Ç—ã –Ω–∞ 1 UNI (–ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ)
      const oneUniDeposits = amounts.filter(amount => amount === 1);
      if (oneUniDeposits.length > 0) {
        console.log(`‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–û ${oneUniDeposits.length} –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –Ω–∞ —Ç–æ—á–Ω–æ 1 UNI - —ç—Ç–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ!`);
      }
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
    console.log('\n5. –ö–û–ù–°–ò–°–¢–ï–ù–¢–ù–û–°–¢–¨ –î–ê–ù–ù–´–•:');
    const depositSum = farmingDeposits.reduce((sum, tx) => {
      const amount = tx.amount_uni || tx.amount_ton || tx.amount || 0;
      return sum + parseFloat(amount);
    }, 0);
    const currentDepositAmount = parseFloat(user.uni_deposit_amount);
    
    console.log(`üí∞ –°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö: ${depositSum.toFixed(6)} UNI`);
    console.log(`üìä –¢–µ–∫—É—â–∏–π uni_deposit_amount: ${currentDepositAmount.toFixed(6)} UNI`);
    console.log(`üîç –†–∞–∑–Ω–∏—Ü–∞: ${Math.abs(depositSum - currentDepositAmount).toFixed(6)} UNI`);
    
    if (Math.abs(depositSum - currentDepositAmount) > 0.001) {
      console.log('‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–ê –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï! –°—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å uni_deposit_amount');
    } else {
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã');
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    console.log('\n5. –ê–ù–ê–õ–ò–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô –ë–ê–õ–ê–ù–°–ê:');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–∞–∫ –¥–æ–ª–∂–µ–Ω –∏–∑–º–µ–Ω—è—Ç—å—Å—è –±–∞–ª–∞–Ω—Å
    const initialBalance = 1000; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
    const expectedBalance = initialBalance - depositSum;
    const actualBalance = parseFloat(user.balance_uni);
    
    console.log(`üí∞ –û–∂–∏–¥–∞–µ–º—ã–π –±–∞–ª–∞–Ω—Å: ${expectedBalance.toFixed(6)} UNI`);
    console.log(`üí∞ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å: ${actualBalance.toFixed(6)} UNI`);
    console.log(`üîç –†–∞–∑–Ω–∏—Ü–∞: ${Math.abs(expectedBalance - actualBalance).toFixed(6)} UNI`);

    // 6. –ü—Ä–æ–≤–æ–¥–∏–º —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞
    console.log('\n6. –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –î–ï–ü–û–ó–ò–¢–ê:');
    console.log('–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç —á–µ—Ä–µ–∑ API...');
    
    const testAmount = 5.5; // –¢–µ—Å—Ç–æ–≤–∞—è —Å—É–º–º–∞
    console.log(`üß™ –¢–µ—Å—Ç–æ–≤–∞—è —Å—É–º–º–∞: ${testAmount} UNI`);
    console.log(`üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å POST /api/v2/uni-farming/deposit`);
    console.log(`üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: { amount: "${testAmount}" }`);
    
    // 7. –ò—Ç–æ–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
    console.log('\n7. –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó:');
    console.log('=' .repeat(60));
    
    if (farmingDeposits.some(tx => parseFloat(tx.amount) === 1)) {
      console.log('üö® –ü–†–û–ë–õ–ï–ú–ê –û–ë–ù–ê–†–£–ñ–ï–ù–ê:');
      console.log('   ‚Ä¢ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –Ω–∞ —Ç–æ—á–Ω–æ 1 UNI');
      console.log('   ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –≤ frontend –ø–µ—Ä–µ–¥–∞—á–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤');
      console.log('   ‚Ä¢ –ò–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –≤ backend –ø–∞—Ä—Å–∏–Ω–≥–µ —Å—É–º–º—ã');
    }
    
    console.log('\nüìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –î–ê–õ–¨–ù–ï–ô–®–ï–ì–û –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ API –∑–∞–ø—Ä–æ—Å–µ');
    console.log('2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ backend –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä amount');
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É FarmingService.depositUniForFarming()');
    console.log('4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –Ω–∞ frontend');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
investigateDepositDeduction()
  .then(() => console.log('\n‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ'))
  .catch(error => console.error('‚ùå –û—à–∏–±–∫–∞:', error));