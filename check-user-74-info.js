import fetch from 'node-fetch';

const JWT_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjc0LCJ0ZWxlZ3JhbV9pZCI6OTk5NDg5LCJ1c2VybmFtZSI6InRlc3RfdXNlcl8xNzUyMTI5ODQwOTA1IiwicmVmX2NvZGUiOiJ0ZXN0X3VzZXJfMTc1MjEyOTg0MDkwNS1yZWYiLCJpYXQiOjE3NTIxMjk4NDAsImV4cCI6MTc1MjczNDY0MH0.FTkNRDBzgdcnOjLBwGP0RTHOHMGo3HCCd5lhgdpnOwE';

async function getUserInfo() {
  try {
    console.log('=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï 74 ===\n');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const profileRes = await fetch('http://localhost:8080/api/v2/user/profile?user_id=74', {
      headers: {
        'Authorization': `Bearer ${JWT_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    
    if (profileRes.ok) {
      const profileData = await profileRes.json();
      if (profileData.success && profileData.data) {
        const user = profileData.data;
        console.log('üë§ –ü—Ä–æ—Ñ–∏–ª—å:');
        console.log(`- ID: ${user.id}`);
        console.log(`- Telegram ID: ${user.telegram_id}`);
        console.log(`- Username: ${user.username}`);
        console.log(`- –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: ${user.ref_code}`);
        console.log(`- –ë–∞–ª–∞–Ω—Å UNI: ${user.balance_uni}`);
        console.log(`- –ë–∞–ª–∞–Ω—Å TON: ${user.balance_ton}`);
        console.log(`- –î–µ–ø–æ–∑–∏—Ç UNI: ${user.uni_deposit_amount}`);
        console.log(`- TON Boost –ø–∞–∫–µ—Ç: ${user.ton_boost_package || '–ù–µ—Ç'}`);
        console.log(`- –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${new Date(user.created_at).toLocaleString('ru-RU')}`);
      }
    }
    
    console.log('\n=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–§–ï–†–ê–õ–û–í ===\n');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    const statsRes = await fetch('http://localhost:8080/api/v2/referral/74/stats', {
      headers: {
        'Authorization': `Bearer ${JWT_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    
    if (statsRes.ok) {
      const statsData = await statsRes.json();
      if (statsData.success && statsData.data) {
        const stats = statsData.data;
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
        console.log(`- –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${stats.totalReferrals || 0}`);
        console.log(`- –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${stats.activeReferrals || 0}`);
        console.log(`- –û–±—â–∏–π –¥–æ—Ö–æ–¥ –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${stats.totalReferralIncome || 0} UNI`);
        console.log(`- –£—Ä–æ–≤–Ω–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:`);
        
        if (stats.levelBreakdown) {
          Object.entries(stats.levelBreakdown).forEach(([level, count]) => {
            console.log(`  –£—Ä–æ–≤–µ–Ω—å ${level}: ${count} —á–µ–ª–æ–≤–µ–∫`);
          });
        }
      }
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    const listRes = await fetch('http://localhost:8080/api/v2/referral/74/list', {
      headers: {
        'Authorization': `Bearer ${JWT_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    
    if (listRes.ok) {
      const listData = await listRes.json();
      if (listData.success && listData.data) {
        const referrals = listData.data;
        console.log(`\nüìã –°–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (–≤—Å–µ–≥–æ: ${referrals.length}):`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø 5 –ø–æ –±–∞–ª–∞–Ω—Å—É
        const topReferrals = referrals
          .sort((a, b) => (b.balance_uni || 0) - (a.balance_uni || 0))
          .slice(0, 5);
          
        topReferrals.forEach((ref, index) => {
          console.log(`\n${index + 1}. ${ref.username || '–ë–µ–∑ –∏–º–µ–Ω–∏'}`);
          console.log(`   - ID: ${ref.id}`);
          console.log(`   - –ë–∞–ª–∞–Ω—Å UNI: ${ref.balance_uni || 0}`);
          console.log(`   - –ë–∞–ª–∞–Ω—Å TON: ${ref.balance_ton || 0}`);
          console.log(`   - –ê–∫—Ç–∏–≤–µ–Ω: ${ref.is_active ? '–î–∞' : '–ù–µ—Ç'}`);
          console.log(`   - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${new Date(ref.created_at).toLocaleDateString('ru-RU')}`);
        });
        
        if (referrals.length > 5) {
          console.log(`\n... –∏ –µ—â–µ ${referrals.length - 5} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤`);
        }
      }
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

getUserInfo();