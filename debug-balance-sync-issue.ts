#!/usr/bin/env tsx

/**
 * –û–¢–õ–ê–î–ö–ê –ü–†–û–ë–õ–ï–ú–´ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ë–ê–õ–ê–ù–°–ê USER 25
 * –ò—Å—Å–ª–µ–¥—É–µ–º –ø–æ—á–µ–º—É –±–∞–ª–∞–Ω—Å –≤ –ë–î –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º
 */

import { supabase } from './core/supabaseClient';
import { BalanceManager } from './core/BalanceManager';

async function debugBalanceSync() {
  console.log('üîç –û–¢–õ–ê–î–ö–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ë–ê–õ–ê–ù–°–ê USER 25\n');

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ BalanceManager (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
    const balanceManager = BalanceManager.getInstance();
    const managerBalance = await balanceManager.getUserBalance(25);
    
    console.log('üì± –ë–ê–õ–ê–ù–° –ß–ï–†–ï–ó BALANCEMANAGER:');
    console.log(JSON.stringify(managerBalance, null, 2));

    // 2. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –ë–î
    const { data: directUser, error } = await supabase
      .from('users')
      .select('balance_uni, balance_ton')
      .eq('id', 25)
      .single();

    console.log('\nüóÑÔ∏è –ü–†–Ø–ú–û–ô –ó–ê–ü–†–û–° –ö –ë–î:');
    if (directUser) {
      console.log(`UNI: ${directUser.balance_uni}`);
      console.log(`TON: ${directUser.balance_ton}`);
    }

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ BalanceManager
    console.log('\nüß™ –¢–ï–°–¢–ò–†–£–ï–ú –û–ë–ù–û–í–õ–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–ê:');
    
    const currentTon = parseFloat(directUser?.balance_ton?.toString() || '0');
    const testAmount = 0.001; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    
    console.log(`–¢–µ–∫—É—â–∏–π TON: ${currentTon}`);
    console.log(`–î–æ–±–∞–≤–ª—è–µ–º: ${testAmount} TON`);
    
    const updateResult = await balanceManager.updateUserBalance(
      25,
      'add',
      0,
      testAmount,
      'DEBUG_SYNC_TEST'
    );
    
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
    console.log(JSON.stringify(updateResult, null, 2));

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const { data: afterUpdate, error: afterError } = await supabase
      .from('users')
      .select('balance_uni, balance_ton')
      .eq('id', 25)
      .single();

    console.log('\nüìä –ë–ê–õ–ê–ù–° –ü–û–°–õ–ï –¢–ï–°–¢–û–í–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø:');
    if (afterUpdate) {
      console.log(`UNI: ${afterUpdate.balance_uni}`);
      console.log(`TON: ${afterUpdate.balance_ton}`);
      console.log(`–ò–∑–º–µ–Ω–µ–Ω–∏–µ TON: ${parseFloat(afterUpdate.balance_ton.toString()) - currentTon}`);
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–µ–ø–æ–∑–∏—Ç–∞ –¥–µ—Ç–∞–ª—å–Ω–æ
    const { data: recent3Deposits } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 25)
      .eq('type', 'TON_DEPOSIT')
      .order('created_at', { ascending: false })
      .limit(3);

    console.log('\nüîç –î–ï–¢–ê–õ–ò –ü–û–°–õ–ï–î–ù–ò–• 3 –î–ï–ü–û–ó–ò–¢–û–í:');
    if (recent3Deposits) {
      recent3Deposits.forEach((deposit, index) => {
        console.log(`\n${index + 1}. ID: ${deposit.id}`);
        console.log(`   –í—Ä–µ–º—è: ${deposit.created_at}`);
        console.log(`   –°—É–º–º–∞ TON: ${deposit.amount_ton}`);
        console.log(`   Hash: ${deposit.tx_hash_unique}`);
        console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${deposit.description}`);
      });
    }

    // 6. –ò—Å—Å–ª–µ–¥—É–µ–º –∫–µ—à
    console.log('\nüíæ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–ï–®–ê:');
    const balanceAfterCache = await balanceManager.getUserBalance(25);
    console.log('–ë–∞–ª–∞–Ω—Å –∏–∑ –∫–µ—à–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
    console.log(JSON.stringify(balanceAfterCache, null, 2));

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏:', error);
  }
}

debugBalanceSync().catch(console.error);