/**
 * T24: –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º Telegram Mini App UniFarm
 * –í—ã—è–≤–ª—è–µ—Ç –ø—Ä–∏—á–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è initData –∏ –ø—Ä–æ–±–ª–µ–º —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
 */

import fs from 'fs';
import path from 'path';

class TelegramMiniAppDiagnostic {
  constructor() {
    this.results = {
      issues: [],
      recommendations: [],
      criticalErrors: [],
      serverCheck: null,
      clientCheck: null,
      configCheck: null
    };
  }

  log(level, message, details = null) {
    const timestamp = new Date().toISOString();
    console.log(`[${timestamp}] [${level.toUpperCase()}] ${message}`);
    if (details) {
      console.log(JSON.stringify(details, null, 2));
    }
  }

  /**
   * 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏ - –ø–æ—á–µ–º—É initData –ø—É—Å—Ç–æ–π
   */
  checkClientTelegramIntegration() {
    this.log('info', 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram...');
    
    const issues = [];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º main.tsx - –Ω–∞–ª–∏—á–∏–µ debug –ª–æ–≥–æ–≤
    try {
      const mainPath = './client/src/main.tsx';
      if (fs.existsSync(mainPath)) {
        const content = fs.readFileSync(mainPath, 'utf8');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Telegram debug –∫–æ–¥–∞
        if (content.includes('=== TELEGRAM WEBAPP DEBUG START ===')) {
          this.log('success', '‚úÖ Debug –ª–æ–≥–∏ Telegram –Ω–∞–π–¥–µ–Ω—ã –≤ main.tsx');
        } else {
          issues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç debug –ª–æ–≥–∏ –¥–ª—è Telegram WebApp –≤ main.tsx');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        if (content.includes('window.Telegram?.WebApp')) {
          this.log('success', '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ window.Telegram.WebApp');
        } else {
          issues.push('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Telegram WebApp');
        }
      } else {
        issues.push('–§–∞–π–ª main.tsx –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    } catch (error) {
      issues.push(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è main.tsx: ${error.message}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º useTelegram hook
    try {
      const hookPath = './client/src/hooks/useTelegram.ts';
      if (fs.existsSync(hookPath)) {
        const content = fs.readFileSync(hookPath, 'utf8');
        
        if (content.includes('tg.ready()') && content.includes('tg.expand()')) {
          this.log('success', '‚úÖ useTelegram hook –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç WebApp');
        } else {
          issues.push('useTelegram hook –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç ready() –∏–ª–∏ expand()');
        }
        
        if (content.includes('console.log')) {
          this.log('success', '‚úÖ useTelegram –∏–º–µ–µ—Ç debug –ª–æ–≥–∏');
        } else {
          issues.push('useTelegram hook –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è');
        }
      } else {
        issues.push('–§–∞–π–ª useTelegram.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    } catch (error) {
      issues.push(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è useTelegram.ts: ${error.message}`);
    }
    
    this.results.clientCheck = { issues, status: issues.length === 0 ? 'ok' : 'problems' };
    return issues;
  }

  /**
   * 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏ - API endpoints
   */
  checkServerAPIEndpoints() {
    this.log('info', 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö API endpoints...');
    
    const issues = [];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º routes.ts
    try {
      const routesPath = './server/routes.ts';
      if (fs.existsSync(routesPath)) {
        const content = fs.readFileSync(routesPath, 'utf8');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const requiredRoutes = [
          '/register/telegram',
          '/auth',
          '/me'
        ];
        
        for (const route of requiredRoutes) {
          if (content.includes(route)) {
            this.log('success', `‚úÖ –ú–∞—Ä—à—Ä—É—Ç ${route} –Ω–∞–π–¥–µ–Ω`);
          } else {
            issues.push(`–ú–∞—Ä—à—Ä—É—Ç ${route} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ server/routes.ts`);
          }
        }
      } else {
        issues.push('–§–∞–π–ª server/routes.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    } catch (error) {
      issues.push(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è server/routes.ts: ${error.message}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º auth/routes.ts
    try {
      const authRoutesPath = './modules/auth/routes.ts';
      if (fs.existsSync(authRoutesPath)) {
        const content = fs.readFileSync(authRoutesPath, 'utf8');
        
        if (content.includes('/telegram') && content.includes('authenticateTelegram')) {
          this.log('success', '‚úÖ Auth routes –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
        } else {
          issues.push('Auth routes –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö Telegram endpoints');
        }
      } else {
        issues.push('–§–∞–π–ª modules/auth/routes.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    } catch (error) {
      issues.push(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è auth/routes.ts: ${error.message}`);
    }
    
    this.results.serverCheck = { issues, status: issues.length === 0 ? 'ok' : 'problems' };
    return issues;
  }

  /**
   * 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è SPA fallback
   */
  checkSPAConfiguration() {
    this.log('info', 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SPA –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    
    const issues = [];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º vite.config.ts
    try {
      const viteConfigPath = './vite.config.ts';
      if (fs.existsSync(viteConfigPath)) {
        const content = fs.readFileSync(viteConfigPath, 'utf8');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º SPA fallback –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
        if (content.includes('historyApiFallback') || content.includes('fallback')) {
          this.log('success', '‚úÖ SPA fallback –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        } else {
          this.log('warning', '‚ö†Ô∏è SPA fallback –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å');
          // –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π "Not Found" –æ—à–∏–±–æ–∫
        }
      }
    } catch (error) {
      issues.push(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è vite.config.ts: ${error.message}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º server/index.ts –Ω–∞ Express static middleware
    try {
      const serverIndexPath = './server/index.ts';
      if (fs.existsSync(serverIndexPath)) {
        const content = fs.readFileSync(serverIndexPath, 'utf8');
        
        if (content.includes('express.static') && content.includes('fallback')) {
          this.log('success', '‚úÖ Express SPA fallback –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        } else {
          issues.push('Express server –Ω–µ –∏–º–µ–µ—Ç SPA fallback middleware');
        }
      }
    } catch (error) {
      issues.push(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è server/index.ts: ${error.message}`);
    }
    
    this.results.configCheck = { issues, status: issues.length === 0 ? 'ok' : 'problems' };
    return issues;
  }

  /**
   * 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏—á–∏–Ω –ø—É—Å—Ç–æ–≥–æ initData
   */
  analyzeInitDataProblem() {
    this.log('info', 'üîç –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—É—Å—Ç—ã–º initData...');
    
    const possibleCauses = [
      {
        cause: 'Mini App –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ Telegram',
        description: '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ, –∞ –Ω–µ —á–µ—Ä–µ–∑ Telegram WebApp',
        solution: '–£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ BotFather –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ @UniFarming_Bot'
      },
      {
        cause: '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –≤ BotFather',
        description: 'Web App URL –≤ BotFather –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç production –¥–æ–º–µ–Ω—É',
        solution: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤ BotFather —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω https://uni-farm-connect-x-osadchukdmitro2.replit.app'
      },
      {
        cause: 'Telegram WebApp SDK –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è',
        description: '–°–∫—Ä–∏–ø—Ç Telegram WebApp –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏–ª–∏ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è',
        solution: '–î–æ–±–∞–≤–∏—Ç—å <script src="https://telegram.org/js/telegram-web-app.js"></script> –≤ index.html'
      },
      {
        cause: '–°–ª–∏—à–∫–æ–º —Ä–∞–Ω–Ω—è—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è',
        description: '–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å initData –¥–æ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ Telegram WebApp',
        solution: '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –∏–ª–∏ —Å–æ–±—ã—Ç–∏–µ ready –ø–µ—Ä–µ–¥ –ø–æ–ª—É—á–µ–Ω–∏–µ–º initData'
      }
    ];
    
    this.log('warning', '‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—É—Å—Ç–æ–≥–æ initData:');
    possibleCauses.forEach((item, index) => {
      console.log(`\n${index + 1}. ${item.cause}`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${item.description}`);
      console.log(`   –†–µ—à–µ–Ω–∏–µ: ${item.solution}`);
    });
    
    return possibleCauses;
  }

  /**
   * 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ index.html –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Telegram WebApp SDK
   */
  checkTelegramSDKIntegration() {
    this.log('info', 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Telegram WebApp SDK...');
    
    const issues = [];
    
    try {
      const indexPath = './client/index.html';
      if (fs.existsSync(indexPath)) {
        const content = fs.readFileSync(indexPath, 'utf8');
        
        if (content.includes('telegram-web-app.js')) {
          this.log('success', '‚úÖ Telegram WebApp SDK –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ index.html');
        } else {
          issues.push('–ö–†–ò–¢–ò–ß–ù–û: Telegram WebApp SDK –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ index.html');
          this.results.criticalErrors.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Telegram WebApp SDK');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º viewport meta –¥–ª—è Mobile
        if (content.includes('viewport') && content.includes('width=device-width')) {
          this.log('success', '‚úÖ Viewport meta –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
        } else {
          issues.push('Viewport meta –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ');
        }
      } else {
        issues.push('–§–∞–π–ª client/index.html –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    } catch (error) {
      issues.push(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è index.html: ${error.message}`);
    }
    
    return issues;
  }

  /**
   * 6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
   */
  generateFixes() {
    this.log('info', 'üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...');
    
    const fixes = [];
    
    // –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if (this.results.criticalErrors.length > 0) {
      fixes.push({
        priority: '–ö–†–ò–¢–ò–ß–ù–û',
        title: '–ü–æ–¥–∫–ª—é—á–∏—Ç—å Telegram WebApp SDK',
        action: '–î–æ–±–∞–≤–∏—Ç—å <script src="https://telegram.org/js/telegram-web-app.js"></script> –≤ client/index.html',
        file: 'client/index.html'
      });
    }
    
    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    fixes.push({
      priority: '–í–´–°–û–ö–ò–ô',
      title: '–£–ª—É—á—à–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é Telegram WebApp',
      action: '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –ø–æ–ª—É—á–µ–Ω–∏–µ–º initData',
      file: 'client/src/main.tsx'
    });
    
    // SPA fallback
    fixes.push({
      priority: '–°–†–ï–î–ù–ò–ô',
      title: '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å SPA fallback',
      action: '–î–æ–±–∞–≤–∏—Ç—å middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ —á–µ—Ä–µ–∑ index.html',
      file: 'server/index.ts'
    });
    
    // –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    fixes.push({
      priority: '–ù–ò–ó–ö–ò–ô',
      title: '–£–ª—É—á—à–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ',
      action: '–î–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –≤–æ –≤—Å–µ —ç—Ç–∞–ø—ã Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
      file: 'multiple'
    });
    
    this.results.recommendations = fixes;
    return fixes;
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
   */
  async runCompleteDiagnostic() {
    console.log('='.repeat(80));
    console.log('üöÄ –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TELEGRAM MINI APP - UNIFARM');
    console.log('='.repeat(80));
    
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏
    const clientIssues = this.checkClientTelegramIntegration();
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏
    const serverIssues = this.checkServerAPIEndpoints();
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const configIssues = this.checkSPAConfiguration();
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram SDK
    const sdkIssues = this.checkTelegramSDKIntegration();
    
    // 5. –ê–Ω–∞–ª–∏–∑ initData –ø—Ä–æ–±–ª–µ–º—ã
    const initDataAnalysis = this.analyzeInitDataProblem();
    
    // 6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
    const fixes = this.generateFixes();
    
    // –°–±–æ—Ä –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º
    const allIssues = [...clientIssues, ...serverIssues, ...configIssues, ...sdkIssues];
    this.results.issues = allIssues;
    
    // –û—Ç—á–µ—Ç
    this.generateDiagnosticReport();
    
    return this.results;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
   */
  generateDiagnosticReport() {
    console.log('\n' + '='.repeat(80));
    console.log('üìã –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –û–¢–ß–ï–¢');
    console.log('='.repeat(80));
    
    // –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏
    if (this.results.criticalErrors.length > 0) {
      console.log('\nüö® –ö–†–ò–¢–ò–ß–ù–´–ï –û–®–ò–ë–ö–ò:');
      this.results.criticalErrors.forEach((error, index) => {
        console.log(`${index + 1}. ${error}`);
      });
    }
    
    // –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
    if (this.results.issues.length > 0) {
      console.log('\n‚ö†Ô∏è –ù–ê–ô–î–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:');
      this.results.issues.forEach((issue, index) => {
        console.log(`${index + 1}. ${issue}`);
      });
    } else {
      console.log('\n‚úÖ –°–µ—Ä—å–µ–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –≤ –∫–æ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:');
    this.results.recommendations.forEach((fix, index) => {
      console.log(`\n${index + 1}. [${fix.priority}] ${fix.title}`);
      console.log(`   –î–µ–π—Å—Ç–≤–∏–µ: ${fix.action}`);
      console.log(`   –§–∞–π–ª: ${fix.file}`);
    });
    
    // –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    console.log('\nüìä –°–¢–ê–¢–£–° –ö–û–ú–ü–û–ù–ï–ù–¢–û–í:');
    console.log(`- –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è —á–∞—Å—Ç—å: ${this.results.clientCheck?.status || '–Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ'}`);
    console.log(`- –°–µ—Ä–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å: ${this.results.serverCheck?.status || '–Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ'}`);
    console.log(`- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: ${this.results.configCheck?.status || '–Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ'}`);
    
    // –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
    console.log('\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)');
    console.log('2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ BotFather');
    console.log('3. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ Telegram');
    console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ Telegram –¥–∞–Ω–Ω—ã–º–∏');
    
    console.log('\n' + '='.repeat(80));
  }
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
async function main() {
  const diagnostic = new TelegramMiniAppDiagnostic();
  await diagnostic.runCompleteDiagnostic();
}

main().catch(console.error);