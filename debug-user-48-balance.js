/**
 * –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=48
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –±–∞–ª–∞–Ω—Å–æ–º
 */

import { supabase } from './core/supabase.ts';

async function debugUser48Balance() {
  try {
    console.log('=== –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ID=48 ===\n');
    
    // 1. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=48
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('id', 48)
      .single();
    
    if (userError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
      return;
    }
    
    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID=48 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      return;
    }
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID=48 –Ω–∞–π–¥–µ–Ω');
    console.log('üìä –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
    console.log(`   ID: ${user.id}`);
    console.log(`   Telegram ID: ${user.telegram_id}`);
    console.log(`   Username: ${user.username}`);
    console.log(`   Ref Code: ${user.ref_code}`);
    
    console.log('\nüí∞ –ë–∞–ª–∞–Ω—Å—ã:');
    console.log(`   UNI Balance: ${user.balance_uni} (—Ç–∏–ø: ${typeof user.balance_uni})`);
    console.log(`   TON Balance: ${user.balance_ton} (—Ç–∏–ø: ${typeof user.balance_ton})`);
    
    console.log('\nüåæ –§–∞—Ä–º–∏–Ω–≥ –¥–∞–Ω–Ω—ã–µ:');
    console.log(`   UNI Deposit Amount: ${user.uni_deposit_amount}`);
    console.log(`   TON Deposit Amount: ${user.ton_deposit_amount}`);
    console.log(`   UNI Farming Rate: ${user.uni_farming_rate}`);
    console.log(`   UNI Farming Start: ${user.uni_farming_start_timestamp}`);
    
    console.log('\nüìã –í–°–ï –ü–û–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:');
    Object.keys(user).forEach(key => {
      const value = user[key];
      const type = typeof value;
      console.log(`   ${key}: ${value} (${type})`);
    });
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∏–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n=== –ü–†–û–í–ï–†–ö–ê –¢–†–ê–ù–ó–ê–ö–¶–ò–ô ===');
    const { data: transactions, error: transError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 48)
      .order('created_at', { ascending: false })
      .limit(10);
    
    if (transError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', transError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${transactions.length} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:`);
      transactions.forEach((tx, index) => {
        console.log(`   ${index + 1}. ${tx.type} - UNI: ${tx.amount_uni}, TON: ${tx.amount_ton} (${tx.created_at})`);
      });
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    console.log('\n=== –°–†–ê–í–ù–ï–ù–ò–ï –° –î–†–£–ì–ò–ú–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò ===');
    const { data: allUsers, error: allError } = await supabase
      .from('users')
      .select('id, telegram_id, username, balance_uni, balance_ton')
      .order('id');
    
    if (allError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', allError);
    } else {
      console.log(`‚úÖ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: ${allUsers.length}`);
      allUsers.forEach(u => {
        const highlight = u.id === 48 ? '>>> ' : '    ';
        console.log(`${highlight}ID ${u.id}: ${u.username} (tg:${u.telegram_id}) - UNI:${u.balance_uni}, TON:${u.balance_ton}`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

debugUser48Balance();