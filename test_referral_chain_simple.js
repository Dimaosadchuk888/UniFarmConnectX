/**
 * T58 - –£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ 20-—É—Ä–æ–≤–Ω–µ–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏ UniFarm
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ü–µ–ø–æ—á–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π
 */

import { createClient } from '@supabase/supabase-js';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è SUPABASE_URL –∏–ª–∏ SUPABASE_KEY');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Ü–µ–ø–æ—á–∫—É
 */
async function checkReferralChain() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏...');
  
  const { data: users, error } = await supabase
    .from('users')
    .select('id, telegram_id, username, balance_uni, balance_ton, referred_by, ref_code')
    .gte('telegram_id', 2000000001)
    .lte('telegram_id', 2000000020)
    .order('telegram_id');

  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
    return [];
  }

  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ç–µ—Å—Ç–æ–≤–æ–π —Ü–µ–ø–æ—á–∫–µ`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π
  let validChain = true;
  for (let i = 1; i < users.length; i++) {
    const currentUser = users[i];
    const expectedReferrer = users[i - 1];
    
    if (currentUser.referred_by !== expectedReferrer.id) {
      console.error(`‚ùå –ù–∞—Ä—É—à–µ–Ω–∞ —Ü–µ–ø–æ—á–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${currentUser.id} —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ ${currentUser.referred_by}, –æ–∂–∏–¥–∞–µ—Ç—Å—è ${expectedReferrer.id}`);
      validChain = false;
    }
  }
  
  if (validChain) {
    console.log('‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
  }
  
  return users;
}

/**
 * –°–∏–º—É–ª–∏—Ä—É–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –¥–ª—è —Ü–µ–ø–æ—á–∫–∏
 */
async function simulateReferralRewards(users) {
  console.log('\nüí∞ –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π...');
  
  // –ù–∞—á–∏–Ω–∞–µ–º —Å –∫–æ–Ω—Ü–∞ —Ü–µ–ø–æ—á–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Ö–æ–¥)
  const lastUser = users[users.length - 1];
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–æ—Ö–æ–¥ –æ—Ç —Ñ–∞—Ä–º–∏–Ω–≥–∞
  const farmingIncome = 10.0;
  console.log(`üí∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${lastUser.id} –ø–æ–ª—É—á–∏–ª –¥–æ—Ö–æ–¥ –æ—Ç —Ñ–∞—Ä–º–∏–Ω–≥–∞: ${farmingIncome} UNI`);
  
  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è
  let currentUserId = lastUser.referred_by;
  let level = 1;
  let totalDistributed = 0;
  
  while (currentUserId && level <= 20) {
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    const referrer = users.find(u => u.id === currentUserId);
    if (!referrer) {
      console.log(`‚ö†Ô∏è –†–µ—Ñ–µ—Ä–µ—Ä ID ${currentUserId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ü–µ–ø–æ—á–∫–µ, –ø—Ä–µ—Ä—ã–≤–∞–µ–º`);
      break;
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏
    let percentage;
    if (level === 1) {
      percentage = 100; // 1-–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—É—á–∞–µ—Ç 100% –æ—Ç –±–∞–∑–æ–≤–æ–π —Å—Ç–∞–≤–∫–∏
    } else {
      percentage = Math.max(2, 22 - level); // –£–±—ã–≤–∞—é—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç 20% –¥–æ 2%
    }
    
    const baseReward = 0.01; // –ë–∞–∑–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è
    const reward = (farmingIncome * baseReward * percentage) / 100;
    
    console.log(`  üéØ –£—Ä–æ–≤–µ–Ω—å ${level}: –†–µ—Ñ–µ—Ä–µ—Ä ID ${referrer.id} –ø–æ–ª—É—á–∞–µ—Ç ${reward.toFixed(8)} UNI (${percentage}%)`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
    const newBalance = parseFloat(referrer.balance_uni) + reward;
    const { error: updateError } = await supabase
      .from('users')
      .update({ balance_uni: newBalance.toFixed(8) })
      .eq('id', referrer.id);
    
    if (updateError) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ ${referrer.id}:`, updateError);
    } else {
      console.log(`  ‚úÖ –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω: ${parseFloat(referrer.balance_uni).toFixed(8)} ‚Üí ${newBalance.toFixed(8)} UNI`);
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    const { error: transactionError } = await supabase
      .from('transactions')
      .insert({
        user_id: referrer.id,
        type: 'referral_reward',
        amount: reward.toFixed(8),
        currency: 'UNI',
        description: `–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ —É—Ä–æ–≤–µ–Ω—å ${level} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${lastUser.id}`,
        created_at: new Date().toISOString()
      });
    
    if (transactionError) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ ${referrer.id}:`, transactionError);
    }
    
    totalDistributed += reward;
    currentUserId = referrer.referred_by;
    level++;
  }
  
  console.log(`\nüìä –ò—Ç–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–æ: ${totalDistributed.toFixed(8)} UNI –ø–æ ${level - 1} —É—Ä–æ–≤–Ω—è–º`);
  return totalDistributed;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
async function verifyResults(users) {
  console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
  
  // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const { data: updatedUsers, error } = await supabase
    .from('users')
    .select('id, telegram_id, username, balance_uni, balance_ton')
    .in('id', users.map(u => u.id))
    .order('telegram_id');

  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
    return false;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  const { data: transactions, error: txError } = await supabase
    .from('transactions')
    .select('user_id, type, amount, currency, description')
    .eq('type', 'referral_reward')
    .in('user_id', users.map(u => u.id))
    .order('created_at', { ascending: false })
    .limit(20);

  if (txError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError);
  } else {
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${transactions.length} —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
  }

  console.log('\nüìà –ò—Ç–æ–≥–æ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
  updatedUsers.forEach((user, index) => {
    const originalUser = users.find(u => u.id === user.id);
    const balanceChange = parseFloat(user.balance_uni) - parseFloat(originalUser.balance_uni);
    const changeStr = balanceChange > 0 ? `(+${balanceChange.toFixed(8)})` : '';
    console.log(`  ID ${user.id}: ${user.balance_uni} UNI ${changeStr}`);
  });

  return true;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
async function runSimpleReferralTest() {
  console.log('üöÄ T58: –£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ 20-—É—Ä–æ–≤–Ω–µ–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ü–µ–ø–æ—á–∫—É
    const users = await checkReferralChain();
    if (users.length === 0) {
      console.log('‚ùå –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return false;
    }

    // –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
    await simulateReferralRewards(users);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const success = await verifyResults(users);

    if (success) {
      console.log('\nüéâ T58: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ 20-—É—Ä–æ–≤–Ω–µ–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
      console.log('‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:');
      console.log('  - –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
      console.log('  - –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç');
      console.log('  - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log('  - –ë–∞–ª–∞–Ω—Å—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
      return true;
    } else {
      console.log('‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏');
      return false;
    }

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
runSimpleReferralTest()
  .then(success => {
    process.exit(success ? 0 : 1);
  })
  .catch(error => {
    console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });