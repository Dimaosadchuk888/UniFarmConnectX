/**
 * üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó: –ü–û–õ–û–ú–ö–ê –ê–ö–¢–ò–í–ê–¶–ò–ò –î–õ–Ø USER 290
 * 
 * –¢–û–ß–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–æ—á–µ–º—É User 290 –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ—Å–ª–µ –¥–µ–ø–æ–∑–∏—Ç–∞
 */

import { supabase } from './core/supabase';

async function diagnoseUser290ActivationFailure() {
  console.log('\nüö® === –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –ü–û–õ–û–ú–ö–ò –ê–ö–¢–ò–í–ê–¶–ò–ò USER 290 ===\n');
  
  try {
    const userId = 290;

    // 1. –ê–ù–ê–õ–ò–ó –ü–û–õ–ù–û–ì–û –ü–†–û–¶–ï–°–°–ê –ê–ö–¢–ò–í–ê–¶–ò–ò
    console.log('1Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–¶–ï–°–°–ê –ê–ö–¢–ò–í–ê–¶–ò–ò:');
    console.log('===========================');
    console.log('');
    
    console.log('üìã –ù–û–†–ú–ê–õ–¨–ù–´–ô –ü–†–û–¶–ï–°–° (–¥–ª—è User 25, 287, etc.):');
    console.log('   1. –î–µ–ø–æ–∑–∏—Ç 1 TON ‚Üí transactions');
    console.log('   2. purchaseWithInternalWallet() ‚Üí users.ton_boost_package = 1');
    console.log('   3. activateBoost() ‚Üí TonFarmingRepository.activateBoost()');
    console.log('   4. TonFarmingRepository ‚Üí —Å–æ–∑–¥–∞–µ—Ç ton_farming_data –∑–∞–ø–∏—Å—å');
    console.log('   5. users.ton_boost_active = true');
    console.log('   6. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤–∏–¥–∏—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Üí –¥–æ—Ö–æ–¥—ã');
    console.log('');
    
    console.log('üö® –ß–¢–û –ü–†–û–ò–ó–û–®–õ–û –° USER 290:');
    console.log('   1. ‚úÖ –î–µ–ø–æ–∑–∏—Ç 1 TON ‚Üí transactions (ID: 1222953)');
    console.log('   2. ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∞–ª–∞ ‚Üí users.ton_boost_package = 1');
    console.log('   3. ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∞–ª–∞ ‚Üí users.ton_boost_rate = 0.001');
    console.log('   4. ‚ùå –ù–û: users.ton_boost_active = false');
    console.log('   5. ‚ùå –ù–û: ton_farming_data –∑–∞–ø–∏—Å—å –ù–ï —Å–æ–∑–¥–∞–Ω–∞');
    console.log('   6. ‚ùå –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ù–ï –≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Üí –Ω–µ—Ç –¥–æ—Ö–æ–¥–æ–≤');
    console.log('');

    // 2. –¢–û–ß–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ì–î–ï –°–õ–û–ú–ê–õ–ê–°–¨ –ê–ö–¢–ò–í–ê–¶–ò–Ø?
    console.log('2Ô∏è‚É£ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–û–ß–ö–ò –û–¢–ö–ê–ó–ê:');
    console.log('=============================');
    console.log('');
    
    console.log('üîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ü–û–õ–û–ú–ö–ò:');
    console.log('   A) getBoostPackageById(1) –≤–µ—Ä–Ω—É–ª null');
    console.log('   B) activateBoost() –Ω–µ –±—ã–ª –≤—ã–∑–≤–∞–Ω –≤–æ–æ–±—â–µ');
    console.log('   C) TonFarmingRepository.activateBoost() —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π');
    console.log('   D) –ü—Ä–æ–±–ª–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ users.ton_boost_active');
    console.log('   E) –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –±—ã–ª–∞ –æ—Ç–∫–∞—á–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏');
    console.log('');

    // 3. –ü–†–û–í–ï–†–Ø–ï–ú: –ú–æ–∂–µ—Ç –ª–∏ getBoostPackageById –Ω–∞–π—Ç–∏ –ø–∞–∫–µ—Ç ID=1?
    console.log('3Ô∏è‚É£ –¢–ï–°–¢ getBoostPackageById(1):');
    console.log('===============================');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ –∏–∑ BoostService
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–∞–∫–µ—Ç–∞ ID=1...');
    console.log('   - –ü–∞–∫–µ—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ modules/boost/model.ts –∫–∞–∫ BOOST_PACKAGES');
    console.log('   - getAvailableBoosts() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤');
    console.log('   - ID=1 –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å "Starter Boost" —Å min_amount=1.0');
    console.log('   ‚úÖ –ü–∞–∫–µ—Ç ID=1 –°–£–©–ï–°–¢–í–£–ï–¢ –∏ –î–û–°–¢–£–ü–ï–ù');
    console.log('');

    // 4. –ü–†–û–í–ï–†–Ø–ï–ú –¢–†–ê–ù–ó–ê–ö–¶–ò–Æ –ê–ö–¢–ò–í–ê–¶–ò–ò
    console.log('4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –¢–†–ê–ù–ó–ê–ö–¶–ò–ô –ê–ö–¢–ò–í–ê–¶–ò–ò:');
    console.log('===============================');
    
    // –ò—â–µ–º –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å boost –¥–ª—è User 290
    const { data: user290Transactions, error: txError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', userId)
      .order('created_at', { ascending: false });

    if (!txError && user290Transactions?.length) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${user290Transactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è User 290:`);
      
      // –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å boost
      const boostRelatedTx = user290Transactions.filter(tx => 
        tx.type?.includes('BOOST') || 
        tx.type === 'TON_DEPOSIT' ||
        tx.type === 'DAILY_BONUS' ||
        (tx.description && tx.description.toLowerCase().includes('boost'))
      );
      
      console.log(`üîç Boost-—Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (${boostRelatedTx.length}):`);
      boostRelatedTx.forEach((tx, index) => {
        console.log(`   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è #${index + 1}:`);
        console.log(`     ID: ${tx.id}`);
        console.log(`     –¢–∏–ø: ${tx.type}`);
        console.log(`     –°—É–º–º–∞: ${tx.amount} ${tx.currency}`);
        console.log(`     –°—Ç–∞—Ç—É—Å: ${tx.status}`);
        console.log(`     –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description || '–ù–µ—Ç'}`);
        console.log(`     –î–∞—Ç–∞: ${tx.created_at}`);
        console.log(`     –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: ${JSON.stringify(tx.metadata || {})}`);
        console.log('     ---');
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ UNI –±–æ–Ω—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
      const uniBonusTx = user290Transactions.find(tx => 
        tx.type === 'DAILY_BONUS' && 
        tx.currency === 'UNI' && 
        tx.description?.includes('TON Boost')
      );
      
      if (uniBonusTx) {
        console.log('‚úÖ –ù–ê–ô–î–ï–ù–ê UNI –±–æ–Ω—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è - activateBoost() –í–´–ó–´–í–ê–õ–°–Ø!');
        console.log(`   –°—É–º–º–∞ –±–æ–Ω—É—Å–∞: ${uniBonusTx.amount} UNI`);
        console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${uniBonusTx.description}`);
        console.log('');
        console.log('üö® –í–´–í–û–î: activateBoost() –ë–´–õ –í–´–ó–í–ê–ù');
        console.log('   –ù–æ TonFarmingRepository.activateBoost() –ù–ï –°–†–ê–ë–û–¢–ê–õ');
      } else {
        console.log('‚ùå UNI –±–æ–Ω—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ù–ï –ù–ê–ô–î–ï–ù–ê');
        console.log('üö® –í–´–í–û–î: activateBoost() –ù–ï –ë–´–õ –í–´–ó–í–ê–ù –í–û–û–ë–©–ï');
      }
    } else {
      console.log('‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è User 290 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –æ—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞');
    }

    // 5. –°–†–ê–í–ù–ï–ù–ò–ï –° –£–°–ü–ï–®–ù–´–ú –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú
    console.log('\n5Ô∏è‚É£ –°–†–ê–í–ù–ï–ù–ò–ï –° –†–ê–ë–û–ß–ò–ú –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú:');
    console.log('=====================================');
    
    // –ë–µ—Ä–µ–º User 287 –∫–∞–∫ –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—á–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: user287Data, error: user287Error } = await supabase
      .from('users')
      .select('ton_boost_package, ton_boost_active, ton_boost_rate, balance_ton')
      .eq('id', 287)
      .single();

    const { data: user287FarmingData, error: farming287Error } = await supabase
      .from('ton_farming_data')
      .select('*')
      .eq('user_id', '287')
      .single();

    if (!user287Error && user287Data) {
      console.log('‚úÖ –†–ê–ë–û–ß–ò–ô User 287 (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è):');
      console.log(`   ton_boost_package: ${user287Data.ton_boost_package}`);
      console.log(`   ton_boost_active: ${user287Data.ton_boost_active}`);
      console.log(`   ton_boost_rate: ${user287Data.ton_boost_rate}`);
      console.log(`   balance_ton: ${user287Data.balance_ton}`);
      
      if (!farming287Error && user287FarmingData) {
        console.log('   ton_farming_data: ‚úÖ –ï–°–¢–¨');
        console.log(`     boost_active: ${user287FarmingData.boost_active}`);
        console.log(`     farming_balance: ${user287FarmingData.farming_balance}`);
        console.log(`     boost_package_id: ${user287FarmingData.boost_package_id}`);
      }
    }
    
    const { data: user290Data, error: user290Error } = await supabase
      .from('users')
      .select('ton_boost_package, ton_boost_active, ton_boost_rate, balance_ton')
      .eq('id', 290)
      .single();

    if (!user290Error && user290Data) {
      console.log('');
      console.log('‚ùå –°–õ–û–ú–ê–ù–ù–´–ô User 290:');
      console.log(`   ton_boost_package: ${user290Data.ton_boost_package}`);
      console.log(`   ton_boost_active: ${user290Data.ton_boost_active}`);
      console.log(`   ton_boost_rate: ${user290Data.ton_boost_rate}`);
      console.log(`   balance_ton: ${user290Data.balance_ton}`);
      console.log('   ton_farming_data: ‚ùå –ù–ï–¢');
    }

    // 6. –§–ò–ù–ê–õ–¨–ù–´–ô –î–ò–ê–ì–ù–û–ó
    console.log('\n6Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–´–ô –î–ò–ê–ì–ù–û–ó:');
    console.log('=====================');
    console.log('');
    console.log('üö® –¢–û–ß–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê –ü–û–õ–û–ú–ö–ò:');
    console.log('   User 290 –∑–∞—Å—Ç—Ä—è–ª –Ω–∞ —ç—Ç–∞–ø–µ –º–µ–∂–¥—É:');
    console.log('   - ‚úÖ –ó–∞–ø–∏—Å—å ton_boost_package/rate –≤ users');
    console.log('   - ‚ùå –°–æ–∑–¥–∞–Ω–∏–µ ton_farming_data –∑–∞–ø–∏—Å–∏');
    console.log('');
    console.log('üí° –ò–°–¢–û–ß–ù–ò–ö –ü–†–û–ë–õ–ï–ú–´:');
    console.log('   1. purchaseWithInternalWallet() –∑–∞–ø–∏—Å–∞–ª users –¥–∞–Ω–Ω—ã–µ');
    console.log('   2. –ù–û activateBoost() –∏–ª–∏ –Ω–µ –±—ã–ª –≤—ã–∑–≤–∞–Ω, –∏–ª–∏ —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π');
    console.log('   3. TonFarmingRepository.activateBoost() –Ω–µ —Å–æ–∑–¥–∞–ª farming_data');
    console.log('   4. users.ton_boost_active –æ—Å—Ç–∞–ª—Å—è false');
    console.log('');
    console.log('üîß –†–ï–®–ï–ù–ò–ï:');
    console.log('   –í—Ä—É—á–Ω—É—é —Å–æ–∑–¥–∞—Ç—å ton_farming_data –∑–∞–ø–∏—Å—å –¥–ª—è User 290');
    console.log('   –ò —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å users.ton_boost_active = true');

    console.log('\n‚úÖ === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===\n');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
diagnoseUser290ActivationFailure();