#!/usr/bin/env node

/**
 * –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò–ù–¢–ï–†–í–ê–õ–¨–ù–û–ì–û –†–ï–ñ–ò–ú–ê –í RUNTIME
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –∫–æ–¥–µ
 */

console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò–ù–¢–ï–†–í–ê–õ–¨–ù–û–ì–û –†–ï–ñ–ò–ú–ê –í RUNTIME');
console.log('='.repeat(60));

// 1. –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–û–ô –û–ö–†–£–ñ–ï–ù–ò–Ø
console.log('\nüìã 1. –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø:');
const intervalMode = process.env.UNI_FARMING_INTERVAL_MODE;
console.log(`  UNI_FARMING_INTERVAL_MODE = "${intervalMode}"`);
console.log(`  –¢–∏–ø –∑–Ω–∞—á–µ–Ω–∏—è: ${typeof intervalMode}`);
console.log(`  –°—Ç—Ä–æ–≥–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ === 'true': ${intervalMode === 'true'}`);
console.log(`  –ù–µ—Å—Ç—Ä–æ–≥–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ == 'true': ${intervalMode == 'true'}`);
console.log(`  Boolean(intervalMode): ${Boolean(intervalMode)}`);

// 2. –°–ò–ú–£–õ–Ø–¶–ò–Ø –ö–û–î–ê –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê
console.log('\nüìã 2. –°–ò–ú–£–õ–Ø–¶–ò–Ø LOG–ò–ö–ò –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê:');

// –ò–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ UnifiedFarmingCalculator.ts
const useIntervalMode = process.env.UNI_FARMING_INTERVAL_MODE === 'true';
console.log(`  useIntervalMode = ${useIntervalMode}`);

// –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –ø–µ—Ä–∏–æ–¥–æ–≤
const mockFarmer = {
  user_id: 184,
  uni_deposit_amount: 19291,
  uni_farming_last_update: new Date(Date.now() - 6 * 60 * 1000), // 6 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥
  uni_farming_start: new Date(Date.now() - 24 * 60 * 60 * 1000) // 24 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
};

const now = new Date();
const lastUpdate = new Date(mockFarmer.uni_farming_last_update);
const minutesSinceLastUpdate = (now.getTime() - lastUpdate.getTime()) / (1000 * 60);
const periods = Math.floor(minutesSinceLastUpdate / 5);
const MAX_ALLOWED_PERIODS = 288;

console.log(`\n  –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –¥–ª—è User ${mockFarmer.user_id}:`);
console.log(`  ‚îú‚îÄ‚îÄ –í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${minutesSinceLastUpdate.toFixed(2)} –º–∏–Ω—É—Ç`);
console.log(`  ‚îú‚îÄ‚îÄ –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤: ${periods}`);
console.log(`  ‚îú‚îÄ‚îÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤: ${MAX_ALLOWED_PERIODS}`);

// –ö–ª—é—á–µ–≤–∞—è –ª–æ–≥–∏–∫–∞ –∏–∑ –∫–æ–¥–∞
const effectivePeriods = useIntervalMode ? 1 : Math.min(periods, MAX_ALLOWED_PERIODS);
console.log(`  ‚îî‚îÄ‚îÄ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤: ${effectivePeriods}`);

if (useIntervalMode) {
  console.log(`  ‚úÖ –ò–ù–¢–ï–†–í–ê–õ–¨–ù–´–ô –†–ï–ñ–ò–ú: –≤—Å–µ–≥–¥–∞ 1 –ø–µ—Ä–∏–æ–¥`);
} else {
  console.log(`  ‚ö†Ô∏è  –ù–ê–ö–û–ü–ò–¢–ï–õ–¨–ù–´–ô –†–ï–ñ–ò–ú: –¥–æ ${periods} –ø–µ—Ä–∏–æ–¥–æ–≤`);
}

// 3. –†–ê–°–ß–ï–¢ –û–ñ–ò–î–ê–ï–ú–û–ì–û –î–û–•–û–î–ê
console.log('\nüìã 3. –†–ê–°–ß–ï–¢ –û–ñ–ò–î–ê–ï–ú–û–ì–û –î–û–•–û–î–ê:');

const depositAmount = parseFloat(mockFarmer.uni_deposit_amount);
const rate = 0.01; // 1% –≤ –¥–µ–Ω—å
const dailyIncome = depositAmount * rate;
const incomePerPeriod = dailyIncome / 288;
const totalIncome = incomePerPeriod * effectivePeriods;

console.log(`  –î–µ–ø–æ–∑–∏—Ç: ${depositAmount.toLocaleString()} UNI`);
console.log(`  –î–Ω–µ–≤–Ω–æ–π –¥–æ—Ö–æ–¥ (1%): ${dailyIncome.toFixed(2)} UNI`);
console.log(`  –î–æ—Ö–æ–¥ –∑–∞ 1 –ø–µ—Ä–∏–æ–¥: ${incomePerPeriod.toFixed(6)} UNI`);
console.log(`  –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤: ${effectivePeriods}`);
console.log(`  –ò–¢–û–ì–û –ö –ù–ê–ß–ò–°–õ–ï–ù–ò–Æ: ${totalIncome.toFixed(6)} UNI`);

// 4. –ê–ù–ê–õ–ò–ó –§–ê–ö–¢–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–•
console.log('\nüìã 4. –ê–ù–ê–õ–ò–ó –§–ê–ö–¢–ò–ß–ï–°–ö–ò–• –ò–ó–ú–ï–ù–ï–ù–ò–ô:');

// –î–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–≥–æ–≤ –±—Ä–∞—É–∑–µ—Ä–∞
const balanceHistory = [
  { time: '09:36', balance: 277441.755287 },
  { time: '09:39', balance: 277660.887231 }
];

if (balanceHistory.length >= 2) {
  const lastChange = balanceHistory[balanceHistory.length - 1].balance - balanceHistory[balanceHistory.length - 2].balance;
  const expectedChange = totalIncome;
  const ratio = lastChange / expectedChange;
  
  console.log(`  –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞: +${lastChange.toFixed(6)} UNI`);
  console.log(`  –û–∂–∏–¥–∞–µ–º–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: +${expectedChange.toFixed(6)} UNI`);
  console.log(`  –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫ –æ–∂–∏–¥–∞–µ–º–æ–º—É: ${ratio.toFixed(1)}x`);
  
  if (ratio > 100) {
    console.log(`  ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ò–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –ù–ï –†–ê–ë–û–¢–ê–ï–¢!`);
  } else if (ratio >= 0.8 && ratio <= 1.2) {
    console.log(`  ‚úÖ –ù–û–†–ú–ê: –ò–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
  }
}

// 5. –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –°–í–Ø–ó–ê–ù–ù–´–• –ü–ï–†–ï–ú–ï–ù–ù–´–•
console.log('\nüìã 5. –ü–†–û–í–ï–†–ö–ê –°–í–Ø–ó–ê–ù–ù–´–• –ü–ï–†–ï–ú–ï–ù–ù–´–•:');
console.log(`  NODE_ENV = "${process.env.NODE_ENV}"`);
console.log(`  REPLIT_ENVIRONMENT = "${process.env.REPLIT_ENVIRONMENT}"`);
console.log(`  PWD = "${process.env.PWD}"`);

// –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≥–¥–µ-—Ç–æ –≤ –∫–æ–¥–µ
const envVars = Object.keys(process.env).filter(key => key.includes('FARM') || key.includes('UNI') || key.includes('INTERVAL'));
console.log(`  –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å FARM/UNI/INTERVAL:`);
envVars.forEach(key => {
  console.log(`    ${key} = "${process.env[key]}"`);
});

// 6. –í–†–ï–ú–Ø –ò CRON –ê–ù–ê–õ–ò–ó
console.log('\nüìã 6. –ê–ù–ê–õ–ò–ó –í–†–ï–ú–ï–ù–ò –ò CRON:');
const currentTime = new Date();
const nextCronTime = new Date(currentTime);
nextCronTime.setMinutes(Math.ceil(currentTime.getMinutes() / 5) * 5, 0, 0);

console.log(`  –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${currentTime.toISOString()}`);
console.log(`  –°–ª–µ–¥—É—é—â–∏–π CRON: ${nextCronTime.toISOString()}`);
console.log(`  –ú–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞: ${Math.ceil((nextCronTime - currentTime) / 60000)}`);

// 7. –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–ó
console.log('\nüéØ –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–ó:');
console.log('='.repeat(60));

console.log(`üìä –°–¢–ê–¢–£–° –ü–ï–†–ï–ú–ï–ù–ù–û–ô –û–ö–†–£–ñ–ï–ù–ò–Ø:`);
console.log(`  UNI_FARMING_INTERVAL_MODE = "${intervalMode}" (${intervalMode === 'true' ? '–ê–ö–¢–ò–í–ï–ù' : '–ù–ï–ê–ö–¢–ò–í–ï–ù'})`);

console.log(`\nüìä –õ–û–ì–ò–ö–ê –ö–û–î–ê:`);
console.log(`  useIntervalMode = ${useIntervalMode}`);
console.log(`  effectivePeriods = ${effectivePeriods} ${effectivePeriods === 1 ? '(–∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã–π)' : '(–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π)'}`);

console.log(`\nüìä –û–ñ–ò–î–ê–ï–ú–û–ï –ü–û–í–ï–î–ï–ù–ò–ï:`);
if (useIntervalMode) {
  console.log(`  ‚úÖ –î–æ–ª–∂–Ω—ã –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è ${incomePerPeriod.toFixed(6)} UNI –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç`);
} else {
  console.log(`  ‚ö†Ô∏è  –ú–æ–≥—É—Ç –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è –¥–æ ${(incomePerPeriod * periods).toFixed(2)} UNI –∑–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã`);
}

console.log(`\nüìä –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:`);
console.log(`  1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ UnifiedFarmingCalculator.calculateIncome()`);
console.log(`  2. –î–æ–±–∞–≤–∏—Ç—å debug –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫—É 54-55 –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞`);
console.log(`  3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–æ–æ–±—â–µ`);
console.log(`  4. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ runtime`);

console.log(`\nüìã –°–õ–ï–î–£–Æ–©–ò–ô CRON –ó–ê–ü–£–°–ö –ß–ï–†–ï–ó: ${Math.ceil((nextCronTime - currentTime) / 60000)} –º–∏–Ω—É—Ç`);