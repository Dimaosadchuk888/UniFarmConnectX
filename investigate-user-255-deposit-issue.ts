#!/usr/bin/env tsx
/**
 * üïµÔ∏è –î–ï–¢–ï–ö–¢–ò–í–ù–û–ï –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ü–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255
 * 
 * –ü—Ä–æ–±–ª–µ–º–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 255 —Å–¥–µ–ª–∞–ª –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ 1.65 TON (0.65 + 1.0),
 * –¥–µ–Ω—å–≥–∏ —Å–ø–∏—Å–∞–ª–∏—Å—å —Å –µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –∏ –ø–æ—Å—Ç—É–ø–∏–ª–∏ –Ω–∞ –∞–¥–º–∏–Ω –∫–æ—à–µ–ª–µ–∫,
 * –Ω–æ –±–∞–ª–∞–Ω—Å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è.
 */

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
);

async function investigateUser255DepositIssue() {
  console.log('üïµÔ∏è –ù–ê–ß–ò–ù–ê–ï–ú –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ü–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255');
  console.log('='.repeat(80));

  try {
    // 1. –ê–Ω–∞–ª–∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255
    console.log('\nüìã 1. –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï ID 255:');
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('user_id', 255)
      .single();

    if (userError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
    } else if (user) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', {
        user_id: user.user_id,
        telegram_id: user.telegram_id,
        username: user.username,
        balance_ton: user.balance_ton,
        balance_uni: user.balance_uni,
        created_at: user.created_at,
        last_activity: user.last_activity
      });
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 255 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
      return;
    }

    // 2. –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255
    console.log('\nüí∞ 2. –í–°–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ID 255:');
    const { data: transactions, error: txError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 255)
      .order('created_at', { ascending: false });

    if (txError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactions?.length || 0}`);
      transactions?.forEach((tx, index) => {
        console.log(`\nüìÑ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${index + 1}:`, {
          id: tx.id,
          type: tx.type,
          amount: tx.amount,
          currency: tx.currency,
          status: tx.status,
          description: tx.description,
          created_at: tx.created_at,
          tx_hash: tx.tx_hash || '–ù–ï–¢ –•–ï–®–ê'
        });
      });
    }

    // 3. –ü–æ–∏—Å–∫ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
    console.log('\nüîç 3. –ü–û–ò–°–ö TON –î–ï–ü–û–ó–ò–¢–û–í –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 24 –ß–ê–°–ê:');
    const yesterday = new Date();
    yesterday.setDate(yesterday.getDate() - 1);

    const { data: recentDeposits, error: depositsError } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'TON_DEPOSIT')
      .eq('currency', 'TON')
      .gte('created_at', yesterday.toISOString())
      .order('created_at', { ascending: false });

    if (depositsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤:', depositsError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ 24—á: ${recentDeposits?.length || 0}`);
      recentDeposits?.forEach((deposit, index) => {
        console.log(`\nüíé –î–µ–ø–æ–∑–∏—Ç ${index + 1}:`, {
          user_id: deposit.user_id,
          amount: deposit.amount,
          status: deposit.status,
          tx_hash: deposit.tx_hash || '–ù–ï–¢ –•–ï–®–ê',
          created_at: deposit.created_at,
          description: deposit.description
        });
      });
    }

    // 4. –ü–æ–∏—Å–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å —Å—É–º–º–∞–º–∏ 0.65 –∏ 1.0 TON
    console.log('\nüéØ 4. –ü–û–ò–°–ö –¢–†–ê–ù–ó–ê–ö–¶–ò–ô –° –°–£–ú–ú–ê–ú–ò 0.65 –ò 1.0 TON:');
    const { data: suspiciousAmounts, error: amountsError } = await supabase
      .from('transactions')
      .select('*')
      .eq('currency', 'TON')
      .in('amount', ['0.65', '1.0', '1', '0.650000'])
      .gte('created_at', yesterday.toISOString())
      .order('created_at', { ascending: false });

    if (amountsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ —Å—É–º–º–∞–º:', amountsError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –Ω—É–∂–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏: ${suspiciousAmounts?.length || 0}`);
      suspiciousAmounts?.forEach((tx, index) => {
        console.log(`\nüîç –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${index + 1}:`, {
          user_id: tx.user_id,
          amount: tx.amount,
          type: tx.type,
          status: tx.status,
          tx_hash: tx.tx_hash || '–ù–ï–¢ –•–ï–®–ê',
          created_at: tx.created_at,
          description: tx.description
        });
      });
    }

    // 5. –ê–Ω–∞–ª–∏–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    console.log('\nüîÑ 5. –ê–ù–ê–õ–ò–ó –î–£–ë–õ–ò–†–û–í–ê–ù–ò–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
    const { data: duplicates, error: dupError } = await supabase
      .from('transactions')
      .select('tx_hash, count(*)')
      .not('tx_hash', 'is', null)
      .gt('count', 1)
      .group('tx_hash');

    if (dupError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è:', dupError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ö–µ—à–µ–π: ${duplicates?.length || 0}`);
      duplicates?.forEach((dup, index) => {
        console.log(`\n‚ö†Ô∏è –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö–µ—à ${index + 1}:`, dup);
      });
    }

    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–µ–π—á–∞—Å vs –æ–∂–∏–¥–∞–µ–º–æ–≥–æ
    console.log('\n‚öñÔ∏è 6. –ê–ù–ê–õ–ò–ó –ë–ê–õ–ê–ù–°–ê:');
    if (user) {
      console.log('–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å TON:', user.balance_ton);
      console.log('–û–∂–∏–¥–∞–µ–º—ã–π –±–∞–ª–∞–Ω—Å —Å —É—á–µ—Ç–æ–º –¥–µ–ø–æ–∑–∏—Ç–∞ 1.65 TON:', parseFloat(user.balance_ton || '0') + 1.65);
      
      // –ü–æ–¥—Å—á–µ—Ç —Å—É–º–º—ã –≤—Å–µ—Ö —É—Å–ø–µ—à–Ω—ã—Ö TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤
      const tonDeposits = transactions?.filter(tx => 
        tx.type === 'TON_DEPOSIT' && 
        tx.currency === 'TON' && 
        tx.status === 'completed'
      ) || [];
      
      const totalDeposits = tonDeposits.reduce((sum, tx) => sum + parseFloat(tx.amount || '0'), 0);
      console.log('–°—É–º–º–∞ –≤—Å–µ—Ö —É—Å–ø–µ—à–Ω—ã—Ö TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤:', totalDeposits);
      console.log('–†–∞–∑–Ω–∏—Ü–∞ (–±–∞–ª–∞–Ω—Å - –¥–µ–ø–æ–∑–∏—Ç—ã):', parseFloat(user.balance_ton || '0') - totalDeposits);
    }

    console.log('\n' + '='.repeat(80));
    console.log('üéØ –í–´–í–û–î–´ –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–Ø:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 255 –≤ –±–∞–∑–µ');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ—Å—Ç—å –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ TON_DEPOSIT –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ tx_hash —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π - –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('4. –°—Ä–∞–≤–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å —Å —Å—É–º–º–æ–π –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('='.repeat(80));

  } catch (error) {
    console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–Ø:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
investigateUser255DepositIssue().catch(console.error);