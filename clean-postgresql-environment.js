/**
 * –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –æ—Ç PostgreSQL –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
 * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ Supabase
 */

console.log('üîÑ –ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –æ–∫—Ä—É–∂–µ–Ω–∏—è –æ—Ç PostgreSQL –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö...');

// –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
const variablesToRemove = [
  'DATABASE_URL',
  'PGHOST',
  'PGPORT', 
  'PGUSER',
  'PGPASSWORD',
  'PGDATABASE',
  'USE_NEON_DB',
  'DATABASE_PROVIDER'
];

// –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
const variablesToKeep = [
  'SUPABASE_URL',
  'SUPABASE_KEY'
];

console.log('‚ùå –£–¥–∞–ª—è—é —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ PostgreSQL –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
variablesToRemove.forEach(varName => {
  if (process.env[varName]) {
    console.log(`  - ${varName}: ${process.env[varName]}`);
    delete process.env[varName];
  }
});

console.log('\n‚úÖ –°–æ—Ö—Ä–∞–Ω—è—é Supabase –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
variablesToKeep.forEach(varName => {
  if (process.env[varName]) {
    console.log(`  - ${varName}: ${process.env[varName]}`);
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
console.log('\nüîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
const remainingDbVars = Object.keys(process.env).filter(key => 
  key.includes('DATABASE') || key.includes('PG') || key.includes('NEON')
);

if (remainingDbVars.length === 0) {
  console.log('‚úÖ –í—Å–µ PostgreSQL –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã');
} else {
  console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—Å—Ç–∞—Ç–æ—á–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:', remainingDbVars);
}

console.log('üéØ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ Supabase API.');