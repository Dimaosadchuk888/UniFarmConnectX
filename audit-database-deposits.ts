import { supabase } from './core/supabaseClient';

async function auditDatabaseDeposits() {
  console.log('=== –ê–£–î–ò–¢ –î–ï–ü–û–ó–ò–¢–û–í –í –ë–î (–¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï) ===\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users
  console.log('1. –¢–ê–ë–õ–ò–¶–ê USERS - –ø–æ–ª—è –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤:');
  const { data: userSample } = await supabase
    .from('users')
    .select('*')
    .eq('id', 184)
    .single();
    
  const depositFields = [
    'balance_ton',
    'balance_uni', 
    'uni_deposit_amount',
    'uni_farming_balance',
    'ton_farming_balance',
    'ton_boost_package',
    'ton_boost_active'
  ];
  
  depositFields.forEach(field => {
    if (field in userSample) {
      console.log(`‚îú‚îÄ‚îÄ ${field}: ${userSample[field]} (—Ç–∏–ø: ${typeof userSample[field]})`);
    }
  });
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É transactions
  console.log('\n2. –¢–ê–ë–õ–ò–¶–ê TRANSACTIONS - —Ç–∏–ø—ã –¥–µ–ø–æ–∑–∏—Ç–æ–≤:');
  const { data: transactionTypes } = await supabase
    .from('transactions')
    .select('type, count')
    .eq('user_id', 184);
    
  const typeCounts = {};
  transactionTypes?.forEach(tx => {
    typeCounts[tx.type] = (typeCounts[tx.type] || 0) + 1;
  });
  
  Object.entries(typeCounts).forEach(([type, count]) => {
    console.log(`‚îú‚îÄ‚îÄ ${type}: ${count} –∑–∞–ø–∏—Å–µ–π`);
  });
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É ton_farming_data
  console.log('\n3. –¢–ê–ë–õ–ò–¶–ê TON_FARMING_DATA:');
  const { data: tonFarmingData, error: tonError } = await supabase
    .from('ton_farming_data')
    .select('*')
    .eq('user_id', 184);
    
  if (tonError) {
    console.log(`‚îî‚îÄ‚îÄ –û—à–∏–±–∫–∞: ${tonError.message}`);
  } else if (!tonFarmingData || tonFarmingData.length === 0) {
    console.log('‚îî‚îÄ‚îÄ –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è user_id=184');
  } else {
    console.log(`‚îî‚îÄ‚îÄ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${tonFarmingData.length}`);
    tonFarmingData.forEach(data => {
      console.log(`    ‚îú‚îÄ‚îÄ farming_balance: ${data.farming_balance}`);
      console.log(`    ‚îú‚îÄ‚îÄ boost_active: ${data.boost_active}`);
      console.log(`    ‚îî‚îÄ‚îÄ boost_package_id: ${data.boost_package_id}`);
    });
  }
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É uni_farming_data
  console.log('\n4. –¢–ê–ë–õ–ò–¶–ê UNI_FARMING_DATA:');
  const { data: uniFarmingData, error: uniError } = await supabase
    .from('uni_farming_data')
    .select('*')
    .eq('user_id', 184);
    
  if (uniError) {
    console.log(`‚îî‚îÄ‚îÄ –û—à–∏–±–∫–∞: ${uniError.message}`);
  } else if (!uniFarmingData || uniFarmingData.length === 0) {
    console.log('‚îî‚îÄ‚îÄ –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è user_id=184');
  } else {
    console.log(`‚îî‚îÄ‚îÄ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${uniFarmingData.length}`);
  }
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É boost_packages
  console.log('\n5. –¢–ê–ë–õ–ò–¶–ê BOOST_PACKAGES:');
  const { data: boostPackages, error: boostError } = await supabase
    .from('boost_packages')
    .select('*');
    
  if (boostError) {
    console.log(`‚îî‚îÄ‚îÄ –û—à–∏–±–∫–∞: ${boostError.message}`);
  } else if (!boostPackages || boostPackages.length === 0) {
    console.log('‚îî‚îÄ‚îÄ –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è!');
  } else {
    console.log(`‚îî‚îÄ‚îÄ –ù–∞–π–¥–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤: ${boostPackages.length}`);
  }
  
  // 6. –ê–Ω–∞–ª–∏–∑ - –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –¥–µ–ø–æ–∑–∏—Ç—ã
  console.log('\nüìä –ê–ù–ê–õ–ò–ó - –ì–î–ï –°–ï–ô–ß–ê–° –•–†–ê–ù–Ø–¢–°–Ø –î–ï–ü–û–ó–ò–¢–´:');
  console.log('\nUNI –î–ï–ü–û–ó–ò–¢–´:');
  console.log('‚îú‚îÄ‚îÄ uni_deposit_amount –≤ users: —Å—É–º–º–∞ UNI –¥–µ–ø–æ–∑–∏—Ç–∞');
  console.log('‚îî‚îÄ‚îÄ uni_farming_balance –≤ users: –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥');
  
  console.log('\nTON –î–ï–ü–û–ó–ò–¢–´:');
  console.log('‚îú‚îÄ‚îÄ ton_farming_balance –≤ users: —Å—É–º–º–∞ TON –≤ farming');
  console.log('‚îú‚îÄ‚îÄ ton_farming_data —Ç–∞–±–ª–∏—Ü–∞: –µ—Å—Ç—å 1 –∑–∞–ø–∏—Å—å —Å farming_balance=115');
  console.log('‚îî‚îÄ‚îÄ balance_ton –≤ users: –¥–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è –≤—ã–≤–æ–¥–∞');
  
  console.log('\n–ü–†–û–ë–õ–ï–ú–ê:');
  console.log('- –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ boost –¥–µ–Ω—å–≥–∏ —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –∏–∑ balance_ton');
  console.log('- –ù–û –Ω–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ ton_farming_balance');
  console.log('- –°–∏—Å—Ç–µ–º–∞ –ø—ã—Ç–∞–µ—Ç—Å—è –ø–∏—Å–∞—Ç—å –≤ ton_farming_data, –Ω–æ fallback –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
}

auditDatabaseDeposits();