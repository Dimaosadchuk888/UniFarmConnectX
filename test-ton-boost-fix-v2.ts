import { supabase } from './core/supabase.js';
import { UnifiedTransactionService } from './core/TransactionService.js';

async function testTonBoostFixV2() {
  console.log('=== –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è TON Boost V2 (FARMING_REWARD) ===\n');

  try {
    // 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å —Ç–∏–ø–æ–º FARMING_REWARD
    const transactionService = UnifiedTransactionService.getInstance();
    
    const testTransaction = {
      user_id: 9999,  // –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      type: 'FARMING_REWARD' as any,  // –ò—Å–ø–æ–ª—å–∑—É–µ–º FARMING_REWARD –≤–º–µ—Å—Ç–æ TON_BOOST_INCOME
      amount_uni: 0,
      amount_ton: 0.001,
      currency: 'TON' as const,
      status: 'completed' as const,
      description: 'TEST: TON Boost –¥–æ—Ö–æ–¥ (–ø–∞–∫–µ—Ç 1): 0.001000 TON',
      metadata: {
        boost_package_id: 1,
        daily_rate: 0.01,
        user_deposit: 100,
        original_type: 'TON_BOOST_INCOME'  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Ç–∏–ø–µ
      }
    };

    console.log('–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é...');
    const result = await transactionService.createTransaction(testTransaction);
    
    if (result.success) {
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
      console.log(`ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${result.transaction_id}\n`);
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
      if (result.transaction_id) {
        await supabase
          .from('transactions')
          .delete()
          .eq('id', result.transaction_id);
        console.log('üßπ –¢–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞');
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', result.error);
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π TON Boost
    const { data: activeUsers, error } = await supabase
      .from('ton_farming_data')
      .select('user_id, boost_package_id')
      .not('boost_package_id', 'is', null)
      .limit(5);

    if (!error && activeUsers) {
      console.log(`\nüë• –ù–∞–π–¥–µ–Ω–æ ${activeUsers.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π TON Boost`);
      console.log('–û–Ω–∏ –Ω–∞—á–Ω—É—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Ö–æ–¥—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
    }

    // 3. –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
    console.log('- –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ç–∏–ø FARMING_REWARD');
    console.log('- Metadata —Å–æ–¥–µ—Ä–∂–∏—Ç original_type –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è');
    console.log('- TON Boost –¥–æ—Ö–æ–¥—ã –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('- –ù–µ–æ–±—Ö–æ–¥–∏–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π');

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

testTonBoostFixV2().catch(console.error);