#!/usr/bin/env tsx
/**
 * üïµÔ∏è –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ü–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ 1.65 TON –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255
 */

import { supabase } from './core/supabase';

async function investigateUser255() {
  console.log('üïµÔ∏è –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ü–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ 1.65 TON –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255');
  console.log('='.repeat(70));

  try {
    // 1. –°–Ω–∞—á–∞–ª–∞ –ø–æ—Å–º–æ—Ç—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users
    console.log('\n1Ô∏è‚É£ –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ USERS:');
    const { data: sampleUsers, error: sampleError } = await supabase
      .from('users')
      .select('*')
      .limit(1);

    if (sampleError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ users:', sampleError.message);
      return;
    }

    console.log('‚úÖ –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', sampleUsers?.[0] ? Object.keys(sampleUsers[0]) : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö');

    // 2. –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255 –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ–ª—é
    console.log('\n2Ô∏è‚É£ –ü–û–ò–°–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ID 255:');
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('id', 255)  // –ò—Å–ø–æ–ª—å–∑—É–µ–º 'id' –≤–º–µ—Å—Ç–æ 'user_id'
      .single();

    if (userError) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 255 –ù–ï –ù–ê–ô–î–ï–ù:', userError.message);
      
      // –ü—Ä–æ–≤–µ—Ä–∏–º –¥–∏–∞–ø–∞–∑–æ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const { data: userRange, error: rangeError } = await supabase
        .from('users')
        .select('user_id')
        .order('user_id', { ascending: false })
        .limit(10);
      
      if (!rangeError && userRange) {
        console.log('\nüìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
        userRange.forEach(u => console.log(`   - ID: ${u.user_id}`));
      }
      
      return;
    }

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', {
      id: user.id,
      telegram_id: user.telegram_id,
      username: user.username,
      balance_ton: user.balance_ton,
      balance_uni: user.balance_uni,
      created_at: user.created_at
    });

    // 2. –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n2Ô∏è‚É£ –í–°–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ID 255:');
    const { data: allTx, error: allTxError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 255)
      .order('created_at', { ascending: false });

    if (allTxError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', allTxError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${allTx?.length || 0}`);
      allTx?.forEach((tx, i) => {
        console.log(`\nüìÑ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${i + 1}:`, {
          id: tx.id,
          type: tx.type,
          amount: tx.amount,
          currency: tx.currency,
          status: tx.status,
          tx_hash: tx.tx_hash || '–ù–ï–¢ –•–ï–®–ê',
          created_at: tx.created_at,
          description: tx.description
        });
      });
    }

    // 3. –ü–æ–∏—Å–∫ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
    console.log('\n3Ô∏è‚É£ –ü–û–ò–°–ö TON –î–ï–ü–û–ó–ò–¢–û–í –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 24 –ß–ê–°–ê:');
    const yesterday = new Date();
    yesterday.setDate(yesterday.getDate() - 1);

    const { data: recentTon, error: recentError } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'TON_DEPOSIT')
      .gte('created_at', yesterday.toISOString())
      .order('created_at', { ascending: false });

    if (recentError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤:', recentError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${recentTon?.length || 0}`);
      recentTon?.forEach((dep, i) => {
        console.log(`\nüíé –î–µ–ø–æ–∑–∏—Ç ${i + 1}:`, {
          user_id: dep.user_id,
          amount: dep.amount,
          status: dep.status,
          tx_hash: dep.tx_hash || '–ù–ï–¢ –•–ï–®–ê',
          created_at: dep.created_at
        });
      });
    }

    // 4. –ü–æ–∏—Å–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å —Å—É–º–º–∞–º–∏ 0.65 –∏ 1.0
    console.log('\n4Ô∏è‚É£ –ü–û–ò–°–ö –¢–†–ê–ù–ó–ê–ö–¶–ò–ô –° –°–£–ú–ú–ê–ú–ò 0.65 –ò 1.0 TON:');
    const { data: targetAmounts, error: targetError } = await supabase
      .from('transactions')
      .select('*')
      .eq('currency', 'TON')
      .in('amount', ['0.65', '1.0', '1', '0.650000', '1.000000'])
      .gte('created_at', yesterday.toISOString())
      .order('created_at', { ascending: false });

    if (targetError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ —Å—É–º–º–∞–º:', targetError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –Ω—É–∂–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏: ${targetAmounts?.length || 0}`);
      targetAmounts?.forEach((tx, i) => {
        console.log(`\nüéØ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${i + 1}:`, {
          user_id: tx.user_id,
          amount: tx.amount,
          type: tx.type,
          status: tx.status,
          tx_hash: tx.tx_hash || '–ù–ï–¢ –•–ï–®–ê',
          created_at: tx.created_at
        });
      });
    }

    console.log('\n' + '='.repeat(70));
    console.log('üéØ –í–´–í–û–î–´:');
    if (!user) {
      console.log('‚ùå –ö–†–ò–¢–ò–ß–ù–û: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 255 –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ!');
    } else if (!allTx || allTx.length === 0) {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255 –ù–ï–¢ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π!');
      console.log('   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('   1. –î–µ–ø–æ–∑–∏—Ç—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Å–∏—Å—Ç–µ–º–æ–π');
      console.log('   2. –û—à–∏–±–∫–∞ –≤ webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
      console.log('   3. –ü—Ä–æ–±–ª–µ–º–∞ —Å wallet validation');
    } else {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏–º–µ–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
      const tonDeposits = allTx.filter(tx => tx.type === 'TON_DEPOSIT' && tx.currency === 'TON');
      console.log(`   TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${tonDeposits.length}`);
      console.log(`   –¢–µ–∫—É—â–∏–π TON –±–∞–ª–∞–Ω—Å: ${user.balance_ton}`);
    }
    console.log('='.repeat(70));

  } catch (error) {
    console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
  }
}

investigateUser255().catch(console.error);