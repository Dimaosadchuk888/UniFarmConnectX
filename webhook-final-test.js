/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç webhook —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–∞–±–æ—á–∏—Ö –ø—É—Ç–µ–π
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ API endpoints –¥–ª—è webhook
 */

import fetch from 'node-fetch';

const testPaths = [
  'https://uni-farm-connect-x-osadchukdmitro2.replit.app/api/v2/health',
  'https://uni-farm-connect-x-osadchukdmitro2.replit.app/api/health',
  'https://uni-farm-connect-x-osadchukdmitro2.replit.app/health'
];

async function testAvailablePaths() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É—é –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—É—Ç–∏ API...');
  
  for (const path of testPaths) {
    try {
      const response = await fetch(path, { method: 'GET' });
      const result = await response.text();
      
      console.log(`üìç ${path}: ${response.status}`);
      
      if (response.status === 200) {
        console.log(`‚úÖ –†–ê–ë–û–ß–ò–ô –ü–£–¢–¨: ${path}`);
        console.log(`üìÑ –û—Ç–≤–µ—Ç: ${result.substring(0, 100)}...`);
        return path.replace('/health', '');
      }
    } catch (error) {
      console.log(`‚ùå ${path}: ${error.message}`);
    }
  }
  
  return null;
}

async function testWebhookViaBrowser() {
  console.log('üåê –ü—Ä–æ–≤–µ—Ä—è—é webhook —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å...');
  
  try {
    const response = await fetch('https://uni-farm-connect-x-osadchukdmitro2.replit.app/', {
      method: 'GET'
    });
    
    console.log(`üìç –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${response.status}`);
    
    if (response.status === 200) {
      console.log('‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–±–ª–µ–º–∞ —Ç–æ–ª—å–∫–æ —Å webhook –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π');
      return true;
    }
  } catch (error) {
    console.log(`‚ùå –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
  }
  
  return false;
}

async function main() {
  console.log('üöÄ –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ webhook –ø—Ä–æ–±–ª–µ–º—ã');
  console.log('‚îÄ'.repeat(50));
  
  const baseUrl = await testAvailablePaths();
  const webWorking = await testWebhookViaBrowser();
  
  console.log('‚îÄ'.repeat(50));
  
  if (baseUrl) {
    console.log(`‚úÖ –ë–∞–∑–æ–≤—ã–π API –¥–æ—Å—Ç—É–ø–µ–Ω: ${baseUrl}`);
    console.log('üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å webhook —á–µ—Ä–µ–∑ API –º–∞—Ä—à—Ä—É—Ç');
    
    if (baseUrl.includes('/api/v2')) {
      console.log('üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /api/v2/telegram/webhook');
    } else if (baseUrl.includes('/api')) {
      console.log('üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /api/telegram/webhook');
    }
  } else {
    console.log('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π –¥–æ–º–µ–Ω');
  }
  
  if (webWorking) {
    console.log('‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–∞ –¥–ª—è webhook');
  }
  
  console.log('\nüìã –ò–¢–û–ì–ò –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');
  console.log('‚Ä¢ –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π webhook —Ä–∞–±–æ—Ç–∞–µ—Ç (localhost:3000/webhook)');
  console.log('‚Ä¢ –í–Ω–µ—à–Ω–∏–π –¥–æ–º–µ–Ω –±–ª–æ–∫–∏—Ä—É–µ—Ç webhook –º–∞—Ä—à—Ä—É—Ç—ã');
  console.log('‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∫—Å–∏ Replit');
  console.log('‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —á–µ—Ä–µ–∑ API');
}

main().catch(console.error);