/**
 * üîç –ü–†–û–í–ï–†–ö–ê –ü–û–ö–£–ü–ö–ò TON BOOST –ü–ê–ö–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú 290
 */

import { supabase } from './core/supabase';

async function checkUser290BoostPurchase() {
  console.log('\nüîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–û–ö–£–ü–ö–ò TON BOOST –ü–ê–ö–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú 290 ===\n');

  try {
    // 1. –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 290
    console.log('1Ô∏è‚É£ –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 290:');
    console.log('=====================================');
    
    const { data: userData, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('id', 290)
      .single();

    if (userError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError.message);
      return;
    }

    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 290:');
    console.log(`   User ID: ${userData.id}`);
    console.log(`   Telegram ID: ${userData.telegram_id}`);
    console.log(`   Username: ${userData.username}`);
    console.log(`   –ò–º—è: ${userData.first_name}`);
    console.log(`   –ë–∞–ª–∞–Ω—Å TON: ${userData.balance_ton}`);
    console.log(`   –ë–∞–ª–∞–Ω—Å UNI: ${userData.balance_uni}`);
    console.log(`   TON Boost Package: ${userData.ton_boost_package}`);
    console.log(`   TON Boost Package ID: ${userData.ton_boost_package_id}`);
    console.log(`   TON Boost –∞–∫—Ç–∏–≤–µ–Ω: ${userData.ton_boost_active}`);
    console.log(`   TON Boost —Å—Ç–∞–≤–∫–∞: ${userData.ton_boost_rate}%`);
    console.log(`   TON —Ñ–∞—Ä–º–∏–Ω–≥ –±–∞–ª–∞–Ω—Å: ${userData.ton_farming_balance}`);
    console.log(`   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date(userData.created_at).toLocaleString('ru-RU')}`);

    // 2. –ò—â–µ–º –ø–æ–∫—É–ø–∫–∏ boost –ø–∞–∫–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º 290
    console.log('\n2Ô∏è‚É£ –ü–æ–∫—É–ø–∫–∏ boost –ø–∞–∫–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º 290:');
    console.log('===========================================');
    
    const { data: purchases, error: purchasesError } = await supabase
      .from('boost_purchases')
      .select('*')
      .eq('user_id', 290)
      .order('created_at', { ascending: false });

    if (purchasesError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫:', purchasesError.message);
    } else if (!purchases?.length) {
      console.log('‚ÑπÔ∏è –ü–æ–∫—É–ø–æ–∫ boost –ø–∞–∫–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º 290 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${purchases.length} –ø–æ–∫—É–ø–æ–∫:`);
      purchases.forEach((purchase, index) => {
        console.log(`\n   –ü–æ–∫—É–ø–∫–∞ #${index + 1}:`);
        console.log(`     ID: ${purchase.id}`);
        console.log(`     Boost ID: ${purchase.boost_id}`);
        console.log(`     –°—É–º–º–∞: ${purchase.amount_ton} TON`);
        console.log(`     TX Hash: ${purchase.tx_hash || '–ù–ï–¢'}`);
        console.log(`     –°—Ç–∞—Ç—É—Å: ${purchase.status}`);
        console.log(`     –î–∞—Ç–∞: ${new Date(purchase.created_at).toLocaleString('ru-RU')}`);
        if (purchase.metadata) {
          console.log(`     –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: ${JSON.stringify(purchase.metadata, null, 6)}`);
        }
      });
    }

    // 3. –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 290
    console.log('\n3Ô∏è‚É£ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 290:');
    console.log('===============================');
    
    const { data: transactions, error: transactionsError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 290)
      .order('created_at', { ascending: false })
      .limit(10);

    if (transactionsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', transactionsError.message);
    } else if (!transactions?.length) {
      console.log('‚ÑπÔ∏è –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 290 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${transactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:`);
      transactions.forEach((tx, index) => {
        console.log(`\n   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è #${index + 1}:`);
        console.log(`     ID: ${tx.id}`);
        console.log(`     –¢–∏–ø: ${tx.type}`);
        console.log(`     –°—É–º–º–∞: ${tx.amount} ${tx.currency}`);
        console.log(`     –°—Ç–∞—Ç—É—Å: ${tx.status}`);
        console.log(`     –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
        console.log(`     –î–∞—Ç–∞: ${new Date(tx.created_at).toLocaleString('ru-RU')}`);
        if (tx.metadata) {
          console.log(`     –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: ${JSON.stringify(tx.metadata, null, 6)}`);
        }
      });
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ TON Boost –ø–∞–∫–µ—Ç—ã
    console.log('\n4Ô∏è‚É£ –î–æ—Å—Ç—É–ø–Ω—ã–µ TON Boost –ø–∞–∫–µ—Ç—ã:');
    console.log('==============================');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã —Å –ø–∞–∫–µ—Ç–∞–º–∏
    const packageTables = ['boost_packages', 'ton_boost_packages', 'farming_packages'];
    
    for (const tableName of packageTables) {
      try {
        const { data: packages, error: packagesError } = await supabase
          .from(tableName)
          .select('*')
          .order('id', { ascending: true });

        if (!packagesError && packages?.length) {
          console.log(`\n   ‚úÖ –ü–∞–∫–µ—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ ${tableName}:`);
          packages.forEach(pkg => {
            console.log(`     ID ${pkg.id}: ${pkg.name || '–ë–ï–ó –ò–ú–ï–ù–ò'} | –¶–µ–Ω–∞: ${pkg.price_ton || pkg.price || '–ù–ï–¢'} | –ê–∫—Ç–∏–≤–µ–Ω: ${pkg.is_active !== false}`);
          });
        } else {
          console.log(`   ‚ÑπÔ∏è –¢–∞–±–ª–∏—Ü–∞ ${tableName}: –ø–∞–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        }
      } catch (e) {
        console.log(`   ‚ùå –¢–∞–±–ª–∏—Ü–∞ ${tableName}: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞`);
      }
    }

    // 5. –ò—â–µ–º TON –¥–µ–ø–æ–∑–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 290
    console.log('\n5Ô∏è‚É£ TON –¥–µ–ø–æ–∑–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 290:');
    console.log('=================================');
    
    const depositTables = ['ton_deposits', 'ton_boost_deposits'];
    
    for (const tableName of depositTables) {
      try {
        const { data: deposits, error: depositsError } = await supabase
          .from(tableName)
          .select('*')
          .eq('user_id', 290)
          .order('created_at', { ascending: false });

        if (!depositsError && deposits?.length) {
          console.log(`\n   ‚úÖ –î–µ–ø–æ–∑–∏—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ ${tableName}:`);
          deposits.forEach((deposit, index) => {
            console.log(`     –î–µ–ø–æ–∑–∏—Ç #${index + 1}:`);
            console.log(`       ID: ${deposit.id}`);
            console.log(`       –°—É–º–º–∞: ${deposit.amount_ton || deposit.amount} TON`);
            console.log(`       Package ID: ${deposit.package_id || deposit.boost_id || '–ù–ï–¢'}`);
            console.log(`       TX Hash: ${deposit.tx_hash || '–ù–ï–¢'}`);
            console.log(`       –î–∞—Ç–∞: ${new Date(deposit.created_at).toLocaleString('ru-RU')}`);
          });
        } else {
          console.log(`   ‚ÑπÔ∏è –î–µ–ø–æ–∑–∏—Ç–æ–≤ –≤ ${tableName} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
        }
      } catch (e) {
        console.log(`   ‚ùå –¢–∞–±–ª–∏—Ü–∞ ${tableName}: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞`);
      }
    }

    // 6. –ê–Ω–∞–ª–∏–∑ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\n6Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –∏ —Å—Ç–∞—Ç—É—Å:');
    console.log('===================');
    
    console.log(`üìä –°—Ç–∞—Ç—É—Å TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 290:`);
    console.log(`   - TON Boost –ø–∞–∫–µ—Ç: ${userData.ton_boost_package || '–ù–ï–¢'}`);
    console.log(`   - –ü–∞–∫–µ—Ç –∞–∫—Ç–∏–≤–µ–Ω: ${userData.ton_boost_active ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`   - –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å TON: ${userData.balance_ton}`);
    
    if (!userData.ton_boost_active) {
      console.log(`\n‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: TON Boost –ø–∞–∫–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω!`);
      console.log(`   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:`);
      console.log(`   1. –ü–∞–∫–µ—Ç –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏`);
      console.log(`   2. –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏`);
      console.log(`   3. –ü–∞–∫–µ—Ç –∏—Å—Ç–µ–∫`);
      console.log(`   4. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏`);
    }

    console.log('\n‚úÖ === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===\n');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
checkUser290BoostPurchase();