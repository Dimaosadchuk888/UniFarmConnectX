#!/usr/bin/env tsx

/**
 * üéØ –°–û–ó–î–ê–ù–ò–ï –†–ï–ê–õ–¨–ù–û–ô –¢–ï–°–¢–û–í–û–ô –ó–ê–Ø–í–ö–ò –ù–ê –í–´–í–û–î
 * –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ WalletService + AdminBotService
 */

import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

config();

const supabase = createClient(process.env.SUPABASE_URL!, process.env.SUPABASE_KEY!);

async function createRealWithdrawalTest() {
  console.log('üéØ –°–û–ó–î–ê–ù–ò–ï –†–ï–ê–õ–¨–ù–û–ô –¢–ï–°–¢–û–í–û–ô –ó–ê–Ø–í–ö–ò –ù–ê –í–´–í–û–î');
  console.log('=' .repeat(55));
  
  try {
    // 1. –í—ã–±–∏—Ä–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const testUserId = 185; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –±–∞–ª–∞–Ω—Å–æ–º 100 TON
    
    console.log('1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    const { data: testUser, error: userError } = await supabase
      .from('users')
      .select('id, telegram_id, username, balance_ton')
      .eq('id', testUserId)
      .single();
      
    if (userError || !testUser) {
      throw new Error(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${testUserId} –Ω–µ –Ω–∞–π–¥–µ–Ω: ${userError?.message}`);
    }
    
    console.log(`üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${testUser.username} (ID: ${testUser.id})`);
    console.log(`üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${testUser.balance_ton} TON`);
    console.log(`üì± Telegram ID: ${testUser.telegram_id}`);

    // 2. –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–≤–æ–¥ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ WalletService
    console.log('\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ WalletService...');
    
    const withdrawalAmount = '2'; // 2 TON –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const testWallet = 'EQD4FPq-PRDieyQKkizFTRtSDyucUIqrj0v_zXJmqaDp6_0t'; // –¢–µ—Å—Ç–æ–≤—ã–π TON –∫–æ—à–µ–ª–µ–∫
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É –Ω–∞–ø—Ä—è–º—É—é –≤ —Ç–∞–±–ª–∏—Ü–µ withdraw_requests
    const withdrawRequest = {
      id: `test_withdrawal_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      user_id: testUser.id,
      telegram_id: testUser.telegram_id,
      username: testUser.username,
      amount_ton: withdrawalAmount,
      ton_wallet: testWallet,
      status: 'pending',
      created_at: new Date().toISOString(),
      processed_at: null,
      processed_by: null
    };
    
    console.log('üìù –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:');
    console.log(`   ID: ${withdrawRequest.id}`);
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${withdrawRequest.username} (${withdrawRequest.user_id})`);
    console.log(`   –°—É–º–º–∞: ${withdrawRequest.amount_ton} TON`);
    console.log(`   –ö–æ—à–µ–ª–µ–∫: ${withdrawRequest.ton_wallet}`);
    console.log(`   –°—Ç–∞—Ç—É—Å: ${withdrawRequest.status}`);

    // 3. –í—Å—Ç–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    console.log('\n3Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    const { data: newRequest, error: insertError } = await supabase
      .from('withdraw_requests')
      .insert(withdrawRequest)
      .select()
      .single();
      
    if (insertError) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏: ${insertError.message}`);
    }
    
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');

    // 4. –°–ø–∏—Å—ã–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–º–∏—Ç–∏—Ä—É–µ–º WalletService.processWithdrawal)
    console.log('\n4Ô∏è‚É£ –°–ø–∏—Å–∞–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    const newBalance = parseFloat(testUser.balance_ton) - parseFloat(withdrawalAmount);
    
    const { error: balanceError } = await supabase
      .from('users')
      .update({ balance_ton: newBalance.toString() })
      .eq('id', testUser.id);
      
    if (balanceError) {
      console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–ø–∏—Å–∞–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', balanceError.message);
      console.log('‚ÑπÔ∏è  –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
    } else {
      console.log(`‚úÖ –ë–∞–ª–∞–Ω—Å —Å–ø–∏—Å–∞–Ω: ${testUser.balance_ton} ‚Üí ${newBalance} TON`);
    }

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º AdminBotService.notifyWithdrawal() –Ω–∞–ø—Ä—è–º—É—é
    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω-–±–æ—Ç–∞...');
    
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä AdminBotService
    const { AdminBotService } = await import('./modules/adminBot/service');
    const adminBotService = new AdminBotService();
    
    console.log('ü§ñ AdminBotService —Å–æ–∑–¥–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...');
    
    try {
      const notificationSent = await adminBotService.notifyWithdrawal(newRequest);
      
      if (notificationSent) {
        console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω-–±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        console.log('üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –∞–¥–º–∏–Ω-–±–æ—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
      } else {
        console.log('‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω-–±–æ—Ç–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
        console.log('‚ÑπÔ∏è  –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã: –∞–¥–º–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
      }
      
    } catch (notifyError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notifyError);
      console.log('‚ÑπÔ∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π');
    }

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ
    console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ...');
    
    const { data: admins, error: adminsError } = await supabase
      .from('users')
      .select('username, telegram_id, is_admin')
      .eq('is_admin', true);
      
    if (adminsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤:', adminsError.message);
    } else {
      console.log(`üë• –ù–∞–π–¥–µ–Ω–æ –∞–¥–º–∏–Ω–æ–≤: ${admins?.length || 0}`);
      
      if (admins && admins.length > 0) {
        admins.forEach((admin, index) => {
          console.log(`   ${index + 1}. @${admin.username} (Telegram ID: ${admin.telegram_id})`);
        });
        
        console.log('‚úÖ –ê–¥–º–∏–Ω—ã –Ω–∞–π–¥–µ–Ω—ã, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è');
      } else {
        console.log('‚ö†Ô∏è  –ê–¥–º–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      }
    }

    // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook —Å—Ç–∞—Ç—É—Å
    console.log('\n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å—Ç–∞—Ç—É—Å–∞...');
    
    const adminBotToken = process.env.ADMIN_BOT_TOKEN;
    if (adminBotToken) {
      try {
        const fetch = (await import('node-fetch')).default;
        const webhookResponse = await fetch(`https://api.telegram.org/bot${adminBotToken}/getWebhookInfo`);
        const webhookInfo = await webhookResponse.json();
        
        if (webhookInfo.ok) {
          console.log(`üì° Webhook URL: ${webhookInfo.result.url || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);
          console.log(`üì° Pending Updates: ${webhookInfo.result.pending_update_count || 0}`);
          
          if (webhookInfo.result.last_error_message) {
            console.log(`üì° Last Error: ${webhookInfo.result.last_error_message}`);
            console.log('‚ÑπÔ∏è  –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —ç—Ç–∞ –æ—à–∏–±–∫–∞ –¥–æ–ª–∂–Ω–∞ –∏—Å—á–µ–∑–Ω—É—Ç—å');
          } else {
            console.log('‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫');
          }
        }
        
      } catch (webhookError) {
        console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å webhook —Å—Ç–∞—Ç—É—Å');
      }
    } else {
      console.log('‚ö†Ô∏è  ADMIN_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }

    // 8. –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('\n8Ô∏è‚É£ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø...');
    console.log('üéØ –°–û–ó–î–ê–ù–ê –¢–ï–°–¢–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –í–´–í–û–î:');
    console.log(`   üÜî ID –∑–∞—è–≤–∫–∏: ${newRequest.id}`);
    console.log(`   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${newRequest.username} (${newRequest.user_id})`);
    console.log(`   üí∞ –°—É–º–º–∞: ${newRequest.amount_ton} TON`);
    console.log(`   üè¶ –ö–æ—à–µ–ª–µ–∫: ${newRequest.ton_wallet}`);
    console.log(`   üìÖ –°–æ–∑–¥–∞–Ω–∞: ${new Date(newRequest.created_at).toLocaleString('ru-RU')}`);
    console.log(`   ‚è≥ –°—Ç–∞—Ç—É—Å: ${newRequest.status}`);
    
    console.log('\nüîî –ß–¢–û –î–û–õ–ñ–ù–û –ü–†–û–ò–ó–û–ô–¢–ò –í TELEGRAM:');
    console.log('1. –ê–¥–º–∏–Ω—ã –ø–æ–ª—É—á–∞—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ');
    console.log('2. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å:');
    console.log('   - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —Å—É–º–º–µ');
    console.log('   - –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞');
    console.log('   - –ö–Ω–æ–ø–∫–∏ "–û–¥–æ–±—Ä–∏—Ç—å" –∏ "–û—Ç–∫–ª–æ–Ω–∏—Ç—å"');
    console.log('   - –ö–Ω–æ–ø–∫—É "–í—Å–µ –∑–∞—è–≤–∫–∏"');
    console.log('3. –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–∞–º –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫');
    
    console.log('\nüì± –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∞–¥–º–∏–Ω-–±–æ—Ç–∞');
    console.log('2. –ù–∞–π–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–≤–æ–¥–µ');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');
    console.log('4. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
    console.log('5. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ webhook –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫–∏');
    
    return newRequest;

  } catch (error) {
    console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:', error);
    throw error;
  }
}

async function main() {
  try {
    console.log('üöÄ –ù–ê–ß–ê–õ–û –°–û–ó–î–ê–ù–ò–Ø –¢–ï–°–¢–û–í–û–ô –ó–ê–Ø–í–ö–ò');
    console.log(`‚è∞ –í—Ä–µ–º—è: ${new Date().toISOString()}\n`);
    
    const testRequest = await createRealWithdrawalTest();
    
    console.log('\nüéâ –¢–ï–°–¢–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –°–û–ó–î–ê–ù–ê –£–°–ü–ï–®–ù–û!');
    console.log('üìß –ù–ï–ú–ï–î–õ–ï–ù–ù–û –ü–†–û–í–ï–†–¨–¢–ï TELEGRAM –ê–î–ú–ò–ù-–ë–û–¢–ê!');
    
    if (testRequest) {
      console.log(`\nüÜî –î–ª—è —Å–ø—Ä–∞–≤–∫–∏ - ID —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏: ${testRequest.id}`);
      console.log('üìù –≠—Ç–∞ –∑–∞—è–≤–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
    }
    
    process.exit(0);
    
  } catch (error) {
    console.error('\n‚ùå –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ô –ó–ê–Ø–í–ö–ò –ü–†–û–í–ê–õ–ï–ù–û:', error);
    console.error('üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã');
    process.exit(1);
  }
}

main();