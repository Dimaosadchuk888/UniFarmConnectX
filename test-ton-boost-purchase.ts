/**
 * Test TON Boost Purchase with Transaction Creation
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ TON Boost –ø–∞–∫–µ—Ç–∞
 */

import { supabase } from './core/supabase.js';
import { boostService } from './modules/boost/service.js';

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ TON Boost –ø–∞–∫–µ—Ç–∞...\n');

async function testTonBoostPurchase() {
  const testUserId = '9997';  // Test user –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const boostPackageId = '1'; // –ü–∞–∫–µ—Ç 1: 5 TON –¥–µ–ø–æ–∑–∏—Ç
  
  try {
    // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const { data: existingUser } = await supabase
      .from('users')
      .select('id, telegram_id, balance_ton')
      .eq('id', testUserId)
      .single();

    if (!existingUser) {
      const { data: newUser, error: createError } = await supabase
        .from('users')
        .insert({
          id: parseInt(testUserId),
          telegram_id: 999999997,
          username: 'test_boost_user_997',
          balance_ton: '100',
          balance_uni: '1000',
          ref_code: 'TEST997',
          created_at: new Date().toISOString()
        })
        .select()
        .single();

      if (createError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', createError);
        return;
      }
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');
    } else {
      console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω (balance_ton: ${existingUser.balance_ton})`);
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–æ –ø–æ–∫—É–ø–∫–∏
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–æ –ø–æ–∫—É–ø–∫–∏...');
    const { data: beforeTx } = await supabase
      .from('transactions')
      .select('id')
      .eq('user_id', testUserId)
      .eq('type', 'BOOST_PURCHASE');
    
    console.log(`   –ù–∞–π–¥–µ–Ω–æ BOOST_PURCHASE —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${beforeTx?.length || 0}`);

    // 3. –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∫—É–ø–∫—É boost –ø–∞–∫–µ—Ç–∞
    console.log('\n3Ô∏è‚É£ –ü–æ–∫—É–ø–∫–∞ TON Boost –ø–∞–∫–µ—Ç–∞...');
    const result = await boostService.purchaseBoost(
      testUserId,
      boostPackageId,
      'wallet' // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—à–µ–ª–µ–∫
    );

    if (result.success) {
      console.log('‚úÖ Boost –ø–∞–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω!');
      console.log(`   –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø–∞–∫–µ—Ç: ${result.data.packageId}`);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏:', result.error);
      return;
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏...');
    const { data: afterTx } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', testUserId)
      .eq('type', 'BOOST_PURCHASE')
      .order('created_at', { ascending: false })
      .limit(1);
    
    if (afterTx && afterTx.length > 0) {
      const tx = afterTx[0];
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è BOOST_PURCHASE —Å–æ–∑–¥–∞–Ω–∞!');
      console.log(`   - ID: ${tx.id}`);
      console.log(`   - –°—É–º–º–∞: ${tx.amount} ${tx.currency}`);
      console.log(`   - –°—Ç–∞—Ç—É—Å: ${tx.status}`);
      console.log(`   - –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
    } else {
      console.error('‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è BOOST_PURCHASE –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º ton_farming_data
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ ton_farming_data...');
    const { data: farmingData } = await supabase
      .from('ton_farming_data')
      .select('*')
      .eq('user_id', testUserId)
      .single();
    
    if (farmingData) {
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ TON farming:');
      console.log(`   - farming_balance: ${farmingData.farming_balance}`);
      console.log(`   - boost_active: ${farmingData.boost_active}`);
      console.log(`   - boost_package_id: ${farmingData.boost_package_id}`);
      console.log(`   - farming_rate: ${farmingData.farming_rate}`);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

testTonBoostPurchase().catch(console.error);