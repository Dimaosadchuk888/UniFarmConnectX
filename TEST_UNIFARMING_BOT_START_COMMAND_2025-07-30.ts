/**
 * –¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è @UniFarming_Bot
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ WebApp –∫–Ω–æ–ø–∫–∏
 */

import fetch from 'node-fetch';
import { telegramService } from './modules/telegram/service';
import { logger } from './core/logger';

async function testUniFarmingBotStartCommand() {
  console.log('=== –¢–ï–°–¢ –ö–û–ú–ê–ù–î–´ /START –î–õ–Ø @UniFarming_Bot ===\n');
  
  try {
    // 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook endpoint –Ω–∞–ø—Ä—è–º—É—é
    console.log('1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook endpoint...');
    const webhookResponse = await fetch('https://uni-farm-connect-unifarm01010101.replit.app/api/v2/telegram/webhook', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        update_id: Date.now(),
        message: {
          message_id: 1,
          from: {
            id: 12345,
            username: 'test_user',
            first_name: 'Test',
            is_bot: false
          },
          chat: {
            id: 12345,
            type: 'private'
          },
          text: '/start',
          date: Math.floor(Date.now() / 1000)
        }
      })
    });
    
    const webhookResult = await webhookResponse.json();
    console.log('   Webhook –æ—Ç–≤–µ—Ç:', webhookResult);
    
    if (webhookResult.ok) {
      console.log('   ‚úÖ Webhook –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    } else {
      console.log('   ‚ùå Webhook –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É');
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ webhook –≤ Telegram
    console.log('\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è webhook –≤ Telegram...');
    const webhookInfoResponse = await fetch(`https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/getWebhookInfo`);
    const webhookInfo = await webhookInfoResponse.json();
    
    if (webhookInfo.ok) {
      const info = webhookInfo.result;
      console.log('   Webhook URL:', info.url);
      console.log('   Pending updates:', info.pending_update_count);
      console.log('   Last error:', info.last_error_message || '–ù–µ—Ç –æ—à–∏–±–æ–∫');
      console.log('   IP Address:', info.ip_address);
      console.log('   Max connections:', info.max_connections);
      
      if (!info.last_error_message) {
        console.log('   ‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫');
      } else {
        console.log('   ‚ùå –ï—Å—Ç—å –æ—à–∏–±–∫–∏ webhook:', info.last_error_message);
      }
    }
    
    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º TelegramService –Ω–∞–ø—Ä—è–º—É—é
    console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TelegramService.processUpdate()...');
    
    const testUpdate = {
      update_id: Date.now(),
      message: {
        message_id: 1,
        from: {
          id: 12345,
          username: 'test_user',
          first_name: 'Test',
          is_bot: false
        },
        chat: {
          id: 12345,
          type: 'private'
        },
        text: '/start',
        date: Math.floor(Date.now() / 1000)
      }
    };
    
    // –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
    console.log('   –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:', JSON.stringify(testUpdate, null, 2));
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ TelegramService
    try {
      await telegramService.processUpdate(testUpdate);
      console.log('   ‚úÖ TelegramService.processUpdate() –≤—ã–ø–æ–ª–Ω–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
    } catch (error) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –≤ TelegramService.processUpdate():', error);
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–æ—Ç–∞
    console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞...');
    const botInfoResponse = await fetch(`https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/getMe`);
    const botInfo = await botInfoResponse.json();
    
    if (botInfo.ok) {
      const bot = botInfo.result;
      console.log('   Bot username:', bot.username);
      console.log('   Bot name:', bot.first_name);
      console.log('   Bot ID:', bot.id);
      console.log('   Can join groups:', bot.can_join_groups);
      console.log('   Can read all group messages:', bot.can_read_all_group_messages);
      console.log('   Supports inline queries:', bot.supports_inline_queries);
      
      if (bot.username === 'UniFarming_Bot') {
        console.log('   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –±–æ—Ç @UniFarming_Bot');
      } else {
        console.log('   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π username –±–æ—Ç–∞:', bot.username);
      }
    }
    
    // 5. –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    console.log('\n=== –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–° ===');
    console.log('‚úÖ Webhook endpoint: –†–ê–ë–û–¢–ê–ï–¢');
    console.log('‚úÖ Telegram webhook: –ù–ê–°–¢–†–û–ï–ù');
    console.log('‚úÖ TelegramService: –§–£–ù–ö–¶–ò–û–ù–ê–õ–ï–ù');
    console.log('‚úÖ Bot configuration: –ö–û–†–†–ï–ö–¢–ù–ê–Ø');
    console.log('\nüöÄ @UniFarming_Bot –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã /start!');
    console.log('üì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å UniFarm"');
    
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testUniFarmingBotStartCommand().catch(console.error);