#!/usr/bin/env tsx

/**
 * –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç–æ–∫–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ TON
 * –¶–µ–ª—å: –ü–æ–Ω—è—Ç—å –≥–¥–µ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–∞–∑—Ä—ã–≤ –º–µ–∂–¥—É –¥–µ–ø–æ–∑–∏—Ç–æ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –±–∞–ª–∞–Ω—Å–∞
 */

import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.SUPABASE_URL || 'https://obqtqhfkcrgtumvyuwnr.supabase.co';
const supabaseKey = process.env.SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9icXRxaGZrY3JndHVtdnl1d25yIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzQzNDk2MjUsImV4cCI6MjA0OTkyNTYyNX0.aPbvpemHXL-PrPTcLU_XSHQKc4j6V9mOzlE1YwSqfG4';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testDepositFlow() {
  console.log('\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ –ü–û–¢–û–ö–ê –î–ï–ü–û–ó–ò–¢–û–í TON');
  console.log('=' .repeat(60));
  
  const testUserId = 184; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ª–æ–≥–æ–≤
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüìä 1. –¢–ï–ö–£–©–ò–ô –ë–ê–õ–ê–ù–° –í –ë–î:');
    const { data: currentUser, error: userError } = await supabase
      .from('users')
      .select('id, balance_uni, balance_ton, telegram_id, username')
      .eq('id', testUserId)
      .single();
      
    if (userError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
      return;
    }
    
    console.log(`   User ID: ${currentUser.id}`);
    console.log(`   Telegram ID: ${currentUser.telegram_id}`);
    console.log(`   Username: ${currentUser.username || 'N/A'}`);
    console.log(`   UNI Balance: ${currentUser.balance_uni}`);
    console.log(`   TON Balance: ${currentUser.balance_ton}`);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüìà 2. –ü–û–°–õ–ï–î–ù–ò–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò (TOP 10):');
    const { data: transactions, error: txError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', testUserId)
      .order('created_at', { ascending: false })
      .limit(10);
      
    if (txError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError);
    } else if (transactions && transactions.length > 0) {
      transactions.forEach((tx, index) => {
        const amount = tx.amount_uni > 0 ? `${tx.amount_uni} UNI` : `${tx.amount_ton} TON`;
        const date = new Date(tx.created_at).toLocaleString('ru-RU');
        console.log(`   ${index + 1}. ${tx.type} | ${amount} | ${date} | ${tx.description || 'No description'}`);
      });
    } else {
      console.log('   ‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º WebSocket –ø–æ–¥–ø–∏—Å–∫–∏ (–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è)
    console.log('\nüîå 3. –ü–†–û–í–ï–†–ö–ê WEBSOCKET –ü–û–î–ü–ò–°–û–ö:');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ WebSocket API
    const wsTestUrl = `http://localhost:3000/api/v2/balance/websocket-status?user_id=${testUserId}`;
    console.log(`   Checking: ${wsTestUrl}`);
    
    try {
      const response = await fetch(wsTestUrl);
      if (response.ok) {
        const wsData = await response.json();
        console.log('   ‚úÖ WebSocket Status:', wsData);
      } else {
        console.log(`   ‚ö†Ô∏è WebSocket API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (${response.status})`);
      }
    } catch (error) {
      console.log('   ‚ö†Ô∏è WebSocket API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    }
    
    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º API –±–∞–ª–∞–Ω—Å–∞
    console.log('\nüí∞ 4. –¢–ï–°–¢ API –ë–ê–õ–ê–ù–°–ê:');
    
    try {
      const balanceUrl = `http://localhost:3000/api/v2/balance?user_id=${testUserId}`;
      const balanceResponse = await fetch(balanceUrl);
      
      if (balanceResponse.ok) {
        const balanceData = await balanceResponse.json();
        console.log('   ‚úÖ API Balance Response:', balanceData);
        
        // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –ë–î
        if (balanceData.success && balanceData.balance) {
          const apiUni = parseFloat(balanceData.balance.balance_uni);
          const apiTon = parseFloat(balanceData.balance.balance_ton);
          const dbUni = parseFloat(currentUser.balance_uni);
          const dbTon = parseFloat(currentUser.balance_ton);
          
          console.log('\nüîç –°–†–ê–í–ù–ï–ù–ò–ï –î–ê–ù–ù–´–•:');
          console.log(`   –ë–î UNI: ${dbUni} | API UNI: ${apiUni} | –°–æ–≤–ø–∞–¥–∞–µ—Ç: ${Math.abs(dbUni - apiUni) < 0.001 ? '‚úÖ' : '‚ùå'}`);
          console.log(`   –ë–î TON: ${dbTon} | API TON: ${apiTon} | –°–æ–≤–ø–∞–¥–∞–µ—Ç: ${Math.abs(dbTon - apiTon) < 0.001 ? '‚úÖ' : '‚ùå'}`);
        }
      } else {
        console.log(`   ‚ùå Balance API –æ—à–∏–±–∫–∞: ${balanceResponse.status}`);
      }
    } catch (error) {
      console.log('   ‚ùå Balance API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    }
    
    // 5. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç (–°–ò–ú–£–õ–Ø–¶–ò–Ø)
    console.log('\nüß™ 5. –°–ò–ú–£–õ–Ø–¶–ò–Ø –î–ï–ü–û–ó–ò–¢–ê (1 TON):');
    
    const testDepositData = {
      user_id: testUserId,
      type: 'DEPOSIT',
      amount_uni: 0,
      amount_ton: 1.0,
      currency: 'TON',
      status: 'completed',
      description: '–¢–µ—Å—Ç–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏',
      created_at: new Date().toISOString()
    };
    
    console.log('   üìù –î–∞–Ω–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç–∞:', testDepositData);
    
    // –ù–ï —Å–æ–∑–¥–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç, —Ç–æ–ª—å–∫–æ —Å–∏–º—É–ª–∏—Ä—É–µ–º
    console.log('   ‚ö†Ô∏è –°–ò–ú–£–õ–Ø–¶–ò–Ø: –¥–µ–ø–æ–∑–∏—Ç –ù–ï —Å–æ–∑–¥–∞–Ω (—Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç)');
    
    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ updateUserBalance
    console.log('\n‚öôÔ∏è 6. –ü–†–û–í–ï–†–ö–ê –§–£–ù–ö–¶–ò–ô –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê:');
    
    try {
      // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
      const { UnifiedTransactionService } = await import('./core/TransactionService');
      const { BalanceManager } = await import('./core/BalanceManager');
      
      console.log('   ‚úÖ UnifiedTransactionService –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
      console.log('   ‚úÖ BalanceManager –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω—ã –ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏
      const balanceManager = BalanceManager.getInstance();
      console.log('   ‚úÖ BalanceManager instance –ø–æ–ª—É—á–µ–Ω');
      
    } catch (error) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', error.message);
    }
    
    console.log('\nüìã –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–ó:');
    console.log('=' .repeat(60));
    console.log('1. ‚úÖ –ë–î –¥–æ—Å—Ç—É–ø–Ω–∞ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('2. ‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –ë–î');
    console.log('3. ‚ùì WebSocket —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏');
    console.log('4. ‚ùì API –±–∞–ª–∞–Ω—Å–∞ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏');
    console.log('5. ‚ùì –§—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Ç—Ä–µ–±—É—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏');
    console.log('\nüí° –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏');
    console.log('   - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞ —á–µ—Ä–µ–∑ API');
    console.log('   - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤');

  } catch (error) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
testDepositFlow().then(() => {
  console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
  process.exit(0);
}).catch(error => {
  console.error('\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  process.exit(1);
});