/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 48
 * –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */

import jwt from 'jsonwebtoken';
import { supabase } from './core/supabase.js';

async function fixJWTSynchronization() {
  console.log('üîç –ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 48...');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 48 –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const { data: user, error } = await supabase
      .from('users')
      .select('*')
      .eq('id', 48)
      .single();
    
    if (error || !user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 48 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      console.log('üîç –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
      
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const { data: users, error: usersError } = await supabase
        .from('users')
        .select('id, telegram_id, username, ref_code, balance_uni, balance_ton')
        .order('id');
      
      if (usersError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', usersError.message);
        return;
      }
      
      console.log('üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
      users.forEach(u => {
        console.log(`  ID: ${u.id}, telegram_id: ${u.telegram_id}, username: ${u.username}, ref_code: ${u.ref_code}`);
      });
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º –∫–∞–∫ production –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const productionUser = users.find(u => u.balance_uni && parseFloat(u.balance_uni) > 1000);
      
      if (productionUser) {
        console.log(`üéØ –ù–∞–π–¥–µ–Ω production –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ID=${productionUser.id}, –±–∞–ª–∞–Ω—Å=${productionUser.balance_uni} UNI`);
        user = productionUser;
      } else {
        console.log('‚ùå Production –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
      }
    }
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã:');
    console.log(`  ID: ${user.id}`);
    console.log(`  telegram_id: ${user.telegram_id}`);
    console.log(`  username: ${user.username}`);
    console.log(`  ref_code: ${user.ref_code}`);
    console.log(`  balance_uni: ${user.balance_uni}`);
    console.log(`  balance_ton: ${user.balance_ton}`);
    
    // –°–æ–∑–¥–∞–µ–º JWT —Ç–æ–∫–µ–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const tokenPayload = {
      userId: user.id,
      telegram_id: user.telegram_id,
      username: user.username,
      first_name: user.first_name || 'Demo User',
      ref_code: user.ref_code,
      iat: Math.floor(Date.now() / 1000),
      exp: Math.floor(Date.now() / 1000) + (7 * 24 * 60 * 60) // 7 –¥–Ω–µ–π
    };
    
    const token = jwt.sign(tokenPayload, process.env.JWT_SECRET || 'fallback_secret');
    
    console.log('üîë JWT —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω:');
    console.log(`Bearer ${token}`);
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è client/index.html
    const htmlUpdateCode = `
    <!-- Production User JWT Setup –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å user_id=${user.id} -->
    <script>
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
      localStorage.clear();
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π JWT —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.id}
      const productionJWT = '${token}';
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      localStorage.setItem('telegramJWT', productionJWT);
      console.log('[Production Setup] JWT —Ç–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è user_id=${user.id}');
      console.log('[Production Setup] –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∫—ç—à–∞ –æ—á–∏—â–µ–Ω—ã');
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
      if (!window.location.search.includes('reloaded=1')) {
        window.location.href = window.location.href + '?reloaded=1';
      }
    </script>`;
    
    console.log('üìù –ö–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è client/index.html:');
    console.log(htmlUpdateCode);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...');
    const decoded = jwt.verify(token, process.env.JWT_SECRET || 'fallback_secret');
    console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω:', decoded);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
fixJWTSynchronization();