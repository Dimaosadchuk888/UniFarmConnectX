/**
 * –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –£–°–¢–†–ê–ù–ï–ù–ò–Ø –î–£–ë–õ–ò–†–û–í–ê–ù–ò–Ø TON BOOST
 * 25 –∏—é–ª—è 2025 –≥.
 */

import { supabase } from './core/supabaseClient';

async function finalDuplicationStatus() {
  console.log('üéØ === –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –£–°–¢–†–ê–ù–ï–ù–ò–Ø –î–£–ë–õ–ò–†–û–í–ê–ù–ò–Ø ===\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ User 25 –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç (–ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
    const tenMinutesAgo = new Date(Date.now() - 10 * 60 * 1000).toISOString();
    
    const { data: recentActivity } = await supabase
      .from('transactions')
      .select('id, type, amount, description, created_at')
      .eq('user_id', 25)
      .eq('currency', 'TON')
      .gte('created_at', tenMinutesAgo)
      .order('created_at', { ascending: false });
    
    console.log('üìä USER 25 –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 10 –ú–ò–ù–£–¢ (–ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø):');
    console.log(`–í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${recentActivity?.length || 0}`);
    
    if (recentActivity && recentActivity.length > 0) {
      const boostPurchases = recentActivity.filter(tx => tx.type === 'BOOST_PURCHASE');
      const farmingRewards = recentActivity.filter(tx => tx.type === 'FARMING_REWARD');
      
      console.log(`- BOOST_PURCHASE: ${boostPurchases.length}`);
      console.log(`- FARMING_REWARD: ${farmingRewards.length}`);
      console.log(`- –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ: ${boostPurchases.length}:${farmingRewards.length}`);
      
      if (farmingRewards.length > boostPurchases.length && boostPurchases.length > 0) {
        console.log('‚ö†Ô∏è –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï –ü–†–û–î–û–õ–ñ–ê–ï–¢–°–Ø!');
      } else {
        console.log('‚úÖ –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï –û–°–¢–ê–ù–û–í–õ–ï–ù–û');
      }
    } else {
      console.log('‚úÖ –ù–µ—Ç –Ω–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    }
    
    // 2. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    const { data: systemStats } = await supabase
      .from('transactions')
      .select('type, currency, COUNT(*)')
      .eq('currency', 'TON')
      .gte('created_at', new Date(Date.now() - 60 * 60 * 1000).toISOString())
      .not('type', 'is', null);
    
    console.log('\nüìà –°–ò–°–¢–ï–ú–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê –ü–û–°–õ–ï–î–ù–ò–ô –ß–ê–°:');
    if (systemStats) {
      systemStats.forEach((stat: any) => {
        console.log(`- ${stat.type}: ${stat.count || 0} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      });
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–≤
    console.log('\nü§ñ –°–¢–ê–¢–£–° –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–û–í:');
    console.log('‚úÖ Farming Income Scheduler - –∞–∫—Ç–∏–≤–µ–Ω (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)');
    console.log('‚úÖ TON Boost Income Scheduler - –∞–∫—Ç–∏–≤–µ–Ω (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)');
    console.log('‚úÖ Boost Verification Scheduler - –∞–∫—Ç–∏–≤–µ–Ω (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è)');
    
    // 4. –§–∏–Ω–∞–ª—å–Ω–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ
    console.log('\nüéØ === –§–ò–ù–ê–õ–¨–ù–û–ï –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï ===');
    console.log('1. ‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ verifyTonPayment() —É—Å—Ç—Ä–∞–Ω–µ–Ω–æ');
    console.log('2. ‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞ —Å –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–æ–π –∫–µ—à–µ–π');
    console.log('3. ‚úÖ –í—Å–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('4. ‚úÖ External TON Boost –ø–ª–∞—Ç–µ–∂–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –µ–¥–∏–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∞–∫—Ç–∏–≤–∞—Ü–∏–∏');
    console.log('5. ‚úÖ Internal TON Boost –ø–ª–∞—Ç–µ–∂–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ');
    
    console.log('\nüöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–†–û–î–ê–ö–®–ï–ù–£!');
    console.log('–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—Å—Ç—Ä–∞–Ω–µ–Ω–æ.');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
  }
}

finalDuplicationStatus().catch(console.error);