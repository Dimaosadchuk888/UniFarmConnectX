Техническое задание: Подготовка таблиц базы данных UniFarm (без удаления данных)

Цель:

Создать надёжную, масштабируемую структуру таблиц для проекта UniFarm, готовую к работе с большим объёмом данных, без автоматического удаления записей. Система должна позволять накопление истории операций, при этом сохранять целостность и производительность.

⸻

1. Создание и проверка ключевых таблиц

Убедиться, что следующие таблицы существуют и имеют корректную структуру:
 • users
 • transactions
 • uni_farming_deposits
 • ton_boost_deposits
 • missions
 • user_missions
 • referrals
 • auth_users

Проверить:
 • Все поля: типы данных, NOT NULL, DEFAULT, UNIQUE
 • Первичные и внешние ключи (особенно user_id)
 • Отсутствие дублирующих или устаревших колонок

⸻

2. Создание новых таблиц

2.1 farming_snapshots

Используется для сохранения агрегированного дохода по каждому пользователю раз в сутки:

CREATE TABLE farming_snapshots (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL REFERENCES users(id),
  total_earned NUMERIC NOT NULL,
  snapshot_date TIMESTAMP NOT NULL DEFAULT now()
);

2.2 wallet_snapshots (по желанию)

Для хранения агрегированных балансов кошельков (TON, UNI)

2.3 admin_logs (по желанию)

Для записи действий в админке (тип действия, админ, дата)

⸻

3. Подготовка к работе с большим объёмом данных
 • Включить индексы:
 • transactions(user_id)
 • transactions(user_id, created_at DESC)
 • uni_farming_deposits(user_id)
 • referrals(user_id, inviter_id)
 • Реализовать партиционирование таблицы transactions по дате (created_at)
→ Удаление не используется, но это ускорит выборку по датам

⸻

4. Миграции и документация
 • Все изменения оформить в виде миграций (.ts)
 • Подготовить DATABASE_STRUCTURE.md с описанием:
 • Назначение каждой таблицы
 • Поля и индексы
 • Связи между таблицами

⸻

Ограничения:
 • Не удалять ни одну запись из transactions, deposits, referrals
 • Удаление можно внедрить вручную позже, если потребуется

⸻

Результат:

Полностью готовая к работе база данных, поддерживающая масштабирование без удаления. Структура соответствует принципам чистой архитектуры, с возможностью аудита, хранения истории и работы при больших объёмах.

⸻