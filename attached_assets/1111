Контрольное ТЗ • «Отображение реферальной ссылки» • UniFarm Mini App
=====================================================================

Цель
----
Закрыть проблему с невидимой реферальной ссылкой в Telegram‑Mini‑App
и браузере, обеспечив стабильную работу на PROD и DEV.

Основные причины, найденные при аудитах
--------------------------------------
1. Несогласованный URL WebApp (/app vs /UniFarm) между BotFather и кодом.
2. Отсутствие `window.Telegram.WebApp` при открытии в браузере → JSX‑условия
   `if (!tg) return null;` скрывают ссылку.
3. Компонент‑fallback (**SimpleReferralLink**) не подключён на страницу.
4. SQL‑ошибка типа в таблице `referrals` ломает связанные выборки.
5. Webhook бота не перенастроен на новый домен Replit.

Область работы (меняем только перечисленное)
--------------------------------------------
Фронтенд (React/TSX):
  • src/components/ReferralLinkCard.tsx
  • src/components/SimpleReferralLink.tsx (создать или подключить)
  • src/pages/ReferralPage.tsx | Dashboard.tsx (точка монтирования)

Backend (Node/TS):
  • src/services/ReferralService.ts (каст типов в SQL/ORM)

Bot / Flask (Python):
  • bot.py — убедиться, что Webhook URL совпадает с новым доменом.

BotFather конфиг:
  • WebApp URL → https://t.me/UniFarming_Bot/UniFarm

Webhook:
  • https://uni-farm-connect-2-misterxuniverse.replit.app/telegram/webhook

Изменения фронтенда
-------------------
1. **ReferralLinkCard.tsx**
   - Удалить / изменить условие вида `if (!isTelegramWebApp) return null`.
   - Всегда рендерить:
       • Input (readOnly) со значением `refLink`.
       • Кнопку «Скопировать».
       • Если `tg` присутствует — дополнительно кнопку «Поделиться в Telegram».
   - Добавить `console.debug('Referral rendered', { tgAvailable: !!tg, refLink })`.

2. **SimpleReferralLink**
   - Функциональный компонент, принимающий `refLink`.
   - Не проверяет Telegram, рендерит Input + CopyButton.

3. **Встраивание**
   - Если `ReferralLinkCard` скрыт из‑за `tg === undefined`, автоматически
     показывать `SimpleReferralLink`.
   - Отказаться от глобального Redirect на отсутствие Telegram.

4. **SDK**
   - В `public/index.html`: `<script src="https://telegram.org/js/telegram-web-app.js"></script>`.

Изменения backend
-----------------
`ReferralService.ts`
```ts
.where('ref.telegramId = :id', { id: Number(telegramId) })
```
или эквивалентный каст к bigint, чтобы убрать ошибку
«No operator matches the given name...».

Настройка Webhook
-----------------
1. В bot.py при старте:
   ```python
   bot.set_webhook(url=f"{API_DOMAIN}/telegram/webhook", drop_pending_updates=True)
   ```
2. Проверить `getWebhookInfo` — URL должен быть новый.

Тест‑план (должно пройти всё)
-----------------------------
| Сценарий                              | Telegram‑Mini‑App | Браузер |
|---------------------------------------|-------------------|---------|
| 1. /start без ref                      | ✅ ссылка, копия  | ✅ |
| 2. /start ref_abc                      | ✅ фиксируется, видна ссылка | ✅ |
| 3. Нажать «Поделиться»                 | ✅ открывается Share | — |
| 4. Ref‑структура в API (`/me`)         | ✅ hasRefCode true | ✅ |
| 5. SQL‑ошибок в логах нет              | ✅                | ✅ |

Критерии приёмки
----------------
• В обоих окружениях (Telegram, браузер) отображается поле со ссылкой.
• При наличии `window.Telegram.WebApp` — работает кнопка «Поделиться».
• Нет ошибок SQL и React‑warnings в консоли.
• Webhook info → correct URL; команда `/start` возвращает персональную ссылку.

Запрещено
---------
• Менять другие страницы/компоненты без согласования.
• Трогать схемы базы данных, кроме приведения типов.
• Коммитить токены или секреты.

После выполнения агент присылает отчёт:
```
✅ ссылка отображается в TG + браузер
✅ кнопка Share активна при tg
✅ SQL‑ошибка устранена
✅ Webhook перенастроен
```
