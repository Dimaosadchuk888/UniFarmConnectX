–û—Ç–ª–∏—á–Ω–æ! –ù–∏–∂–µ ‚Äî —à–∞–±–ª–æ–Ω –∏–¥–µ–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã UniFarm, —Å —É—á—ë—Ç–æ–º —Ç–≤–æ–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Node.js (Express) + TypeScript + PostgreSQL (Neon) —Å —Ñ—Ä–æ–Ω—Ç–æ–º –Ω–∞ React + Vite, Telegram Mini App, TON, Farming, Boost, Missions, Wallet –∏ Referral.

‚∏ª

üìÅ –®–∞–±–ª–æ–Ω —Å—Ç—Ä—É–∫—Ç—É—Ä—ã UniFarm

–°–ª–µ–¥—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º RedMap, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç CI/CD, –º–æ–¥—É–ª—å–Ω–æ—Å—Ç—å, —Ä–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å.

unifarm/
‚îú‚îÄ‚îÄ client/                    # Frontend (React + Vite)
‚îÇ   ‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ pages/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ modules/           # frontend-–º–æ–¥—É–ª–∏ –ø–æ –ª–æ–≥–∏–∫–µ
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ services/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ hooks/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ layouts/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ index.tsx
‚îÇ   ‚îî‚îÄ‚îÄ vite.config.ts

‚îú‚îÄ‚îÄ server/                    # Backend (Express + TypeScript)
‚îÇ   ‚îú‚îÄ‚îÄ routes/                # –¢–æ–ª—å–∫–æ –º–∞—Ä—à—Ä—É—Ç—ã
‚îÇ   ‚îú‚îÄ‚îÄ controllers/          # REST/API –ª–æ–≥–∏–∫–∞
‚îÇ   ‚îú‚îÄ‚îÄ services/             # –í—Å—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
‚îÇ   ‚îú‚îÄ‚îÄ models/               # Prisma / Knex / db schema
‚îÇ   ‚îú‚îÄ‚îÄ middlewares/
‚îÇ   ‚îú‚îÄ‚îÄ utils/
‚îÇ   ‚îî‚îÄ‚îÄ index.ts              # –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞

‚îú‚îÄ‚îÄ modules/                  # –ü–∞–ø–∫–∞ –º–æ–¥—É–ª–µ–π (–ø–æ RedMap)
‚îÇ   ‚îú‚îÄ‚îÄ auth/
‚îÇ   ‚îú‚îÄ‚îÄ user/
‚îÇ   ‚îú‚îÄ‚îÄ telegram/
‚îÇ   ‚îú‚îÄ‚îÄ referral/
‚îÇ   ‚îú‚îÄ‚îÄ wallet/
‚îÇ   ‚îú‚îÄ‚îÄ missions/
‚îÇ   ‚îú‚îÄ‚îÄ boosts/
‚îÇ   ‚îú‚îÄ‚îÄ farming/
‚îÇ   ‚îî‚îÄ‚îÄ daily-bonus/
‚îÇ       ‚îú‚îÄ‚îÄ controller.ts
‚îÇ       ‚îú‚îÄ‚îÄ service.ts
‚îÇ       ‚îî‚îÄ‚îÄ model.ts

‚îú‚îÄ‚îÄ prisma/                   # Prisma —Å—Ö–µ–º–∞ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å)
‚îÇ   ‚îî‚îÄ‚îÄ schema.prisma

‚îú‚îÄ‚îÄ shared/                   # –û–±—â–∏–µ —Ç–∏–ø—ã, utils, env, –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã
‚îÇ   ‚îú‚îÄ‚îÄ types/
‚îÇ   ‚îú‚îÄ‚îÄ env/
‚îÇ   ‚îî‚îÄ‚îÄ constants.ts

‚îú‚îÄ‚îÄ scripts/                  # CI, –º–∏–≥—Ä–∞—Ü–∏–∏, —Å–∏–¥–µ—Ä—ã
‚îÇ   ‚îú‚îÄ‚îÄ seed.ts
‚îÇ   ‚îî‚îÄ‚îÄ health-check.ts

‚îú‚îÄ‚îÄ tests/                    # Unit –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
‚îÇ   ‚îî‚îÄ‚îÄ farming.spec.ts

‚îú‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ docker-compose.yml
‚îú‚îÄ‚îÄ .env                     # production / dev —Ä–∞–∑–¥–µ–ª–µ–Ω—ã
‚îú‚îÄ‚îÄ tsconfig.json
‚îú‚îÄ‚îÄ .eslintrc.js
‚îú‚îÄ‚îÄ .prettierrc
‚îú‚îÄ‚îÄ redmap.md                # –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
‚îú‚îÄ‚îÄ README.md
‚îî‚îÄ‚îÄ CHANGELOG.md             # –î–ª—è —Ñ–∏–∫—Å–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π


‚∏ª

‚úÖ –í–∫–ª—é—á–µ–Ω–æ –ø–æ best-practice:

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ü—Ä–∏–Ω—Ü–∏–ø
–ú–æ–¥—É–ª–∏ –õ–æ–≥–∏–∫–∞ –æ—Ç–¥–µ–ª–µ–Ω–∞ –ø–æ –±–∏–∑–Ω–µ—Å-–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º (/modules)
Controllers / Routes –û—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –ª–æ–≥–∏–∫–∏ (–Ω–∏–∫–∞–∫–æ–π –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏ –≤ —Ä–æ—É—Ç–µ—Ä–∞—Ö)
–¢–∏–ø–∏–∑–∞—Ü–∏—è TypeScript + shared/types
–¢–µ—Å—Ç—ã tests/*.spec.ts —á–µ—Ä–µ–∑ Vitest –∏–ª–∏ Jest
Docker –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –¥–ª—è Railway –∏–ª–∏ Vercel
Secrets –í—Å–µ .env –≤ shared/env, –±–µ–∑ —Ö–∞—Ä–¥–∫–æ–¥–∞
CI/CD –ú–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å GitHub Actions –∏–ª–∏ Railway Build


‚∏ª

‚öôÔ∏è –ü—Ä–∏–º–µ—Ä—ã –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Å–æ–≥–ª–∞—à–µ–Ω–∏–π (RedMap):

–ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞:

// modules/farming/controller.ts
import { getFarmingInfo } from './service';

export const farmingController = {
  info: async (req, res) => {
    const result = await getFarmingInfo(req.user.id);
    res.json(result);
  },
};

–ü—Ä–∏–º–µ—Ä —Å–µ—Ä–≤–∏—Å–∞:

// modules/farming/service.ts
import { getUserById } from '../user/service';
import { db } from '../../shared/db';

export async function getFarmingInfo(userId: string) {
  const user = await getUserById(userId);
  return db.farming.findMany({ where: { userId: user.id } });
}


‚∏ª

üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏:
 1. –ò—Å–ø–æ–ª—å–∑—É–π zod –∏–ª–∏ yup –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Å–µ—Ö req.body, req.query.
 2. –í—Å–µ try/catch –æ–±–æ—Ä–∞—á–∏–≤–∞–π –≤ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π error handler.
 3. –ù–µ –¥–æ–ø—É—Å–∫–∞–π @ts-ignore –≤ –ø—Ä–æ–¥–∞–∫—à–Ω.
 4. –ù–∞—Å—Ç—Ä–æ–π .env.production –∏ .env.development –æ—Ç–¥–µ–ª—å–Ω–æ.
 5. –ò—Å–ø–æ–ª—å–∑—É–π winston –∏–ª–∏ pino –¥–ª—è –ª–æ–≥–æ–≤.

‚∏ª

üß© –•–æ—á–µ—à—å –±–æ–ª—å—à–µ?

–ú–æ–≥—É –æ—Ç–¥–µ–ª—å–Ω–æ:
 ‚Ä¢ ‚úçÔ∏è –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å redmap.md –ø–æ —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ.
 ‚Ä¢ üß™ –ü–æ–¥–∫–ª—é—á–∏—Ç—å Jest + Supertest –¥–ª—è CI.
 ‚Ä¢ üì¶ –ù–∞–ø–∏—Å–∞—Ç—å package.json —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏.