Техническое задание: Обновление партнёрской программы UniFarm до 20 уровней

Цель:
Реализовать партнёрскую программу с глубиной до 20 уровней, в которой доход начисляется от дохода приглашённого (income from income).


Уровень
Процент от дохода
1
100%
2
2%
3
3%
4
4%
5
5%
6
6%
7
7%
8
8%
9
9%
10
10%
11
11%
12
12%
13
13%
14
14%
15
15%
16
16%
17
17%
18
18%
19
19%
20
20%




⸻

Механика начислений:
 1. Доход начисляется от дохода, а не от депозита (то есть при фарминге и реальных начислениях пользователю).
 2. Начисления должны фиксироваться в базе данных в таблице transactions с типом referral_reward.
 3. Указывать уровень партнёра и ID отправителя:
 • source_user_id — кто приносит доход.
 • description: "Referral reward from level [N]".
 4. Начисления происходят:
 • При фарминге UNI (ежесекундно)
 • При фарминге TON Boost (ежесекундно)
 • При покупке Boost пакетов (разовое начисление, если реализовано)

⸻

Требования к отображению:
 • Визуально пока не внедрять новые блоки (уровни, шкалы, графики).
 • Главное — корректно рассчитывать и фиксировать все начисления в БД.
 • Не трогать логику вывода, балансы, кошельки, фарминг и UI.
 • Запрещено удалять или модифицировать уже работающие компоненты, связанные с балансом, фармингом, историей или кошельком.

⸻

Технические ограничения:
 • Все расчёты должны быть точными, с использованием BigInt или decimal, чтобы избежать потерь точности.
 • Не удалять существующую структуру ReferralService, а расширить её.
 • Использовать массив LEVEL_PERCENTAGES в 20 значений: const LEVEL_PERCENTAGES = [
  1.0, 0.02, 0.03, 0.04, 0.05,
  0.06, 0.07, 0.08, 0.09, 0.10,
  0.11, 0.12, 0.13, 0.14, 0.15,
  0.16, 0.17, 0.18, 0.19, 0.20
]; 

 • Убедиться, что рекурсивный обход реферальной цепочки работает корректно на глубину до 20.

⸻

Дополнительно:

После выполнения необходимо:
 • Протестировать начисление с аккаунта-реферала в глубину не менее 3 уровней.
 • Убедиться, что транзакции создаются для каждого уровня с правильным процентом.
 • Не проводить визуальные доработки без отдельного ТЗ.