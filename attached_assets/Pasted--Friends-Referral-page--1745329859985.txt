Создать дополнительный независимый блок внутри раздела «Партнёрка» (Friends / Referral‑page), который всегда показывает текущую реферальную ссылку пользователя, если ref_code получен. Блок нужен, чтобы убедиться, что ссылка действительно отдается бекендом и не скрывается другими компонентами.

№
Требование
 2.1
Никаких изменений существующих компонентов таблицы уровней, статистики и остальных карточек. Новый блок должен быть добавлен ниже заголовка «Ваша партнёрская программа» или в самом низу страницы (на твой выбор – главное, чтобы не перекрывал, а лишь «дополнял»).
 2.2
Использовать Tailwind/классы проекта; ширина 100 %, padding аналогичен существующим карточкам; фон можно взять bg-zinc-900/60 (как у таблицы уровней), чтобы вписался в тему.
 2.3
Логика показа:  • isLoading → показываем спиннер + «Получаем ссылку…»  • ref_code получен → показываем пару строк: «Ваша реферальная ссылка» и сам <input readOnly value={link} /> c кнопкой copy  • ref_code отсутствует → показываем Alert с текстом «Ссылка ещё не сгенерирована, попробуйте позже» (желтый).
 2.4
Формат актуальной ссылки: 
 2.5
Не менять API‑слой. Получай ссылку тем же запросом /api/me.
 2.6
Убедись, что в Mini App (Telegram WebView) блок виден: ничего не перекрывается (z-index ≥ пола у соседних элементов, но < любых глобальных оверлеев).
 2.7
Не трогать маркетинговые проценты, генерацию ref_code, миграции, базы.
 2.8
Покрыть быстрыми тестами: • unit для buildReferralLink(ref)  • e2e (cypress/playwright) – скрин, что ссылка видна после логина тест‑пользователя.


3. План работ (предложенный)
 1. Создать компонент ReferralDirectLinkCard.tsx в client/src/components/friends/.
 2. Импортировать его в страницу Friends.tsx сразу после основного блока статистики.
 3. Переключить стор (или React Query) так, чтобы новый компонент использовал уже полученные данные (без лишнего запроса).
 4. Добавить copy‑to‑clipboard (navigator.clipboard.writeText).
 5. Прогнать npm run lint && npm run test.
 6. В DEV‑режиме проверить в Preview, затем деплой на production‑branch, зайти в Mini App и приложить скриншот.

4. Проверки, которые нужно провести дополнительно
 • Посмотреть, нет ли CSS‑правил, где overflow:hidden или max-height задаются родителю и обрезают новый блок.
 • Убедиться, что Tele­gram WebApp скрипт не падает: в консоли не должно быть Telegram object not available; если такое есть – добавить «тихий» fallback (просто показываем ссылку, без проверки ‑ для любых браузеров).