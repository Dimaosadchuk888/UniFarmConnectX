Провести полный аудит клиентской части проекта UniFarm,
включая взаимодействие компонентов, обработку состояния, отображение данных и передачу в API.
Задача — выявить причины багов, рассинхронизации с сервером и проблем отображения (ref_code, кнопки, фарминг, миссии).

⸻

Что нужно проверить:

⸻

1. Отображение реферального кода (ref_code)
 • При открытии Mini App у пользователя должен отображаться ref_code,
 • Убедиться, что:
 • API вызывается корректно (/api/me),
 • ref_code приходит в ответе,
 • Компонент отображает его корректно в UI.

⸻

2. Логика кнопки “Пополнить” (депозит UNI)
 • Проверить, что:
 • Запрос отправляется только по нажатию,
 • Запрос содержит корректный amount (тип — string, значение > 0),
 • При ошибке (например, Invalid JSON) — появляется сообщение, а не краш.

⸻

3. Поведение при открытии Mini App
 • Убедиться, что при загрузке:
 • Не создаются лишние POST-запросы,
 • Не отправляется deposit без действия пользователя,
 • Нет утечек состояния (useEffect, onMount, неочищенные таймеры и т.д.).

⸻

4. Отображение баланса, депозита и доходности
 • Проверить:
 • Корректность отображения значений из /api/uni-farming/info,
 • Обновление дохода при сборе (/api/harvest),
 • Соответствие отображаемых данных тем, что в БД.

⸻

5. Блок миссий, партнёров и бустов
 • Проверить визуальные блоки:
 • Миссии подгружаются,
 • Бусты отображаются (названия, стоимость, начисления),
 • Рефералы корректно строятся в дереве (данные из /api/referral/tree).

⸻

6. Обработка ошибок в интерфейсе
 • Проверить:
 • Везде ли есть try/catch,
 • Обрабатываются ли ошибки от API (404, 400, invalid response),
 • Показываются ли пользователю сообщения при ошибках (а не пустой экран).

⸻

Результат:
 • Таблица всех проверенных компонентов/функций с пометкой “OK / Баг / Требует исправления”,
 • Скриншоты и вывод ошибок (если есть),
 • Комментарии: где дублируется логика, где не синхронизировано с сервером, где UI работает неустойчиво.

⸻

Ограничения:
 • Пока не вносить правки, только провести аудит,
 • Не переписывать архитектуру компонентов до фиксации всех ошибок.

⸻

Готово — можешь передать Replit.
Как только они пришлют результаты — я дам приоритет по фиксам и начнём улучшать фронт шаг за шагом.