⸻

Техническое задание №8: Этап 2.8 — Архитектурный аудит проекта UniFarm

⸻

Цель:

Провести аудит архитектуры серверной части проекта UniFarm:
проверить соблюдение принципов чистого кода и ООП — включая LSP, DRY, SRP —
и выявить участки кода, которые нарушают масштабируемость, читаемость или предсказуемость поведения.

⸻

Что нужно проверить:

⸻

1. Принцип подстановки Лисков (LSP)

Что проверить:
 • Все классы, унаследованные от базовых (BaseController, Service, Handler и т.д.),
должны сохранять ожидаемое поведение.
 • Методы в наследниках не должны менять логику так, чтобы это ломало код, использующий базовый класс.

Типичные ошибки:
 • Переопределённые методы возвращают другой формат данных,
 • Поведение handle() в дочерних контроллерах не соответствует BaseController,
 • Использование класса X в Y, где X — несовместим по логике.

⸻

2. Принцип DRY (Don’t Repeat Yourself)

Что проверить:
 • Нет ли дублирования:
 • Одних и тех же SQL-запросов в разных местах,
 • Обработки ошибок (вручную скопированных res.status(500)),
 • Форматирования ответов ({ success: true }, res.json и т.д.).

Что сделать:
 • Выделить общие функции в utils, responseUtils, dbUtils и т.п.

⸻

3. Принцип SRP (Single Responsibility Principle)

Что проверить:
 • Контроллеры не должны содержать:
 • Бизнес-логику,
 • Логику валидации,
 • Прямую работу с БД (если уже есть сервисы/модели).
 • Сервисы — не должны заниматься формированием ответа,
 • Middleware — не должен выполнять бизнес-логику.

⸻

4. Выявить проблемные архитектурные участки
 • Где используются any, as unknown, try/catch без логирования,
 • Где невозможно заменить один модуль другим без рефакторинга,
 • Где не соблюдён единый стиль проекта.

⸻

Результат:
 • Таблица всех базовых классов, контроллеров, сервисов — с пометкой:
 • “OK” / “Нарушение LSP” / “Повторение логики” / “Нарушение SRP”
 • Список рекомендаций по рефакторингу
 • Указание участков, которые можно оптимизировать БЕЗ РИСКА до релиза

⸻

Ограничения:
 • Пока не внедрять крупные изменения,
 • Только провести аудит и зафиксировать слабые места.

⸻