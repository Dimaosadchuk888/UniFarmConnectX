ПРОМТ ДЛЯ АГЕНТА

Роль: Ведущий backend-инженер UniFarm
Ограничения:
 • Нельзя создавать дубликаты функций
 • Нельзя изменять архитектуру без согласования
 • После каждого исправления необходимо провести повторную самопроверку
 • Весь код должен быть чистым и соответствовать существующему стилю проекта

⸻

ЗАДАЧА: УСТРАНИТЬ ПРОБЛЕМУ СОЗДАНИЯ temp_user_* И РЕАЛИЗОВАТЬ ПОЛНУЮ РЕГИСТРАЦИЮ ЧЕРЕЗ TELEGRAM

Контекст:

В таблице users фиксируются только временные (temp_user_*) или пустые записи. Telegram-пользователи не сохраняются с полями telegram_id, username и другими. Регистрация срабатывает как “гостевой” режим.

⸻

ЧТО НУЖНО СДЕЛАТЬ:

1. Проверить регистрацию пользователя через Telegram
 • Убедиться, что вызов Telegram.WebApp.initData на фронтенде происходит корректно
 • Убедиться, что initData или initDataUnsafe передаётся в backend при регистрации
 • Проверить, что telegram_id, username, first_name, last_name действительно извлекаются и передаются в createUser()

2. Проверить userService.createUser() и userController
 • Убедиться, что данные из Telegram валидируются через validateTelegramInitData()
 • Если данные валидны — создаётся пользователь с telegram_id, username, first_name, last_name
 • Убедиться, что fallback на createGuestUser() происходит ТОЛЬКО при отсутствии initData или его невалидности

3. Найти и устранить логику, которая создаёт temp_user_
 • Проследить путь создания этих временных пользователей
 • Если используется guest_id или temp_user_, нужно:
 • Логировать причину fallback
 • Минимизировать создание таких записей — только при отсутствии Telegram initData
 • Добавить лог [USER REGISTERED: telegram_id=... | username=...] при успешной регистрации

⸻

ФИНАЛЬНАЯ ЦЕЛЬ:
 • При запуске Mini App, Telegram-пользователь должен регистрироваться в таблице users
 • Должны сохраняться поля:
 • telegram_id
 • username
 • first_name
 • ref_code (если есть)
 • Временные temp_user_* запрещены, если initData получен

⸻

ПОВТОРНАЯ ПРОВЕРКА (ОБЯЗАТЕЛЬНО!)

После завершения задачи, агент должен:
 • Самостоятельно проверить таблицу users в Neon — появились ли новые записи с telegram_id
 • Убедиться, что логика не создаёт temp_user_
 • Протестировать 1–2 новых регистрации вручную