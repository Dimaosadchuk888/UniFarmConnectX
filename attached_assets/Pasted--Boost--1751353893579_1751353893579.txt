📊 АНАЛИЗ: Готовность системы к приёму реальных оплат за Boost пакеты

⸻

✅ ЦЕЛЬ:

Проверить, насколько текущая система (front + back) готова:
 1. Принимать оплату с внутреннего UNI-баланса
 2. Принимать оплату через внешний TON-кошелек (TON Connect)
 3. Фиксировать покупку пакета в базе данных и запускать начисление процентов

⸻

🔍 ЧЕКЛИСТ ПРОВЕРКИ (по каждому методу оплаты):

⸻

🔹 1. Покупка через ВНУТРЕННИЙ БАЛАНС

Проверка Описание Статус
📤 Есть ли кнопка “Оплатить с баланса”? При нажатии на “Купить Boost” открывается форма и опция оплаты с внутреннего баланса 🔄
💳 Проверяется ли баланс UNI? Кнопка должна быть неактивна, если средств меньше минимального депозита пакета 🔄
🔗 Отправляется ли POST-запрос? Например: /api/ton-boost/purchase/internal или аналогичный 🔄
📬 Принимает ли backend этот запрос? Есть ли соответствующий контроллер, который: проверяет баланс, списывает и создает пакет 🔄
🧾 Фиксируется ли в базе данных? После успешной оплаты пакет появляется в user_boost_packages или подобной таблице 🔄
📈 Запускается ли начисление процентов? Система должна активировать проценты по формуле пакета 🔄


⸻

🔹 2. Покупка через ВНЕШНИЙ TON КОШЕЛЕК (TON Connect)

Проверка Описание Статус
🔌 Есть ли TON Connect (кнопка, компонент)? Пользователь может подключить кошелек через Tonkeeper / Wallet / OpenMask 🔄
📤 При выборе “Оплатить через TON” Должна происходить генерация TON транзакции (сумма, адрес) и передача в кошелёк 🔄
💰 Принимает ли кошелёк TON транзакцию? Открывается TON-кошелёк с предзаполненной транзакцией 🔄
✅ Проверяется ли факт оплаты? Система ожидает завершения и подтверждает (через webhook или polling) 🔄
📬 Есть ли backend-логика? Принятие транзакции, проверка хэша, запись в базу данных 🔄
🧾 Фиксация покупки Создание пакета в системе, как и при внутренней покупке 🔄


⸻

🧩 3. ОБЩИЕ УСЛОВИЯ

Проверка Описание Статус
🛡 Защита от повторной оплаты Нельзя купить один и тот же пакет дважды (если по условиям так нельзя) 🔄
🔁 Обновление UI после покупки После успешной покупки интерфейс обновляется: пакет активен, кнопка “Купить” скрыта 🔄
📦 База пакетов актуальна Данные в карточках соответствуют RoadMap (1 TON, 5 TON и т.д.) ✅
🔄 Ошибки корректно обрабатываются Если недостаточно средств или ошибка сети — отображается уведомление 🔄


⸻

💡 РЕЗУЛЬТАТ:

После прохождения всех этих пунктов агент должен:
 1. Не менять код
 2. Ответить по каждому пункту:
 • Готово ✅
 • Не реализовано ❌
 • Частично реализовано ⚠️
 • Требует уточнения 🔄
 3. Подтвердить, что система:
 • может принимать реальные транзакции 💳
 • корректно обрабатывает покупку 📊
 • правильно фиксирует в базе данных 💾

⸻

📌 После этого анализа можно перейти к ТЗ по доработке, если какие-то цепочки отсутствуют или работают частично.