Полный список ТЗ по новой архитектуре реферальной системы UniFarm (2025)

Общее правило:
Все доработки должны быть реализованы максимально аккуратно — без нарушения уже работающих функций.
Любые изменения должны быть протестированы локально, и после каждого этапа необходимо получить подтверждение от заказчика.

⸻

Этап 1 — Полный отказ от Telegram-данных

Цель:
Изолировать систему от любых Telegram API. Telegram используется только как точка запуска Mini App, но не как источник логики, данных или регистрации.

Что нужно сделать:
 1. Удалить все обращения к Telegram API, включая:
 • Telegram.WebApp.initDataUnsafe.user.*
 • navigator.userAgent.includes('Telegram')
 • isTelegramUA, isInIframe, hasTelegramReferrer
 2. Убедиться, что логика ref_code, registration, ref_path, referrals — не использует telegram_user_id
 3. Telegram остаётся только как “вход” в Mini App (где открывается ссылка)
 4. Если в коде где-то Telegram всё ещё используется — это должно быть вынесено и отключено

Важно:
Не сломать текущую регистрацию, отображение кабинета, фарминг, кошелёк.

⸻

Этап 2 — Внедрение guest_id как основного идентификатора

Цель:
Заменить Telegram ID на собственный, безопасный и независимый guest_id — для всех, кто заходит без авторизации.

Что нужно сделать:
 1. При первом запуске Mini App сгенерировать guest_id на frontend
 • Пример: UUIDv4 или сокращённый ID
 • Сохранить его в localStorage или sessionStorage
 2. При регистрации пользователя — отправлять guest_id в backend
 3. Backend должен создавать нового пользователя по guest_id, если он ещё не существует

Важно:
Существующим пользователям ничего не менять. Новый механизм включается только для новых входов.

⸻

Этап 3 — Генерация ref_code автоматически

Цель:
Упростить пользовательский путь: ref_code создаётся сам, без кнопок или Telegram-информации.

Что нужно сделать:
 1. При создании нового пользователя (через guest_id) — backend должен автоматически сгенерировать уникальный ref_code
 2. Сохранять его в базе в поле ref_code
 3. Повторные заходы этого пользователя возвращают уже существующий ref_code

Важно:
Для старых пользователей ref_code не должен меняться. Повторная генерация невозможна.

⸻

Этап 4 — Привязка к пригласителю (inviter_id) по startParam

Цель:
Правильно зафиксировать источник приглашения один раз и навсегда.

Что нужно сделать:
 1. Извлекать параметр ?start=Z81K7P из URL при первом заходе
 2. Отправлять его вместе с guest_id на сервер
 3. Backend должен:
 • проверить, что пользователь новый
 • найти пользователя с таким ref_code
 • записать его ID как inviter_id и построить ref_path

Важно:
Если пользователь уже существует → inviter_id не должен меняться при повторных заходах.

⸻

Этап 5 — Фиксация кабинета

Цель:
Не допустить случайной потери кабинета или пересоздания аккаунта.

Что нужно сделать:
 1. Если в localStorage уже есть guest_id — при заходе не создавать нового пользователя
 2. Всегда возвращать пользователя с этим guest_id
 3. Только если бот был удалён, и Mini App запущен “с нуля” → разрешено создать новый guest_id и новый аккаунт

Важно:
Не сломать работу повторного входа — фарминг, рефералы и бусты должны сохраняться.

⸻

Этап 6 — Блокировка запуска через браузер

Цель:
Обеспечить запуск Mini App только из Telegram, чтобы не возникало путаницы с регистрацией.

Что нужно сделать:
 1. Если Mini App открыт вне Telegram WebView — показывать баннер “Открой в Telegram”
 2. Проверка не должна зависеть от Telegram API — только от initData или window.Telegram

Важно:
Проверка должна быть чисто внешней. Не блокировать механику, если пользователь всё равно авторизовался корректно.

⸻

Этап 7 — Минимальные данные в базе

Цель:
Хранить только нужную информацию. Упростить таблицы.

Что нужно сделать:
 1. Оставить и использовать только:
 • guest_id
 • ref_code
 • ref_path
 • inviter_id
 • wallet_address (если привязан)
 2. Telegram ID и Telegram username — удалить или больше не использовать

⸻

Этап 8 — Сохранение всех работающих функций

Цель:
Убедиться, что рефакторинг не нарушил:
 • Фарминг (депозиты, начисления) •                                              Партнёрскую структуру (глубина, рефералы)
 • Выводы/баланс/бусты
 • Подключение кошелька
 • Логику отображения кабинета

Что нужно сделать:
 1. Протестировать поведение старых пользователей
 2. Протестировать регистрацию новых пользователей
 3. Проверить, что после удаления бота можно создать новый аккаунт

⸻

Формат контроля:
 • После выполнения каждого этапа:
 • Сбрасывается скрин или лог результата
 • Подтверждается, что ничего не сломано
 • В чате ставится отметка ✅
 • Только после одобрения — переход к следующему этапу