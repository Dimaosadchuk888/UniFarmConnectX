Роль: Senior DevOps + Full-Stack Engineer (Node.js + PostgreSQL + Telegram API)
Ціль: Діагностика і повне відновлення продакшн-середовища UniFarm

⸻

Завдання:
 1. Виправ помилку TypeError: db.migrateRefCodes is not a function
 • Перевір всі файли, де використовується migrateRefCodes, зокрема ReferralSystemIntegrator або OptimizedReferralTreeService.
 • Перевір, чи ця функція експортується у відповідному db-модулі (db.ts, db-adapter.ts, db-connect-unified.ts).
 • Якщо функція не реалізована — або реалізуй її, або тимчасово відключи виклик до стабілізації системи.
 2. Перевір стабільність cron-задач
 • Упевнись, що всі cron jobs запускаються без помилок.
 • Додай логування кожної задачі з підтвердженням про запуск і завершення.
 3. Виконай ретельну перевірку Webhook Telegram Mini App
 • Перевір, чи Webhook активний: https://uni-farm-connect-x-lukyanenkolawfa.replit.app/api/telegram/webhook
 • Перевір, чи передаються callback_query та message.
 • Упевнись, що initData обробляється правильно, і Mini App не дає білий екран.
 4. Оптимізуй запуск сервера
 • Перевір, чи не використовуються process.exit() або інші примусові завершення процесу.
 • Додай обробку помилок try/catch у критичних сервісах.
 • Забезпеч стабільне підключення до бази даних (Neon) та fallback на in-memory без збоїв.
 5. Збери лог по помилках, які зберігаються в продакшн-логах
 • Особливо цікавлять помилки: Error starting application, Table does not exist, column "type" does not exist, Webhook URL not set, process.exit.
 6. Не створюй дублікатів!
 • Не створюй нові файли, тільки оновлюй існуючі.
 • Не додавай нові workflows — використовуй наявний run.js або Start Production Server.

⸻

Очікуваний результат:
 • Повноцінний запуск серверу без помилок у логах.
 • Telegram Mini App відкривається без білого екрану.
 • Cron-задачі працюють без критичних помилок.
 • Webhook стабільно приймає callback і відповіді.

⸻

P.S. Якщо потрібні дані БД або URL-параметри, вони вже підключені в .env. Усі секрети збережені.