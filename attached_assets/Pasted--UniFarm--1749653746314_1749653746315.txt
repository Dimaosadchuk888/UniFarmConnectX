–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ, –∫–∞–∫ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –º–æ–¥—É–ª–∏ UniFarm –≤ –∫–ª–∞—Å—Å—ã —Å –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º, –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö. –ü–æ—á–Ω–µ–º –∑ –±–∞–∑–æ–≤–∏—Ö –∫–ª–∞—Å—ñ–≤, —è–∫—ñ –º–æ–∂—É—Ç—å –ª–µ–∂–∞—Ç–∏ –≤ modules/core/ –∞–±–æ modules/entities/.

‚∏ª

üß± 1. –ö–ª–∞—Å User

// modules/entities/User.ts
export class User {
  constructor(
    public id: number,
    public telegramId: string,
    public username: string,
    public refCode?: string,
    public refBy?: string
  ) {}

  getReferralLink(): string {
    return `https://t.me/unifarm_bot?start=${this.refCode}`;
  }

  isReferred(): boolean {
    return !!this.refBy;
  }
}


‚∏ª

üß© 2. –ö–ª–∞—Å Farmer ‚Äî –Ω–∞—Å–ª–µ–¥—É–µ—Ç User

// modules/entities/Farmer.ts
import { User } from './User';

export class Farmer extends User {
  constructor(
    id: number,
    telegramId: string,
    username: string,
    refCode?: string,
    refBy?: string,
    public totalFarmed: number = 0
  ) {
    super(id, telegramId, username, refCode, refBy);
  }

  farm(amount: number) {
    this.totalFarmed += amount;
  }
}


‚∏ª

üõ° 3. –ö–ª–∞—Å Admin ‚Äî —Ç–æ–∂–µ –Ω–∞—Å–ª–µ–¥—É–µ—Ç User

// modules/entities/Admin.ts
import { User } from './User';

export class Admin extends User {
  approveWithdrawal(userId: number): string {
    return/User';

export class Farmer extends Us
  }

  banUser(userId: number): string {
    return—â–∏–µ –º–æ–¥—É–ª–∏ UniFarm –≤ –∫–ª–∞—Å—Å—ã —Å –Ω–∞—Å–ª–µ
  }
}


‚∏ª

üí∞ 4. –ö–ª–∞—Å Wallet

// modules/entities/Wallet.ts
export class Wallet {
  constructor(
    public userId: number,
    public uniBalance: number,
    public tonBalance: number
  ) {}

  depositUNI(amount: number) {
    this.uniBalance += amount;
  }

  withdrawTON(amount: number): boolean {
    if (this.tonBalance >= amount) {
      this.tonBalance -= amount;
      return true;
    }
    return false;
  }
}


‚∏ª

üéØ 5. –ö–ª–∞—Å Mission

// modules/entities/Mission.ts
export class Mission {
  constructor(
    public id: number,
    public type: 'telegram' | 'youtube' | 'tiktok',
    public title: string,
    public rewardUNI: number
  ) {}

  isSocial(): boolean {
    return ['telegram', 'youtube', 'tiktok'].includes(this.type);
  }
}


‚∏ª

üß† –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:

const user = new Farmer(1, '123456', 'alexdev', 'ref123', undefined, 0);
user.farm(100);
console.log(user.totalFarmed); // 100

const admin = new Admin(2, '999888', 'adminUser');
console.log(admin.banUser(1)); // User 1 has been banned.


‚∏ª

üìÇ –ö—É–¥–∞ —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å:

–ü—Ä–µ–¥–ª–∞–≥–∞—é —Ç–∞–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É:

modules/
  entities/
    User.ts
    Farmer.ts
    Admin.ts
    Wallet.ts
    Mission.ts


‚∏ª

‚úÖ –ß—Ç–æ –¥–∞–ª—å—à–µ:
 1. üîÑ –ó–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Ç–∏–ø—ã –∏ interface –Ω–∞ –∫–ª–∞—Å—Å—ã.
 2. üß™ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –≤ services/ –∏ controllers/, —á—Ç–æ–±—ã –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã (farm(), approveWithdrawal()).
 3. üì¶ –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –≤–Ω—É—Ç—Ä—å –∫–ª–∞—Å—Å–æ–≤.

‚∏ª