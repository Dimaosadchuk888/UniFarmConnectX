ЗАДАНИЕ: Аудит подключения TonConnect без удаления рабочей реализации

Цель:
Провести аудит подключения TON-кошелька через TonConnect, устранить дублирующие подключения, НЕ удаляя и НЕ изменяя работающую кнопку “Connect Wallet” (синяя кнопка, расположена в правом верхнем углу сайта).

⸻

Что уже работает и трогать нельзя:
 • Кнопка “Connect Wallet” (синий цвет) подключает кошелёк корректно.
 • Отображает оригинальный адрес в формате UQAg... или 0:... (в зависимости от TON Space).
 • Подключение и отключение работают синхронно с Tonkeeper / @wallet.
 • Эта кнопка уже встроена в Header.

Запрещено:
 • Удалять или изменять эту кнопку.
 • Переписывать tonConnectService.ts без согласования.
 • Заменять ConnectWalletButton на другие реализации.

⸻

Что нужно сделать:
 1. Провести аудит всех мест, где инициализируется TonConnect или вызывается connector.connect():
 • Убедиться, что нет повторных инициализаций.
 • Все подключения должны происходить только через ConnectWalletButton (синяя кнопка).
 • Если в проекте есть useTonConnect, useTonWallet, connector.restoreConnection() — проверить, чтобы они не дублировались.
 2. Удалить или деактивировать старую реализацию кнопки “Подключить TON”:
 • Файл: WalletConnectionCard.tsx (или где размещена фиолетовая кнопка).
 • Заменить её на текст: Кнопка перенесена в шапку →.
 • Не трогать остальную часть WalletConnectionCard.
 3. Проверить глобальный state или context, который хранит статус подключения и адрес:
 • Должен быть один источник (например, TonConnectUIContext или кастомный хук).
 • Адрес не должен перезаписываться из разных компонентов.
 4. Убедиться, что после подключения отображается корректный адрес на всех страницах:
 • Провести тесты на вкладках: Главная, Фарминг, Задания, Партнёрка, Кошелёк.
 • Адрес не должен мигать, пропадать или дублироваться.
 5. Проверить, не дублируются ли транзакции или задержки в их отображении:
 • Возможно, старый компонент кошелька тянет историю из старого wallet state.

⸻

ВАЖНО:

Все действия выполнять только после аудита.
Не удалять ни один компонент или хук без подтверждения.
Все изменения фиксировать в коммитах с пояснением: "AUDIT: проверка без удаления рабочей логики".