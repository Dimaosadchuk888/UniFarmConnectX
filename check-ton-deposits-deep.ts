import { supabase } from './core/supabaseClient';

async function checkTonDepositsDeep() {
  const userId = '184';
  
  console.log('=== –ì–õ–£–ë–û–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê TON –î–ï–ü–û–ó–ò–¢–û–í ===\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º ton_farming_data
  console.log('1. –¢–∞–±–ª–∏—Ü–∞ ton_farming_data:');
  const { data: tonFarmingData } = await supabase
    .from('ton_farming_data')
    .select('*')
    .eq('user_id', userId)
    .order('created_at', { ascending: false });
    
  if (tonFarmingData?.length) {
    tonFarmingData.forEach(d => {
      console.log(`‚îú‚îÄ‚îÄ ID: ${d.id}, –ü–∞–∫–µ—Ç: ${d.ton_boost_package_id}, –°—É–º–º–∞: ${d.amount} TON`);
      console.log(`‚îÇ   –°–æ–∑–¥–∞–Ω: ${new Date(d.created_at).toLocaleString('ru-RU')}`);
      console.log(`‚îÇ   –ò—Å—Ç–µ–∫–∞–µ—Ç: ${d.expires_at ? new Date(d.expires_at).toLocaleString('ru-RU') : '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      console.log(`‚îÇ   –ê–∫—Ç–∏–≤–µ–Ω: ${d.is_active ? '‚úÖ' : '‚ùå'}\n`);
    });
  } else {
    console.log('‚îî‚îÄ‚îÄ –ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n');
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º boost_packages
  console.log('2. Boost –ø–∞–∫–µ—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ:');
  const { data: packages } = await supabase
    .from('boost_packages')
    .select('*')
    .order('price');
    
  packages?.forEach(p => {
    console.log(`‚îú‚îÄ‚îÄ ID: ${p.id}, ${p.name}: ${p.price} TON (${p.rate}% –≤ –¥–µ–Ω—å)`);
  });
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–∫—É–ø–æ–∫
  console.log('\n3. –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ç–∏–ø–∞ BOOST_PURCHASE:');
  const { data: boostTx } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', userId)
    .eq('type', 'BOOST_PURCHASE')
    .order('created_at', { ascending: false })
    .limit(10);
    
  if (boostTx?.length) {
    boostTx.forEach(tx => {
      console.log(`‚îú‚îÄ‚îÄ ${tx.amount} ${tx.currency} - ${tx.description}`);
      console.log(`‚îÇ   –°—Ç–∞—Ç—É—Å: ${tx.status}, ID: ${tx.id}`);
      console.log(`‚îÇ   –î–∞—Ç–∞: ${new Date(tx.created_at).toLocaleString('ru-RU')}\n`);
    });
  } else {
    console.log('‚îî‚îÄ‚îÄ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π BOOST_PURCHASE –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n');
  }
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ —Å–ø–∏—Å–∞–Ω–∏–µ–º TON –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
  console.log('4. –í—Å–µ —Å–ø–∏—Å–∞–Ω–∏—è TON –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å:');
  const hourAgo = new Date(Date.now() - 60 * 60 * 1000).toISOString();
  const { data: recentTonTx } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', userId)
    .eq('currency', 'TON')
    .lt('amount', 0) // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã = —Å–ø–∏—Å–∞–Ω–∏—è
    .gte('created_at', hourAgo)
    .order('created_at', { ascending: false });
    
  if (recentTonTx?.length) {
    let totalSpent = 0;
    recentTonTx.forEach(tx => {
      console.log(`‚îú‚îÄ‚îÄ ${tx.type}: ${tx.amount} TON - ${tx.description}`);
      console.log(`‚îÇ   –î–∞—Ç–∞: ${new Date(tx.created_at).toLocaleString('ru-RU')}`);
      totalSpent += Math.abs(parseFloat(tx.amount));
    });
    console.log(`‚îî‚îÄ‚îÄ –ò–¢–û–ì–û —Å–ø–∏—Å–∞–Ω–æ: ${totalSpent.toFixed(6)} TON\n`);
  } else {
    console.log('‚îî‚îÄ‚îÄ –°–ø–∏—Å–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n');
  }
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log('5. –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
  const { data: user } = await supabase
    .from('users')
    .select('balance_ton, ton_farming_balance, ton_boost_active, ton_boost_package, ton_boost_expires_at')
    .eq('id', userId)
    .single();
    
  console.log(`‚îú‚îÄ‚îÄ balance_ton: ${user.balance_ton} TON`);
  console.log(`‚îú‚îÄ‚îÄ ton_farming_balance: ${user.ton_farming_balance} TON`);
  console.log(`‚îú‚îÄ‚îÄ ton_boost_active: ${user.ton_boost_active ? '‚úÖ' : '‚ùå'}`);
  console.log(`‚îú‚îÄ‚îÄ ton_boost_package: ${user.ton_boost_package || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
  console.log(`‚îî‚îÄ‚îÄ ton_boost_expires_at: ${user.ton_boost_expires_at || '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n`);
  
  // 6. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã
  console.log('üìä –ê–ù–ê–õ–ò–ó:');
  console.log('1. –ü—Ä–æ–ø–∞–ª–æ 12.996007 TON –∏–∑ –æ–±—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞');
  console.log('2. ton_farming_balance –Ω–µ —É–≤–µ–ª–∏—á–∏–ª—Å—è (–æ—Å—Ç–∞–ª—Å—è 115 TON)');
  console.log('3. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
  console.log('   - –î–µ–Ω—å–≥–∏ —Å–ø–∏—Å–∞–ª–∏—Å—å, –Ω–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏—Å—å –≤ farming');
  console.log('   - –ù–æ–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ ton_farming_data');
  console.log('   - –ü—Ä–æ–±–ª–µ–º–∞ —Å –ª–æ–≥–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∫—É–ø–æ–∫');
}

checkTonDepositsDeep();