-- üîß –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –£–ù–ò–§–ò–ö–ê–¶–ò–Ø –ê–ö–ö–ê–£–ù–¢–û–í –ö –°–¢–ê–ù–î–ê–†–¢–£ USER ID 25
-- –î–∞—Ç–∞: 31.07.2025
-- –¶–µ–ª—å: –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∫ —ç—Ç–∞–ª–æ–Ω–Ω–æ–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É

-- ===== –≠–¢–ê–ü 1: BACKUP –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –¢–ê–ë–õ–ò–¶ =====
CREATE TABLE users_backup_20250731 AS SELECT * FROM users;
CREATE TABLE transactions_backup_20250731 AS SELECT * FROM transactions;
CREATE TABLE ton_farming_data_backup_20250731 AS SELECT * FROM ton_farming_data;
CREATE TABLE user_sessions_backup_20250731 AS SELECT * FROM user_sessions;

-- ===== –≠–¢–ê–ü 2: –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–ù–´–• –ê–ö–ö–ê–£–ù–¢–û–í =====

-- –ù–∞–π—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç—ã –±–µ–∑ telegram_id (–∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
SELECT id, username, first_name, created_at, 'MISSING_TELEGRAM_ID' as issue
FROM users 
WHERE telegram_id IS NULL OR telegram_id = 0;

-- –ù–∞–π—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç—ã –±–µ–∑ ref_code (–∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è WebSocket/API)
SELECT id, username, first_name, created_at, 'MISSING_REF_CODE' as issue
FROM users 
WHERE ref_code IS NULL OR ref_code = '';

-- –ù–∞–π—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç—ã –±–µ–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π)
SELECT u.id, u.username, u.first_name, u.created_at, 'NO_TRANSACTIONS' as issue
FROM users u
LEFT JOIN transactions t ON u.id = t.user_id
WHERE t.user_id IS NULL;

-- –ù–∞–π—Ç–∏ TON Boost –∞–∫–∫–∞—É–Ω—Ç—ã –±–µ–∑ farming data (—Ä–∞–∑—Ä—ã–≤ —Å–≤—è–∑–∏)
SELECT u.id, u.username, u.ton_boost_active, 'TON_BOOST_WITHOUT_DATA' as issue
FROM users u
LEFT JOIN ton_farming_data tfd ON u.id = tfd.user_id
WHERE u.ton_boost_active = true AND tfd.user_id IS NULL;

-- ===== –≠–¢–ê–ü 3: –£–ù–ò–§–ò–ö–ê–¶–ò–Ø (–û–°–¢–û–†–û–ñ–ù–û!) =====

-- 3.1 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ref_code –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –±–µ–∑ –Ω–µ–≥–æ
UPDATE users 
SET ref_code = 'REF_' || EXTRACT(EPOCH FROM NOW())::bigint || '_' || 
              SUBSTRING(MD5(RANDOM()::text), 1, 6)
WHERE ref_code IS NULL OR ref_code = '';

-- 3.2 –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –±–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏
INSERT INTO transactions (user_id, type, currency, amount, status, description, created_at)
SELECT 
    u.id,
    'SYSTEM_INITIALIZATION',
    'UNI',
    0.01,
    'completed',
    '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏',
    NOW()
FROM users u
LEFT JOIN transactions t ON u.id = t.user_id
WHERE t.user_id IS NULL;

-- 3.3 –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TON Boost –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –±–µ–∑ farming data
INSERT INTO ton_farming_data (user_id, farming_balance, farming_rate, boost_active, last_update)
SELECT 
    u.id,
    0,
    0.000000231, -- —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ 2% daily
    u.ton_boost_active,
    NOW()
FROM users u
LEFT JOIN ton_farming_data tfd ON u.id = tfd.user_id
WHERE u.ton_boost_active = true AND tfd.user_id IS NULL;

-- 3.4 –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤ –¥–ª—è –Ω–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
UPDATE users 
SET 
    balance_uni = COALESCE(balance_uni, 0.01),
    balance_ton = COALESCE(balance_ton, 0.01)
WHERE balance_uni IS NULL OR balance_ton IS NULL;

-- ===== –≠–¢–ê–ü 4: –°–û–ó–î–ê–ù–ò–ï –°–ï–°–°–ò–ô –î–õ–Ø –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò =====

-- –°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å telegram_id –Ω–æ –±–µ–∑ —Å–µ—Å—Å–∏–π
INSERT INTO user_sessions (user_id, session_token, expires_at, created_at)
SELECT 
    u.id,
    'unif_' || u.id || '_' || EXTRACT(EPOCH FROM NOW())::bigint,
    NOW() + INTERVAL '30 days',
    NOW()
FROM users u
LEFT JOIN user_sessions us ON u.id = us.user_id
WHERE u.telegram_id IS NOT NULL 
    AND u.telegram_id != 0 
    AND us.user_id IS NULL;

-- ===== –≠–¢–ê–ü 5: –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø –†–ï–ó–£–õ–¨–¢–ê–¢–û–í =====

-- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏
SELECT 
    COUNT(*) as total_users,
    COUNT(CASE WHEN telegram_id IS NOT NULL AND telegram_id != 0 THEN 1 END) as users_with_telegram_id,
    COUNT(CASE WHEN ref_code IS NOT NULL AND ref_code != '' THEN 1 END) as users_with_ref_code,
    COUNT(CASE WHEN balance_uni IS NOT NULL AND balance_uni != 0 THEN 1 END) as users_with_uni_balance,
    COUNT(CASE WHEN balance_ton IS NOT NULL AND balance_ton != 0 THEN 1 END) as users_with_ton_balance
FROM users;

-- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
SELECT 
    COUNT(DISTINCT user_id) as users_with_transactions,
    COUNT(*) as total_transactions
FROM transactions;

-- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å TON Boost –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å
SELECT 
    COUNT(CASE WHEN u.ton_boost_active = true THEN 1 END) as ton_boost_active_users,
    COUNT(CASE WHEN u.ton_boost_active = true AND tfd.user_id IS NOT NULL THEN 1 END) as ton_boost_with_data
FROM users u
LEFT JOIN ton_farming_data tfd ON u.id = tfd.user_id;

-- ===== –≠–¢–ê–ü 6: –ú–û–ù–ò–¢–û–†–ò–ù–ì –ó–î–û–†–û–í–¨–Ø =====

-- –°–æ–∑–¥–∞—Ç—å view –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–¥–æ—Ä–æ–≤—å—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤
CREATE OR REPLACE VIEW account_health_monitor AS
SELECT 
    u.id,
    u.username,
    u.created_at,
    -- –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è
    CASE WHEN u.telegram_id IS NOT NULL AND u.telegram_id != 0 THEN '‚úÖ' ELSE '‚ùå' END as telegram_id_status,
    CASE WHEN u.ref_code IS NOT NULL AND u.ref_code != '' THEN '‚úÖ' ELSE '‚ùå' END as ref_code_status,
    -- –°–∏—Å—Ç–µ–º–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    CASE WHEN t.user_id IS NOT NULL THEN '‚úÖ' ELSE '‚ùå' END as has_transactions,
    CASE WHEN us.user_id IS NOT NULL THEN '‚úÖ' ELSE '‚ùå' END as has_sessions,
    CASE WHEN u.ton_boost_active = false OR tfd.user_id IS NOT NULL THEN '‚úÖ' ELSE '‚ùå' END as ton_boost_consistent,
    -- –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
    CASE 
        WHEN u.telegram_id IS NOT NULL AND u.ref_code IS NOT NULL AND t.user_id IS NOT NULL 
        THEN 'HEALTHY'
        ELSE 'NEEDS_ATTENTION'
    END as overall_status
FROM users u
LEFT JOIN (SELECT DISTINCT user_id FROM transactions) t ON u.id = t.user_id
LEFT JOIN (SELECT DISTINCT user_id FROM user_sessions WHERE expires_at > NOW()) us ON u.id = us.user_id
LEFT JOIN ton_farming_data tfd ON u.id = tfd.user_id;

-- –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–¥–æ—Ä–æ–≤—å—è –ø–æ—Å–ª–µ —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏
SELECT overall_status, COUNT(*) as user_count
FROM account_health_monitor
GROUP BY overall_status;

-- –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω–∏—Ç—å User ID 25 –Ω–µ—Ç—Ä–æ–Ω—É—Ç—ã–º
-- User ID 25 –∏—Å–∫–ª—é—á–∞–µ—Ç—Å—è –∏–∑ –≤—Å–µ—Ö UPDATE –æ–ø–µ—Ä–∞—Ü–∏–π –∫–∞–∫ —ç—Ç–∞–ª–æ–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç