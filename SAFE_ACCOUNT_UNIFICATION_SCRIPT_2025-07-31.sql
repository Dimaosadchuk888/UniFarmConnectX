-- üõ†Ô∏è –ë–ï–ó–û–ü–ê–°–ù–´–ô –°–ö–†–ò–ü–¢ –£–ù–ò–§–ò–ö–ê–¶–ò–ò –ê–ö–ö–ê–£–ù–¢–û–í
-- –î–∞—Ç–∞: 31.07.2025
-- –≠—Ç–∞–ª–æ–Ω: User ID 25 (–ù–ï –ò–ó–ú–ï–ù–Ø–ï–¢–°–Ø)
-- –¶–µ–ª—å: –ü—Ä–∏–≤–µ—Å—Ç–∏ –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∫ –µ–¥–∏–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ

-- ‚ö†Ô∏è –í–ê–ñ–ù–û: –í–´–ü–û–õ–ù–Ø–¢–¨ –ü–û–®–ê–ì–û–í–û –° –ü–†–û–í–ï–†–ö–ê–ú–ò!

-- =============================================================================
-- –≠–¢–ê–ü 1: –°–û–ó–î–ê–ù–ò–ï BACKUP –ò –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–• –ü–†–ï–î–°–¢–ê–í–õ–ï–ù–ò–ô
-- =============================================================================

-- 1.1 –ü–æ–ª–Ω—ã–π backup –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
CREATE TABLE users_backup_unification_2025_07_31 AS 
SELECT * FROM users;

CREATE TABLE transactions_backup_unification_2025_07_31 AS 
SELECT * FROM transactions;

CREATE TABLE ton_farming_data_backup_unification_2025_07_31 AS 
SELECT * FROM ton_farming_data;

-- 1.2 –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
CREATE OR REPLACE VIEW account_health_status AS
SELECT 
    u.id,
    u.username,
    u.telegram_id,
    u.created_at,
    
    -- –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è
    CASE WHEN u.telegram_id IS NULL THEN 'CRITICAL' ELSE 'OK' END as telegram_id_status,
    CASE WHEN u.ref_code IS NULL OR u.ref_code = '' THEN 'CRITICAL' ELSE 'OK' END as ref_code_status,
    CASE WHEN u.username IS NULL THEN 'WARNING' ELSE 'OK' END as username_status,
    CASE WHEN u.first_name IS NULL THEN 'WARNING' ELSE 'OK' END as firstname_status,
    
    -- –ë–∞–ª–∞–Ω—Å—ã
    CASE WHEN u.balance_uni IS NULL OR u.balance_uni::numeric = 0 THEN 'WARNING' ELSE 'OK' END as uni_balance_status,
    CASE WHEN u.balance_ton IS NULL OR u.balance_ton::numeric = 0 THEN 'WARNING' ELSE 'OK' END as ton_balance_status,
    
    -- –°–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    CASE WHEN trans.user_id IS NULL THEN 'MISSING' ELSE 'OK' END as transactions_status,
    CASE WHEN u.ton_boost_active = true AND tfd.user_id IS NULL THEN 'INCONSISTENT' ELSE 'OK' END as farming_data_status,
    
    -- –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∞–∫–∫–∞—É–Ω—Ç–∞
    CASE 
        WHEN u.telegram_id IS NULL THEN 'BROKEN'
        WHEN u.ref_code IS NULL OR u.ref_code = '' THEN 'BROKEN'
        WHEN trans.user_id IS NULL THEN 'ISSUES'
        WHEN u.ton_boost_active = true AND tfd.user_id IS NULL THEN 'ISSUES'
        WHEN u.balance_uni IS NULL OR u.balance_uni::numeric = 0 THEN 'NEEDS_ATTENTION'
        WHEN u.balance_ton IS NULL OR u.balance_ton::numeric = 0 THEN 'NEEDS_ATTENTION'
        ELSE 'HEALTHY'
    END as overall_health,
    
    -- –≠—Ç–∞–ª–æ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    CASE WHEN u.id = 25 THEN 'REFERENCE_USER' ELSE 'REGULAR_USER' END as user_type
    
FROM users u
LEFT JOIN (SELECT DISTINCT user_id FROM transactions) trans ON u.id = trans.user_id
LEFT JOIN ton_farming_data tfd ON u.id = tfd.user_id;

-- 1.3 –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ –º–∏–≥—Ä–∞—Ü–∏–∏
SELECT '–°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–û –£–ù–ò–§–ò–ö–ê–¶–ò–ò:' as info;
SELECT 
    overall_health, 
    COUNT(*) as count, 
    ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as percentage
FROM account_health_status 
GROUP BY overall_health 
ORDER BY count DESC;

-- 1.4 –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
SELECT '–ü–†–û–ë–õ–ï–ú–ù–´–ï –ê–ö–ö–ê–£–ù–¢–´:' as info;
SELECT id, username, overall_health, telegram_id_status, ref_code_status, 
       transactions_status, farming_data_status, created_at
FROM account_health_status 
WHERE overall_health IN ('BROKEN', 'ISSUES', 'NEEDS_ATTENTION')
AND user_type != 'REFERENCE_USER'
ORDER BY 
    CASE overall_health 
        WHEN 'BROKEN' THEN 1 
        WHEN 'ISSUES' THEN 2 
        WHEN 'NEEDS_ATTENTION' THEN 3 
    END, 
    id;

-- =============================================================================
-- –≠–¢–ê–ü 2: –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –£–ù–ò–§–ò–ö–ê–¶–ò–Ø (–ù–ï –ó–ê–¢–†–ê–ì–ò–í–ê–ï–¢ USER ID 25)
-- =============================================================================

BEGIN;

-- 2.1 –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–µ–π ref_code
UPDATE users 
SET ref_code = 'REF' || LPAD(id::text, 6, '0')
WHERE (ref_code IS NULL OR ref_code = '') 
AND id != 25 -- –ù–ï –¢–†–û–ì–ê–ï–ú –≠–¢–ê–õ–û–ù
AND telegram_id IS NOT NULL; -- –¢–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å telegram_id

SELECT 'ref_code –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:' as info, COUNT(*) as count
FROM users 
WHERE ref_code LIKE 'REF%' AND LENGTH(ref_code) = 9;

-- 2.2 –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤
UPDATE users 
SET balance_uni = COALESCE(balance_uni, '0.01'),
    balance_ton = COALESCE(balance_ton, '0.01')
WHERE (balance_uni IS NULL OR balance_ton IS NULL)
AND id != 25 -- –ù–ï –¢–†–û–ì–ê–ï–ú –≠–¢–ê–õ–û–ù
AND telegram_id IS NOT NULL;

SELECT '–ë–∞–ª–∞–Ω—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:' as info, COUNT(*) as count
FROM users 
WHERE balance_uni::numeric >= 0.01 AND balance_ton::numeric >= 0.01;

-- 2.3 –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏
INSERT INTO transactions (
    user_id, 
    transaction_type, 
    currency, 
    amount, 
    status, 
    description, 
    created_at,
    data
)
SELECT 
    u.id,
    'SYSTEM_INITIALIZATION',
    'UNI',
    '0.01',
    'confirmed',
    'System initialization - account unification',
    NOW(),
    '{"migration": "unification_2025_07_31", "reason": "missing_transactions", "reference_user": 25}'
FROM users u
LEFT JOIN transactions t ON u.id = t.user_id
WHERE t.user_id IS NULL
AND u.id != 25 -- –ù–ï –¢–†–û–ì–ê–ï–ú –≠–¢–ê–õ–û–ù
AND u.telegram_id IS NOT NULL;

SELECT '–ë–∞–∑–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:' as info, COUNT(*) as count
FROM transactions 
WHERE transaction_type = 'SYSTEM_INITIALIZATION' 
AND description LIKE '%unification%';

-- 2.4 –°–æ–∑–¥–∞–Ω–∏–µ ton_farming_data –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–∫—Ç–∏–≤–Ω—ã–º TON Boost
INSERT INTO ton_farming_data (
    user_id, 
    farming_balance, 
    farming_rate, 
    boost_active, 
    last_update,
    created_at
)
SELECT 
    u.id,
    0.0,
    0.0,
    false,
    NOW(),
    NOW()
FROM users u
LEFT JOIN ton_farming_data tfd ON u.id = tfd.user_id
WHERE u.ton_boost_active = true 
AND tfd.user_id IS NULL
AND u.id != 25 -- –ù–ï –¢–†–û–ì–ê–ï–ú –≠–¢–ê–õ–û–ù
AND u.telegram_id IS NOT NULL;

SELECT 'ton_farming_data —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:' as info, COUNT(*) as count
FROM ton_farming_data tfd
JOIN users u ON tfd.user_id = u.id
WHERE tfd.created_at >= CURRENT_DATE;

-- 2.5 –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è TON Boost —Å—Ç–∞—Ç—É—Å–æ–≤
UPDATE users 
SET ton_boost_active = false,
    ton_boost_package = NULL,
    ton_boost_rate = NULL
WHERE id IN (
    SELECT u.id 
    FROM users u 
    LEFT JOIN ton_farming_data tfd ON u.id = tfd.user_id 
    WHERE u.ton_boost_active = true 
    AND (tfd.user_id IS NULL OR tfd.boost_active = false)
)
AND id != 25 -- –ù–ï –¢–†–û–ì–ê–ï–ú –≠–¢–ê–õ–û–ù
AND telegram_id IS NOT NULL;

-- =============================================================================
-- –≠–¢–ê–ü 3: –ü–†–û–í–ï–†–ö–ò –ü–û–°–õ–ï –£–ù–ò–§–ò–ö–ê–¶–ò–ò
-- =============================================================================

-- 3.1 –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏
SELECT '–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–°–õ–ï –£–ù–ò–§–ò–ö–ê–¶–ò–ò:' as info;
SELECT 
    overall_health, 
    COUNT(*) as count, 
    ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as percentage
FROM account_health_status 
GROUP BY overall_health 
ORDER BY count DESC;

-- 3.2 –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
SELECT '–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ê–ö–ö–ê–£–ù–¢–´ –ü–û–°–õ–ï –ú–ò–ì–†–ê–¶–ò–ò:' as info;
SELECT COUNT(*) as broken_accounts_count
FROM account_health_status 
WHERE overall_health = 'BROKEN'
AND user_type != 'REFERENCE_USER';

-- 3.3 –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
SELECT '–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ë–ï–ó –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:' as info;
SELECT COUNT(*) as users_without_transactions
FROM users u 
LEFT JOIN transactions t ON u.id = t.user_id 
WHERE t.user_id IS NULL
AND u.id != 25
AND u.telegram_id IS NOT NULL;

-- 3.4 –ü—Ä–æ–≤–µ—Ä–∫–∞ TON Boost –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π
SELECT 'TON BOOST –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø:' as info;
SELECT COUNT(*) as boost_inconsistencies
FROM users u 
LEFT JOIN ton_farming_data tfd ON u.id = tfd.user_id 
WHERE u.ton_boost_active != COALESCE(tfd.boost_active, false)
AND u.id != 25;

-- 3.5 –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç—Ç–∞–ª–æ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
SELECT '–ü–†–û–í–ï–†–ö–ê –≠–¢–ê–õ–û–ù–ê (User ID 25):' as info;
SELECT overall_health, user_type
FROM account_health_status 
WHERE id = 25;

-- =============================================================================
-- –≠–¢–ê–ü 4: –§–ò–ù–ê–õ–ò–ó–ê–¶–ò–Ø
-- =============================================================================

-- 4.1 –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ:
-- COMMIT;

-- 4.2 –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã:
-- ROLLBACK;

-- 4.3 –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ–± —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏
CREATE TABLE unification_report_2025_07_31 AS
SELECT 
    'ACCOUNT_UNIFICATION' as migration_type,
    NOW() as completed_at,
    (SELECT COUNT(*) FROM users WHERE id != 25) as total_accounts_processed,
    (SELECT COUNT(*) FROM account_health_status WHERE overall_health = 'HEALTHY' AND user_type != 'REFERENCE_USER') as healthy_accounts,
    (SELECT COUNT(*) FROM account_health_status WHERE overall_health = 'BROKEN' AND user_type != 'REFERENCE_USER') as broken_accounts,
    (SELECT COUNT(*) FROM transactions WHERE transaction_type = 'SYSTEM_INITIALIZATION' AND created_at >= CURRENT_DATE) as transactions_created,
    'User ID 25 not modified (reference user)' as notes;

-- =============================================================================
-- –≠–¢–ê–ü 5: –°–ö–†–ò–ü–¢ –û–¢–ö–ê–¢–ê (–í –°–õ–£–ß–ê–ï –ù–ï–û–ë–•–û–î–ò–ú–û–°–¢–ò)
-- =============================================================================

/*
-- –ü–û–õ–ù–´–ô –û–¢–ö–ê–¢ –£–ù–ò–§–ò–ö–ê–¶–ò–ò:

BEGIN;

-- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ users
DROP TABLE IF EXISTS users;
ALTER TABLE users_backup_unification_2025_07_31 RENAME TO users;

-- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ transactions  
DELETE FROM transactions 
WHERE transaction_type = 'SYSTEM_INITIALIZATION' 
AND description LIKE '%unification%';

-- –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö ton_farming_data
DELETE FROM ton_farming_data 
WHERE created_at >= '2025-07-31'::date;

COMMIT;

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–∞—Ç–∞
SELECT '–û–¢–ö–ê–¢ –ó–ê–í–ï–†–®–ï–ù' as status;
*/

-- =============================================================================
-- –ú–û–ù–ò–¢–û–†–ò–ù–ì –ü–û–°–õ–ï –£–ù–ò–§–ò–ö–ê–¶–ò–ò
-- =============================================================================

-- –ó–∞–ø—Ä–æ—Å –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
CREATE OR REPLACE VIEW daily_account_monitoring AS
SELECT 
    id, username, overall_health, created_at,
    telegram_id_status, ref_code_status, transactions_status
FROM account_health_status 
WHERE overall_health IN ('BROKEN', 'ISSUES')
AND user_type != 'REFERENCE_USER'
AND created_at >= CURRENT_DATE - INTERVAL '1 day'
ORDER BY created_at DESC;

SELECT '–°–ö–†–ò–ü–¢ –£–ù–ò–§–ò–ö–ê–¶–ò–ò –ü–û–î–ì–û–¢–û–í–õ–ï–ù' as status;
SELECT '–í–´–ü–û–õ–ù–Ø–¢–¨ –ü–û–®–ê–ì–û–í–û –° –ü–†–û–í–ï–†–ö–ê–ú–ò!' as warning;