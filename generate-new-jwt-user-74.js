import jwt from 'jsonwebtoken';
import fs from 'fs';

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ —Å–µ–∫—Ä–µ—Ç —á—Ç–æ –∏ —Å–µ—Ä–≤–µ—Ä
const JWT_SECRET = 'your-super-secret-jwt-key-minimum-32-characters';

// –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74 –∏–∑ –±–∞–∑—ã
const payload = {
  userId: 74,
  user_id: 74, // –¥—É–±–ª–∏—Ä—É–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  username: 'test_user_1752129840905',
  telegram_id: 999489,
  ref_code: 'TEST_1752129840905_dokxv0'
};

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω —Å 7-–¥–Ω–µ–≤–Ω—ã–º —Å—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏—è
const token = jwt.sign(payload, JWT_SECRET, { expiresIn: '7d' });

console.log('–ù–æ–≤—ã–π JWT —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74:');
console.log(token);
console.log('\n–î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π payload:');
console.log(jwt.decode(token));

// –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
const html = `<!DOCTYPE html>
<html>
<head>
    <title>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            background: #f0f0f0;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        button {
            background: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin: 10px 5px;
        }
        button:hover {
            background: #45a049;
        }
        .token {
            background: #f5f5f5;
            padding: 10px;
            word-break: break-all;
            border-radius: 5px;
            margin: 10px 0;
        }
        .success {
            color: green;
            font-weight: bold;
        }
        .error {
            color: red;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üîê –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74</h1>
        
        <h2>–ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω:</h2>
        <div class="token">${token}</div>
        
        <h2>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–µ:</h2>
        <pre>${JSON.stringify(jwt.decode(token), null, 2)}</pre>
        
        <button onclick="updateToken()">–û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ –±—Ä–∞—É–∑–µ—Ä–µ</button>
        <button onclick="clearAndUpdate()">–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë –∏ –æ–±–Ω–æ–≤–∏—Ç—å</button>
        <button onclick="testBalance()">–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API –±–∞–ª–∞–Ω—Å–∞</button>
        
        <div id="status"></div>
    </div>

    <script>
        const newToken = '${token}';
        
        function updateToken() {
            localStorage.setItem('unifarm_jwt_token', newToken);
            document.getElementById('status').innerHTML = '<p class="success">‚úì –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω!</p>';
            setTimeout(() => location.reload(), 1000);
        }
        
        function clearAndUpdate() {
            // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
            localStorage.clear();
            sessionStorage.clear();
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
            localStorage.setItem('unifarm_jwt_token', newToken);
            
            document.getElementById('status').innerHTML = '<p class="success">‚úì –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã –∏ —Ç–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω!</p>';
            setTimeout(() => location.reload(), 1500);
        }
        
        async function testBalance() {
            try {
                const response = await fetch('/api/v2/wallet/balance?user_id=74', {
                    headers: {
                        'Authorization': 'Bearer ' + newToken
                    }
                });
                
                const data = await response.json();
                document.getElementById('status').innerHTML = '<h3>–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ –±–∞–ª–∞–Ω—Å–∞:</h3><pre>' + 
                    JSON.stringify(data, null, 2) + '</pre>';
            } catch (error) {
                document.getElementById('status').innerHTML = '<p class="error">–û—à–∏–±–∫–∞: ' + error.message + '</p>';
            }
        }
    </script>
</body>
</html>`;

fs.writeFileSync('update-jwt-user-74.html', html);
console.log('\n–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª update-jwt-user-74.html –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');