import { TonFarmingRepository } from './modules/boost/TonFarmingRepository.js';
import { BalanceManager } from './core/BalanceManager.js';
import { UnifiedTransactionService } from './core/TransactionService.js';
import { supabase } from './core/supabase.js';

async function testTonBoostDetailed() {
  console.log('üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ TON Boost\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const tonFarmingRepo = new TonFarmingRepository();
    const activeUsers = await tonFarmingRepo.getActiveBoostUsers();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${activeUsers.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n`);
    
    if (activeUsers.length === 0) return;
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const testUser = activeUsers[0];
    console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', testUser);
    
    // 3. –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å—ã
    const userId = parseInt(testUser.user_id.toString());
    const { data: userBalance } = await supabase
      .from('users')
      .select('balance_ton, balance_uni')
      .eq('id', userId)
      .single();
      
    console.log('\n–ë–∞–ª–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userBalance);
    
    // 4. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–æ—Ö–æ–¥
    const userDeposit = parseFloat(userBalance?.balance_ton || '0');
    const dailyRate = 0.01;
    const dailyIncome = userDeposit * dailyRate;
    const fiveMinuteIncome = dailyIncome / 288;
    
    console.log('\n–†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–∞:');
    console.log(`- –î–µ–ø–æ–∑–∏—Ç: ${userDeposit} TON`);
    console.log(`- –î–Ω–µ–≤–Ω–∞—è —Å—Ç–∞–≤–∫–∞: ${dailyRate * 100}%`);
    console.log(`- –î–æ—Ö–æ–¥ –∑–∞ 5 –º–∏–Ω—É—Ç: ${fiveMinuteIncome.toFixed(6)} TON`);
    
    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    console.log('\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º BalanceManager.addBalance...');
    try {
      const balanceResult = await BalanceManager.addBalance(
        userId,
        0,
        fiveMinuteIncome,
        'TON Boost test'
      );
      console.log('‚úÖ BalanceManager —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', balanceResult);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ BalanceManager:', error);
    }
    
    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('\n6. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
    try {
      const transactionService = UnifiedTransactionService.getInstance();
      const transactionResult = await transactionService.createTransaction({
        user_id: userId,
        type: 'FARMING_REWARD',
        amount_uni: 0,
        amount_ton: fiveMinuteIncome,
        currency: 'TON',
        status: 'completed',
        description: `TON Boost test: ${fiveMinuteIncome.toFixed(6)} TON`,
        metadata: {
          test: true,
          original_type: 'TON_BOOST_INCOME'
        }
      });
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:', transactionResult);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error);
    }
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

testTonBoostDetailed();