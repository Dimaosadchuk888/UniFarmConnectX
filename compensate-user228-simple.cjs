/**
 * –ö–û–ú–ü–ï–ù–°–ê–¶–ò–Ø USER 228 - –ü—Ä–æ—Å—Ç–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
 * –ü—Ä—è–º–æ–µ SQL —á–µ—Ä–µ–∑ psql –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 */

const { exec } = require('child_process');

function executeSQL(query) {
  return new Promise((resolve, reject) => {
    const command = `psql "${process.env.DATABASE_URL}" -c "${query}"`;
    exec(command, (error, stdout, stderr) => {
      if (error) {
        reject(error);
      } else {
        resolve(stdout);
      }
    });
  });
}

async function compensateUser228() {
  console.log('üí∞ –ö–û–ú–ü–ï–ù–°–ê–¶–ò–Ø USER 228 - –ü–û–¢–ï–†–Ø–ù–ù–´–ô TON –î–ï–ü–û–ó–ò–¢');
  console.log('=' + '='.repeat(50));
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º User 228
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const userQuery = `SELECT id, telegram_id, username, balance_ton FROM users WHERE id = 228;`;
    const userResult = await executeSQL(userQuery);
    
    if (!userResult.includes('228')) {
      console.log('‚ùå User 228 –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log('üë§ User 228 –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏
    const compensationCheckQuery = `SELECT * FROM transactions WHERE user_id = 228 AND description ILIKE '%–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è%d1077cd0%';`;
    const existingCompensation = await executeSQL(compensationCheckQuery);
    
    if (existingCompensation.includes('228')) {
      console.log('‚ö†Ô∏è –ö–û–ú–ü–ï–ù–°–ê–¶–ò–Ø –£–ñ–ï –í–´–ü–õ–ê–ß–ï–ù–ê - –Ω–∞–π–¥–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è');
      return;
    }
    
    console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã - –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é');
    
    // 1. –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–æ–Ω–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
    const transactionQuery = `
      INSERT INTO transactions (user_id, type, amount, currency, description, metadata, created_at) 
      VALUES (
        228, 
        'FARMING_REWARD', 
        '1.0', 
        'TON', 
        '–ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –ø–æ—Ç–µ—Ä—è–Ω–Ω–æ–≥–æ TON –¥–µ–ø–æ–∑–∏—Ç–∞ d1077cd0 –∏–∑-–∑–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–æ–π —Å—Ö–µ–º—ã User 249',
        '{"compensation": true, "original_transaction": "d1077cd0", "fraud_case": "User_249_scheme", "authorized_by": "system_admin"}',
        NOW()
      ) RETURNING id, created_at;
    `;
    
    const transactionResult = await executeSQL(transactionQuery);
    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:', transactionResult.trim());
    
    // 2. –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    console.log('üí∞ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞...');
    const balanceQuery = `
      UPDATE users 
      SET balance_ton = (CAST(balance_ton AS DECIMAL) + 1.0)::TEXT 
      WHERE id = 228 
      RETURNING balance_ton;
    `;
    
    const balanceResult = await executeSQL(balanceQuery);
    console.log('‚úÖ –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω:', balanceResult.trim());
    
    // 3. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...');
    const finalCheckQuery = `
      SELECT 
        u.id, 
        u.balance_ton, 
        t.id as transaction_id, 
        t.amount, 
        t.created_at 
      FROM users u 
      LEFT JOIN transactions t ON u.id = t.user_id 
      WHERE u.id = 228 
        AND t.description ILIKE '%–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è%d1077cd0%' 
      ORDER BY t.created_at DESC 
      LIMIT 1;
    `;
    
    const finalResult = await executeSQL(finalCheckQuery);
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:', finalResult.trim());
    
    console.log('\nüéâ –ö–û–ú–ü–ï–ù–°–ê–¶–ò–Ø –£–°–ü–ï–®–ù–û –í–´–ü–õ–ê–ß–ï–ù–ê!');
    console.log('üìã –ò–¢–û–ì–ò:');
    console.log('   ‚úÖ User 228 –ø–æ–ª—É—á–∏–ª 1.0 TON –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é');
    console.log('   ‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ');
    console.log('   ‚úÖ –ë–∞–ª–∞–Ω—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
    console.log('   ‚úÖ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    
  } catch (error) {
    console.log('‚ùå –û–®–ò–ë–ö–ê:', error.message);
    console.log('üõë –ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –ù–ï –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
  }
}

if (!process.env.DATABASE_URL) {
  console.log('‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

console.log('üöÄ –ó–ê–ü–£–°–ö –ö–û–ú–ü–ï–ù–°–ê–¶–ò–ò –ß–ï–†–ï–ó 3 –°–ï–ö–£–ù–î–´...');
console.log('üí° –î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');
console.log('üìã –û—Å–Ω–æ–≤–∞–Ω–∏–µ: –ü–æ—Ç–µ—Ä—è–Ω–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è d1077cd0 –∏–∑-–∑–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞ User 249');

setTimeout(compensateUser228, 3000);