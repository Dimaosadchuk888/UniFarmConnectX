/**
 * PRODUCTION –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê USER #25 TON –î–ï–ü–û–ó–ò–¢
 * –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô –í –ö–û–î - —Ç–æ–ª—å–∫–æ –∞–Ω–∞–ª–∏–∑ Production environment
 */

const { createClient } = require('@supabase/supabase-js');

console.log('\nüéØ PRODUCTION –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê USER #25');
console.log('='.repeat(60));
console.log('User ID: 25');
console.log('–†–µ—Ñ-–∫–æ–¥: REF_1750079004411_nddfp2');  
console.log('TON –¥–µ–ø–æ–∑–∏—Ç: 0.1 TON');
console.log('Hash: b30da7471672b8fc154baca674b2cc9c0829ead2a443bfa901f7b676ced2c70d');
console.log('='.repeat(60));

async function diagnoseProductionUser25() {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Production
    console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê PRODUCTION –û–ö–†–£–ñ–ï–ù–ò–Ø');
    const hasSupabaseUrl = !!process.env.SUPABASE_URL;
    const hasSupabaseKey = !!process.env.SUPABASE_KEY;
    const hasDatabaseUrl = !!process.env.DATABASE_URL;
    
    console.log('SUPABASE_URL:', hasSupabaseUrl ? '‚úÖ SET' : '‚ùå NOT SET');
    console.log('SUPABASE_KEY:', hasSupabaseKey ? '‚úÖ SET' : '‚ùå NOT SET');
    console.log('DATABASE_URL:', hasDatabaseUrl ? '‚úÖ SET' : '‚ùå NOT SET');

    if (!hasSupabaseUrl || !hasSupabaseKey) {
      console.log('‚ùå Production –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - –Ω–µ—Ç Supabase credentials');
      console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞: –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤ Preview –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –≤–º–µ—Å—Ç–æ Production');
      return;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase –∫–ª–∏–µ–Ω—Ç–∞
    console.log('\n2Ô∏è‚É£ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö PRODUCTION –ë–î');
    const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);
    console.log('‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω');

    // –ü–æ–∏—Å–∫ User #25 –≤ Production –ë–î
    console.log('\n3Ô∏è‚É£ –ü–û–ò–°–ö USER #25 –í PRODUCTION –ë–î');
    const { data: users, error: userError } = await supabase
      .from('users')
      .select('id, telegram_id, username, ref_code, balance_ton, balance_uni, created_at')
      .or(`id.eq.25,ref_code.eq.REF_1750079004411_nddfp2`)
      .limit(5);

    if (userError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
      return;
    }

    console.log('–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', users?.length || 0);
    if (users && users.length > 0) {
      users.forEach(user => {
        console.log(`üìã User ID ${user.id}:`);
        console.log(`   Telegram ID: ${user.telegram_id}`);
        console.log(`   Username: ${user.username}`);
        console.log(`   Ref Code: ${user.ref_code}`);
        console.log(`   TON Balance: ${user.balance_ton}`);
        console.log(`   UNI Balance: ${user.balance_uni}`);
        console.log(`   Created: ${user.created_at}`);
      });
    } else {
      console.log('‚ö†Ô∏è User #25 —Å —Ä–µ—Ñ-–∫–æ–¥–æ–º REF_1750079004411_nddfp2 –ù–ï –ù–ê–ô–î–ï–ù –≤ Production –ë–î');
    }

    // –ü–æ–∏—Å–∫ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è User #25
    console.log('\n4Ô∏è‚É£ –ü–û–ò–°–ö TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ô USER #25');
    const { data: transactions, error: txError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 25)
      .ilike('description', '%TON%')
      .order('created_at', { ascending: false })
      .limit(10);

    if (txError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError);
    } else {
      console.log('–ù–∞–π–¥–µ–Ω–æ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', transactions?.length || 0);
      if (transactions && transactions.length > 0) {
        transactions.forEach((tx, index) => {
          console.log(`üí≥ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${index + 1}:`);
          console.log(`   ID: ${tx.id}`);
          console.log(`   Type: ${tx.type}`);
          console.log(`   Amount: ${tx.amount}`);
          console.log(`   Description: ${tx.description}`);
          console.log(`   Created: ${tx.created_at}`);
        });
      }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ hash —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('\n5Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –û–¢–°–£–¢–°–¢–í–ò–Ø –î–ê–ù–ù–´–•');
    console.log('üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log(`   User #25 –Ω–∞–π–¥–µ–Ω: ${users && users.some(u => u.id === 25) ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`   –†–µ—Ñ-–∫–æ–¥ –Ω–∞–π–¥–µ–Ω: ${users && users.some(u => u.ref_code === 'REF_1750079004411_nddfp2') ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`   TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${transactions?.length || 0}`);

    console.log('\n6Ô∏è‚É£ –î–ò–ê–ì–ù–û–ó –ü–†–û–ë–õ–ï–ú–´:');
    if (!users || users.length === 0) {
      console.log('üö® –ö–û–†–ù–ï–í–ê–Ø –ü–†–ò–ß–ò–ù–ê: User #25 –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢ –≤ —Ç–µ–∫—É—â–µ–π –ë–î');
      console.log('üîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:');
      console.log('   1. –ê–Ω–∞–ª–∏–∑ –≤–µ–¥–µ—Ç—Å—è –≤ Preview/Development –ë–î –≤–º–µ—Å—Ç–æ Production');
      console.log('   2. User #25 —Å–æ–∑–¥–∞–Ω –≤ –¥—Ä—É–≥–æ–π –ë–î/–æ–∫—Ä—É–∂–µ–Ω–∏–∏');
      console.log('   3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –º–µ–∂–¥—É –ë–î');
      console.log('   4. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Production environment');
    }

    console.log('\n7Ô∏è‚É£ –¶–ï–ü–û–ß–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê:');
    console.log('‚ùå TON –¥–µ–ø–æ–∑–∏—Ç ‚Üí BalanceManager.addBalance() ‚Üí –ù–ï –ù–ê–ô–î–ï–ù User #25');
    console.log('‚ùå WebSocket push ‚Üí –ù–ï –†–ê–ë–û–¢–ê–ï–¢ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ User');
    console.log('‚ùå balanceService.refreshBalance() ‚Üí 404 Error –¥–ª—è User #25');
    console.log('‚ùå dispatch(SET_BALANCE) ‚Üí –ù–ï –°–†–ê–ë–ê–¢–´–í–ê–ï–¢');
    console.log('‚ùå UI –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ‚Üí –ù–ï –ü–†–û–ò–°–•–û–î–ò–¢');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
    console.log('\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å Production environment –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö');
    console.log('2. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –∞–Ω–∞–ª–∏–∑ –≤–µ–¥–µ—Ç—Å—è –≤ Production –ë–î, –Ω–µ Preview');
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å SUPABASE_URL –∏ SUPABASE_KEY –¥–ª—è Production');
  }
}

diagnoseProductionUser25();