#!/usr/bin/env npx tsx

import { createClient } from '@supabase/supabase-js';
import 'dotenv/config';

const supabase = createClient(
  process.env.VITE_SUPABASE_URL || process.env.SUPABASE_URL!,
  process.env.VITE_SUPABASE_ANON_KEY || process.env.SUPABASE_ANON_KEY || process.env.SUPABASE_KEY!
);

console.log('\nüß™ –¢–ï–°–¢: DEPOSIT –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –ò WEBSOCKET –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø');
console.log('='.repeat(65));

async function testDepositWebSocketFix() {
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–£–©–ï–°–¢–í–£–Æ–©–ò–• DEPOSIT –¢–†–ê–ù–ó–ê–ö–¶–ò–ô');
    console.log('-'.repeat(50));
    
    const { data: existingDeposits, error: depositError } = await supabase
      .from('transactions')
      .select('id, user_id, amount_ton, description, created_at')
      .eq('type', 'DEPOSIT')
      .gt('amount_ton', 0.05)
      .order('created_at', { ascending: false })
      .limit(5);

    if (!depositError && existingDeposits && existingDeposits.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${existingDeposits.length} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:`);
      existingDeposits.forEach(tx => {
        console.log(`   ID: ${tx.id}, User: ${tx.user_id}, Amount: ${tx.amount_ton} TON`);
        console.log(`   –í—Ä–µ–º—è: ${new Date(tx.created_at).toLocaleString('ru-RU')}`);
      });
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
      const testTransaction = existingDeposits[0];
      console.log(`\nüîç –¢–ï–°–¢–ò–†–£–ï–ú –¢–†–ê–ù–ó–ê–ö–¶–ò–Æ: ID ${testTransaction.id}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ
      const { data: userBefore, error: userError } = await supabase
        .from('users')
        .select('id, balance_ton, telegram_username')
        .eq('id', testTransaction.user_id)
        .single();
        
      if (!userError && userBefore) {
        console.log(`   üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${userBefore.telegram_username}`);
        console.log(`   üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${userBefore.balance_ton} TON`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥—Ä—É–≥–∏–µ DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const { data: userDeposits, error: userDepositError } = await supabase
          .from('transactions')
          .select('id, amount_ton, created_at')
          .eq('user_id', testTransaction.user_id)
          .eq('type', 'DEPOSIT')
          .order('created_at', { ascending: false })
          .limit(10);
          
        if (!userDepositError && userDeposits) {
          const totalDeposits = userDeposits.reduce((sum, tx) => sum + parseFloat(tx.amount_ton || '0'), 0);
          console.log(`   üì• –í—Å–µ–≥–æ DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${userDeposits.length}`);
          console.log(`   üíé –û–±—â–∞—è —Å—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${totalDeposits.toFixed(3)} TON`);
          
          // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –±–∞–ª–∞–Ω—Å–æ–º
          const balanceDiff = parseFloat(userBefore.balance_ton || '0') - totalDeposits;
          console.log(`   ‚öñÔ∏è  –†–∞–∑–Ω–∏—Ü–∞ –±–∞–ª–∞–Ω—Å vs –¥–µ–ø–æ–∑–∏—Ç—ã: ${balanceDiff.toFixed(3)} TON`);
          
          if (Math.abs(balanceDiff) < 0.001) {
            console.log(`   ‚úÖ –ë–ê–õ–ê–ù–° –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –î–ï–ü–û–ó–ò–¢–ê–ú - WebSocket —Ä–∞–±–æ—Ç–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
          } else {
            console.log(`   ‚ö†Ô∏è  –ë–ê–õ–ê–ù–° –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ - –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å WebSocket`);
          }
        }
      }
      
    } else {
      console.log('‚ùå DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    console.log('\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ü–†–ò–ú–ï–ù–ï–ù–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø');
    console.log('-'.repeat(50));
    
    console.log('üìã –í–ù–ï–°–ï–ù–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø:');
    console.log('   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ç–∏–ø DEPOSIT –≤ TransactionsTransactionType');
    console.log('   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –º–∞–ø–ø–∏–Ω–≥ "DEPOSIT": "DEPOSIT" –≤ TRANSACTION_TYPE_MAPPING');
    console.log('   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω DEPOSIT –≤ shouldUpdateBalance() —Å–ø–∏—Å–æ–∫');
    console.log('   ‚úÖ LSP –æ—à–∏–±–∫–∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã');
    
    console.log('\nüí° –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log('   üîπ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ç–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–ª—è—é—Ç –±–∞–ª–∞–Ω—Å');
    console.log('   üîπ WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –¥–ª—è DEPOSIT —Ç–∏–ø–∞');
    console.log('   üîπ –ù–æ–≤—ã–µ TON –¥–µ–ø–æ–∑–∏—Ç—ã –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–∞–∫ FARMING_REWARD');
    console.log('   üîπ –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ UnifiedTransactionService
    console.log('\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê UNIFIED TRANSACTION SERVICE');
    console.log('-'.repeat(50));
    
    console.log('üìä –¢–ï–ö–£–©–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:');
    console.log('   TON_DEPOSIT ‚Üí FARMING_REWARD (–∫–∞–∫ –±—ã–ª–æ)');
    console.log('   DEPOSIT ‚Üí DEPOSIT (–Ω–æ–≤—ã–π –º–∞–ø–ø–∏–Ω–≥)');
    console.log('   shouldUpdateBalance(): –≤–∫–ª—é—á–∞–µ—Ç –æ–±–∞ —Ç–∏–ø–∞');
    
    console.log('\nüîß –ü–†–ï–î–ü–û–õ–ê–ì–ê–ï–ú–´–ô FLOW:');
    console.log('   1. –ù–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç: TON_DEPOSIT ‚Üí FARMING_REWARD ‚Üí WebSocket ‚úÖ');
    console.log('   2. –°—Ç–∞—Ä—ã–π –¥–µ–ø–æ–∑–∏—Ç: DEPOSIT ‚Üí DEPOSIT ‚Üí WebSocket ‚úÖ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)');
    console.log('   3. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ: DEPOSIT ‚Üí DEPOSIT ‚Üí WebSocket ‚úÖ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)');

    // 4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
    console.log('\n4Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –î–ê–õ–¨–ù–ï–ô–®–ï–ú–£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ');
    console.log('-'.repeat(50));
    
    console.log('üß™ –î–õ–Ø –ü–û–õ–ù–û–ô –ü–†–û–í–ï–†–ö–ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:');
    console.log('   1. –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –ë–î');
    console.log('   2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –±–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ BalanceManager');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è');
    console.log('   4. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ frontend –ø–æ–ª—É—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞');
    
    console.log('\nüéØ –ö–†–ò–¢–ï–†–ò–ò –£–°–ü–ï–•–ê:');
    console.log('   ‚úÖ DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞—é—Ç updateUserBalance()');
    console.log('   ‚úÖ BalanceManager –æ–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –≤ –ë–î');
    console.log('   ‚úÖ BalanceNotificationService –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç WebSocket');
    console.log('   ‚úÖ Frontend –ø–æ–ª—É—á–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

testDepositWebSocketFix();
