/**
 * –°–ö–†–ò–ü–¢ –î–õ–Ø –ó–ê–ú–ï–ù–´ –í–°–ï–• –°–¢–ê–†–´–• DEV –°–°–´–õ–û–ö –ù–ê –ü–†–û–î–ê–ö–®–ù URL
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç –∏ –∑–∞–º–µ–Ω—è–µ—Ç –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ Replit URL
 * –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–æ–¥–∞–∫—à–Ω –∞–¥—Ä–µ—Å –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞
 */

import fs from 'fs';
import path from 'path';

// –ü—Ä–æ–¥–∞–∫—à–Ω URL
const PRODUCTION_URL = 'https://uni-farm-connect-x-lukyanenkolawfa.replit.app';

// –ü–∞—Ç—Ç–µ—Ä–Ω—ã —Å—Ç–∞—Ä—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö URL –¥–ª—è –∑–∞–º–µ–Ω—ã
const DEV_URL_PATTERNS = [
  /https:\/\/[a-f0-9-]+\.pike\.replit\.dev/g,
  /https:\/\/[a-f0-9-]+\.replit\.dev/g,
  /http:\/\/localhost:3000/g,
  /http:\/\/127\.0\.0\.1:3000/g,
  /https:\/\/8ac7b219-438d-4a0b-ab0e-d8b58de37c6d-00-8ncu[^'"\\s]*/g
];

// –†–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
const FILE_EXTENSIONS = ['.js', '.mjs', '.ts', '.tsx', '.json', '.md', '.txt'];

// –ü–∞–ø–∫–∏ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –ø–æ–∏—Å–∫–∞
const EXCLUDE_DIRS = ['node_modules', '.git', 'dist', 'build', 'logs'];

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
 */
function getAllFiles(dir, allFiles = []) {
  const files = fs.readdirSync(dir);
  
  for (const file of files) {
    const fullPath = path.join(dir, file);
    const stat = fs.statSync(fullPath);
    
    if (stat.isDirectory()) {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
      if (!EXCLUDE_DIRS.includes(file)) {
        getAllFiles(fullPath, allFiles);
      }
    } else {
      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã —Å –Ω—É–∂–Ω—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏
      const ext = path.extname(file);
      if (FILE_EXTENSIONS.includes(ext)) {
        allFiles.push(fullPath);
      }
    }
  }
  
  return allFiles;
}

/**
 * –ó–∞–º–µ–Ω—è–µ—Ç URL –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º —Ñ–∞–π–ª–∞
 */
function replaceUrlsInContent(content) {
  let updatedContent = content;
  let hasChanges = false;
  
  for (const pattern of DEV_URL_PATTERNS) {
    const matches = updatedContent.match(pattern);
    if (matches && matches.length > 0) {
      console.log(`  üîß –ù–∞–π–¥–µ–Ω–æ ${matches.length} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –¥–ª—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞: ${pattern}`);
      updatedContent = updatedContent.replace(pattern, PRODUCTION_URL);
      hasChanges = true;
    }
  }
  
  return { content: updatedContent, hasChanges };
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω —Ñ–∞–π–ª
 */
function processFile(filePath) {
  try {
    const content = fs.readFileSync(filePath, 'utf8');
    const { content: newContent, hasChanges } = replaceUrlsInContent(content);
    
    if (hasChanges) {
      fs.writeFileSync(filePath, newContent, 'utf8');
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: ${filePath}`);
      return true;
    }
    
    return false;
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ${filePath}: ${error.message}`);
    return false;
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function fixAllDevUrls() {
  console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• DEV –°–°–´–õ–û–ö –í –ü–†–û–ï–ö–¢–ï');
  console.log('==========================================');
  console.log(`üìç –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ URL –Ω–∞: ${PRODUCTION_URL}`);
  console.log('');
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
  const allFiles = getAllFiles('.');
  console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${allFiles.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏`);
  console.log('');
  
  let updatedFilesCount = 0;
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
  for (const filePath of allFiles) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
    if (processFile(filePath)) {
      updatedFilesCount++;
    }
  }
  
  console.log('');
  console.log('üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');
  console.log('==========================================');
  console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${updatedFilesCount}`);
  console.log(`üìÅ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${allFiles.length}`);
  console.log(`üîó –ù–æ–≤—ã–π URL: ${PRODUCTION_URL}`);
  console.log('');
  console.log('üí° –í—Å–µ —Å—Ç–∞—Ä—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω URL!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
fixAllDevUrls().catch(console.error);