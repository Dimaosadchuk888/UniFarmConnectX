import { supabase } from './core/supabaseClient';

async function findExactBalanceTransfer() {
  console.log('=== –ü–û–ò–°–ö –¢–û–ß–ù–û–ì–û –ú–ï–°–¢–ê –ü–ï–†–ï–ù–û–°–ê –ë–ê–õ–ê–ù–°–ê ===\n');
  
  const userId = '184';
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –º–æ–º–µ–Ω—Ç –ø–æ–∫—É–ø–∫–∏
    console.log('1. –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –í –ú–û–ú–ï–ù–¢ –ü–û–ö–£–ü–ö–ò (10:26-10:27):');
    console.log('=' * 60);
    
    const { data: criticalTransactions } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', parseInt(userId))
      .gte('created_at', '2025-08-02T10:26:00')
      .lte('created_at', '2025-08-02T10:27:00')
      .order('created_at');
      
    if (criticalTransactions) {
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${criticalTransactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:\n`);
      criticalTransactions.forEach((tx, i) => {
        console.log(`${i+1}. ${new Date(tx.created_at).toLocaleTimeString()}`);
        console.log(`   –¢–∏–ø: ${tx.type}`);
        console.log(`   –°—É–º–º–∞: ${tx.amount_ton || tx.amount_uni} ${tx.currency}`);
        console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
        console.log(`   –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: ${JSON.stringify(tx.metadata)}\n`);
      });
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ç—Ç–µ—Ä–Ω–∞
    console.log('\n2. –ê–ù–ê–õ–ò–ó –ü–ê–¢–¢–ï–†–ù–ê –ü–ï–†–ï–ù–û–°–ê:');
    console.log('=' * 60);
    
    console.log('\nüîç –ì–ò–ü–û–¢–ï–ó–ê #1: –ü—Ä–∏ –ø–µ—Ä–≤–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ TON Boost');
    console.log('–ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∑–∞–ø–∏—Å–∏ –≤ ton_farming_data,');
    console.log('calculateUserTonDeposits() —Å—É–º–º–∏—Ä—É–µ—Ç –í–°–ï –ø—Ä–æ—à–ª—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã');
    console.log('–≤–∫–ª—é—á–∞—è FARMING_REWARD (–Ω–∞—á–∏—Å–ª–µ–Ω–∏—è)!');
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const { data: allTonHistory } = await supabase
      .from('transactions')
      .select('type, amount_ton, created_at')
      .eq('user_id', parseInt(userId))
      .in('type', ['DEPOSIT', 'TON_DEPOSIT', 'FARMING_REWARD'])
      .gte('amount_ton', '0.1')
      .order('created_at');
      
    if (allTonHistory) {
      const totalCalculated = allTonHistory.reduce((sum, tx) => sum + parseFloat(tx.amount_ton || '0'), 0);
      console.log(`\n–ò—Å—Ç–æ—Ä–∏—è TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`);
      console.log(`–í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${allTonHistory.length}`);
      console.log(`–°—É–º–º–∞: ${totalCalculated.toFixed(3)} TON`);
      console.log(`\n‚ö†Ô∏è –≠—Ç–∞ —Å—É–º–º–∞ (~${Math.round(totalCalculated)} TON) –±–ª–∏–∑–∫–∞ –∫ ton_farming_balance (115 TON)!`);
    }
    
    // 4. –ö–ª—é—á–µ–≤–æ–π –≤—ã–≤–æ–¥
    console.log('\n\n=== –†–ê–ó–ì–ê–î–ö–ê ===');
    console.log('–ü—Ä–∏ –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–µ TON Boost:');
    console.log('1. –°–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å –≤ ton_farming_data');
    console.log('2. calculateUserTonDeposits() —Å—á–∏—Ç–∞–µ—Ç –í–°–ï –ø—Ä–æ—à–ª—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã + –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è');
    console.log('3. –≠—Ç–∞ —Å—É–º–º–∞ (~100-115 TON) –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ farming_balance');
    console.log('4. –ù–æ balance_ton –ø—Ä–∏ —ç—Ç–æ–º –ù–ï —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è!');
    console.log('\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: –î–≤–æ–π–Ω–æ–π —É—á–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤!');
    console.log('   - balance_ton —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞');
    console.log('   - –ü—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ boost —ç—Ç–∏ –∂–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ "–∫–æ–ø–∏—Ä—É—é—Ç—Å—è" –≤ farming_balance');
    console.log('   - –ü–æ–ª—É—á–∞–µ—Ç—Å—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–Ω–µ–≥!');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

findExactBalanceTransfer();