/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ TON Boost —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 48
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∞—Å–ø–µ–∫—Ç—ã: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–∞–∫–µ—Ç—ã, —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, API
 */

import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = 'https://wunnsvicbebssrjqedor.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind1bm5zdmljYmVic3NyanFlZG9yIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0OTkwMzA3NywiZXhwIjoyMDY1NDc5MDc3fQ.pjlz8qlmQLUa9BZb12pt9QZU5Fk9YvqxpSZGA84oqog';

const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

async function debugUser48BoostStatus() {
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TON BOOST –°–¢–ê–¢–£–°–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø 48\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 48
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 48:');
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('id, username, balance_ton, ton_boost_package, ton_farming_start_timestamp')
      .eq('id', 48)
      .single();
      
    if (userError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError.message);
      return;
    }
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', {
      id: user.id,
      username: user.username,
      balance_ton: user.balance_ton,
      ton_boost_package: user.ton_boost_package,
      ton_farming_start_timestamp: user.ton_farming_start_timestamp
    });
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ boost_purchases —Ç–∞–±–ª–∏—Ü—ã
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—É–ø–æ–∫ Boost –ø–∞–∫–µ—Ç–æ–≤:');
    const { data: purchases, error: purchasesError } = await supabase
      .from('boost_purchases')
      .select('*')
      .eq('user_id', 48)
      .order('created_at', { ascending: false });
      
    if (purchasesError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫:', purchasesError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–∫—É–ø–æ–∫: ${purchases.length}`);
      purchases.forEach((purchase, index) => {
        console.log(`   ${index + 1}. ID: ${purchase.id}, Package: ${purchase.package_id}, Status: ${purchase.status}, Amount: ${purchase.amount}, Date: ${purchase.created_at}`);
      });
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 48:');
    const { data: transactions, error: transError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 48)
      .eq('currency', 'TON')
      .order('created_at', { ascending: false })
      .limit(10);
      
    if (transError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', transError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactions.length}`);
      transactions.forEach((tx, index) => {
        console.log(`   ${index + 1}. Type: ${tx.type}, Amount: ${tx.amount}, Status: ${tx.status}, Description: ${tx.description}, Date: ${tx.created_at}`);
      });
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö Boost –ø–∞–∫–µ—Ç–æ–≤
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö Boost –ø–∞–∫–µ—Ç–æ–≤:');
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞–∫–µ—Ç–æ–≤
    const packagesResponse = await fetch('http://localhost:3000/api/v2/boost/packages', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      }
    });
    
    if (packagesResponse.ok) {
      const packagesData = await packagesResponse.json();
      console.log('‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:', packagesData.data?.length || 0);
      if (packagesData.data && packagesData.data.length > 0) {
        packagesData.data.forEach((pkg, index) => {
          console.log(`   ${index + 1}. ID: ${pkg.id}, Name: ${pkg.name}, Rate: ${pkg.daily_rate}%, Duration: ${pkg.duration_days} days`);
        });
      }
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∞–∫–µ—Ç—ã —á–µ—Ä–µ–∑ API');
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ API farming-status
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API farming-status:');
    const farmingResponse = await fetch('http://localhost:3000/api/v2/boost/farming-status?user_id=48', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      }
    });
    
    if (farmingResponse.ok) {
      const farmingData = await farmingResponse.json();
      console.log('‚úÖ API farming-status –æ—Ç–≤–µ—Ç:', JSON.stringify(farmingData, null, 2));
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ API farming-status:', farmingResponse.status);
    }
    
    // 6. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º
    console.log('\n6Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú:');
    
    if (!user.ton_boost_package) {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ ton_boost_package');
    } else {
      console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π –ø–∞–∫–µ—Ç: ${user.ton_boost_package}`);
    }
    
    if (!user.ton_farming_start_timestamp) {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ TON —Ñ–∞—Ä–º–∏–Ω–≥–∞');
    } else {
      console.log(`‚úÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Ñ–∞—Ä–º–∏–Ω–≥–∞: ${user.ton_farming_start_timestamp}`);
    }
    
    if (!purchases || purchases.length === 0) {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ –ø–æ–∫—É–ø–∫–∞—Ö Boost –ø–∞–∫–µ—Ç–æ–≤');
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–∫—É–ø–æ–∫: ${purchases.length}`);
    }
    
    const purchaseTransactions = transactions.filter(tx => tx.description.includes('Boost') || tx.description.includes('boost'));
    if (purchaseTransactions.length === 0) {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –æ –ø–æ–∫—É–ø–∫–µ Boost –ø–∞–∫–µ—Ç–æ–≤');
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ Boost —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${purchaseTransactions.length}`);
    }
    
  } catch (error) {
    console.error('üö´ –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
  }
}

debugUser48BoostStatus();