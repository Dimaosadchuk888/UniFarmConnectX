#!/usr/bin/env node

/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ webhook –∏ WebSocket –ø—Ä–æ–±–ª–µ–º
 */

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const WEBHOOK_URL = 'https://uni-farm-connect-x-alinabndrnk99.replit.app/webhook';

async function setWebhook() {
  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        url: WEBHOOK_URL,
        allowed_updates: ['message', 'callback_query']
      })
    });
    
    const result = await response.json();
    console.log('Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', result);
    return result.ok;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', error);
    return false;
  }
}

async function checkWebhook() {
  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo`);
    const result = await response.json();
    console.log('–°—Ç–∞—Ç—É—Å webhook:', result);
    return result;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook:', error);
    return null;
  }
}

async function main() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ webhook –∏ WebSocket...');
  
  console.log('\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ webhook:');
  await checkWebhook();
  
  console.log('\n2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook:');
  const success = await setWebhook();
  
  if (success) {
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:');
    await checkWebhook();
    console.log('\n‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  } else {
    console.log('\n‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook');
  }
}

main();