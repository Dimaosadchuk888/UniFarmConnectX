/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∞–∫—Ç–∏–≤–Ω—ã–º TON Boost
 */

import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = 'https://wunnsvicbebssrjqedor.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind1bm5zdmljYmVic3NyanFlZG9yIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0OTkwMzA3NywiZXhwIjoyMDY1NDc5MDc3fQ.pjlz8qlmQLUa9BZb12pt9QZU5Fk9YvqxpSZGA84oqog';

const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

async function setupDemoUserTonBoost() {
  try {
    console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å TON Boost...\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 48
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('id', 48)
      .single();
      
    if (userError) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 48 –Ω–µ –Ω–∞–π–¥–µ–Ω:', userError.message);
      return;
    }
    
    console.log('üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', {
      id: user.id,
      username: user.username,
      balance_ton: user.balance_ton,
      ton_boost_package: user.ton_boost_package
    });
    
    // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å TON –±–∞–ª–∞–Ω—Å –±–æ–ª—å—à–µ 10, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º Boost
    const tonBalance = parseFloat(user.balance_ton || '0');
    
    if (tonBalance >= 10) {
      console.log(`‚úÖ TON –±–∞–ª–∞–Ω—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π: ${tonBalance} TON`);
      
      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º Standard Boost (package_id = 2, 1.5% –≤ –¥–µ–Ω—å)
      const { data: updatedUser, error: updateError } = await supabase
        .from('users')
        .update({
          ton_boost_package: 2,
          ton_farming_start_timestamp: new Date().toISOString()
        })
        .eq('id', 48)
        .select()
        .single();
        
      if (updateError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Boost:', updateError.message);
        return;
      }
      
      console.log('üéØ TON Boost –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:');
      console.log('- –ü–∞–∫–µ—Ç: Standard Boost (1.5% –≤ –¥–µ–Ω—å)');
      console.log('- –î–∞—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:', updatedUser.ton_farming_start_timestamp);
      console.log('- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      
    } else {
      console.log(`‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ TON –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Boost: ${tonBalance} TON (—Ç—Ä–µ–±—É–µ—Ç—Å—è >= 10)`);
      
      // –î–æ–±–∞–≤–ª—è–µ–º TON –±–∞–ª–∞–Ω—Å
      const { data: updatedUser, error: updateError } = await supabase
        .from('users')
        .update({
          balance_ton: '100.0',
          ton_boost_package: 2,
          ton_farming_start_timestamp: new Date().toISOString()
        })
        .eq('id', 48)
        .select()
        .single();
        
      if (updateError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', updateError.message);
        return;
      }
      
      console.log('üí∞ TON –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –∏ Boost –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:');
      console.log('- –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: 100 TON');
      console.log('- –ü–∞–∫–µ—Ç: Standard Boost (1.5% –≤ –¥–µ–Ω—å)');
      console.log('- –î–∞—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:', updatedUser.ton_farming_start_timestamp);
    }
    
    console.log('\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è TON Boost!');
    
  } catch (error) {
    console.error('üö´ –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', error.message);
  }
}

setupDemoUserTonBoost();