RIOTMAP: UNIFARM — ВЕСЬ ФУНКЦИОНАЛ И API

⸻

1. БИЗНЕС-ЛОГИКА

1.1 Миссии
 • Цель: выполнение действий (например, подписка на соцсети) за вознаграждение.
 • Типы миссий: telegram_group, telegram_channel, youtube, tiktok.
 • Награда: 500 UNI за каждую миссию.
 • Ссылки:
 • Telegram-чат: https://t.me/universegameschat
 • Telegram-канал: https://t.me/universegames
 • YouTube: https://youtube.com/@universegamesyoutube
 • TikTok: https://www.tiktok.com/@universegames.io
 • Ограничения:
 • Каждую миссию можно пройти только один раз.
 • Проверка выполнения — по таблице user_missions и user_id.
 • Нельзя начислять награду повторно.

⸻

1.2 TON Boost (Пакеты Бустов)
 • Цель: пользователь покупает буст за TON.
 • Доходность: фиксированный % в TON от суммы.
 • Бонус: единоразовый бонус в UNI начисляется при покупке.
 • Пакеты:

Название Стоимость Доходность в TON Бонус в UNI
Starter Boost 1 TON 0.5% в день 10 000 UNI
Standard Boost 5 TON 1% в день 75 000 UNI
Advanced Boost 15 TON 2% в день 250 000 UNI
Premium Boost 25 TON 2.5% в день 500 000 UNI

 • ВАЖНО: Ни один из пакетов не требует оплаты в UNI. Только бонус в UNI.

⸻

1.3 UNI Farming
 • Цель: вложение UNI ради пассивного дохода.
 • Доходность: конфигурируемая ставка.
 • Вывод средств: доступен через API /api/v2/uni-farming/withdraw.

⸻

1.4 Реферальная программа
 • Цель: получать доход от фарминга рефералов.
 • Доход начисляется только от дохода с фарминга (TON и UNI).
 • Прямых бонусов за регистрацию или покупку нет.
 • Уровни и проценты:

Уровень Процент от дохода реферала
1 100%
2 2%
3 3%
4 4%
5 5%
6 6%
7 7%
8 8%
9 9%
10 10%
11 11%
12 12%
13 13%
14 14%
15 15%
16 16%
17 17%
18 18%
19 19%
20 20%

⸻

1.5 Ежедневный бонус
 • Награда: 500 UNI за вход 1 раз в сутки.
 • Ограничения:
 • Можно получить только один раз в 24 часа.
 • Проверка — через /api/v2/daily-bonus/streak-info.

⸻

2. API МАРШРУТЫ

2.1 Миссии
 • GET /api/v2/missions/active — получить активные миссии
 • GET /api/v2/user-missions — список выполненных миссий
 • POST /api/v2/missions/complete — завершение миссии

⸻

2.2 Boosts
 • GET /api/v2/boosts — все бусты
 • GET /api/v2/boosts/active — активные
 • POST /api/v2/boosts/purchase — покупка буста

⸻

2.3 TON Farming
 • GET /api/v2/ton-farming/info
 • GET /api/v2/ton-farming/boosts
 • POST /api/v2/ton-farming/purchase
 • POST /api/v2/ton-farming/confirm-payment
 • POST /api/v2/ton-farming/update

⸻

2.4 UNI Farming
 • GET /api/v2/uni-farming/status
 • POST /api/v2/uni-farming/purchase
 • POST /api/v2/uni-farming/withdraw

⸻

2.5 Wallet
 • GET /api/v2/wallet/balance
 • POST /api/v2/wallet/connect
 • POST /api/v2/wallet/disconnect
 • GET /api/v2/wallet/transactions
 • POST /api/v2/wallet/withdraw

⸻

2.6 Рефералы
 • GET /api/v2/referrals/tree
 • GET /api/v2/referrals/stats
 • POST /api/v2/referrals/apply

⸻

2.7 Ежедневный бонус
 • GET /api/v2/daily-bonus/status
 • POST /api/v2/daily-bonus/claim
 • GET /api/v2/daily-bonus/streak-info

⸻

3. РОЛЬ И ОГРАНИЧЕНИЯ АГЕНТА REPLIT (AI)

3.1 Роль агента
AI-агент Replit — это технический исполнитель, отвечающий за:
 • разработку и поддержку исходного кода UniFarm в рамках Telegram Mini App;
 • реализацию всех функций строго по RIOTMAP-документу;
 • исправление багов и ошибок, при этом не внося непредусмотренные изменения;
 • соблюдение структуры проекта, архитектуры, согласованной базы данных и API;
 • регулярную синхронизацию с текущей продуктивной базой данных (ep-lucky-boat-a463bggt).

3.2 Ограничения
Агенту категорически запрещено:
 1. Менять бизнес-логику без согласования с заказчиком.
 2. Создавать новые модули или функции, если они не указаны в RIOTMAP.
 3. Вносить изменения в структуру таблиц базы данных без письменного разрешения.
 4. Переименовывать, дублировать или перемещать файлы без задачи в трекере.
 5. Создавать @ts-ignore или другие временные заглушки в production-коде.
 6. Игнорировать RedMap: любые действия вне этого документа считаются нарушением.
 7. Работать с другой базой данных кроме production (Neon: ep-lucky-boat-a463bggt).
 8. Деплоить в Dev-среду, если задача стоит на продакшн.
 9. Удалять существующие API-маршруты, если это не указано в задаче.
 10. Использовать неинициализированные или тестовые аккаунты в продакшне.

3.3 Требования
Агент обязан:
 • Проверять свои правки после каждого изменения.
 • Делать самостоятельную ревизию выполненных задач.
 • Подтверждать в чате, какие конкретно пункты из RedMap выполнены.
 • Работать только по задачам, выставленным координатором (техническим заказчиком).
 • В случае неопределённости — запрашивать уточнение, а не принимать решения самостоятельно.

4. ПРАВИЛА РАБОТЫ И СОГЛАСОВАНИЯ

4.1 Постановка задач
 • Агент получает задачи исключительно от координатора проекта (пользователя).
 • Каждая задача должна быть зафиксирована и содержать:
   – конкретную цель,
   – ожидаемый результат,
   – API или файл, с которым ведётся работа,
   – критерии проверки (чеклист).
 • Без явного ТЗ — вносить изменения запрещено.

4.2 Согласование изменений
 • Агент обязан запрашивать согласование при:
   – изменении бизнес-логики,
   – изменении структуры данных (таблиц, схем, связей),
   – добавлении новых API-маршрутов,
   – удалении любого кода из production.
 • Согласование оформляется через пометку: [ОДОБРЕНО].

4.3 Финальная проверка
 • После выполнения задачи агент:
   – сам проводит проверку на баги, регрессии, ошибки в консоли/логах;
   – отправляет отчёт с описанием, что было изменено и как это проверялось;
   – получает подтверждение координатора о приёме работы.

5. ОТВЕТСТВЕННОСТЬ И КОНТРОЛЬ КАЧЕСТВА

5.1 Ответственность
 • Агент несёт полную ответственность за:
   – корректность бизнес-логики,
   – чистоту кода (отсутствие мусора, @ts-ignore, дубликатов),
   – работу с только одной базой данных — ep-lucky-boat-a463bggt,
   – соблюдение структуры RedMap.

5.2 Журнал задач
 • Вся работа агента должна быть записана:
   – дата и время выполнения;
   – что конкретно сделано;
   – какие файлы изменены;
   – ссылка на задачу или сообщение.
 • Агент обязан регулярно присылать обновлённый лог выполненных задач.

5.3 Недопустимые действия
 • Внесение правок без задачи или согласования.
 • Работа с Dev-версией вместо production.
 • Дублирование файлов, копий кода, альтернативных путей.
 • Создание временных "фиксов" без последующего устранения причины.
 • Ведение параллельных логик (v1, v2, beta) без явного указания.
⸻

6. ДОПОЛНИТЕЛЬНЫЕ РЕКОМЕНДАЦИИ И СИСТЕМА ВНЕДРЕНИЯ REDMAP

6.1 Версионность
 • Версия: 1.0
 • Дата: 27.05.2025
 • Автор: @username

6.2 Критические бизнес-условия
 • Запрещено изменять структуру партнёрской программы (20 уровней, без прямых бонусов).
 • Названия миссий, логика их выполнения и награды не подлежат изменению без одобрения координатора.
 • Все действия с фармингом (TON и UNI) строго по утверждённой модели.

6.3 Правила окружения (если используется Dev/Staging/Prod)
 • Production-база: ep-lucky-boat-a463bggt
 • Любые тесты и временные изменения допускаются только в Dev-режиме, с отдельным окружением.
 • Deployment в продакшн — только по согласованию с координатором.

6.4 Чеклист координатора
Агент обязан после выполнения задачи:
 • Протестировать функционал;
 • Убедиться в отсутствии багов;
 • Отправить отчёт, что было сделано и какие файлы изменены;
 • Подтвердить в чате выполнение задачи по RedMap.

6.5 Инструкция по использованию RedMap
 • Файл REDMAP.txt должен находиться в корне проекта.
 • Агент обязан читать RedMap перед каждой задачей.
 • В README или AGENT_GUIDE должно быть указание:
   «Перед началом работы агент обязан свериться с REDMAP.txt».
 • В главном файле проекта (например, server/index.ts) должно быть добавлено:
   // ВНИМАНИЕ: Проект управляется через REDMAP.txt. Несанкционированные изменения запрещены.

⸻