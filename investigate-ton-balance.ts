import { supabase } from './core/supabaseClient';

async function investigateTonBalance() {
  console.log('=== –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ö–£–î–ê –ü–†–û–ü–ê–õ –ë–ê–õ–ê–ù–° TON ===\n');
  
  const userId = '184';
  
  try {
    // 1. –í–°–ï —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ TON –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞
    console.log('1. –í–°–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò TON –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 2 –ß–ê–°–ê:');
    console.log('=' * 60);
    
    const twoHoursAgo = new Date();
    twoHoursAgo.setHours(twoHoursAgo.getHours() - 2);
    
    const { data: allTonTx } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', parseInt(userId))
      .eq('currency', 'TON')
      .gte('created_at', twoHoursAgo.toISOString())
      .order('created_at', { ascending: true });
      
    let runningBalance = 0.344031; // –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    
    allTonTx?.forEach((tx, i) => {
      console.log(`\n–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${i + 1}:`);
      console.log(`  –í—Ä–µ–º—è: ${new Date(tx.created_at).toLocaleString()}`);
      console.log(`  –¢–∏–ø: ${tx.type}`);
      console.log(`  –°—É–º–º–∞: ${tx.amount} TON`);
      console.log(`  –°—Ç–∞—Ç—É—Å: ${tx.status}`);
      console.log(`  –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
      
      // –°—á–∏—Ç–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
      if (tx.type === 'TON_DEPOSIT' || tx.type === 'FARMING_REWARD') {
        runningBalance += parseFloat(tx.amount);
      } else if (tx.type === 'TON_BOOST_PURCHASE' || tx.type === 'WITHDRAWAL') {
        runningBalance -= parseFloat(tx.amount);
      }
      
      console.log(`  -> –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ: ${runningBalance.toFixed(6)} TON`);
    });
    
    console.log(`\nüìä –û–∂–∏–¥–∞–µ–º—ã–π –±–∞–ª–∞–Ω—Å –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º: ${runningBalance.toFixed(6)} TON`);
    console.log(`üìä –†–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –≤ –ë–î: 0 TON`);
    console.log(`‚ùó –†–∞–∑–Ω–∏—Ü–∞: ${runningBalance.toFixed(6)} TON –ø—Ä–æ–ø–∞–ª–æ!\n`);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å TON Boost
    console.log('\n2. –ê–ö–¢–ò–í–ù–û–°–¢–¨ TON BOOST:');
    console.log('=' * 60);
    
    const { data: user } = await supabase
      .from('users')
      .select('ton_boost_active, ton_boost_package, ton_boost_activated_at, ton_farming_balance')
      .eq('id', userId)
      .single();
      
    console.log(`TON Boost –∞–∫—Ç–∏–≤–µ–Ω: ${user.ton_boost_active ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`–ü–∞–∫–µ—Ç: ${user.ton_boost_package}`);
    console.log(`–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: ${user.ton_boost_activated_at ? new Date(user.ton_boost_activated_at).toLocaleString() : '–ù–ï–¢ –î–ê–ù–ù–´–•'}`);
    console.log(`TON farming –±–∞–ª–∞–Ω—Å: ${user.ton_farming_balance}`);
    
    // 3. –ò—â–µ–º –ª—é–±—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º –æ–∫–æ–ª–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–∫—É–ø–∫–∏
    console.log('\n\n3. –ü–û–ò–°–ö –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–• –û–ü–ï–†–ê–¶–ò–ô (10:25-10:27):');
    console.log('=' * 60);
    
    const { data: suspiciousTx } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', parseInt(userId))
      .gte('created_at', '2025-08-02T10:25:00')
      .lte('created_at', '2025-08-02T10:27:00')
      .order('created_at', { ascending: true });
      
    suspiciousTx?.forEach(tx => {
      console.log(`\n${new Date(tx.created_at).toLocaleTimeString()} - ${tx.type}`);
      console.log(`  –í–∞–ª—é—Ç–∞: ${tx.currency}`);
      console.log(`  –°—É–º–º–∞: ${tx.amount}`);
      console.log(`  –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
    });
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞–∫–µ—Ç–æ–≤
    console.log('\n\n4. –°–¢–û–ò–ú–û–°–¢–¨ TON BOOST –ü–ê–ö–ï–¢–û–í:');
    console.log('=' * 60);
    
    const { data: packages } = await supabase
      .from('ton_boost_packages')
      .select('*')
      .order('id');
      
    packages?.forEach(pkg => {
      console.log(`\n–ü–∞–∫–µ—Ç ${pkg.id}: "${pkg.name}"`);
      console.log(`  –°—Ç–æ–∏–º–æ—Å—Ç—å: ${pkg.ton_amount} TON`);
      console.log(`  –î–æ—Ö–æ–¥: ${pkg.daily_income} UNI/–¥–µ–Ω—å`);
    });
    
    // 5. –í–´–í–û–î
    console.log('\n\n=== –í–´–í–û–î –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–Ø ===');
    console.log('1. –í—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å –Ω–∞ 100 TON –≤ 10:25:39');
    console.log('2. –í 10:26:05 –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å 10000 UNI –∑–∞ –ø–æ–∫—É–ø–∫—É TON Boost');
    console.log('3. –ù–û —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ TON Boost –ù–ï –∑–∞–ø–∏—Å–∞–Ω–∞!');
    console.log('4. –ü—Ä–∏ —ç—Ç–æ–º TON Boost –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω (–ø–∞–∫–µ—Ç 1)');
    console.log('5. –í–µ—Å—å –±–∞–ª–∞–Ω—Å 100.344 TON –∏—Å—á–µ–∑');
    console.log('\n‚ùó –í–ï–†–û–Ø–¢–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê: –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ TON Boost –≤–º–µ—Å—Ç–æ –≤—ã—á–µ—Ç–∞');
    console.log('   —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–∞–∫–µ—Ç–∞ –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø–æ–ª–Ω–æ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞!');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

investigateTonBalance();