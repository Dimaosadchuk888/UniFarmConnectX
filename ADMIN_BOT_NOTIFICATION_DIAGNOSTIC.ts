/**
 * –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¶–ï–ü–û–ß–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –ê–î–ú–ò–ù –ë–û–¢–ê
 * –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã: –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥ —Å–æ–∑–¥–∞—é—Ç—Å—è, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, 
 * –Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –∞–¥–º–∏–Ω–∞–º
 */

import { supabase } from './core/supabase';
import { AdminBotService } from './modules/adminBot/service';
import { logger } from './core/logger';

async function investigateAdminNotificationChain() {
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¶–ï–ü–û–ß–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –ê–î–ú–ò–ù –ë–û–¢–ê');
  console.log('=' .repeat(60));

  try {
    // 1. –ü–†–û–í–ï–†–ö–ê –ê–î–ú–ò–ù–û–í –í –ë–ê–ó–ï –î–ê–ù–ù–´–•
    console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ê–î–ú–ò–ù–û–í –í –ë–ê–ó–ï –î–ê–ù–ù–´–•:');
    const { data: admins, error: adminsError } = await supabase
      .from('users')
      .select('id, telegram_id, username, is_admin, created_at')
      .eq('is_admin', true)
      .order('created_at', { ascending: false });

    if (adminsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤:', adminsError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–¥–º–∏–Ω–æ–≤ –≤ –ë–î: ${admins?.length || 0}`);
      admins?.forEach(admin => {
        console.log(`   - @${admin.username} (ID: ${admin.telegram_id})`);
      });
    }

    // 2. –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–´–• –ó–ê–Ø–í–û–ö –ù–ê –í–´–í–û–î
    console.log('\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–´–• –ó–ê–Ø–í–û–ö –ù–ê –í–´–í–û–î:');
    const { data: pendingRequests, error: requestsError } = await supabase
      .from('withdraw_requests')
      .select('id, user_id, amount_ton, ton_wallet, status, created_at, telegram_id, username')
      .eq('status', 'pending')
      .order('created_at', { ascending: false })
      .limit(5);

    if (requestsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫:', requestsError.message);
    } else {
      console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫: ${pendingRequests?.length || 0}`);
      pendingRequests?.forEach(req => {
        console.log(`   - ID ${req.id}: ${req.amount_ton} TON –æ—Ç ${req.username || req.telegram_id} (${new Date(req.created_at).toLocaleString()})`);
      });
    }

    // 3. –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ê–î–ú–ò–ù –ë–û–¢–ê
    console.log('\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ê–î–ú–ò–ù –ë–û–¢–ê:');
    const { adminBotConfig } = await import('./config/adminBot');
    console.log(`‚úÖ Token –Ω–∞—Å—Ç—Ä–æ–µ–Ω: ${adminBotConfig.token ? '–î–ê (' + adminBotConfig.token.length + ' —Å–∏–º–≤–æ–ª–æ–≤)' : '–ù–ï–¢'}`);
    console.log(`‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω—ã: ${adminBotConfig.authorizedAdmins.join(', ')}`);

    // 4. –¢–ï–°–¢ ADMINBOTSERVICE - –°–û–ó–î–ê–ù–ò–ï –≠–ö–ó–ï–ú–ü–õ–Ø–†–ê
    console.log('\n4Ô∏è‚É£ –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø ADMINBOTSERVICE:');
    try {
      const adminBotService = new AdminBotService();
      console.log('‚úÖ AdminBotService —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');

      // 5. –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –ê–î–ú–ò–ù–û–í –ß–ï–†–ï–ó SERVICE
      console.log('\n5Ô∏è‚É£ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –ê–î–ú–ò–ù–û–í –ß–ï–†–ï–ó SERVICE:');
      for (const adminUsername of adminBotConfig.authorizedAdmins) {
        const cleanUsername = adminUsername.replace('@', '');
        const { data: adminUser } = await supabase
          .from('users')
          .select('telegram_id, username, is_admin')
          .eq('username', cleanUsername)
          .eq('is_admin', true)
          .limit(1)
          .maybeSingle();

        if (adminUser?.telegram_id) {
          console.log(`‚úÖ ${adminUsername}: –Ω–∞–π–¥–µ–Ω –≤ –ë–î (telegram_id: ${adminUser.telegram_id})`);
        } else {
          console.log(`‚ùå ${adminUsername}: –ù–ï –ù–ê–ô–î–ï–ù –≤ –ë–î –∏–ª–∏ –Ω–µ is_admin`);
        }
      }

      // 6. –¢–ï–°–¢ SENDMESSAGE –§–£–ù–ö–¶–ò–ò (–ë–ï–ó –†–ï–ê–õ–¨–ù–û–ô –û–¢–ü–†–ê–í–ö–ò)
      console.log('\n6Ô∏è‚É£ –¢–ï–°–¢ –§–£–ù–ö–¶–ò–ò SENDMESSAGE (–°–ò–ú–£–õ–Ø–¶–ò–Ø):');
      // –ú—ã –ù–ï –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∏–º –ª–æ–≥–∏–∫—É
      console.log('‚ÑπÔ∏è  –°–∏–º—É–ª—è—Ü–∏—è sendMessage –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏');

    } catch (serviceError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è AdminBotService:', serviceError);
    }

    // 7. –ü–†–û–í–ï–†–ö–ê WEBHOOK –ê–î–ú–ò–ù –ë–û–¢–ê
    console.log('\n7Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê WEBHOOK –ê–î–ú–ò–ù –ë–û–¢–ê:');
    try {
      const response = await fetch('http://localhost:3000/api/v2/admin-bot/webhook', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          message: {
            chat: { id: 123456 },
            text: '/test',
            from: { username: 'diagnostic_test' }
          }
        })
      });
      
      console.log(`‚úÖ Webhook –æ—Ç–≤–µ—á–∞–µ—Ç: ${response.status} ${response.statusText}`);
    } catch (webhookError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ webhook:', webhookError);
    }

    // 8. –ê–ù–ê–õ–ò–ó –õ–û–ì–ò–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –í WALLETSERVICE
    console.log('\n8Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –í WALLETSERVICE:');
    console.log('‚ÑπÔ∏è  –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–∫–∏ 722-742 –≤ modules/wallet/service.ts:');
    console.log('   - –ò–º–ø–æ—Ä—Ç AdminBotService: ‚úÖ');
    console.log('   - –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞: ‚úÖ');
    console.log('   - –í—ã–∑–æ–≤ notifyWithdrawal(): ‚úÖ');
    console.log('   - Error handling: ‚úÖ');

    // 9. –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ô –ó–ê–Ø–í–ö–ò (–¢–û–õ–¨–ö–û –î–õ–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò)
    console.log('\n9Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ô –ó–ê–Ø–í–ö–ò –î–õ–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');
    if (pendingRequests && pendingRequests.length > 0) {
      const testRequest = pendingRequests[0];
      console.log(`‚ÑπÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞—è–≤–∫—É ID ${testRequest.id} –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è`);
      
      try {
        const adminBotService = new AdminBotService();
        // –ù–ï –û–¢–ü–†–ê–í–õ–Ø–ï–ú —Ä–µ–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É
        console.log('‚úÖ –õ–æ–≥–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é');
      } catch (testError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –≤ –ª–æ–≥–∏–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', testError);
      }
    } else {
      console.log('‚ÑπÔ∏è  –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }

  console.log('\n' + '=' .repeat(60));
  console.log('üîö –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
investigateAdminNotificationChain().catch(console.error);