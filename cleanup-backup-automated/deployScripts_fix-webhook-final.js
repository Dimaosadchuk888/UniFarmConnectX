/**
 * –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ webhook URL
 */

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const CORRECT_WEBHOOK_URL = 'https://uni-farm-connect-xo-osadchukdmitro2.replit.app/api/telegram/webhook';

async function fixWebhookFinal() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ webhook –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL...');
    console.log(`üéØ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º: ${CORRECT_WEBHOOK_URL}`);
    
    const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/setWebhook`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        url: CORRECT_WEBHOOK_URL,
        drop_pending_updates: true,
        allowed_updates: ["message", "callback_query"]
      })
    });
    
    const result = await response.json();
    
    if (result.ok) {
      console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!');
      console.log(`üîó –ù–æ–≤—ã–π URL: ${CORRECT_WEBHOOK_URL}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      const checkResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
      const checkResult = await checkResponse.json();
      
      if (checkResult.ok) {
        console.log(`üì° –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π URL: ${checkResult.result.url}`);
        console.log(`üìä Pending updates: ${checkResult.result.pending_update_count}`);
        console.log('üéâ –¢–µ–ø–µ—Ä—å –∫–æ–º–∞–Ω–¥–∞ /start –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å!');
      }
      
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', result.description);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

fixWebhookFinal();