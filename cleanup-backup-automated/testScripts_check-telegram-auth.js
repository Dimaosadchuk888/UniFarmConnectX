/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Telegram Mini App
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞
 */

import fetch from 'node-fetch';
import crypto from 'crypto';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
async function checkBotToken() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ Telegram...');
  
  const token = process.env.TELEGRAM_BOT_TOKEN;
  if (!token) {
    console.log('‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ Telegram –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    return false;
  }
  
  console.log('‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ Telegram –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ Telegram API
  try {
    const response = await fetch(`https://api.telegram.org/bot${token}/getMe`);
    const data = await response.json();
    
    if (data.ok) {
      console.log(`‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ò–º—è –±–æ—Ç–∞: ${data.result.first_name} (@${data.result.username})`);
      return true;
    } else {
      console.log(`‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω: ${data.description}`);
      return false;
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞: ${error.message}`);
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Mini App
async function checkBotWebAppConfig() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Mini App...');
  
  const token = process.env.TELEGRAM_BOT_TOKEN;
  if (!token) {
    console.log('‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞');
    return false;
  }
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–Ω—é –±–æ—Ç–∞
    const menuResponse = await fetch(`https://api.telegram.org/bot${token}/getMyCommands`);
    const menuData = await menuResponse.json();
    
    if (menuData.ok) {
      console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
      console.log(menuData.result.map(cmd => `/${cmd.command} - ${cmd.description}`).join('\n'));
    } else {
      console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: ${menuData.description}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–Ω—é
    const buttonResponse = await fetch(`https://api.telegram.org/bot${token}/getMenuButton`);
    const buttonData = await buttonResponse.json();
    
    if (buttonData.ok) {
      console.log(`‚úÖ –¢–∏–ø –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é: ${buttonData.result.type}`);
      if (buttonData.result.type === 'web_app') {
        console.log(`‚úÖ URL Mini App: ${buttonData.result.web_app.url}`);
      }
    } else {
      console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é: ${buttonData.description}`);
    }
    
    return true;
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Mini App: ${error.message}`);
    return false;
  }
}

// –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Telegram
async function analyzeTelegramAuthCode() {
  console.log('\nüîç –ê–Ω–∞–ª–∏–∑ —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Telegram...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    const fileContents = {
      routes: '',
      authMiddleware: '',
      telegramService: ''
    };
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ Telegram –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    const sampleInitData = "query_id=AAHdF6IQAAAAAN0XohBfCP_8&user=%7B%22id%22%3A123456789%2C%22first_name%22%3A%22Test%22%2C%22last_name%22%3A%22User%22%2C%22username%22%3A%22testuser%22%2C%22language_code%22%3A%22en%22%7D&auth_date=1683000000&hash=abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890";
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    console.log('‚úÖ –ê–ª–≥–æ—Ä–∏—Ç–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:');
    console.log('1. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–∞–µ—Ç initData –æ—Ç Telegram Web App');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è hash —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è auth_date –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å');
    console.log('4. –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —É—Å–ø–µ—à–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—á–∏—Ç–∞–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º');
    
    return true;
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ${error.message}`);
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ API, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
async function checkAuthRoutes() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ API...');
  
  const baseUrl = 'https://6be9e82d-68fb-43e8-9b73-44caabbbf6c0-00-kc4o6gstmqcm.pike.replit.dev';
  const routes = [
    '/api/auth/status',
    '/api/session/restore',
    '/api/users/me',
    '/api/users/telegram'
  ];
  
  for (const route of routes) {
    try {
      const response = await fetch(`${baseUrl}${route}`);
      const status = response.status;
      console.log(`Route ${route}: ${status} ${response.statusText}`);
      
      if (status !== 404) {
        try {
          const data = await response.json();
          console.log(`  ‚Ü≥ –û—Ç–≤–µ—Ç: ${JSON.stringify(data)}`);
        } catch (e) {
          console.log('  ‚Ü≥ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JSON –æ—Ç–≤–µ—Ç');
        }
      }
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–∞—Ä—à—Ä—É—Ç–∞ ${route}: ${error.message}`);
    }
  }
  
  return true;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ CORS –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
async function checkCorsConfig() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ CORS...');
  
  const baseUrl = 'https://6be9e82d-68fb-43e8-9b73-44caabbbf6c0-00-kc4o6gstmqcm.pike.replit.dev';
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º OPTIONS –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ CORS
    const response = await fetch(`${baseUrl}/api/users/me`, {
      method: 'OPTIONS',
      headers: {
        'Origin': 'https://t.me',
        'Access-Control-Request-Method': 'GET'
      }
    });
    
    const headers = {};
    for (const [key, value] of response.headers.entries()) {
      if (key.toLowerCase().startsWith('access-control')) {
        headers[key] = value;
      }
    }
    
    console.log('CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ:');
    if (Object.keys(headers).length === 0) {
      console.log('‚ö†Ô∏è –ó–∞–≥–æ–ª–æ–≤–∫–∏ CORS –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã');
    } else {
      for (const [key, value] of Object.entries(headers)) {
        console.log(`${key}: ${value}`);
      }
      
      if (headers['access-control-allow-credentials'] === 'true') {
        console.log('‚úÖ CORS –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
      } else {
        console.log('‚ö†Ô∏è CORS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
      }
    }
    
    return true;
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ CORS: ${error.message}`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
async function runChecks() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Telegram Mini App');
  
  // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
  await checkBotToken();
  await checkBotWebAppConfig();
  await analyzeTelegramAuthCode();
  await checkAuthRoutes();
  await checkCorsConfig();
  
  console.log('\n‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏
runChecks().catch(error => {
  console.error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
});