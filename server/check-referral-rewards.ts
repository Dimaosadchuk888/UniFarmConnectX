import { supabase } from '../core/supabase.js';

async function checkReferralRewards() {
  console.log('=== –ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–´–• –ù–ê–ß–ò–°–õ–ï–ù–ò–ô –î–õ–Ø USER 184 ===\n');
  
  const userId = 184;
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    console.log('üìä –ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–û–í:');
    const { data: referrals, error: refError } = await supabase
      .from('users')
      .select('id, username, balance_uni, balance_ton, uni_deposit_amount, uni_farming_last_update, created_at')
      .eq('referred_by', userId)
      .order('created_at', { ascending: false })
      .limit(10);
      
    if (refError) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', refError);
      return;
    }
    
    console.log(`\n–ù–∞–π–¥–µ–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${referrals?.length || 0}`);
    
    if (referrals && referrals.length > 0) {
      referrals.forEach((ref, index) => {
        console.log(`\n${index + 1}. ${ref.username} (ID: ${ref.id})`);
        console.log(`   - –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${new Date(ref.created_at).toLocaleString('ru-RU')}`);
        console.log(`   - UNI –¥–µ–ø–æ–∑–∏—Ç: ${ref.uni_deposit_amount || 0} UNI`);
        console.log(`   - –ë–∞–ª–∞–Ω—Å UNI: ${ref.balance_uni}`);
        console.log(`   - –ë–∞–ª–∞–Ω—Å TON: ${ref.balance_ton}`);
        const lastUpdate = ref.uni_farming_last_update ? new Date(ref.uni_farming_last_update) : null;
        if (lastUpdate) {
          const minutesAgo = Math.floor((Date.now() - lastUpdate.getTime()) / 1000 / 60);
          console.log(`   - –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞—Ä–º–∏–Ω–≥–∞: ${minutesAgo} –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥`);
        } else {
          console.log(`   - –§–∞—Ä–º–∏–Ω–≥ –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è`);
        }
      });
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–æ—Ö–æ–¥–æ–≤ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    console.log('\n\nüìà –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –î–û–•–û–î–û–í –†–ï–§–ï–†–ê–õ–û–í:');
    const referralIds = referrals?.map(r => r.id) || [];
    
    if (referralIds.length > 0) {
      const { data: farmingRewards, error: farmError } = await supabase
        .from('transactions')
        .select('id, user_id, type, amount, currency, created_at')
        .in('user_id', referralIds)
        .eq('type', 'FARMING_REWARD')
        .order('created_at', { ascending: false })
        .limit(20);
        
      if (farmingRewards && farmingRewards.length > 0) {
        console.log(`\n–ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–æ—Ö–æ–¥–∞: ${farmingRewards.length}`);
        farmingRewards.forEach(tx => {
          const ref = referrals?.find(r => r.id === tx.user_id);
          console.log(`- ${ref?.username}: +${tx.amount} ${tx.currency} (${new Date(tx.created_at).toLocaleString('ru-RU')})`);
        });
      } else {
        console.log('\n‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–æ—Ö–æ–¥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã');
        console.log('   –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ñ–∞—Ä–º–∏–Ω–≥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
      }
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–∏—Å—Å–∏–∏
    console.log('\n\nüí∞ –í–ê–®–ò –†–ï–§–ï–†–ê–õ–¨–ù–´–ï –ö–û–ú–ò–°–°–ò–ò:');
    const { data: referralRewards, error: rewardError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', userId)
      .eq('type', 'REFERRAL_REWARD')
      .order('created_at', { ascending: false })
      .limit(20);
      
    if (rewardError) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥:', rewardError);
    } else if (referralRewards && referralRewards.length > 0) {
      console.log(`\n–ù–∞–π–¥–µ–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–π: ${referralRewards.length}`);
      let totalUni = 0;
      let totalTon = 0;
      
      referralRewards.forEach(reward => {
        console.log(`\n- ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${reward.id}`);
        console.log(`  –°—É–º–º–∞: +${reward.amount} ${reward.currency}`);
        console.log(`  –û–ø–∏—Å–∞–Ω–∏–µ: ${reward.description}`);
        console.log(`  –î–∞—Ç–∞: ${new Date(reward.created_at).toLocaleString('ru-RU')}`);
        
        if (reward.currency === 'UNI') totalUni += parseFloat(reward.amount);
        if (reward.currency === 'TON') totalTon += parseFloat(reward.amount);
      });
      
      console.log(`\nüìä –ò–¢–û–ì–û –ü–û–õ–£–ß–ï–ù–û:`);
      console.log(`- UNI: ${totalUni.toFixed(6)}`);
      console.log(`- TON: ${totalTon.toFixed(6)}`);
    } else {
      console.log('\n‚ùå –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–∏—Å—Å–∏–∏ –µ—â–µ –Ω–µ –Ω–∞—á–∏—Å–ª–µ–Ω—ã');
      console.log('   –û–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—ã –ø–æ–ª—É—á–∞—Ç –¥–æ—Ö–æ–¥ –æ—Ç —Ñ–∞—Ä–º–∏–Ω–≥–∞');
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è —Å –º–æ–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    console.log('\n\n‚è∞ –ê–ù–ê–õ–ò–ó –í–†–ï–ú–ï–ù–ò:');
    const oldestReferral = referrals?.[referrals.length - 1];
    if (oldestReferral) {
      const createdTime = new Date(oldestReferral.created_at);
      const minutesSinceCreation = Math.floor((Date.now() - createdTime.getTime()) / 1000 / 60);
      console.log(`- –ü–µ—Ä–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª —Å–æ–∑–¥–∞–Ω: ${minutesSinceCreation} –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥`);
      console.log(`- –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ñ–∞—Ä–º–∏–Ω–≥–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç`);
      console.log(`- –û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π: ${Math.floor(minutesSinceCreation / 5)}`);
      
      if (minutesSinceCreation < 5) {
        console.log('\n‚ö†Ô∏è –ü—Ä–æ—à–ª–æ –º–µ–Ω–µ–µ 5 –º–∏–Ω—É—Ç —Å —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤');
        console.log('   –ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è');
      }
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    console.log('\n\nüîÑ –ü–†–û–í–ï–†–ö–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê:');
    const { data: recentTransactions, error: txError } = await supabase
      .from('transactions')
      .select('created_at')
      .eq('type', 'FARMING_REWARD')
      .order('created_at', { ascending: false })
      .limit(1);
      
    if (recentTransactions && recentTransactions.length > 0) {
      const lastTx = new Date(recentTransactions[0].created_at);
      const minutesAgo = Math.floor((Date.now() - lastTx.getTime()) / 1000 / 60);
      console.log(`- –ü–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–∞—Ä–º–∏–Ω–≥–∞: ${minutesAgo} –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥`);
      
      if (minutesAgo > 10) {
        console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π');
      } else {
        console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ');
      }
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

checkReferralRewards();