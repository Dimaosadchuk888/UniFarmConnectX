/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –æ—Ç UNI —Ñ–∞—Ä–º–∏–Ω–≥–∞
 */

import { supabase } from '../core/supabase';

async function checkUniReferralRewards() {
  console.log('\n=== –ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–´–• –ù–ê–ß–ò–°–õ–ï–ù–ò–ô –û–¢ UNI –§–ê–†–ú–ò–ù–ì–ê ===\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞
  const twoHoursAgo = new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString();
  
  const { data: uniReferralTx, error: txError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', 184)
    .eq('type', 'REFERRAL_REWARD')
    .eq('currency', 'UNI')
    .gte('created_at', twoHoursAgo)
    .order('created_at', { ascending: false });
    
  if (txError) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError);
    return;
  }
  
  console.log('üìä UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞:');
  console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:', uniReferralTx?.length || 0);
  
  if (uniReferralTx && uniReferralTx.length > 0) {
    let totalUniReferral = 0;
    
    uniReferralTx.forEach((tx, index) => {
      console.log(`\n${index + 1}. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ID: ${tx.id}`);
      console.log(`   –í—Ä–µ–º—è: ${tx.created_at}`);
      console.log(`   UNI: ${tx.amount_uni}`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
      
      totalUniReferral += parseFloat(tx.amount_uni || '0');
    });
    
    console.log(`\nüí∞ –ò–¢–û–ì–û UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö: ${totalUniReferral}`);
  } else {
    console.log('‚ùå –ù–µ—Ç UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π!');
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –í–°–ï —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (UNI –∏ TON)
  const { data: allReferralTx, error: allError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', 184)
    .eq('type', 'REFERRAL_REWARD')
    .gte('created_at', twoHoursAgo)
    .order('created_at', { ascending: false })
    .limit(20);
    
  console.log('\n\nüìã –í–°–ï —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20):');
  if (allReferralTx && allReferralTx.length > 0) {
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –≤–∞–ª—é—Ç–∞–º
    const byCurrency: Record<string, number> = {};
    
    allReferralTx.forEach(tx => {
      const currency = tx.currency || 'UNKNOWN';
      byCurrency[currency] = (byCurrency[currency] || 0) + 1;
    });
    
    console.log('\n–ü–æ –≤–∞–ª—é—Ç–∞–º:');
    Object.entries(byCurrency).forEach(([curr, count]) => {
      console.log(`- ${curr}: ${count} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
    });
    
    console.log('\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:');
    allReferralTx.slice(0, 10).forEach(tx => {
      console.log(`[${tx.currency}] ${tx.amount_uni || tx.amount_ton} - ${tx.description}`);
    });
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
  const { data: referrals, error: refError } = await supabase
    .from('users')
    .select('id, username, telegram_id, uni_deposit_amount, ton_farming_balance')
    .eq('referrer_id', 184)
    .gt('uni_deposit_amount', 0)
    .order('uni_deposit_amount', { ascending: false });
    
  console.log('\n\nüë• –†–µ—Ñ–µ—Ä–∞–ª—ã —Å UNI –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏:');
  if (referrals && referrals.length > 0) {
    console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${referrals.length}`);
    referrals.forEach(ref => {
      console.log(`- User ${ref.id}: ${ref.uni_deposit_amount} UNI –¥–µ–ø–æ–∑–∏—Ç`);
    });
  } else {
    console.log('–ù–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Å UNI –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏');
  }
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ FARMING_REWARD —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
  if (referrals && referrals.length > 0) {
    const referralIds = referrals.map(r => r.id);
    
    const { data: farmingRewards, error: farmError } = await supabase
      .from('transactions')
      .select('user_id, amount_uni, created_at')
      .in('user_id', referralIds)
      .eq('type', 'FARMING_REWARD')
      .eq('currency', 'UNI')
      .gte('created_at', twoHoursAgo)
      .order('created_at', { ascending: false })
      .limit(10);
      
    console.log('\n\nüìà –ü–æ—Å–ª–µ–¥–Ω–∏–µ UNI FARMING_REWARD —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:');
    if (farmingRewards && farmingRewards.length > 0) {
      farmingRewards.forEach(tx => {
        console.log(`User ${tx.user_id}: ${tx.amount_uni} UNI –≤ ${tx.created_at}`);
      });
      console.log('\nüî¥ –í–ù–ò–ú–ê–ù–ò–ï: –†–µ—Ñ–µ—Ä–∞–ª—ã –ø–æ–ª—É—á–∞—é—Ç –¥–æ—Ö–æ–¥, –Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–∏—Å—Å–∏–∏ –ù–ï –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è!');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkUniReferralRewards()
  .then(() => console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞'))
  .catch(error => console.error('‚ùå –û—à–∏–±–∫–∞:', error));