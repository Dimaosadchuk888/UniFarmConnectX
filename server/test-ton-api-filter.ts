/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
 * –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ö–û–î–ê - —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞
 */

import { supabase } from '../core/supabase';
import { transactionService } from '../core/TransactionService';

async function testTonApiFilter() {
  console.log('\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –§–ò–õ–¨–¢–†–ê–¶–ò–ò TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ô ===\n');
  
  const userId = 184;
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –ë–î
  console.log('1Ô∏è‚É£ –ü–†–Ø–ú–û–ô –ó–ê–ü–†–û–° –ö –ë–î (–∫–∞–∫ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å):');
  
  const { data: directTon, error } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', userId)
    .eq('currency', 'TON')
    .order('created_at', { ascending: false })
    .limit(20);
    
  console.log(`–ù–∞–π–¥–µ–Ω–æ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${directTon?.length || 0}`);
  if (directTon && directTon.length > 0) {
    console.log('–ü–µ—Ä–≤—ã–µ 3 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:');
    directTon.slice(0, 3).forEach(tx => {
      console.log(`- ID ${tx.id}: ${tx.amount} ${tx.currency}, type=${tx.type}`);
    });
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ UnifiedTransactionService
  console.log('\n\n2Ô∏è‚É£ –ß–ï–†–ï–ó UnifiedTransactionService (–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç API):');
  
  const result = await transactionService.getUserTransactions(
    userId,
    1,
    20,
    { currency: 'TON' }
  );
  
  console.log(`–ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${result.transactions.length}`);
  console.log(`Total –≤ –æ—Ç–≤–µ—Ç–µ: ${result.total}`);
  
  if (result.transactions.length > 0) {
    console.log('\n–ü–µ—Ä–≤—ã–µ 3 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:');
    result.transactions.slice(0, 3).forEach(tx => {
      console.log(`- ID ${tx.id}: ${tx.amount} ${tx.currency}, type=${tx.type}`);
    });
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ TransactionService
  console.log('\n\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:');
  
  // –°–º–æ—Ç—Ä–∏–º —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞
  const allResult = await transactionService.getUserTransactions(
    userId,
    1,
    100
  );
  
  const tonInAll = allResult.transactions.filter(tx => tx.currency === 'TON');
  console.log(`\n–í –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ –Ω–∞–π–¥–µ–Ω–æ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${tonInAll.length}`);
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  console.log('\n\n4Ô∏è‚É£ –°–¢–†–£–ö–¢–£–†–ê TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
  
  if (directTon && directTon.length > 0) {
    const firstTx = directTon[0];
    console.log('\n–ü—Ä–∏–º–µ—Ä TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ –ë–î:');
    console.log(JSON.stringify({
      id: firstTx.id,
      type: firstTx.type,
      amount: firstTx.amount,
      amount_uni: firstTx.amount_uni,
      amount_ton: firstTx.amount_ton,
      currency: firstTx.currency,
      status: firstTx.status
    }, null, 2));
  }
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  console.log('\n\n5Ô∏è‚É£ –ö–û–î –§–ò–õ–¨–¢–†–ê–¶–ò–ò:');
  console.log('core/TransactionService.ts —Å—Ç—Ä–æ–∫–∏ 169-207:');
  console.log('- –°—Ç—Ä–æ–∫–∞ 173: —Ñ–∏–ª—å—Ç—Ä –ø–æ currency –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –ë–î');
  console.log('- –°—Ç—Ä–æ–∫–∏ 204-206: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  console.log('- –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –¥–≤–æ–π–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏!');
  
  // 6. –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥
  console.log('\n\nüìä –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó:');
  console.log('====================');
  
  if (directTon?.length !== result.transactions.length) {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê –û–ë–ù–ê–†–£–ñ–ï–ù–ê!');
    console.log(`- –ë–î –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç: ${directTon?.length || 0} TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
    console.log(`- API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç: ${result.transactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
    console.log(`- –†–∞–∑–Ω–∏—Ü–∞: ${(directTon?.length || 0) - result.transactions.length}`);
    console.log('\n–í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞: –¥–≤–æ–π–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞');
  } else {
    console.log('‚úÖ API —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTonApiFilter()
  .then(() => console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω'))
  .catch(error => console.error('‚ùå –û—à–∏–±–∫–∞:', error));