/**
 * –ú–æ–¥—É–ª—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 * 
 * –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL –∏ 
 * –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –ë–î (Neon –∏–ª–∏ Replit PostgreSQL) –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.
 * –ú–æ–¥—É–ª—å –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î, —á—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.
 */

import { PoolConfig, PoolClient } from 'pg';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–ª—è SSL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
export type SSLConfig = {
  rejectUnauthorized?: boolean;
  ca?: string;
  cert?: string;
  key?: string;
}

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–∏–ø –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
export interface DbPoolConfig extends Omit<PoolConfig, 'statement_timeout'> {
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ç–∏–ø–µ
  keepAliveInitialDelayMillis?: number;
  statement_timeout?: number;
}

// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export enum DatabaseType {
  REPLIT = 'replit',
  NEON = 'neon'
}

// –¢–∏–ø—ã —Å–µ—Ç–µ–≤—ã—Ö —Ä–µ–∂–∏–º–æ–≤ SSL
export enum SSLMode {
  REQUIRE = 'require',
  PREFER = 'prefer',
  ALLOW = 'allow',
  DISABLE = 'disable'
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ç–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –í–û–ó–í–†–ê–©–ê–ï–¢ –¢–û–õ–¨–ö–û NEON - –ë–õ–û–ö–ò–†–£–ï–¢ REPLIT DB
 * @returns DatabaseType - —Ç–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–í–°–ï–ì–î–ê NEON)
 */
export function getDatabaseType(): DatabaseType {
  // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –¢–û–õ–¨–ö–û NEON DB
  console.log('[DB-CONFIG] üîí –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Neon DB - Replit PostgreSQL –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
  return DatabaseType.NEON;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ SSL –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 * @param mode - —Ä–µ–∂–∏–º SSL
 * @returns SSL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
 */
export function getSSLConfig(mode: SSLMode = SSLMode.REQUIRE): false | SSLConfig {
  if (mode === SSLMode.DISABLE) {
    return false;
  }
  
  return { 
    rejectUnauthorized: mode === SSLMode.REQUIRE 
  };
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–ª–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –ë–î
 * @param type - —Ç–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 * @returns –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–ª–∞
 */
export function getPoolOptions(type: DatabaseType): Partial<DbPoolConfig> {
  // –ë–∞–∑–æ–≤—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –ë–î
  const baseOptions: Partial<DbPoolConfig> = {
    max: 15,                    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    idleTimeoutMillis: 60000,   // –¢–∞–π–º–∞—É—Ç –ø—Ä–æ—Å—Ç–æ—è (1 –º–∏–Ω—É—Ç–∞)
    connectionTimeoutMillis: 10000, // –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (10 —Å–µ–∫—É–Ω–¥)
    allowExitOnIdle: false,     // –ù–µ –≤—ã—Ö–æ–¥–∏—Ç—å –ø—Ä–∏ –ø—Ä–æ—Å—Ç–æ–µ
    keepAlive: true,            // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–º
    statement_timeout: 30000    // –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (30 —Å–µ–∫—É–Ω–¥)
  };
  
  // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Neon
  if (type === DatabaseType.NEON) {
    return {
      ...baseOptions,
      // –° Neon —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ –º–µ–Ω—å—à–∏–π –ø—É–ª –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
      max: 10,
      // –ë–æ–ª—å—à–∏–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è Neon –∏–∑-–∑–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–∞–¥–µ—Ä–∂–µ–∫
      connectionTimeoutMillis: 15000,
    };
  }
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Replit PostgreSQL
  return baseOptions;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
 * @param alternateNumber - –Ω–æ–º–µ—Ä –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (0 - –æ—Å–Ω–æ–≤–Ω–∞—è, >0 - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ)
 * @returns –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—É–ª–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
 */
export function getDbConfig(alternateNumber: number = 0): PoolConfig {
  const dbType = getDatabaseType();
  const isProduction = process.env.NODE_ENV === 'production';
  
  // –í—ã–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–º–µ—Ä–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
  let connectionString: string | undefined;
  
  if (alternateNumber === 0) {
    // –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    connectionString = process.env.DATABASE_URL;
  } else if (alternateNumber === 1) {
    // –ü–µ—Ä–≤–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - –æ–±—ã—á–Ω–æ –æ—Å–Ω–æ–≤–Ω–æ–π Neon URL
    connectionString = process.env.NEON_DB_URL || process.env.ALTERNATE_DB_URL;
  } else if (alternateNumber === 2) {
    // –í—Ç–æ—Ä–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - ALTERNATE_DB_URL_1 –µ—Å–ª–∏ –µ—Å—Ç—å
    connectionString = process.env.ALTERNATE_DB_URL_1 || process.env.ALTERNATE_DB_URL;
  } else if (alternateNumber === 3) {
    // –¢—Ä–µ—Ç—å—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - ALTERNATE_DB_URL_2 –µ—Å–ª–∏ –µ—Å—Ç—å
    connectionString = process.env.ALTERNATE_DB_URL_2 || process.env.ALTERNATE_DB_URL;
  } else if (alternateNumber === 4) {
    // –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - ALTERNATE_DB_URL_3 –µ—Å–ª–∏ –µ—Å—Ç—å
    connectionString = process.env.ALTERNATE_DB_URL_3 || process.env.ALTERNATE_DB_URL;
  } else {
    // –û—Å–Ω–æ–≤–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - ALTERNATE_DB_URL
    connectionString = process.env.ALTERNATE_DB_URL;
  }
  
  // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
  if (!connectionString) {
    connectionString = process.env.DATABASE_URL;
  }
  
  // –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  if (!connectionString) {
    throw new Error(
      "–°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î –Ω–µ –∑–∞–¥–∞–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞."
    );
  }
  
  console.log(`[DB Config] –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è #${alternateNumber}`);
  
  // –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  const baseConfig = {
    connectionString,
    ssl: (dbType === DatabaseType.NEON || isProduction) 
      ? getSSLConfig(SSLMode.REQUIRE)
      : false
  };
  
  // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø—É–ª–∞
  return {
    ...baseConfig,
    ...getPoolOptions(dbType)
  };
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç SSL —Ä–µ–∂–∏–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * @returns –†–µ–∂–∏–º SSL
 */
export function determineSSLMode(): SSLMode {
  const sslMode = process.env.PGSSLMODE?.toLowerCase();
  
  switch (sslMode) {
    case 'require':
      return SSLMode.REQUIRE;
    case 'prefer':
      return SSLMode.PREFER;
    case 'allow':
      return SSLMode.ALLOW;
    case 'disable':
      return SSLMode.DISABLE;
    default:
      return process.env.NODE_ENV === 'production' 
        ? SSLMode.REQUIRE 
        : SSLMode.PREFER;
  }
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è SSL
export function setupEnvironmentVariables(): void {
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º SSL
  if (!process.env.PGSSLMODE) {
    process.env.PGSSLMODE = 'require';
  }
  
  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const dbType = getDatabaseType();
  console.log(`[DB Config] –¢–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${dbType}`);
  console.log(`[DB Config] SSL —Ä–µ–∂–∏–º: ${process.env.PGSSLMODE}`);
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
setupEnvironmentVariables();