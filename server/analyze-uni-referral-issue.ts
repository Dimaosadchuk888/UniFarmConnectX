/**
 * –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏
 * –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ö–û–î–ê - —Ç–æ–ª—å–∫–æ –∞–Ω–∞–ª–∏–∑
 */

import { supabase } from '../core/supabase';

async function analyzeUniReferralIssue() {
  console.log('\n=== –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´ –° UNI –†–ï–§–ï–†–ê–õ–¨–ù–´–ú–ò ===\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –ø–æ–ª–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
  console.log('1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ UNI –†–ï–§–ï–†–ê–õ–¨–ù–´–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
  
  const { data: referralTx, error: refError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', 184)
    .eq('type', 'REFERRAL_REWARD')
    .eq('currency', 'UNI')
    .order('created_at', { ascending: false })
    .limit(5);
    
  if (refError) {
    console.error('–û—à–∏–±–∫–∞:', refError);
    return;
  }
  
  console.log(`\n–ù–∞–π–¥–µ–Ω–æ UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${referralTx?.length || 0}`);
  
  if (referralTx && referralTx.length > 0) {
    referralTx.forEach((tx, i) => {
      console.log(`\n${i + 1}. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ID ${tx.id}:`);
      console.log(`   - type: ${tx.type}`);
      console.log(`   - currency: ${tx.currency}`);
      console.log(`   - amount: ${tx.amount}`);
      console.log(`   - amount_uni: ${tx.amount_uni}`);
      console.log(`   - amount_ton: ${tx.amount_ton}`);
      console.log(`   - status: ${tx.status}`);
      console.log(`   - description: ${tx.description}`);
      console.log(`   - created_at: ${tx.created_at}`);
    });
  } else {
    console.log('‚ùå UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ù–ï –ù–ê–ô–î–ï–ù–´!');
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
  console.log('\n\n2Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–ê–ì–ò–ù–ê–¶–ò–ò:');
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: allTx, count } = await supabase
    .from('transactions')
    .select('*', { count: 'exact' })
    .eq('user_id', 184)
    .order('created_at', { ascending: false });
    
  console.log(`\n–í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 184: ${count}`);
  
  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º
  const byType: Record<string, number> = {};
  allTx?.forEach(tx => {
    const key = `${tx.type}_${tx.currency}`;
    byType[key] = (byType[key] || 0) + 1;
  });
  
  console.log('\n–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º:');
  Object.entries(byType).sort((a, b) => b[1] - a[1]).forEach(([type, cnt]) => {
    console.log(`- ${type}: ${cnt} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
  });
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏—é UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ
  console.log('\n\n3Ô∏è‚É£ –ü–û–ó–ò–¶–ò–Ø UNI –†–ï–§–ï–†–ê–õ–¨–ù–´–• –í –û–ë–©–ï–ú –°–ü–ò–°–ö–ï:');
  
  if (allTx) {
    let foundPositions: number[] = [];
    allTx.forEach((tx, index) => {
      if (tx.type === 'REFERRAL_REWARD' && tx.currency === 'UNI') {
        foundPositions.push(index + 1);
      }
    });
    
    if (foundPositions.length > 0) {
      console.log(`\nUNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ –ø–æ–∑–∏—Ü–∏—è—Ö: ${foundPositions.join(', ')}`);
      console.log(`–≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–Ω–∏ –±—É–¥—É—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö:`);
      foundPositions.forEach(pos => {
        const page = Math.ceil(pos / 20);
        console.log(`- –ü–æ–∑–∏—Ü–∏—è ${pos} ‚Üí –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page}`);
      });
    } else {
      console.log('‚ùå UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –ù–ï –Ω–∞–π–¥–µ–Ω—ã –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π!');
    }
  }
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  console.log('\n\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –§–ò–õ–¨–¢–†–ê–¶–ò–ò –ü–û –í–ê–õ–Æ–¢–ï:');
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä currency='UNI'
  const { data: uniOnly, error: uniError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', 184)
    .eq('currency', 'UNI')
    .order('created_at', { ascending: false })
    .limit(20);
    
  if (uniOnly) {
    const types = new Set(uniOnly.map(tx => tx.type));
    console.log(`\n–ü—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–µ currency='UNI' –Ω–∞–π–¥–µ–Ω–æ —Ç–∏–ø–æ–≤: ${Array.from(types).join(', ')}`);
    
    const hasReferral = uniOnly.some(tx => tx.type === 'REFERRAL_REWARD');
    console.log(`–ï—Å—Ç—å –ª–∏ REFERRAL_REWARD –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${hasReferral ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
  }
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Ü–µ–ø–æ—á–∫—É
  console.log('\n\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –¶–ï–ü–û–ß–ö–ò:');
  
  const { data: referrals } = await supabase
    .from('users')
    .select('id, username, uni_deposit_amount, referrer_id')
    .eq('referrer_id', 184);
    
  console.log(`\n–†–µ—Ñ–µ—Ä–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 184: ${referrals?.length || 0}`);
  if (referrals && referrals.length > 0) {
    referrals.forEach(ref => {
      console.log(`- User ${ref.id}: –¥–µ–ø–æ–∑–∏—Ç ${ref.uni_deposit_amount} UNI`);
    });
  }
  
  // 6. –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  console.log('\n\n6Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –°–û–ó–î–ê–ù–ò–Ø –†–ï–§–ï–†–ê–õ–¨–ù–´–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
  console.log('\n–ú–µ—Å—Ç–∞ –≤ –∫–æ–¥–µ –≥–¥–µ —Å–æ–∑–¥–∞—é—Ç—Å—è UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ:');
  console.log('1. core/scheduler/farmingScheduler.ts:275-283 - –≤—ã–∑–æ–≤ distributeReferralRewards');
  console.log('2. modules/referral/service.ts - –º–µ—Ç–æ–¥ distributeReferralRewards');
  console.log('   - –°—Ç—Ä–æ–∫–∏ –≥–¥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —á–µ—Ä–µ–∑ UnifiedTransactionService');
  console.log('   - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: type: "REFERRAL_REWARD", currency: "UNI"');
  
  // 7. –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥
  console.log('\n\nüìä –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó:');
  console.log('====================');
  
  if (referralTx && referralTx.length > 0) {
    console.log('‚úÖ UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –°–û–ó–î–ê–Æ–¢–°–Ø –≤ –ë–î');
    console.log('‚ö†Ô∏è  –ù–æ –º–æ–≥—É—Ç –±—ã—Ç—å –ù–ï –í–ò–î–ù–´ –≤ UI –∏–∑-–∑–∞:');
    console.log('   1. –ü–∞–≥–∏–Ω–∞—Ü–∏–∏ - –æ–Ω–∏ –Ω–∞ 2-3 —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
    console.log('   2. –ë–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ FARMING_REWARD —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    console.log('   3. –í–æ–∑–º–æ–∂–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ UI');
  } else {
    console.log('‚ùå UNI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ù–ï –°–û–ó–î–ê–Æ–¢–°–Ø');
    console.log('   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('   1. –û—à–∏–±–∫–∞ –≤ ReferralService.distributeReferralRewards');
    console.log('   2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
    console.log('   3. –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º currency –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
analyzeUniReferralIssue()
  .then(() => console.log('\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω'))
  .catch(error => console.error('‚ùå –û—à–∏–±–∫–∞:', error));