import { supabase } from '../core/supabase.js';

async function checkMultilevelReferrals() {
  console.log('=== –ü–†–û–í–ï–†–ö–ê –ú–ù–û–ì–û–£–†–û–í–ù–ï–í–´–• –†–ï–§–ï–†–ê–õ–¨–ù–´–• –ù–ê–ß–ò–°–õ–ï–ù–ò–ô ===\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞—Ä–º–∏–Ω–≥ –¥–æ—Ö–æ–¥—ã —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π
    console.log('üìä –§–ê–†–ú–ò–ù–ì –î–û–•–û–î–´ –†–ï–§–ï–†–ê–õ–û–í:\n');
    
    // –£—Ä–æ–≤–µ–Ω—å 1 - –ø—Ä—è–º—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã User 74
    const { data: level1, error: err1 } = await supabase
      .from('users')
      .select('id, username, balance_uni, uni_deposit_amount')
      .eq('referred_by', 74)
      .limit(3);
      
    console.log('–£—Ä–æ–≤–µ–Ω—å 1 (–ø—Ä—è–º—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã User 74):');
    for (const ref of level1 || []) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ñ–∞—Ä–º–∏–Ω–≥–∞
      const { data: farmingTx } = await supabase
        .from('transactions')
        .select('amount, created_at')
        .eq('user_id', ref.id)
        .eq('type', 'FARMING_REWARD')
        .eq('currency', 'UNI')
        .order('created_at', { ascending: false })
        .limit(1);
        
      console.log(`- ${ref.username} (ID: ${ref.id})`);
      console.log(`  –î–µ–ø–æ–∑–∏—Ç: ${ref.uni_deposit_amount?.toLocaleString('ru-RU')} UNI`);
      if (farmingTx && farmingTx.length > 0) {
        console.log(`  –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥: +${parseFloat(farmingTx[0].amount).toLocaleString('ru-RU')} UNI`);
        console.log(`  –í—Ä–µ–º—è: ${new Date(farmingTx[0].created_at).toLocaleString('ru-RU')}`);
      } else {
        console.log(`  –î–æ—Ö–æ–¥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç`);
      }
    }
    
    // –£—Ä–æ–≤–µ–Ω—å 2 - —Ä–µ—Ñ–µ—Ä–∞–ª—ã —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    console.log('\n–£—Ä–æ–≤–µ–Ω—å 2 (—Ä–µ—Ñ–µ—Ä–∞–ª—ã –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è):');
    const level1Ids = level1?.map(r => r.id) || [];
    if (level1Ids.length > 0) {
      const { data: level2 } = await supabase
        .from('users')
        .select('id, username, referred_by, uni_deposit_amount')
        .in('referred_by', level1Ids)
        .limit(3);
        
      for (const ref of level2 || []) {
        const { data: farmingTx } = await supabase
          .from('transactions')
          .select('amount, created_at')
          .eq('user_id', ref.id)
          .eq('type', 'FARMING_REWARD')
          .eq('currency', 'UNI')
          .order('created_at', { ascending: false })
          .limit(1);
          
        console.log(`- ${ref.username} (ID: ${ref.id}, –ø—Ä–∏–≥–ª–∞—à–µ–Ω: User ${ref.referred_by})`);
        console.log(`  –î–µ–ø–æ–∑–∏—Ç: ${ref.uni_deposit_amount?.toLocaleString('ru-RU')} UNI`);
        if (farmingTx && farmingTx.length > 0) {
          console.log(`  –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥: +${parseFloat(farmingTx[0].amount).toLocaleString('ru-RU')} UNI`);
        } else {
          console.log(`  –î–æ—Ö–æ–¥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç`);
        }
      }
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è User 74
    console.log('\nüí∞ –†–ï–§–ï–†–ê–õ–¨–ù–´–ï –ö–û–ú–ò–°–°–ò–ò USER 74:\n');
    
    const { data: referralRewards, error: rewardsError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 74)
      .eq('type', 'REFERRAL_REWARD')
      .order('created_at', { ascending: false })
      .limit(10);
      
    if (referralRewards && referralRewards.length > 0) {
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${referralRewards.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:\n`);
      referralRewards.forEach((tx, i) => {
        console.log(`${i+1}. +${parseFloat(tx.amount).toLocaleString('ru-RU')} ${tx.currency}`);
        console.log(`   ${tx.description}`);
        console.log(`   ${new Date(tx.created_at).toLocaleString('ru-RU')}\n`);
      });
    } else {
      console.log('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
    // 3. –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
    console.log('\nüìñ –ö–ê–ö –†–ê–ë–û–¢–ê–ï–¢ –ú–ù–û–ì–û–£–†–û–í–ù–ï–í–ê–Ø –°–ò–°–¢–ï–ú–ê:\n');
    console.log('1. –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–∏—Å—Å–∏–∏ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –¢–û–õ–¨–ö–û –∫–æ–≥–¥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Ö–æ–¥');
    console.log('2. User 74 –ø–æ–ª—É—á–∞–µ—Ç –∫–æ–º–∏—Å—Å–∏–∏ —Ç–æ–ª—å–∫–æ –æ—Ç –ø—Ä—è–º—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (—É—Ä–æ–≤–µ–Ω—å 1)');
    console.log('3. –†–µ—Ñ–µ—Ä–∞–ª—ã —É—Ä–æ–≤–Ω—è 1 –ø–æ–ª—É—á–∞—é—Ç –∫–æ–º–∏—Å—Å–∏–∏ –æ—Ç —Å–≤–æ–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (—É—Ä–æ–≤–µ–Ω—å 2)');
    console.log('4. –ò —Ç–∞–∫ –¥–∞–ª–µ–µ –¥–æ 20 —É—Ä–æ–≤–Ω–µ–π\n');
    console.log('–ü—Ä–∏–º–µ—Ä —Ü–µ–ø–æ—á–∫–∏:');
    console.log('- test_user_L2_1 –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Ö–æ–¥ ‚Üí –µ–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å test_user_L1_1 –ø–æ–ª—É—á–∞–µ—Ç 5%');
    console.log('- test_user_L1_1 –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Ö–æ–¥ ‚Üí User 74 –ø–æ–ª—É—á–∞–µ—Ç 5%');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

checkMultilevelReferrals();