import { supabase } from '../core/supabase.js';
import { BalanceManager } from '../core/BalanceManager.js';
import { UnifiedTransactionService } from '../core/TransactionService.js';
import { ReferralService } from '../modules/referral/service.js';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è boost –ø–∞–∫–µ—Ç–æ–≤
const BOOST_PACKAGES = [
  { id: 1, amount: 10, daily_rate: 0.005, duration_days: 30 }, // 0.5% –≤ –¥–µ–Ω—å
  { id: 2, amount: 25, daily_rate: 0.0075, duration_days: 30 }, // 0.75% –≤ –¥–µ–Ω—å
  { id: 3, amount: 50, daily_rate: 0.01, duration_days: 30 }, // 1% –≤ –¥–µ–Ω—å
  { id: 4, amount: 100, daily_rate: 0.0125, duration_days: 30 }, // 1.25% –≤ –¥–µ–Ω—å
  { id: 5, amount: 250, daily_rate: 0.015, duration_days: 30 }, // 1.5% –≤ –¥–µ–Ω—å
  { id: 6, amount: 500, daily_rate: 0.02, duration_days: 30 } // 2% –≤ –¥–µ–Ω—å
];

async function fixTonBoostReferrals() {
  console.log('=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï TON BOOST –î–õ–Ø –†–ï–§–ï–†–ê–õ–û–í ===\n');
  
  const referralIds = [186, 187, 188, 189, 190];
  
  try {
    // 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É –≤ ton_farming_data
    console.log('üìä –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–¶–ï–ù–¢–ù–û–ô –°–¢–ê–í–ö–ò TON BOOST:');
    const { data: farmingData, error: fetchError } = await supabase
      .from('ton_farming_data')
      .select('*')
      .in('user_id', referralIds);
      
    if (fetchError || !farmingData) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', fetchError);
      return;
    }
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${farmingData.length}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞–≤–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for (const data of farmingData) {
      const boostPackage = BOOST_PACKAGES.find(p => p.id === data.boost_package_id);
      if (!boostPackage) {
        console.log(`‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –ø–∞–∫–µ—Ç –¥–ª—è boost_package_id: ${data.boost_package_id}`);
        continue;
      }
      
      const { error: updateError } = await supabase
        .from('ton_farming_data')
        .update({ 
          farming_rate: boostPackage.daily_rate,
          farming_last_update: new Date().toISOString()
        })
        .eq('user_id', data.user_id);
        
      if (updateError) {
        console.error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è user ${data.user_id}:`, updateError);
      } else {
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–∞–≤–∫–∞ –¥–ª—è user ${data.user_id}: ${boostPackage.daily_rate * 100}% –≤ –¥–µ–Ω—å`);
      }
    }
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const { data: updatedData, error: refetchError } = await supabase
      .from('ton_farming_data')
      .select('*')
      .in('user_id', referralIds);
      
    if (refetchError || !updatedData) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', refetchError);
      return;
    }
    
    // 3. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏ –Ω–∞—á–∏—Å–ª—è–µ–º –¥–æ—Ö–æ–¥
    console.log('\nüí∞ –†–ê–°–ß–ï–¢ –ò –ù–ê–ß–ò–°–õ–ï–ù–ò–ï TON –î–û–•–û–î–ê:');
    const balanceManager = new BalanceManager();
    const transactionService = UnifiedTransactionService.getInstance();
    const referralService = new ReferralService();
    
    for (const data of updatedData) {
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: user, error: userError } = await supabase
        .from('users')
        .select('*')
        .eq('id', data.user_id)
        .single();
        
      if (userError || !user) {
        console.error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${data.user_id}:`, userError);
        continue;
      }
      
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è —Å –Ω–∞—á–∞–ª–∞ —Ñ–∞—Ä–º–∏–Ω–≥–∞
      const startTime = new Date(data.farming_start_timestamp);
      const now = new Date();
      const minutesPassed = (now.getTime() - startTime.getTime()) / 1000 / 60;
      const periodsPassed = Math.floor(minutesPassed / 5); // –ü–µ—Ä–∏–æ–¥—ã –ø–æ 5 –º–∏–Ω—É—Ç
      
      console.log(`\nüë§ ${user.username} (ID: ${user.id}):`);
      console.log(`   - TON –¥–µ–ø–æ–∑–∏—Ç: ${data.farming_balance} TON`);
      console.log(`   - –°—Ç–∞–≤–∫–∞: ${data.farming_rate * 100}% –≤ –¥–µ–Ω—å`);
      console.log(`   - –ú–∏–Ω—É—Ç —Å –Ω–∞—á–∞–ª–∞: ${minutesPassed.toFixed(0)}`);
      console.log(`   - –ü–µ—Ä–∏–æ–¥–æ–≤ (5 –º–∏–Ω): ${periodsPassed}`);
      
      if (periodsPassed > 0) {
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–æ—Ö–æ–¥ –∑–∞ –≤—Å–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
        const dailyRate = data.farming_rate;
        const periodRate = dailyRate / 288; // 288 –ø–µ—Ä–∏–æ–¥–æ–≤ –ø–æ 5 –º–∏–Ω—É—Ç –≤ —Å—É—Ç–∫–∞—Ö
        const totalIncome = data.farming_balance * periodRate * periodsPassed;
        
        console.log(`   - –î–æ—Ö–æ–¥ –∑–∞ –ø–µ—Ä–∏–æ–¥: ${totalIncome.toFixed(6)} TON`);
        
        // –ù–∞—á–∏—Å–ª—è–µ–º –¥–æ—Ö–æ–¥
        await balanceManager.addBalance(user.id, 0, totalIncome, 'ton_boost_income');
        
        // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        const transaction = await transactionService.createTransaction({
          user_id: user.id,
          type: 'FARMING_REWARD',
          amount_uni: 0,
          amount_ton: totalIncome,
          currency: 'TON',
          status: 'completed',
          description: `TON Boost income: ${totalIncome.toFixed(6)} TON (${periodsPassed} periods)`,
          metadata: {
            original_type: 'TON_BOOST_INCOME',
            transaction_source: 'ton_boost_scheduler',
            boost_package_id: data.boost_package_id,
            farming_balance: data.farming_balance,
            daily_rate: dailyRate,
            periods: periodsPassed
          }
        });
        
        console.log(`   ‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: ID ${transaction.id}`);
        
        // –ù–∞—á–∏—Å–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–∏—Å—Å–∏–∏
        console.log(`   üéÅ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–π...`);
        await referralService.distributeReferralRewards(
          user.id,
          totalIncome,
          'TON',
          'ton_boost',
          transaction.id
        );
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        await supabase
          .from('ton_farming_data')
          .update({ farming_last_update: new Date().toISOString() })
          .eq('user_id', user.id);
      }
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('\n\nüìä –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
    const { data: referralRewards, error: rewardError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 184)
      .eq('type', 'REFERRAL_REWARD')
      .eq('currency', 'TON')
      .order('created_at', { ascending: false })
      .limit(10);
      
    if (referralRewards && referralRewards.length > 0) {
      console.log(`\n‚úÖ –ù–∞–π–¥–µ–Ω–æ TON —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–π: ${referralRewards.length}`);
      let totalTon = 0;
      
      referralRewards.forEach(reward => {
        console.log(`- ${reward.description}: +${reward.amount} TON`);
        totalTon += parseFloat(reward.amount);
      });
      
      console.log(`\nüí∞ –ò–¢–û–ì–û –ü–û–õ–£–ß–ï–ù–û TON: ${totalTon.toFixed(6)}`);
    } else {
      console.log('\n‚ö†Ô∏è TON —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–∏—Å—Å–∏–∏ –µ—â–µ –Ω–µ –ø–æ—è–≤–∏–ª–∏—Å—å');
      console.log('   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥');
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

fixTonBoostReferrals();