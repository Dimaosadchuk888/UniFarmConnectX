/**
 * üõ°Ô∏è –í–´–ü–û–õ–ù–ï–ù–ò–ï –°–û–ó–î–ê–ù–ò–Ø –£–ù–ò–ö–ê–õ–¨–ù–û–ì–û –ò–ù–î–ï–ö–°–ê –ß–ï–†–ï–ó SUPABASE
 * 
 * –î–∞—Ç–∞: 26 –∏—é–ª—è 2025
 * –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –∏—Å–ø–æ–ª—å–∑—É—è Supabase SQL API
 */

import { supabase } from './core/supabase';

async function executeUniqueIndexCreation(): Promise<void> {
  console.log('\nüõ°Ô∏è –°–û–ó–î–ê–ù–ò–ï –£–ù–ò–ö–ê–õ–¨–ù–û–ì–û –ò–ù–î–ï–ö–°–ê –ß–ï–†–ï–ó SUPABASE');
  console.log('=' .repeat(70));
  console.log(`–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`);
  console.log('–¶–µ–ª—å: –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
  console.log('=' .repeat(70));

  try {
    // –≠–¢–ê–ü 1: –°–û–ó–î–ê–ù–ò–ï –ë–ï–ó–û–ü–ê–°–ù–û–ì–û PARTIAL INDEX
    console.log('\nüîß –≠–¢–ê–ü 1: –°–û–ó–î–ê–ù–ò–ï PARTIAL UNIQUE INDEX');
    console.log('-' .repeat(50));
    
    const currentTimestamp = '2025-07-26T12:57:00.311Z';
    console.log(`   –ó–∞—â–∏—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–µ–π –ø–æ—Å–ª–µ: ${currentTimestamp}`);
    console.log('   –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥—É–±–ª–∏ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–µ—Ç—Ä–æ–Ω—É—Ç—ã–º–∏');
    
    // SQL –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è partial index
    const createIndexSQL = `
      CREATE UNIQUE INDEX CONCURRENTLY idx_tx_hash_unique_new_deposits 
      ON transactions(tx_hash_unique) 
      WHERE tx_hash_unique IS NOT NULL 
        AND created_at > '${currentTimestamp}';
    `;
    
    console.log('\n   üìù –í—ã–ø–æ–ª–Ω—è—é SQL –∫–æ–º–∞–Ω–¥—É:');
    console.log(`   ${createIndexSQL.trim()}`);
    
    try {
      // –í—ã–ø–æ–ª–Ω—è–µ–º —á–µ—Ä–µ–∑ Supabase RPC (–µ—Å–ª–∏ –µ—Å—Ç—å) –∏–ª–∏ –ø—Ä—è–º–æ–π SQL
      const { data, error } = await supabase.rpc('exec_sql', {
        sql_query: createIndexSQL
      });
      
      if (error && error.message.includes('function exec_sql does not exist')) {
        console.log('   ‚ö†Ô∏è RPC —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥...');
        
        // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥: –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å DDL –æ–ø–µ—Ä–∞—Ü–∏–∏
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤
        const { error: testError } = await supabase.rpc('create_temp_table', {});
        
        if (testError) {
          console.log('   ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è DDL –æ–ø–µ—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ Supabase API');
          console.log('   üí° –†–ï–®–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ SQL –∫–æ–º–∞–Ω–¥—É –Ω–∞–ø—Ä—è–º—É—é –≤ Supabase Dashboard');
          console.log('\n   üìã –¢–û–ß–ù–ê–Ø SQL –ö–û–ú–ê–ù–î–ê –î–õ–Ø –í–´–ü–û–õ–ù–ï–ù–ò–Ø:');
          console.log('   =' .repeat(60));
          console.log(createIndexSQL);
          console.log('   =' .repeat(60));
          
          console.log('\n   üìç –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –í–´–ü–û–õ–ù–ï–ù–ò–Æ:');
          console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard');
          console.log('   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor');
          console.log('   3. –í—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤—ã—à–µ');
          console.log('   4. –ù–∞–∂–º–∏—Ç–µ "Run"');
          console.log('   5. –î–æ–∂–¥–∏—Ç–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏');
          
          return;
        }
        
      } else if (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞: ${error.message}`);
        
        if (error.message.includes('already exists')) {
          console.log('   ‚úÖ –ò–Ω–¥–µ–∫—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —ç—Ç–æ —Ö–æ—Ä–æ—à–æ!');
        } else if (error.message.includes('duplicate key')) {
          console.log('   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏');
          console.log('   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –û—á–∏—Å—Ç–∏—Ç—å –¥—É–±–ª–∏ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–æ–ª–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞');
        } else {
          throw error;
        }
        
      } else {
        console.log('   ‚úÖ Partial unique index —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
        console.log(`   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${data}`);
      }
      
    } catch (sqlError) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL: ${sqlError}`);
      console.log('   üí° –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∫–æ–º–∞–Ω–¥—É –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard');
      
      console.log('\n   üìã SQL –î–õ–Ø –†–£–ß–ù–û–ì–û –í–´–ü–û–õ–ù–ï–ù–ò–Ø:');
      console.log('   =' .repeat(60));
      console.log(createIndexSQL);
      console.log('   =' .repeat(60));
    }
    
    // –≠–¢–ê–ü 2: –ü–†–û–í–ï–†–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ò–ù–î–ï–ö–°–ê
    console.log('\nüîç –≠–¢–ê–ü 2: –ü–†–û–í–ï–†–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ò–ù–î–ï–ö–°–ê');
    console.log('-' .repeat(50));
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
      const { data: indexCheck } = await supabase
        .from('pg_indexes')
        .select('indexname, indexdef')
        .like('indexname', '%tx_hash%');
        
      if (indexCheck && indexCheck.length > 0) {
        console.log('   ‚úÖ –ù–∞–π–¥–µ–Ω—ã –∏–Ω–¥–µ–∫—Å—ã –Ω–∞ tx_hash:');
        indexCheck.forEach(idx => {
          console.log(`     - ${idx.indexname}`);
        });
      } else {
        console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å—ã —á–µ—Ä–µ–∑ pg_indexes');
        console.log('   üí° –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞');
      }
      
    } catch (checkError) {
      console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω–¥–µ–∫—Å—ã —á–µ—Ä–µ–∑ API');
      console.log('   üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard');
    }
    
    // –≠–¢–ê–ü 3: –¢–ï–°–¢ –ó–ê–©–ò–¢–´ –û–¢ –î–£–ë–õ–ï–ô
    console.log('\nüß™ –≠–¢–ê–ü 3: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–©–ò–¢–´ –û–¢ –î–£–ë–õ–ï–ô');
    console.log('-' .repeat(50));
    
    const testTxHash = 'test_protection_' + Date.now();
    console.log(`   –¢–µ—Å—Ç–æ–≤—ã–π hash: ${testTxHash}`);
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π user_id
      const { data: testUser } = await supabase
        .from('users')
        .select('id')
        .limit(1)
        .single();
        
      if (!testUser) {
        console.log('   ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
        return;
      }
      
      // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—É—é —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
      const { error: firstError } = await supabase
        .from('transactions')
        .insert({
          user_id: testUser.id,
          type: 'FARMING_REWARD',
          amount: '0.001',
          amount_uni: '0',
          amount_ton: '0.001',
          currency: 'TON',
          status: 'completed',
          description: 'Test duplicate protection 1',
          tx_hash_unique: testTxHash,
          metadata: { test: true }
        });
        
      if (firstError) {
        console.log(`   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å: ${firstError.message}`);
        return;
      }
      
      console.log('   ‚úÖ –ü–µ—Ä–≤–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞');
      
      // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç
      const { error: duplicateError } = await supabase
        .from('transactions')
        .insert({
          user_id: testUser.id,
          type: 'FARMING_REWARD',
          amount: '0.002',
          amount_uni: '0',
          amount_ton: '0.002',
          currency: 'TON',
          status: 'completed',
          description: 'Test duplicate protection 2',
          tx_hash_unique: testTxHash,
          metadata: { test: true }
        });
        
      if (duplicateError) {
        if (duplicateError.message.includes('duplicate') || 
            duplicateError.message.includes('unique') ||
            duplicateError.message.includes('constraint')) {
          console.log('   üéâ –û–¢–õ–ò–ß–ù–û! –ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–µ–π –†–ê–ë–û–¢–ê–ï–¢!');
          console.log(`   üìã –°–æ–æ–±—â–µ–Ω–∏–µ: ${duplicateError.message}`);
        } else {
          console.log(`   ‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${duplicateError.message}`);
        }
      } else {
        console.log('   ‚ùå –ö–†–ò–¢–ò–ß–ù–û: –î—É–±–ª–∏–∫–∞—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω! –ó–∞—â–∏—Ç–∞ –ù–ï –†–ê–ë–û–¢–ê–ï–¢!');
        console.log('   üí° –í–æ–∑–º–æ–∂–Ω–æ –∏–Ω–¥–µ–∫—Å –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è –∏–ª–∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –Ω–µ –∫–æ –≤—Å–µ–º –∑–∞–ø–∏—Å—è–º');
      }
      
      // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏
      await supabase
        .from('transactions')
        .delete()
        .eq('tx_hash_unique', testTxHash);
        
      console.log('   üßπ –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –æ—á–∏—â–µ–Ω—ã');
      
    } catch (testError) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${testError}`);
    }
    
    // –≠–¢–ê–ü 4: –ò–¢–û–ì–û–í–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
    console.log('\nüéØ –≠–¢–ê–ü 4: –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò');
    console.log('-' .repeat(50));
    
    console.log('   ‚úÖ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è partial unique index –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
    console.log('   ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—â–∏—Ç—ã –æ—Ç –¥—É–±–ª–µ–π –ø—Ä–æ–≤–µ–¥–µ–Ω–æ');
    
    console.log('\n   üõ°Ô∏è –ï–°–õ–ò –ò–ù–î–ï–ö–° –°–û–ó–î–ê–õ–°–Ø –£–°–ü–ï–®–ù–û:');
    console.log('   - –ù–æ–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è');
    console.log('   - –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥—É–±–ª–∏ –æ—Å—Ç–∞—é—Ç—Å—è –≤ –±–∞–∑–µ');
    console.log('   - –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ');
    console.log('   - –ú–æ–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥—É–±–ª–∏ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è');
    
    console.log('\n   ‚ö†Ô∏è –ï–°–õ–ò –ù–£–ñ–ù–û –í–´–ü–û–õ–ù–ò–¢–¨ –í–†–£–ß–ù–£–Æ:');
    console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard ‚Üí SQL Editor');
    console.log('   2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ —Ñ–∞–π–ª–∞ EXECUTE_UNIQUE_INDEX_CREATION_2025-07-26.sql');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è');
    console.log('   4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∑–∞—â–∏—Ç—É –æ—Ç –¥—É–±–ª–µ–π');
    
    console.log('\n   üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì –ü–û–°–õ–ï –°–û–ó–î–ê–ù–ò–Ø:');
    console.log('   - –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é INSERT –æ–ø–µ—Ä–∞—Ü–∏–π');
    console.log('   - –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –æ—à–∏–±–æ–∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è');
    console.log('   - –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –æ—á–∏—Å—Ç–∫—É —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥—É–±–ª–µ–π');
    
    console.log('\n‚úÖ –°–û–ó–î–ê–ù–ò–ï –£–ù–ò–ö–ê–õ–¨–ù–û–ì–û –ò–ù–î–ï–ö–°–ê –ó–ê–í–ï–†–®–ï–ù–û');
    
  } catch (error) {
    console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–∞:', error);
    console.log('\nüõ°Ô∏è –°–ò–°–¢–ï–ú–ê –û–°–¢–ê–ï–¢–°–Ø –ë–ï–ó–û–ü–ê–°–ù–û–ô');
    console.log('   - –ù–∏–∫–∞–∫–∏—Ö –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ');
    console.log('   - –î–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –≤ —Ü–µ–ª–æ—Å—Ç–∏');
    console.log('   - –ú–æ–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é');
  }
}

// –ó–∞–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞
executeUniqueIndexCreation()
  .then(() => {
    console.log('\nüéØ –ü–†–û–¶–ï–°–° –°–û–ó–î–ê–ù–ò–Ø –£–ù–ò–ö–ê–õ–¨–ù–û–ì–û –ò–ù–î–ï–ö–°–ê –ó–ê–í–ï–†–®–ï–ù');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞:', error);
    process.exit(1);
  });