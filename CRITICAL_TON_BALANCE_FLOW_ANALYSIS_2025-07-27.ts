/**
 * –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –ü–û–¢–û–ö–û–í TON –ë–ê–õ–ê–ù–°–û–í
 * –ü–æ–ª–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º —Å –º–∞–ø–∏–Ω–≥–∞–º–∏, –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞–º–∏ —Å—Ä–µ–¥—Å—Ç–≤
 */

import { supabase } from './core/supabase';

async function analyzeTonBalanceFlows() {
  console.log('üîç –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –ü–û–¢–û–ö–û–í TON –ë–ê–õ–ê–ù–°–û–í');
  console.log('='.repeat(80));
  
  const issues = [];
  const warnings = [];
  const suspiciousPatterns = [];
  
  try {
    // 1. –ê–ù–ê–õ–ò–ó –°–ò–°–¢–ï–ú–´ –ú–ê–ü–ò–ù–ì–û–í
    console.log('\n1Ô∏è‚É£ –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –¢–†–ê–ù–ó–ê–ö–¶–ò–û–ù–ù–´–• –ú–ê–ü–ò–ù–ì–û–í:');
    console.log('-'.repeat(70));
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–∞–ø–∏–Ω–≥–∏ –∏–∑ –∫–æ–¥–∞
    const TRANSACTION_TYPE_MAPPING = {
      'FARMING_REWARD': 'FARMING_REWARD',
      'FARMING_DEPOSIT': 'FARMING_DEPOSIT',
      'REFERRAL_REWARD': 'REFERRAL_REWARD', 
      'MISSION_REWARD': 'MISSION_REWARD',
      'DAILY_BONUS': 'DAILY_BONUS',
      'WITHDRAWAL': 'WITHDRAWAL',
      'DEPOSIT': 'DEPOSIT',
      // –ü–†–û–ë–õ–ï–ú–ù–´–ï –ú–ê–ü–ò–ù–ì–ò:
      'TON_BOOST_INCOME': 'FARMING_REWARD',   // ‚úÖ –õ–æ–≥–∏—á–Ω–æ - –¥–æ—Ö–æ–¥—ã
      'UNI_DEPOSIT': 'FARMING_REWARD',        // üî¥ –ü–†–û–ë–õ–ï–ú–ê - –¥–µ–ø–æ–∑–∏—Ç—ã –∫–∞–∫ –¥–æ—Ö–æ–¥—ã
      'TON_DEPOSIT': 'DEPOSIT',              // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–µ–¥–∞–≤–Ω–æ  
      'UNI_WITHDRAWAL': 'WITHDRAWAL',         // ‚úÖ –õ–æ–≥–∏—á–Ω–æ
      'TON_WITHDRAWAL': 'WITHDRAWAL',         // ‚úÖ –õ–æ–≥–∏—á–Ω–æ
      'BOOST_PURCHASE': 'FARMING_REWARD',     // üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê
      'AIRDROP_REWARD': 'DAILY_BONUS',        // ‚úÖ –õ–æ–≥–∏—á–Ω–æ
      'withdrawal': 'WITHDRAWAL',              // ‚úÖ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
      'withdrawal_fee': 'WITHDRAWAL'           // ‚úÖ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
    };
    
    console.log('üìã –ê–ù–ê–õ–ò–ó –í–°–ï–• –ú–ê–ü–ò–ù–ì–û–í:');
    Object.entries(TRANSACTION_TYPE_MAPPING).forEach(([source, target]) => {
      console.log(`   ${source.padEnd(20)} ‚Üí ${target}`);
    });
    
    // 2. –ê–ù–ê–õ–ò–ó shouldUpdateBalance –õ–û–ì–ò–ö–ò
    console.log('\n2Ô∏è‚É£ –ê–ù–ê–õ–ò–ó shouldUpdateBalance –õ–û–ì–ò–ö–ò:');
    console.log('-'.repeat(70));
    
    const incomeTypes = [
      'FARMING_REWARD',
      'REFERRAL_REWARD', 
      'MISSION_REWARD',
      'DAILY_BONUS',
      'TON_BOOST_INCOME',
      'UNI_DEPOSIT',
      'TON_DEPOSIT',
      'AIRDROP_REWARD',
      'DEPOSIT'
    ];
    
    console.log('üí∞ –¢–ò–ü–´ –û–ë–ù–û–í–õ–Ø–Æ–©–ò–ï –ë–ê–õ–ê–ù–° (–¥–æ—Ö–æ–¥—ã):');
    incomeTypes.forEach(type => {
      console.log(`   ‚úÖ ${type}`);
    });
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–ù–´–• –ö–û–ú–ë–ò–ù–ê–¶–ò–ô
    console.log('\nüîç –ü–†–û–ë–õ–ï–ú–ù–´–ï –ö–û–ú–ë–ò–ù–ê–¶–ò–ò:');
    
    const problematicMappings = [];
    Object.entries(TRANSACTION_TYPE_MAPPING).forEach(([source, target]) => {
      const sourceUpdatesBalance = incomeTypes.includes(source);
      const targetUpdatesBalance = incomeTypes.includes(target);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
      if (source.includes('PURCHASE') && targetUpdatesBalance) {
        problematicMappings.push({
          source,
          target,
          problem: '–ü–û–ö–£–ü–ö–ê –ú–ê–ü–ò–¢–°–Ø –í –î–û–•–û–î',
          severity: '–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø'
        });
      }
      
      if (source.includes('DEPOSIT') && source !== 'TON_DEPOSIT' && targetUpdatesBalance) {
        problematicMappings.push({
          source,
          target,
          problem: '–î–ï–ü–û–ó–ò–¢ –ú–ê–ü–ò–¢–°–Ø –í –î–û–•–û–î',
          severity: '–í–´–°–û–ö–ê–Ø'
        });
      }
      
      if (source.includes('WITHDRAWAL') && targetUpdatesBalance) {
        problematicMappings.push({
          source,
          target,
          problem: '–í–´–í–û–î –ú–ê–ü–ò–¢–°–Ø –í –î–û–•–û–î',
          severity: '–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø'
        });
      }
    });
    
    problematicMappings.forEach(mapping => {
      console.log(`   üî¥ ${mapping.severity}: ${mapping.source} ‚Üí ${mapping.target}`);
      console.log(`      –ü—Ä–æ–±–ª–µ–º–∞: ${mapping.problem}`);
      issues.push(`${mapping.source}: ${mapping.problem}`);
    });
    
    // 3. –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–ù–ò–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô –ó–ê 24 –ß–ê–°–ê
    console.log('\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–ù–ò–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô (24 —á–∞—Å–∞):');
    console.log('-'.repeat(70));
    
    const { data: recentTransactions, error: txError } = await supabase
      .from('transactions')
      .select('id, user_id, type, amount_ton, amount_uni, description, metadata, created_at')
      .gte('created_at', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString())
      .order('created_at', { ascending: false })
      .limit(100);
    
    if (txError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError);
      issues.push('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    } else if (recentTransactions) {
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ 24 —á–∞—Å–∞: ${recentTransactions.length}`);
      
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º
      const typeStats = {};
      const userStats = {};
      const suspiciousTransactions = [];
      
      recentTransactions.forEach(tx => {
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º
        if (!typeStats[tx.type]) {
          typeStats[tx.type] = { count: 0, users: new Set(), totalTon: 0, totalUni: 0 };
        }
        typeStats[tx.type].count++;
        typeStats[tx.type].users.add(tx.user_id);
        typeStats[tx.type].totalTon += parseFloat(tx.amount_ton || '0');
        typeStats[tx.type].totalUni += parseFloat(tx.amount_uni || '0');
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        if (!userStats[tx.user_id]) {
          userStats[tx.user_id] = { transactions: 0, tonFlow: 0, uniFlow: 0, types: new Set() };
        }
        userStats[tx.user_id].transactions++;
        userStats[tx.user_id].tonFlow += parseFloat(tx.amount_ton || '0');
        userStats[tx.user_id].uniFlow += parseFloat(tx.amount_uni || '0');
        userStats[tx.user_id].types.add(tx.type);
        
        // –ü–æ–∏—Å–∫ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
        const tonAmount = parseFloat(tx.amount_ton || '0');
        const uniAmount = parseFloat(tx.amount_uni || '0');
        
        // 1. BOOST_PURCHASE —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
        if (tx.type === 'BOOST_PURCHASE' && tonAmount > 0) {
          suspiciousTransactions.push({
            ...tx,
            suspicion: 'BOOST_PURCHASE —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π TON —Å—É–º–º–æ–π (–≤–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–≥)',
            severity: '–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø'
          });
        }
        
        // 2. –î–µ–ø–æ–∑–∏—Ç—ã —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
        if ((tx.type === 'DEPOSIT' || tx.type.includes('DEPOSIT')) && (tonAmount < 0 || uniAmount < 0)) {
          suspiciousTransactions.push({
            ...tx,
            suspicion: '–î–ï–ü–û–ó–ò–¢ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π —Å—É–º–º–æ–π (—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è)',
            severity: '–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø'
          });
        }
        
        // 3. –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const sameUserSameAmount = recentTransactions.filter(t => 
          t.user_id === tx.user_id && 
          t.amount_ton === tx.amount_ton && 
          t.type === tx.type &&
          Math.abs(new Date(t.created_at).getTime() - new Date(tx.created_at).getTime()) < 60000 // –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –º–∏–Ω—É—Ç—ã
        );
        
        if (sameUserSameAmount.length > 1) {
          suspiciousTransactions.push({
            ...tx,
            suspicion: `–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: ${sameUserSameAmount.length} –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –º–∏–Ω—É—Ç—É`,
            severity: '–í–´–°–û–ö–ê–Ø'
          });
        }
      });
      
      console.log('\nüìã –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –¢–ò–ü–ê–ú:');
      Object.entries(typeStats).forEach(([type, stats]: [string, any]) => {
        console.log(`   ${type}:`);
        console.log(`      –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${stats.count}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.users.size}`);
        console.log(`      TON: ${stats.totalTon.toFixed(6)}, UNI: ${stats.totalUni.toFixed(2)}`);
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–æ–º–∞–ª–∏–∏
        if (type === 'BOOST_PURCHASE' && stats.totalTon > 0) {
          console.log(`      üî¥ –ê–ù–û–ú–ê–õ–ò–Ø: BOOST_PURCHASE –∏–º–µ–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π TON –±–∞–ª–∞–Ω—Å!`);
          issues.push(`${type}: –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π TON –±–∞–ª–∞–Ω—Å ${stats.totalTon.toFixed(6)}`);
        }
        
        if (type.includes('DEPOSIT') && (stats.totalTon < 0 || stats.totalUni < 0)) {
          console.log(`      üî¥ –ê–ù–û–ú–ê–õ–ò–Ø: –î–ï–ü–û–ó–ò–¢ –∏–º–µ–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å!`);
          issues.push(`${type}: –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã –ø—Ä–∏ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö`);
        }
      });
      
      // 4. –ê–ù–ê–õ–ò–ó –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
      console.log('\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –° –ê–ù–û–ú–ê–õ–¨–ù–û–ô –ê–ö–¢–ò–í–ù–û–°–¢–¨–Æ:');
      console.log('-'.repeat(70));
      
      const suspiciousUsers = Object.entries(userStats)
        .filter(([userId, stats]: [string, any]) => {
          return stats.transactions > 10 || // –±–æ–ª–µ–µ 10 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –¥–µ–Ω—å
                 Math.abs(stats.tonFlow) > 5 || // –±–æ–ª—å—à–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è TON
                 stats.types.size > 5; // –º–Ω–æ–≥–æ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        })
        .sort(([,a], [,b]) => (b as any).transactions - (a as any).transactions);
      
      if (suspiciousUsers.length > 0) {
        console.log('üë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –° –í–´–°–û–ö–û–ô –ê–ö–¢–ò–í–ù–û–°–¢–¨–Æ:');
        suspiciousUsers.slice(0, 10).forEach(([userId, stats]: [string, any]) => {
          console.log(`   User ${userId}:`);
          console.log(`      –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${stats.transactions}`);
          console.log(`      TON –ø–æ—Ç–æ–∫: ${stats.tonFlow > 0 ? '+' : ''}${stats.tonFlow.toFixed(6)}`);
          console.log(`      UNI –ø–æ—Ç–æ–∫: ${stats.uniFlow > 0 ? '+' : ''}${stats.uniFlow.toFixed(2)}`);
          console.log(`      –¢–∏–ø—ã: ${Array.from(stats.types).join(', ')}`);
          
          if (stats.tonFlow > 2) {
            warnings.push(`User ${userId}: –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ–∫–∏–π –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π TON –ø–æ—Ç–æ–∫`);
          }
        });
      }
      
      // 5. –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò
      if (suspiciousTransactions.length > 0) {
        console.log('\n5Ô∏è‚É£ –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:');
        console.log('-'.repeat(70));
        
        const uniqueSuspicious = suspiciousTransactions.filter((tx, index, self) => 
          index === self.findIndex(t => t.id === tx.id)
        );
        
        uniqueSuspicious.slice(0, 20).forEach(tx => {
          console.log(`üö® ${tx.severity}: Transaction ${tx.id}`);
          console.log(`   User: ${tx.user_id}, Type: ${tx.type}`);
          console.log(`   Amount: ${tx.amount_ton || 0} TON, ${tx.amount_uni || 0} UNI`);
          console.log(`   –ü—Ä–æ–±–ª–µ–º–∞: ${tx.suspicion}`);
          console.log(`   –í—Ä–µ–º—è: ${tx.created_at}`);
          
          suspiciousPatterns.push(`TX${tx.id}: ${tx.suspicion}`);
        });
      }
    }
    
    // 6. –ê–ù–ê–õ–ò–ó –ö–û–ù–ö–†–ï–¢–ù–´–• –ü–†–û–ë–õ–ï–ú–ù–´–• –°–¶–ï–ù–ê–†–ò–ï–í
    console.log('\n6Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–ù–´–• –°–¶–ï–ù–ê–†–ò–ï–í:');
    console.log('-'.repeat(70));
    
    console.log('üéØ –°–¶–ï–ù–ê–†–ò–ô 1: TON Boost –ø–æ–∫—É–ø–∫–∞');
    console.log('   –û–∂–∏–¥–∞–µ–º—ã–π –ø–æ—Ç–æ–∫: User –ø–æ–∫—É–ø–∞–µ—Ç ‚Üí —Å–ø–∏—Å–∞–Ω–∏–µ —Å –±–∞–ª–∞–Ω—Å–∞ ‚Üí –∞–∫—Ç–∏–≤–∞—Ü–∏—è boost');
    console.log('   –¢–µ–∫—É—â–∏–π –º–∞–ø–ø–∏–Ω–≥: BOOST_PURCHASE ‚Üí FARMING_REWARD ‚Üí –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ –±–∞–ª–∞–Ω—Å');
    console.log('   üî¥ –†–ï–ó–£–õ–¨–¢–ê–¢: "–í–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–≥" - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Å–ø–∏—Å–∞–Ω–∏—è');
    
    console.log('\nüéØ –°–¶–ï–ù–ê–†–ò–ô 2: TON –¥–µ–ø–æ–∑–∏—Ç');
    console.log('   –û–∂–∏–¥–∞–µ–º—ã–π –ø–æ—Ç–æ–∫: User –¥–µ–ø–æ–∑–∏—Ç ‚Üí –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ –±–∞–ª–∞–Ω—Å');
    console.log('   –¢–µ–∫—É—â–∏–π –º–∞–ø–ø–∏–Ω–≥: TON_DEPOSIT ‚Üí DEPOSIT ‚Üí –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ –±–∞–ª–∞–Ω—Å');
    console.log('   ‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢: –†–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)');
    
    console.log('\nüéØ –°–¶–ï–ù–ê–†–ò–ô 3: UNI –¥–µ–ø–æ–∑–∏—Ç');
    console.log('   –û–∂–∏–¥–∞–µ–º—ã–π –ø–æ—Ç–æ–∫: User –¥–µ–ø–æ–∑–∏—Ç ‚Üí –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ –±–∞–ª–∞–Ω—Å');
    console.log('   –¢–µ–∫—É—â–∏–π –º–∞–ø–ø–∏–Ω–≥: UNI_DEPOSIT ‚Üí FARMING_REWARD ‚Üí –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ –±–∞–ª–∞–Ω—Å');
    console.log('   ‚ö†Ô∏è –†–ï–ó–£–õ–¨–¢–ê–¢: –†–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ª–æ–≥–∏—á–µ—Å–∫–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    
    // 7. –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –î–í–û–ô–ù–´–• –û–ë–ù–û–í–õ–ï–ù–ò–ô –ë–ê–õ–ê–ù–°–ê
    console.log('\n7Ô∏è‚É£ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –î–í–û–ô–ù–´–• –û–ë–ù–û–í–õ–ï–ù–ò–ô:');
    console.log('-'.repeat(70));
    
    console.log('üîç –ò–°–¢–û–ß–ù–ò–ö–ò –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê:');
    console.log('   1. TransactionService.shouldUpdateBalance() ‚Üí updateUserBalance()');
    console.log('   2. BalanceManager.updateUserBalance() (–ø—Ä—è–º—ã–µ –≤—ã–∑–æ–≤—ã)');
    console.log('   3. WalletService.processWithdrawal() ‚Üí BalanceManager');
    console.log('   4. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ –¥–æ—Ö–æ–¥–æ–≤ ‚Üí BalanceManager');
    
    console.log('\nüí• –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ï –ö–û–ù–§–õ–ò–ö–¢–´:');
    console.log('   üî¥ TonBoost –ø–æ–∫—É–ø–∫–∞ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å:');
    console.log('      - WalletService.processWithdrawal() —Å–ø–∏—Å—ã–≤–∞–µ—Ç TON');
    console.log('      - TransactionService —Å–æ–∑–¥–∞–µ—Ç BOOST_PURCHASE ‚Üí FARMING_REWARD');
    console.log('      - shouldUpdateBalance(BOOST_PURCHASE) = false, –ù–û');
    console.log('      - shouldUpdateBalance –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –ø–æ dbType (FARMING_REWARD) = true');
    console.log('      - updateUserBalance –∑–∞—á–∏—Å–ª—è–µ—Ç TON –æ–±—Ä–∞—Ç–Ω–æ');
    console.log('   üéØ –ò–¢–û–ì: –°–ø–∏—Å–∞–Ω–∏–µ + –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ = "–≤–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–≥"');
    
    // 8. –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
    console.log('\n8Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:');
    console.log('-'.repeat(70));
    
    console.log(`üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´: ${issues.length}`);
    issues.forEach((issue, index) => {
      console.log(`   ${index + 1}. ${issue}`);
    });
    
    console.log(`\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø: ${warnings.length}`);
    warnings.forEach((warning, index) => {
      console.log(`   ${index + 1}. ${warning}`);
    });
    
    console.log(`\nüö® –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–ï –ü–ê–¢–¢–ï–†–ù–´: ${suspiciousPatterns.length}`);
    suspiciousPatterns.slice(0, 10).forEach((pattern, index) => {
      console.log(`   ${index + 1}. ${pattern}`);
    });
    
    // –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –ö–†–ò–¢–ò–ß–ù–û–°–¢–ò
    const criticalityScore = Math.max(0, 100 - (issues.length * 25) - (warnings.length * 10) - (suspiciousPatterns.length * 5));
    console.log(`\nüìä –ö–†–ò–¢–ò–ß–ù–û–°–¢–¨ –°–ò–°–¢–ï–ú–´: ${criticalityScore}/100`);
    
    if (criticalityScore <= 30) {
      console.log('üî¥ –°–ò–°–¢–ï–ú–ê –í –ö–†–ò–¢–ò–ß–ï–°–ö–û–ú –°–û–°–¢–û–Ø–ù–ò–ò - –¢–†–ï–ë–£–ï–¢ –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø');
    } else if (criticalityScore <= 60) {
      console.log('‚ö†Ô∏è –°–ò–°–¢–ï–ú–ê –ò–ú–ï–ï–¢ –°–ï–†–¨–ï–ó–ù–´–ï –ü–†–û–ë–õ–ï–ú–´');
    } else {
      console.log('üíõ –°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø');
    }
    
    // 9. –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ
    console.log('\n9Ô∏è‚É£ –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('-'.repeat(70));
    
    console.log('üéØ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø (–ü–†–ò–û–†–ò–¢–ï–¢ 1):');
    console.log('   1. –ò–∑–º–µ–Ω–∏—Ç—å BOOST_PURCHASE mapping:');
    console.log('      –ë–´–õ–û: "BOOST_PURCHASE": "FARMING_REWARD"');
    console.log('      –°–¢–ê–¢–¨: "BOOST_PURCHASE": "BOOST_PAYMENT" (–Ω–æ–≤—ã–π —Ç–∏–ø, –Ω–µ –æ–±–Ω–æ–≤–ª—è—é—â–∏–π –±–∞–ª–∞–Ω—Å)');
    
    console.log('\n   2. –ò—Å–ø—Ä–∞–≤–∏—Ç—å UNI_DEPOSIT mapping:');
    console.log('      –ë–´–õ–û: "UNI_DEPOSIT": "FARMING_REWARD"');
    console.log('      –°–¢–ê–¢–¨: "UNI_DEPOSIT": "DEPOSIT"');
    
    console.log('\nüîß –°–ò–°–¢–ï–ú–ù–´–ï –£–õ–£–ß–®–ï–ù–ò–Ø (–ü–†–ò–û–†–ò–¢–ï–¢ 2):');
    console.log('   3. –î–æ–±–∞–≤–∏—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç –¥–≤–æ–π–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞');
    console.log('   4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å WebSocket –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π');
    console.log('   5. –î–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    
    console.log('\nüìä –ú–û–ù–ò–¢–û–†–ò–ù–ì (–ü–†–ò–û–†–ò–¢–ï–¢ 3):');
    console.log('   6. –°–æ–∑–¥–∞—Ç—å –∞–ª–µ—Ä—Ç—ã –Ω–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ BOOST_PURCHASE');
    console.log('   7. –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤—ã—Å–æ–∫–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é');
    console.log('   8. –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –æ–ø–µ—Ä–∞—Ü–∏–∏');
    
  } catch (error) {
    console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –∞–Ω–∞–ª–∏–∑–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
analyzeTonBalanceFlows()
  .then(() => {
    console.log('\n‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω');
    process.exit(0);
  })
  .catch(error => {
    console.error('üí• –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞:', error);
    process.exit(1);
  });