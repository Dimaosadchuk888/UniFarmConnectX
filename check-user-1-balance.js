/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=1 –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Supabase
 */
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ SUPABASE_URL –∏–ª–∏ SUPABASE_KEY');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkUser1Balance() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=1...');
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=1
    const { data: user, error } = await supabase
      .from('users')
      .select('id, telegram_id, username, balance_uni, balance_ton, uni_farming_active, uni_deposit_amount, uni_farming_balance')
      .eq('id', 1)
      .single();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
      return;
    }
    
    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID=1 –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=1:');
    console.log('   ID:', user.id);
    console.log('   Telegram ID:', user.telegram_id);
    console.log('   Username:', user.username);
    console.log('   UNI Balance:', user.balance_uni);
    console.log('   TON Balance:', user.balance_ton);
    console.log('   UNI Farming Active:', user.uni_farming_active);
    console.log('   UNI Deposit Amount:', user.uni_deposit_amount);
    console.log('   UNI Farming Balance:', user.uni_farming_balance);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å—ã –∫–∞–∫ —á–∏—Å–ª–∞
    const balanceData = {
      uniBalance: parseFloat(user.balance_uni?.toString() || "0"),
      tonBalance: parseFloat(user.balance_ton?.toString() || "0"),
      uniFarmingActive: user.uni_farming_active || false,
      uniDepositAmount: parseFloat(user.uni_deposit_amount?.toString() || "0"),
      uniFarmingBalance: parseFloat(user.uni_farming_balance?.toString() || "0")
    };
    
    console.log('\nüìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã –¥–ª—è UI:');
    console.log(JSON.stringify(balanceData, null, 2));
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

checkUser1Balance();