import { supabase } from './core/supabaseClient';

async function analyzeBoostPurchaseSequence() {
  console.log('=== –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–ò –ü–û–ö–£–ü–ö–ò TON BOOST ===\n');
  
  const userId = '184';
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å—é —Ç–∞–±–ª–∏—Ü—É users —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–æ–ª–µ –æ–±–Ω—É–ª–µ–Ω–∏—è
    console.log('1. –ê–ù–ê–õ–ò–ó –¢–ê–ë–õ–ò–¶–´ USERS:');
    console.log('=' * 60);
    
    const { data: userFields, error: fieldsError } = await supabase
      .from('users')
      .select('*')
      .eq('id', userId)
      .single();
      
    if (fieldsError) {
      console.log('–û—à–∏–±–∫–∞:', fieldsError);
    } else {
      // –ò—â–µ–º –≤—Å–µ –ø–æ–ª—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å TON
      console.log('\n–ü–æ–ª—è —Å TON –¥–∞–Ω–Ω—ã–º–∏:');
      Object.entries(userFields).forEach(([key, value]) => {
        if (key.includes('ton') || key.includes('TON')) {
          console.log(`  ${key}: ${value}`);
        }
      });
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É ton_farming_data
    console.log('\n\n2. –ü–†–û–í–ï–†–ö–ê TON_FARMING_DATA:');
    console.log('=' * 60);
    
    const { data: tonFarmingData, error: farmingError } = await supabase
      .from('ton_farming_data')
      .select('*')
      .eq('user_id', userId)
      .single();
      
    if (farmingError) {
      console.log('–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –æ—à–∏–±–∫–∞:', farmingError.message);
    } else {
      console.log('–ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å:');
      console.log(`  user_id: ${tonFarmingData.user_id}`);
      console.log(`  boost_active: ${tonFarmingData.boost_active}`);
      console.log(`  boost_package_id: ${tonFarmingData.boost_package_id}`);
      console.log(`  farming_balance: ${tonFarmingData.farming_balance}`);
      console.log(`  farming_rate: ${tonFarmingData.farming_rate}`);
    }
    
    // 3. –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏–π
    console.log('\n\n3. –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–¨ –°–û–ë–´–¢–ò–ô –ü–†–ò –ü–û–ö–£–ü–ö–ï:');
    console.log('=' * 60);
    
    console.log('\nüìã –ß–¢–û –î–û–õ–ñ–ù–û –ü–†–û–ò–°–•–û–î–ò–¢–¨:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ TON (–±—ã–ª–æ 100.36)');
    console.log('2. subtractBalance –≤—ã—á–∏—Ç–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞–∫–µ—Ç–∞');
    console.log('3. –ê–∫—Ç–∏–≤–∞—Ü–∏—è TON Boost –ø–∞–∫–µ—Ç–∞');
    console.log('4. –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ UNI –±–æ–Ω—É—Å–∞');
    console.log('5. –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏');
    
    console.log('\n‚ùå –ß–¢–û –ü–†–û–ò–°–•–û–î–ò–¢ –ù–ê –°–ê–ú–û–ú –î–ï–õ–ï:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ TON ‚úÖ');
    console.log('2. –ë–∞–ª–∞–Ω—Å –æ–±–Ω—É–ª—è–µ—Ç—Å—è –≤–º–µ—Å—Ç–æ –≤—ã—á–µ—Ç–∞ ‚ùå');
    console.log('3. TON Boost –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è ‚úÖ');
    console.log('4. UNI –±–æ–Ω—É—Å –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è ‚úÖ');
    console.log('5. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –ù–ï —Å–æ–∑–¥–∞–µ—Ç—Å—è ‚ùå');
    
    // 4. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã
    console.log('\n\n4. –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –û–ë–ù–£–õ–ï–ù–ò–Ø:');
    console.log('=' * 60);
    
    console.log('\nüîç –ì–ò–ü–û–¢–ï–ó–ê 1: –î–≤–æ–π–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ');
    console.log('–í–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –µ—â–µ –æ–¥–Ω–æ –º–µ—Å—Ç–æ –≥–¥–µ —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –±–∞–ª–∞–Ω—Å');
    
    console.log('\nüîç –ì–ò–ü–û–¢–ï–ó–ê 2: –û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ');
    console.log('requiredAmount –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–µ–Ω —Ç–µ–∫—É—â–µ–º—É –±–∞–ª–∞–Ω—Å—É');
    
    console.log('\nüîç –ì–ò–ü–û–¢–ï–ó–ê 3: –¢—Ä–∏–≥–≥–µ—Ä –≤ –ë–î');
    console.log('–í–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –æ–±–Ω—É–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ boost');
    
    console.log('\nüîç –ì–ò–ü–û–¢–ï–ó–ê 4: –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è');
    console.log('–î—Ä—É–≥–æ–π –ø—Ä–æ—Ü–µ—Å—Å –º–æ–≥ –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ');
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∏–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π —Å—É–º–º–æ–π
    console.log('\n\n5. –ü–û–ò–°–ö –¢–†–ê–ù–ó–ê–ö–¶–ò–ô –° –û–¢–†–ò–¶–ê–¢–ï–õ–¨–ù–û–ô –°–£–ú–ú–û–ô:');
    console.log('=' * 60);
    
    const { data: negativeTx } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', parseInt(userId))
      .lt('amount', 0)
      .order('created_at', { ascending: false })
      .limit(10);
      
    if (negativeTx && negativeTx.length > 0) {
      console.log('\n–ù–∞–π–¥–µ–Ω—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π —Å—É–º–º–æ–π:');
      negativeTx.forEach(tx => {
        console.log(`\n  –í—Ä–µ–º—è: ${new Date(tx.created_at).toLocaleString()}`);
        console.log(`  –¢–∏–ø: ${tx.type}`);
        console.log(`  –°—É–º–º–∞: ${tx.amount} ${tx.currency}`);
        console.log(`  –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
      });
    } else {
      console.log('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π —Å—É–º–º–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

analyzeBoostPurchaseSequence();