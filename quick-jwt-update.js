import { supabase } from './core/supabase.ts';
import jwt from 'jsonwebtoken';
import fetch from 'node-fetch';
import dotenv from 'dotenv';

dotenv.config();

async function quickJwtUpdate() {
  console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...\n');
  
  try {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è user 61
    const jwtSecret = process.env.JWT_SECRET || 'unifarm_jwt_secret_key_2025_production';
    const payload = {
      userId: 61,
      telegram_id: 123456789,
      username: 'test_new_auth_user',
      ref_code: 'REF_1751646496183_new_auth',
      iat: Math.floor(Date.now() / 1000),
      exp: Math.floor(Date.now() / 1000) + (7 * 24 * 60 * 60)
    };
    
    const token = jwt.sign(payload, jwtSecret);
    
    // –î–µ–ª–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
    console.log('üì° –¢–µ—Å—Ç–∏—Ä—É—é –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω...');
    const response = await fetch('http://localhost:3000/api/v2/users/profile', {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    const data = await response.json();
    console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç API:', JSON.stringify(data, null, 2));
    
    if (data.success && data.data.id === 61) {
      console.log('\nüéØ –£–°–ü–ï–•! –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ.');
      console.log('–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –µ–≥–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ.');
      
      // –°–æ–∑–¥–∞–µ–º HTML —Ñ–∞–π–ª –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
      const htmlContent = `<!DOCTYPE html>
<html>
<head>
    <title>JWT Token Update</title>
    <script>
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
        localStorage.setItem('authToken', '${token}');
        localStorage.setItem('jwt_token', '${token}');
        setTimeout(() => {
            window.location.href = '/';
        }, 1000);
    </script>
</head>
<body>
    <h1>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞...</h1>
    <p>–¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É...</p>
</body>
</html>`;
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML —Ñ–∞–π–ª
      const fs = await import('fs');
      fs.writeFileSync('auto-jwt-update.html', htmlContent);
      console.log('\nüìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª auto-jwt-update.html');
      console.log('–û—Ç–∫—Ä–æ–π—Ç–µ –µ–≥–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:3000/auto-jwt-update.html');
      
    } else {
      console.log('\n‚ùå –û—à–∏–±–∫–∞: —Ç–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

quickJwtUpdate();