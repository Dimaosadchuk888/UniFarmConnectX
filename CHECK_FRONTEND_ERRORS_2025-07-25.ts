/**
 * –ü–†–û–í–ï–†–ö–ê FRONTEND –û–®–ò–ë–û–ö - 25 –∏—é–ª—è 2025  
 * –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏: TypeError: null is not an object (evaluating 'U.current.useState')
 * –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ö–û–î–ê - —Ç–æ–ª—å–∫–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
 */

import { promises as fs } from 'fs';
import * as path from 'path';

async function checkFrontendErrors() {
    console.log('\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê FRONTEND –û–®–ò–ë–û–ö');
    console.log('–ê–Ω–∞–ª–∏–∑: TypeError: null is not an object (evaluating \'U.current.useState\')');
    console.log('=' .repeat(70));
    
    try {
        // ================================
        // 1. –ê–ù–ê–õ–ò–ó –û–®–ò–ë–ö–ò USESTATE
        // ================================
        console.log('\nüìã 1. –ê–ù–ê–õ–ò–ó –û–®–ò–ë–ö–ò USESTATE');
        console.log('-' .repeat(60));
        
        console.log('\nüîç 1.1 –û–ü–ò–°–ê–ù–ò–ï –û–®–ò–ë–ö–ò:');
        console.log('   ‚ùå TypeError: null is not an object (evaluating \'U.current.useState\')');
        console.log('   üí° –ü—Ä–∏—á–∏–Ω–∞: –ù–∞—Ä—É—à–µ–Ω–∏–µ Rules of Hooks –≤ React');
        console.log('   üéØ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: TonConnect UI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
        
        // ================================
        // 2. –ü–†–û–í–ï–†–ö–ê USERCONTEXT
        // ================================
        console.log('\nüìã 2. –ü–†–û–í–ï–†–ö–ê USERCONTEXT.TSX');
        console.log('-' .repeat(60));
        
        try {
            const userContextPath = path.join(process.cwd(), 'client/src/contexts/userContext.tsx');
            const userContextContent = await fs.readFile(userContextPath, 'utf8');
            
            console.log('\nüîç 2.1 –ü–û–ò–°–ö –ü–†–û–ë–õ–ï–ú–ù–´–• –ü–ê–¢–¢–ï–†–ù–û–í:');
            
            // –ò—â–µ–º try-catch –±–ª–æ–∫–∏ –≤–æ–∫—Ä—É–≥ —Ö—É–∫–æ–≤
            const tryHookPattern = /try\s*{[^}]*use[A-Z][^}]*}\s*catch/g;
            const tryHookMatches = userContextContent.match(tryHookPattern);
            
            if (tryHookMatches) {
                console.log(`   ‚ùå –ù–ê–ô–î–ï–ù–´ TRY-CATCH –ë–õ–û–ö–ò –í–û–ö–†–£–ì –•–£–ö–û–í: ${tryHookMatches.length}`);
                tryHookMatches.forEach((match, index) => {
                    console.log(`      ${index + 1}. ${match.substring(0, 50)}...`);
                });
                console.log('   üö® –ü–†–û–ë–õ–ï–ú–ê: –•—É–∫–∏ –≤ try-catch –Ω–∞—Ä—É—à–∞—é—Ç Rules of Hooks!');
            } else {
                console.log('   ‚úÖ Try-catch –±–ª–æ–∫–∏ –≤–æ–∫—Ä—É–≥ —Ö—É–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            }
            
            // –ò—â–µ–º useTonConnectUI —Ö—É–∫
            const tonConnectHookPattern = /useTonConnectUI\(\)/g;
            const tonConnectMatches = userContextContent.match(tonConnectHookPattern);
            
            if (tonConnectMatches) {
                console.log(`   ‚úÖ –ù–ê–ô–î–ï–ù useTonConnectUI: ${tonConnectMatches.length} —Ä–∞–∑`);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–∑–æ–≤–∞
                const lines = userContextContent.split('\n');
                lines.forEach((line, index) => {
                    if (line.includes('useTonConnectUI()')) {
                        console.log(`      –°—Ç—Ä–æ–∫–∞ ${index + 1}: ${line.trim()}`);
                        
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ try-catch
                        const contextStart = Math.max(0, index - 3);
                        const contextEnd = Math.min(lines.length, index + 3);
                        const context = lines.slice(contextStart, contextEnd);
                        
                        const hasTryCatch = context.some(contextLine => 
                            contextLine.includes('try') || contextLine.includes('catch')
                        );
                        
                        if (hasTryCatch) {
                            console.log('      ‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù TRY-CATCH –ö–û–ù–¢–ï–ö–°–¢ - –ü–†–û–ë–õ–ï–ú–ê!');
                        } else {
                            console.log('      ‚úÖ –•—É–∫ –≤—ã–∑–≤–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
                        }
                    }
                });
            } else {
                console.log('   ‚ö†Ô∏è useTonConnectUI –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ userContext');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–Ω—ã–µ –≤—ã–∑–æ–≤—ã —Ö—É–∫–æ–≤
            const conditionalHookPattern = /if\s*\([^)]*\)\s*{[^}]*use[A-Z]/g;
            const conditionalMatches = userContextContent.match(conditionalHookPattern);
            
            if (conditionalMatches) {
                console.log(`   ‚ùå –ù–ê–ô–î–ï–ù–´ –£–°–õ–û–í–ù–´–ï –í–´–ó–û–í–´ –•–£–ö–û–í: ${conditionalMatches.length}`);
                console.log('   üö® –ü–†–û–ë–õ–ï–ú–ê: –•—É–∫–∏ –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å —É—Å–ª–æ–≤–Ω–æ!');
            } else {
                console.log('   ‚úÖ –£—Å–ª–æ–≤–Ω—ã–µ –≤—ã–∑–æ–≤—ã —Ö—É–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            }
            
        } catch (error) {
            console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å userContext.tsx');
        }
        
        // ================================
        // 3. –ü–†–û–í–ï–†–ö–ê APP.TSX  
        // ================================
        console.log('\nüìã 3. –ü–†–û–í–ï–†–ö–ê APP.TSX');
        console.log('-' .repeat(60));
        
        try {
            const appPath = path.join(process.cwd(), 'client/src/App.tsx');
            const appContent = await fs.readFile(appPath, 'utf8');
            
            console.log('\nüîç 3.1 –ü–†–û–í–ï–†–ö–ê TONCONNECTUI PROVIDER:');
            
            // –ò—â–µ–º TonConnectUIProvider
            if (appContent.includes('TonConnectUIProvider')) {
                console.log('   ‚úÖ TonConnectUIProvider –Ω–∞–π–¥–µ–Ω');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º manifestUrl
                const manifestUrlPattern = /manifestUrl\s*=\s*["']([^"']+)["']/;
                const manifestMatch = appContent.match(manifestUrlPattern);
                
                if (manifestMatch) {
                    console.log(`   ‚úÖ Manifest URL: ${manifestMatch[1]}`);
                } else {
                    console.log('   ‚ö†Ô∏è Manifest URL –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }
            } else {
                console.log('   ‚ùå TonConnectUIProvider –ù–ï –ù–ê–ô–î–ï–ù - –ü–†–û–ë–õ–ï–ú–ê!');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            const hasUserProvider = appContent.includes('UserProvider');
            const hasWebSocketProvider = appContent.includes('WebSocketProvider');
            
            console.log('\nüîç 3.2 –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–í–ê–ô–î–ï–†–û–í:');
            console.log(`   ${hasUserProvider ? '‚úÖ' : '‚ùå'} UserProvider`);
            console.log(`   ${hasWebSocketProvider ? '‚úÖ' : '‚ùå'} WebSocketProvider`);
            
        } catch (error) {
            console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å App.tsx');
        }
        
        // ================================
        // 4. –ü–†–û–í–ï–†–ö–ê TONCONNECT –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
        // ================================
        console.log('\nüìã 4. –ü–†–û–í–ï–†–ö–ê TONCONNECT –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò');
        console.log('-' .repeat(60));
        
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º manifest —Ñ–∞–π–ª—ã
            const manifestPath = path.join(process.cwd(), 'public/tonconnect-manifest.json');
            
            try {
                const manifestContent = await fs.readFile(manifestPath, 'utf8');
                const manifest = JSON.parse(manifestContent);
                
                console.log('\nüîç 4.1 TONCONNECT MANIFEST:');
                console.log(`   ‚úÖ URL: ${manifest.url || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
                console.log(`   ‚úÖ Name: ${manifest.name || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
                console.log(`   ‚úÖ Icon URL: ${manifest.iconUrl || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –¥–æ–º–µ–Ω–∞
                if (manifest.url && manifest.url.includes('unifarm01010101.replit.app')) {
                    console.log('   ‚úÖ –î–æ–º–µ–Ω –∞–∫—Ç—É–∞–ª–µ–Ω');
                } else {
                    console.log('   ‚ö†Ô∏è –î–æ–º–µ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–º');
                }
                
            } catch (manifestError) {
                console.log('   ‚ùå Manifest —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω');
            }
            
        } catch (error) {
            console.log('   ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π manifest');
        }
        
        // ================================
        // 5. –ü–†–û–í–ï–†–ö–ê –ü–ê–ö–ï–¢–û–í TONCONNECT
        // ================================
        console.log('\nüìã 5. –ü–†–û–í–ï–†–ö–ê –ü–ê–ö–ï–¢–û–í TONCONNECT');
        console.log('-' .repeat(60));
        
        try {
            const packagePath = path.join(process.cwd(), 'package.json');
            const packageContent = await fs.readFile(packagePath, 'utf8');
            const packageJson = JSON.parse(packageContent);
            
            console.log('\nüîç 5.1 –í–ï–†–°–ò–ò TONCONNECT –ü–ê–ö–ï–¢–û–í:');
            
            const tonConnectPackages = [
                '@tonconnect/sdk',
                '@tonconnect/ui',
                '@tonconnect/ui-react',
                '@tonconnect/protocol'
            ];
            
            tonConnectPackages.forEach(pkg => {
                const version = packageJson.dependencies?.[pkg] || packageJson.devDependencies?.[pkg];
                if (version) {
                    console.log(`   ‚úÖ ${pkg}: ${version}`);
                } else {
                    console.log(`   ‚ùå ${pkg}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù`);
                }
            });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤–µ—Ä—Å–∏–π
            const sdkVersion = packageJson.dependencies?.['@tonconnect/sdk'];
            const uiVersion = packageJson.dependencies?.['@tonconnect/ui'];
            
            if (sdkVersion && uiVersion) {
                console.log('\nüîç 5.2 –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨ –í–ï–†–°–ò–ô:');
                console.log(`   SDK: ${sdkVersion}`);
                console.log(`   UI: ${uiVersion}`);
                
                // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                if (sdkVersion.includes('3.') && uiVersion.includes('2.')) {
                    console.log('   ‚úÖ –í–µ—Ä—Å–∏–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã');
                } else {
                    console.log('   ‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏');
                }
            }
            
        } catch (error) {
            console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å package.json');
        }
        
        // ================================
        // –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–ó
        // ================================
        console.log('\nüèÜ === –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–ó FRONTEND –û–®–ò–ë–û–ö ===');
        console.log('-' .repeat(60));
        
        console.log('\nüîç –ê–ù–ê–õ–ò–ó –û–®–ò–ë–ö–ò:');
        console.log('   ‚ùå TypeError: null is not an object (evaluating \'U.current.useState\')');
        console.log('   üí° –≠—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è Rules of Hooks');
        console.log('   üéØ –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤ userContext.tsx –∏–ª–∏ –¥—Ä—É–≥–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ');
        
        console.log('\nüîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:');
        console.log('   1. ‚ùå –•—É–∫ useTonConnectUI() –≤—ã–∑–≤–∞–Ω –≤ try-catch –±–ª–æ–∫–µ');
        console.log('   2. ‚ùå –•—É–∫ –≤—ã–∑–≤–∞–Ω —É—Å–ª–æ–≤–Ω–æ (–≤–Ω—É—Ç—Ä–∏ if)');
        console.log('   3. ‚ùå –•—É–∫ –≤—ã–∑–≤–∞–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ');
        console.log('   4. ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –≤–µ—Ä—Å–∏—è–º–∏ TonConnect –ø–∞–∫–µ—Ç–æ–≤');
        
        console.log('\nüí° –†–ï–®–ï–ù–ò–ï (–ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ö–û–î–ê):');
        console.log('   1. üîß –£–±—Ä–∞—Ç—å try-catch –±–ª–æ–∫–∏ –≤–æ–∫—Ä—É–≥ —Ö—É–∫–æ–≤');
        console.log('   2. üîß –í—ã–∑—ã–≤–∞—Ç—å —Ö—É–∫–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
        console.log('   3. üîß –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤–µ—Ä—Å–∏–π TonConnect');
        console.log('   4. üîß –£–±–µ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –≤ App.tsx');
        
        console.log('\nüéØ –ö–†–ò–¢–ò–ß–ù–û–°–¢–¨:');
        console.log('   üö® –í–´–°–û–ö–ê–Ø - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
        console.log('   ‚ö° –°–†–û–ß–ù–û–°–¢–¨ - –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ');
        console.log('   üí• –í–õ–ò–Ø–ù–ò–ï - –±–ª–æ–∫–∏—Ä—É–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
        
        console.log('\n‚úÖ –°–¢–ê–¢–£–° –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');
        console.log('   ‚úÖ –ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞');
        console.log('   ‚úÖ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞–π–¥–µ–Ω–æ');
        console.log('   ‚úÖ –†–µ—à–µ–Ω–∏–µ –∏–∑–≤–µ—Å—Ç–Ω–æ');
        console.log('   ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞');

    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ frontend:', error);
    }
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
checkFrontendErrors().then(() => {
    console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ frontend –æ—à–∏–±–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    process.exit(0);
}).catch((error) => {
    console.error('‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
});