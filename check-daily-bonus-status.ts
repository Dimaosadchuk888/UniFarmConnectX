import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL!;
const supabaseKey = process.env.SUPABASE_ANON_KEY!;
const supabase = createClient(supabaseUrl, supabaseKey);

async function checkDailyBonusStatus() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Daily Bonus –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74\n');

  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: user, error: userError } = await supabase
    .from('users')
    .select('id, telegram_id, balance_uni, balance_ton, daily_bonus_claimed_at')
    .eq('id', 74)
    .single();

  if (userError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
    return;
  }

  console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
  console.log(`   ID: ${user.id}`);
  console.log(`   Telegram ID: ${user.telegram_id}`);
  console.log(`   –ë–∞–ª–∞–Ω—Å UNI: ${user.balance_uni}`);
  console.log(`   –ë–∞–ª–∞–Ω—Å TON: ${user.balance_ton}`);
  console.log(`   –ü–æ—Å–ª–µ–¥–Ω–∏–π –±–æ–Ω—É—Å –ø–æ–ª—É—á–µ–Ω: ${user.daily_bonus_claimed_at || '–ù–∏–∫–æ–≥–¥–∞'}\n`);

  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π daily_bonus
  const { data: bonusTransactions, error: txError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', 74)
    .or('type.eq.daily_bonus,type.eq.DAILY_BONUS')
    .order('created_at', { ascending: false })
    .limit(10);

  if (txError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError);
  } else {
    console.log('üí∞ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ Daily Bonus:');
    if (bonusTransactions && bonusTransactions.length > 0) {
      bonusTransactions.forEach(tx => {
        console.log(`   [${tx.created_at}] ${tx.type}: +${tx.amount_uni} UNI`);
        console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
        console.log(`   ID: ${tx.id}\n`);
      });
    } else {
      console.log('   ‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!\n');
    }
  }

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ daily_bonus_logs
  const { data: bonusLogs, error: logError } = await supabase
    .from('daily_bonus_logs')
    .select('*')
    .eq('user_id', 74)
    .order('created_at', { ascending: false })
    .limit(5);

  if (logError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤ (–≤–æ–∑–º–æ–∂–Ω–æ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç):', logError.message);
  } else {
    console.log('üìù –õ–æ–≥–∏ Daily Bonus:');
    if (bonusLogs && bonusLogs.length > 0) {
      bonusLogs.forEach(log => {
        console.log(`   [${log.created_at}] –î–µ–Ω—å ${log.day_count}: +${log.bonus_amount} UNI`);
        console.log(`   –ë–∞–ª–∞–Ω—Å: ${log.previous_balance} ‚Üí ${log.new_balance}`);
        console.log(`   ID: ${log.id}\n`);
      });
    } else {
      console.log('   ‚ö†Ô∏è –õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (—Ç–∞–±–ª–∏—Ü–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π)\n');
    }
  }

  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
  const yesterday = new Date();
  yesterday.setDate(yesterday.getDate() - 1);
  
  const { data: recentTransactions, error: recentError } = await supabase
    .from('transactions')
    .select('id, type, amount_uni, created_at, description')
    .eq('user_id', 74)
    .gte('created_at', yesterday.toISOString())
    .order('created_at', { ascending: false });

  if (recentError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–¥–∞–≤–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', recentError);
  } else {
    console.log('üìä –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:');
    if (recentTransactions && recentTransactions.length > 0) {
      recentTransactions.forEach(tx => {
        console.log(`   [${tx.created_at}] ${tx.type}: ${tx.amount_uni > 0 ? '+' : ''}${tx.amount_uni} UNI`);
      });
    } else {
      console.log('   –ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞');
    }
  }

  console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

checkDailyBonusStatus().catch(console.error);