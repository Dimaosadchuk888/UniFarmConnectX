/**
 * –ê–Ω–∞–ª–∏–∑ –ø–æ—Ç–æ–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å JWT –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
 */

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

async function analyzeAuthenticationFlow() {
  console.log('=== –ê–ù–ê–õ–ò–ó –ü–û–¢–û–ö–ê –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò ===\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å–∏—Å—Ç–µ–º—ã
    console.log('üèóÔ∏è 1. –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–´–ô –ê–ù–ê–õ–ò–ó');
    
    console.log('–ü–æ—Ç–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:');
    console.log('1. Frontend: getReferrerIdFromURL() -> –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ ref_code');
    console.log('2. Frontend: correctApiRequest() -> JWT –ø—Ä–æ–≤–µ—Ä–∫–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ');
    console.log('3. Backend: authenticateFromTelegram() -> —Å–æ–∑–¥–∞–Ω–∏–µ/–ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('4. Backend: processReferral() -> —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–≤—è–∑–∏');
    console.log('5. Backend: JWT generation -> –≤–æ–∑–≤—Ä–∞—Ç —Ç–æ–∫–µ–Ω–∞');
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–æ—á–∫–∏ —Å–±–æ—è
    console.log('\n‚ö†Ô∏è 2. –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–û–ß–ö–ò –°–ë–û–Ø');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ user_sessions –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ JWT –ø—Ä–æ–±–ª–µ–º
    const { data: sessions, error: sessionsError } = await supabase
      .from('user_sessions')
      .select('user_id, created_at, ip_address, user_agent')
      .order('created_at', { ascending: false })
      .limit(10);
    
    if (sessionsError) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ user_sessions –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', sessionsError.message);
    } else {
      console.log(`–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–µ—Å—Å–∏–∏: ${sessions.length} –∑–∞–ø–∏—Å–µ–π`);
      sessions.forEach((session, index) => {
        const time = new Date(session.created_at).toLocaleString('ru-RU');
        console.log(`${index + 1}. User ${session.user_id} - ${time}`);
      });
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º timing –ø—Ä–æ–±–ª–µ–º—ã
    console.log('\n‚è±Ô∏è 3. –ê–ù–ê–õ–ò–ó TIMING –ü–†–û–ë–õ–ï–ú');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    const queries = await Promise.all([
      supabase.from('users').select('id, created_at').order('created_at', { ascending: false }).limit(5),
      supabase.from('referrals').select('referred_user_id, created_at').order('created_at', { ascending: false }).limit(5)
    ]);
    
    const [usersResult, referralsResult] = queries;
    
    console.log('–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
    if (usersResult.data) {
      usersResult.data.forEach(user => {
        const time = new Date(user.created_at).toLocaleString('ru-RU');
        console.log(`  User ${user.id} - ${time}`);
      });
    }
    
    console.log('–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏:');
    if (referralsResult.data && referralsResult.data.length > 0) {
      referralsResult.data.forEach(ref => {
        const time = new Date(ref.created_at).toLocaleString('ru-RU');
        console.log(`  Referral ${ref.referred_user_id} - ${time}`);
      });
    } else {
      console.log('  ‚ùå –ù–ï–¢ –†–ï–§–ï–†–ê–õ–¨–ù–´–• –°–í–Ø–ó–ï–ô!');
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é –º–µ–∂–¥—É JWT –æ—à–∏–±–∫–∞–º–∏ –∏ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏
    console.log('\nüîç 4. –ö–û–†–†–ï–õ–Ø–¶–ò–Ø JWT –û–®–ò–ë–û–ö –ò –ü–†–û–ü–£–©–ï–ù–ù–´–• –†–ï–§–ï–†–ê–õ–û–í');
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
    if (usersResult.data && usersResult.data.length > 0) {
      const user1Time = new Date(usersResult.data[0].created_at);
      const user2Time = usersResult.data[1] ? new Date(usersResult.data[1].created_at) : null;
      
      if (user2Time) {
        const timeDiff = (user1Time - user2Time) / 1000; // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        console.log(`–ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è–º–∏: ${timeDiff} —Å–µ–∫—É–Ω–¥`);
        
        if (timeDiff < 60) {
          console.log('‚ö†Ô∏è –ë–´–°–¢–†–´–ï –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò: –í–æ–∑–º–æ–∂–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å JWT –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º');
        }
      }
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–æ–≤
    console.log('\nüîê 5. –ê–ù–ê–õ–ò–ó JWT –°–û–°–¢–û–Ø–ù–ò–Ø');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–≤—è–∑–∞–Ω–æ –ª–∏ —ç—Ç–æ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –≤ correctApiRequest
    console.log('–ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å JWT:');
    console.log('1. correctApiRequest –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    console.log('2. –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –¥–æ –≤—ã–∑–æ–≤–∞ processReferral');
    console.log('3. Frontend –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"');
    console.log('4. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–µ—Ç—Å—è, –Ω–æ referral –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è');
    
    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
    console.log('\nüèóÔ∏è 6. –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–´–ï –ü–†–û–ë–õ–ï–ú–´');
    
    console.log('–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:');
    console.log('1. processReferral() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ü–û–°–õ–ï —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('2. –ï—Å–ª–∏ JWT –æ—à–∏–±–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –î–û processReferral, —Å–≤—è–∑—å –Ω–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è');
    console.log('3. Frontend –º–æ–∂–µ—Ç –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏ –æ—à–∏–±–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    console.log('4. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    
    // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–ª—É—á–∞–π
    console.log('\nüéØ 7. –ê–ù–ê–õ–ò–ó –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –°–õ–£–ß–ê–Ø');
    
    const { data: targetUser, error: targetError } = await supabase
      .from('users')
      .select('id, telegram_id, username, referred_by, created_at')
      .order('created_at', { ascending: false })
      .limit(1)
      .single();
    
    if (targetError) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', targetError.message);
    } else {
      console.log('–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
      console.log(`  ID: ${targetUser.id}`);
      console.log(`  Telegram ID: ${targetUser.telegram_id}`);
      console.log(`  Username: ${targetUser.username}`);
      console.log(`  Referred by: ${targetUser.referred_by || '–ù–ï–¢'}`);
      console.log(`  –í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${new Date(targetUser.created_at).toLocaleString('ru-RU')}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –≤ referrals
      const { data: referralRecord, error: referralError } = await supabase
        .from('referrals')
        .select('*')
        .eq('referred_user_id', targetUser.id)
        .single();
      
      if (referralError) {
        console.log('  ‚ùå –ó–∞–ø–∏—Å—å –≤ referrals: –û–¢–°–£–¢–°–¢–í–£–ï–¢');
        console.log('  üîç –≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å processReferral()');
      } else {
        console.log('  ‚úÖ –ó–∞–ø–∏—Å—å –≤ referrals: –ï–°–¢–¨');
        console.log(`     Referrer ID: ${referralRecord.referrer_user_id}`);
      }
    }
    
    // 8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\nüí° 8. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ');
    
    console.log('–î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤—Å–µ–≥–¥–∞ –ª–∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è processReferral –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ ref_code');
    console.log('2. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ JWT –æ—à–∏–±–∫–∏ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—é—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    console.log('3. –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–æ—á–∫–∏');
    console.log('4. –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç–∏');
    console.log('5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ authenticateFromTelegram');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
analyzeAuthenticationFlow();