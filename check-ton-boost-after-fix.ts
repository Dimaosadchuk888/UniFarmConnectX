import { supabase } from './core/supabase.js';

async function checkTonBoostAfterFix() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã TON Boost –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  const { data: latestTransactions } = await supabase
    .from('transactions')
    .select('*')
    .eq('type', 'FARMING_REWARD')
    .not('metadata->>original_type', 'is', null)
    .order('created_at', { ascending: false })
    .limit(5);
    
  if (latestTransactions && latestTransactions.length > 0) {
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${latestTransactions.length} –Ω–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π TON Boost:\n`);
    
    latestTransactions.forEach(tx => {
      console.log(`ID: ${tx.id}`);
      console.log(`User: ${tx.user_id}`);
      console.log(`Amount: +${tx.amount_ton} TON`);
      console.log(`Created: ${new Date(tx.created_at).toLocaleString()}`);
      console.log(`Metadata:`, tx.metadata);
      console.log('---');
    });
  } else {
    console.log('‚ùå –ù–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π TON Boost –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    console.log('\n–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω—å—à–µ 5 –º–∏–Ω—É—Ç —Å –º–æ–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞');
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const { data: activeUsers } = await supabase
    .from('ton_farming_data')
    .select('*')
    .eq('boost_active', true);
    
  console.log(`\nüìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π TON Boost: ${activeUsers?.length || 0}`);
  
  // 3. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥
  if (activeUsers && activeUsers.length > 0) {
    let totalExpectedIncome = 0;
    
    for (const user of activeUsers) {
      const userId = parseInt(user.user_id.toString());
      const { data: userBalance } = await supabase
        .from('users')
        .select('balance_ton')
        .eq('id', userId)
        .single();
        
      if (userBalance) {
        const deposit = parseFloat(userBalance.balance_ton || '0');
        const fiveMinuteIncome = deposit * 0.01 / 288;
        totalExpectedIncome += fiveMinuteIncome;
      }
    }
    
    console.log(`üí∞ –û–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalExpectedIncome.toFixed(6)} TON –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç`);
    console.log(`üìà –≠—Ç–æ –ø—Ä–∏–º–µ—Ä–Ω–æ ${(totalExpectedIncome * 288).toFixed(2)} TON –≤ –¥–µ–Ω—å`);
  }
  
  console.log('\n‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
  console.log('‚úÖ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
}

checkTonBoostAfterFix();