// –ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ TON –±–∞–ª–∞–Ω—Å–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
const { execSync } = require('child_process');

console.log('\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TON BALANCE UPDATE');
console.log('='.repeat(50));

try {
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ TON
  console.log('\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —á–µ—Ä–µ–∑ API...');
  
  const apiCommand = `curl -s "http://localhost:3000/api/v2/debug/env"`;
  const envResult = execSync(apiCommand, { encoding: 'utf8' });
  console.log('–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞:', envResult);
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
  console.log('\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint...');
  const healthCommand = `curl -s "http://localhost:3000/health"`;
  const healthResult = execSync(healthCommand, { encoding: 'utf8' });
  console.log('Health check:', healthResult);
  
  console.log('\n‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
  console.log('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /debug/balance-flow –¥–ª—è frontend –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
}