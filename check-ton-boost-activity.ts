import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL || '';
const supabaseKey = process.env.SUPABASE_ANON_KEY || '';
const supabase = createClient(supabaseUrl, supabaseKey);

async function checkTonBoostActivity() {
  console.log('=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ TON Boost –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ ===\n');

  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const { data: activeUsers, error: usersError } = await supabase
    .from('ton_farming_data')
    .select('*')
    .not('boost_package_id', 'is', null);

  if (usersError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', usersError);
    return;
  }

  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${activeUsers?.length || 0}\n`);

  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π TON_BOOST_INCOME
  const { data: recentTransactions, error: txError } = await supabase
    .from('transactions')
    .select('*')
    .eq('type', 'TON_BOOST_INCOME')
    .order('created_at', { ascending: false })
    .limit(10);

  if (txError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError);
  } else {
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π TON_BOOST_INCOME: ${recentTransactions?.length || 0}`);
    
    if (recentTransactions && recentTransactions.length > 0) {
      console.log('\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:');
      recentTransactions.forEach(tx => {
        const date = new Date(tx.created_at);
        console.log(`- ${date.toLocaleString()}: User ${tx.user_id}, –°—É–º–º–∞: ${tx.amount_ton} TON`);
      });
    } else {
      console.log('‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π TON_BOOST_INCOME –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
    }
  }

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
  const serverStartTime = new Date(Date.now() - process.uptime() * 1000);
  console.log(`\n‚è±Ô∏è –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: ${serverStartTime.toLocaleString()}`);
  console.log(`‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${Math.floor(process.uptime() / 60)} –º–∏–Ω—É—Ç`);

  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤–æ–æ–±—â–µ
  const { data: allRecentTx, error: allTxError } = await supabase
    .from('transactions')
    .select('type, created_at, user_id, amount_ton, amount_uni')
    .order('created_at', { ascending: false })
    .limit(10);

  if (!allTxError && allRecentTx) {
    console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤—Å–µ—Ö —Ç–∏–ø–æ–≤:');
    allRecentTx.forEach(tx => {
      const date = new Date(tx.created_at);
      const amount = tx.amount_ton ? `${tx.amount_ton} TON` : `${tx.amount_uni} UNI`;
      console.log(`- ${date.toLocaleString()}: ${tx.type} (User ${tx.user_id}): ${amount}`);
    });
  }

  // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74
  const { data: user74, error: userError } = await supabase
    .from('users')
    .select('id, balance_ton, balance_uni')
    .eq('id', 74)
    .single();

  if (!userError && user74) {
    console.log(`\nüí∞ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74: ${user74.balance_ton} TON, ${user74.balance_uni} UNI`);
  }

  // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74 –≤ ton_farming_data
  const { data: tonData74, error: tonError } = await supabase
    .from('ton_farming_data')
    .select('*')
    .eq('user_id', '74')
    .single();

  if (!tonError && tonData74) {
    console.log(`\nüéØ TON Farming –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74:`);
    console.log(`- boost_package_id: ${tonData74.boost_package_id}`);
    console.log(`- farming_balance: ${tonData74.farming_balance}`);
    console.log(`- farming_rate: ${tonData74.farming_rate}`);
  } else {
    console.log(`\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 74 –Ω–µ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ TON Boost`);
  }
}

checkTonBoostActivity().catch(console.error);