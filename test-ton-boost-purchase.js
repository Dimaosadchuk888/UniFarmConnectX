/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∫—É–ø–∫–∏ TON Boost
 * –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 50
 */

import { createClient } from '@supabase/supabase-js';

async function testTonBoostPurchase() {
  const supabaseUrl = process.env.SUPABASE_URL;
  const supabaseKey = process.env.SUPABASE_KEY;
  
  const supabase = createClient(supabaseUrl, supabaseKey);
  
  console.log('=== –¢–ï–°–¢ –ü–û–ö–£–ü–ö–ò TON BOOST ===');
  
  const userId = '48';
  
  // 1. –°–±—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
  console.log('\n1. –°–ë–†–û–° –ö –ù–ê–ß–ê–õ–¨–ù–û–ú–£ –°–û–°–¢–û–Ø–ù–ò–Æ:');
  await supabase
    .from('users')
    .update({ 
      ton_boost_package: 0,
      ton_boost_rate: 0
    })
    .eq('id', userId);
  console.log('   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–±—Ä–æ—à–µ–Ω');

  // 2. –°–æ—Å—Ç–æ—è–Ω–∏–µ –î–û –ø–æ–∫—É–ø–∫–∏
  const { data: userBefore } = await supabase
    .from('users')
    .select('id, balance_ton, ton_boost_package, ton_boost_rate')
    .eq('id', userId)
    .single();
  
  console.log('\n2. –°–û–°–¢–û–Ø–ù–ò–ï –î–û:');
  console.log('   TON:', userBefore.balance_ton);
  console.log('   –ü–∞–∫–µ—Ç:', userBefore.ton_boost_package);
  console.log('   –°—Ç–∞–≤–∫–∞:', userBefore.ton_boost_rate);
  
  // 3. –ü–æ–∫—É–ø–∫–∞ Advanced –ø–∞–∫–µ—Ç–∞ (ID=3, 2% daily)
  console.log('\n3. –ü–û–ö–£–ü–ö–ê ADVANCED –ü–ê–ö–ï–¢–ê:');
  
  const purchaseResponse = await fetch('http://localhost:3000/api/v2/boost/purchase', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjQ4LCJ0ZWxlZ3JhbV9pZCI6NDgsInVzZXJuYW1lIjoiZGVtb191c2VyIiwicmVmX2NvZGUiOiJSRUZfMTc1MDk1MjU3NjYxNF90OTM4dnMiLCJpYXQiOjE3NTE2MTAzNzgsImV4cCI6MTc1MjIxNTE3OH0.v95q1-qqaPthRflbCtJqTAQEpvAgpDwmWzWyFbPQuoM'
    },
    body: JSON.stringify({
      user_id: '48',
      boost_id: '3', // Advanced Boost
      payment_method: 'wallet'
    })
  });
  
  const result = await purchaseResponse.json();
  console.log('   –°—Ç–∞—Ç—É—Å:', result.success ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê');
  console.log('   –°–æ–æ–±—â–µ–Ω–∏–µ:', result.message);
  
  // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
  await new Promise(resolve => setTimeout(resolve, 2000));
  
  // 4. –°–æ—Å—Ç–æ—è–Ω–∏–µ –ü–û–°–õ–ï –ø–æ–∫—É–ø–∫–∏
  const { data: userAfter } = await supabase
    .from('users')
    .select('id, balance_ton, ton_boost_package, ton_boost_rate')
    .eq('id', userId)
    .single();
  
  console.log('\n4. –°–û–°–¢–û–Ø–ù–ò–ï –ü–û–°–õ–ï:');
  console.log('   TON:', userAfter.balance_ton);
  console.log('   –ü–∞–∫–µ—Ç:', userAfter.ton_boost_package);
  console.log('   –°—Ç–∞–≤–∫–∞:', userAfter.ton_boost_rate);
  
  // 5. –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
  const balanceChange = parseFloat(userBefore.balance_ton) - parseFloat(userAfter.balance_ton);
  const isActivated = userAfter.ton_boost_package && userAfter.ton_boost_package !== 0;
  const hasCorrectRate = userAfter.ton_boost_rate === 0.02;
  
  console.log('\n5. –ê–ù–ê–õ–ò–ó –ê–ö–¢–ò–í–ê–¶–ò–ò:');
  console.log('   TON —Å–ø–∏—Å–∞–Ω–æ:', balanceChange);
  console.log('   –ü–∞–∫–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:', isActivated ? '–î–ê' : '–ù–ï–¢');
  console.log('   –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞:', hasCorrectRate ? '–î–ê' : '–ù–ï–¢');
  
  if (isActivated && hasCorrectRate) {
    console.log('\n   üéØ –ü–û–ö–£–ü–ö–ê –ò –ê–ö–¢–ò–í–ê–¶–ò–Ø –£–°–ü–ï–®–ù–´!');
    console.log('   –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞—á–Ω–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç');
    
    // –†–∞—Å—Å—á–∏—Ç–∞–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
    const deposit = Math.max(0, parseFloat(userAfter.balance_ton) - 10);
    const dailyIncome = deposit * 0.02;
    const fiveMinIncome = dailyIncome / 288;
    
    console.log(`   - –î–µ–ø–æ–∑–∏—Ç: ${deposit} TON`);
    console.log(`   - –î–Ω–µ–≤–Ω–æ–π –¥–æ—Ö–æ–¥: ${dailyIncome.toFixed(6)} TON`);
    console.log(`   - –î–æ—Ö–æ–¥ –∑–∞ 5 –º–∏–Ω: ${fiveMinIncome.toFixed(8)} TON`);
    
  } else {
    console.log('\n   ‚ùå –ü–†–û–ë–õ–ï–ú–ê –° –ê–ö–¢–ò–í–ê–¶–ò–ï–ô');
    console.log('   –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
  }
  
  // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  const { data: recentTransactions } = await supabase
    .from('transactions')
    .select('id, type, description, amount_ton, created_at')
    .eq('user_id', userId)
    .order('created_at', { ascending: false })
    .limit(3);
  
  console.log('\n6. –ü–û–°–õ–ï–î–ù–ò–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:');
  recentTransactions.forEach((tx, index) => {
    const date = new Date(tx.created_at).toLocaleString();
    console.log(`   ${index + 1}. ${tx.description} | ${tx.amount_ton || 0} TON | ${date}`);
  });
  
  console.log('\n=== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù ===');
}

testTonBoostPurchase().catch(console.error);