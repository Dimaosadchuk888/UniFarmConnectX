/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∫—É–ø–∫–∏ TON Boost
 * –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 50
 */
import fetch from 'node-fetch';
import dotenv from 'dotenv';

dotenv.config();

const API_BASE_URL = 'http://localhost:3000';

// JWT —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 50
const JWT_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjUwLCJ0ZWxlZ3JhbV9pZCI6NDMsInVzZXJuYW1lIjoiZGVtb191c2VyIiwicmVmX2NvZGUiOiJSRUZfMTc1MTQzMjExODAxM194MDZ0c3oiLCJpYXQiOjE3NTE0Mzc0NTEsImV4cCI6MTc1MjA0MjI1MX0.yAGFPB-TdNzSYDY2ec0pCwokDcOiEv4clSw1u9Hz3a0';

async function testTonBoostPurchase() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É TON Boost –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 50...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π
    console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 50...');
    const balanceResponse = await fetch(`${API_BASE_URL}/api/v2/wallet/balance?user_id=50`, {
      headers: {
        'Authorization': `Bearer ${JWT_TOKEN}`,
        'Content-Type': 'application/json',
        'X-Dev-Mode': 'true'
      }
    });
    
    const balanceData = await balanceResponse.json();
    console.log('   –ë–∞–ª–∞–Ω—Å:', balanceData);
    console.log('   UNI:', balanceData.data?.uni || 0);
    console.log('   TON:', balanceData.data?.ton || 0);
    console.log('');
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    console.log('2. –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ TON Boost –ø–∞–∫–µ—Ç—ã...');
    const packagesResponse = await fetch(`${API_BASE_URL}/api/v2/boost/packages`, {
      headers: {
        'Authorization': `Bearer ${JWT_TOKEN}`,
        'Content-Type': 'application/json',
        'X-Dev-Mode': 'true'
      }
    });
    
    const packagesData = await packagesResponse.json();
    console.log('   –ù–∞–π–¥–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤:', packagesData.data?.packages?.length || 0);
    
    if (packagesData.data?.packages?.length > 0) {
      const firstPackage = packagesData.data.packages[0];
      console.log('   –ü–µ—Ä–≤—ã–π –ø–∞–∫–µ—Ç:', {
        id: firstPackage.id,
        name: firstPackage.name,
        minAmount: firstPackage.min_amount || firstPackage.priceTon,
        bonusUni: firstPackage.uni_bonus || firstPackage.bonusUni
      });
      console.log('');
      
      // 3. –ü—ã—Ç–∞–µ–º—Å—è –∫—É–ø–∏—Ç—å –ø–∞–∫–µ—Ç
      console.log('3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É TON Boost...');
      console.log('   –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:', {
        user_id: '50',
        boost_id: firstPackage.id.toString(),
        payment_method: 'wallet'
      });
      
      const purchaseResponse = await fetch(`${API_BASE_URL}/api/v2/boost/purchase`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${JWT_TOKEN}`,
          'Content-Type': 'application/json',
          'X-Dev-Mode': 'true'
        },
        body: JSON.stringify({
          user_id: '50',
          boost_id: firstPackage.id.toString(),
          payment_method: 'wallet'
        })
      });
      
      const purchaseData = await purchaseResponse.json();
      console.log('   –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', purchaseResponse.status);
      console.log('   –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', purchaseData);
      console.log('');
      
      // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
      console.log('4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏...');
      const newBalanceResponse = await fetch(`${API_BASE_URL}/api/v2/wallet/balance?user_id=50`, {
        headers: {
          'Authorization': `Bearer ${JWT_TOKEN}`,
          'Content-Type': 'application/json',
          'X-Dev-Mode': 'true'
        }
      });
      
      const newBalanceData = await newBalanceResponse.json();
      console.log('   –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:', newBalanceData);
      console.log('   UNI:', newBalanceData.data?.uni || 0);
      console.log('   TON:', newBalanceData.data?.ton || 0);
      console.log('');
      
      // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      console.log('5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
      const transactionsResponse = await fetch(`${API_BASE_URL}/api/v2/transactions?user_id=50&limit=5`, {
        headers: {
          'Authorization': `Bearer ${JWT_TOKEN}`,
          'Content-Type': 'application/json',
          'X-Dev-Mode': 'true'
        }
      });
      
      const transactionsData = await transactionsResponse.json();
      if (transactionsData.data?.transactions?.length > 0) {
        console.log('   –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:');
        transactionsData.data.transactions.forEach((tx, index) => {
          console.log(`   ${index + 1}. –¢–∏–ø: ${tx.type}, –°—É–º–º–∞: ${tx.amount} ${tx.currency}, –°—Ç–∞—Ç—É—Å: ${tx.status}`);
          console.log(`      –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`);
        });
      }
      
    } else {
      console.log('‚ùå –ü–∞–∫–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTonBoostPurchase();