/**
 * –≠–ö–°–¢–†–ï–ù–ù–û–ï –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ü–†–û–ü–ê–í–®–ï–ï –ü–û–ü–û–õ–ù–ï–ù–ò–ï USER 25
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —É—Ä–æ–≤–Ω–∏ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Ç–µ—Ä—è–Ω–Ω–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞
 */

import { supabase } from './core/supabase.js';

async function investigateMissingDeposit() {
  console.log('üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ü–†–û–ü–ê–í–®–ï–ï –ü–û–ü–û–õ–ù–ï–ù–ò–ï USER 25');
  console.log('üìÖ –í—Ä–µ–º—è —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:', new Date().toISOString());
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ User 25
    console.log('\n=== 1. –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û USER 25 ===');
    
    const { data: user25, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('telegram_id', 25)
      .single();
    
    if (userError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError.message);
      return;
    }
    
    console.log('üë§ User 25 –¥–∞–Ω–Ω—ã–µ:', {
      internal_id: user25.id,
      telegram_id: user25.telegram_id,
      username: user25.username,
      balance_uni: user25.balance_uni,
      balance_ton: user25.balance_ton,
      created_at: user25.created_at,
      updated_at: user25.updated_at
    });
    
    // 2. –ò—â–µ–º –í–°–ï —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ User 25 –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞
    console.log('\n=== 2. –ü–û–ò–°–ö –¢–†–ê–ù–ó–ê–ö–¶–ò–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===');
    
    const twoHoursAgo = new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString();
    
    // –ü–æ–∏—Å–∫ –ø–æ telegram_id (–Ω–æ–≤–∞—è –ª–æ–≥–∏–∫–∞)
    const { data: transactionsByTelegramId, error: txError1 } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 25)
      .gte('created_at', twoHoursAgo)
      .order('created_at', { ascending: false });
    
    console.log(`üîç –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ telegram_id (25) –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞: ${transactionsByTelegramId?.length || 0}`);
    
    if (transactionsByTelegramId && transactionsByTelegramId.length > 0) {
      transactionsByTelegramId.forEach((tx, i) => {
        console.log(`  ${i+1}. ID ${tx.id}: ${tx.type} | ${tx.amount_uni || tx.amount_ton} ${tx.currency} | ${tx.status} | ${tx.description}`);
        console.log(`     –°–æ–∑–¥–∞–Ω–∞: ${tx.created_at}`);
      });
    } else {
      console.log('  ‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ telegram_id –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
    // –ü–æ–∏—Å–∫ –ø–æ internal_id (—Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞)
    const { data: transactionsByInternalId, error: txError2 } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', user25.id)
      .gte('created_at', twoHoursAgo)
      .order('created_at', { ascending: false });
    
    console.log(`üîç –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ internal_id (${user25.id}) –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞: ${transactionsByInternalId?.length || 0}`);
    
    if (transactionsByInternalId && transactionsByInternalId.length > 0) {
      transactionsByInternalId.forEach((tx, i) => {
        console.log(`  ${i+1}. ID ${tx.id}: ${tx.type} | ${tx.amount_uni || tx.amount_ton} ${tx.currency} | ${tx.status} | ${tx.description}`);
        console.log(`     –°–æ–∑–¥–∞–Ω–∞: ${tx.created_at}`);
      });
    } else {
      console.log('  ‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ internal_id –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
    // 3. –ò—â–µ–º TON deposits –≤ blockchain (–µ—Å–ª–∏ —ç—Ç–æ TON –¥–µ–ø–æ–∑–∏—Ç)
    console.log('\n=== 3. –ü–û–ò–°–ö TON –î–ï–ü–û–ó–ò–¢–û–í ===');
    
    const { data: tonDeposits, error: tonError } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'TON_DEPOSIT')
      .gte('created_at', twoHoursAgo)
      .order('created_at', { ascending: false });
    
    console.log(`üíé –í—Å–µ TON –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞: ${tonDeposits?.length || 0}`);
    
    if (tonDeposits && tonDeposits.length > 0) {
      tonDeposits.forEach((tx, i) => {
        console.log(`  ${i+1}. User ${tx.user_id}: ${tx.amount_ton} TON | ${tx.status} | ${tx.tx_hash || 'no hash'}`);
        console.log(`     –°–æ–∑–¥–∞–Ω–∞: ${tx.created_at}`);
      });
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º pending —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('\n=== 4. –ü–û–ò–°–ö –ù–ï–ó–ê–í–ï–†–®–ï–ù–ù–´–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô ===');
    
    const { data: pendingTx, error: pendingError } = await supabase
      .from('transactions')
      .select('*')
      .in('status', ['pending', 'processing'])
      .gte('created_at', twoHoursAgo)
      .order('created_at', { ascending: false });
    
    console.log(`‚è≥ Pending —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞: ${pendingTx?.length || 0}`);
    
    if (pendingTx && pendingTx.length > 0) {
      pendingTx.forEach((tx, i) => {
        console.log(`  ${i+1}. User ${tx.user_id}: ${tx.type} | ${tx.amount_uni || tx.amount_ton} ${tx.currency} | ${tx.status}`);
        console.log(`     Hash: ${tx.tx_hash || 'no hash'}`);
        console.log(`     –°–æ–∑–¥–∞–Ω–∞: ${tx.created_at}`);
      });
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞
    console.log('\n=== 5. –ü–†–û–í–ï–†–ö–ê –õ–û–ì–û–í ===');
    
    // –ò—â–µ–º –Ω–µ–¥–∞–≤–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö
    const { data: errorLogs, error: logError } = await supabase
      .from('transactions')
      .select('*')
      .ilike('description', '%error%')
      .gte('created_at', twoHoursAgo)
      .order('created_at', { ascending: false });
    
    console.log(`‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –æ—à–∏–±–∫–∞–º–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞: ${errorLogs?.length || 0}`);
    
    if (errorLogs && errorLogs.length > 0) {
      errorLogs.forEach((tx, i) => {
        console.log(`  ${i+1}. User ${tx.user_id}: ${tx.description}`);
      });
    }
    
    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º BalanceManager —Å User 25
    console.log('\n=== 6. –¢–ï–°–¢ BALANCE MANAGER ===');
    
    try {
      const { BalanceManager } = await import('./core/BalanceManager.js');
      const balanceManager = BalanceManager.getInstance();
      
      const balanceResult = await balanceManager.getUserBalance(25);
      
      if (balanceResult.success) {
        console.log('‚úÖ BalanceManager —Ä–∞–±–æ—Ç–∞–µ—Ç —Å User 25:', {
          balance_uni: balanceResult.balance?.balance_uni,
          balance_ton: balanceResult.balance?.balance_ton
        });
        
        // –ü—Ä–æ–±—É–µ–º –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –±–∞–ª–∞–Ω—Å
        const recalcResult = await balanceManager.validateAndRecalculateBalance(25);
        
        if (recalcResult.success) {
          console.log('üîß –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ—Å—á–µ—Ç–∞:', {
            corrected: recalcResult.corrected,
            new_uni: recalcResult.newBalance?.balance_uni,
            new_ton: recalcResult.newBalance?.balance_ton
          });
        } else {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—á–µ—Ç–∞:', recalcResult.error);
        }
        
      } else {
        console.log('‚ùå BalanceManager –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å User 25:', balanceResult.error);
      }
      
    } catch (bmError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ BalanceManager:', bmError.message);
    }
    
    // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ User 25 –≤ —Å–∏—Å—Ç–µ–º–µ –≤–æ–æ–±—â–µ
    console.log('\n=== 7. –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê USER 25 ===');
    
    const { data: allUsers25, error: allError } = await supabase
      .from('users')
      .select('id, telegram_id, username')
      .or('telegram_id.eq.25,id.eq.25');
    
    console.log(`üë• –í—Å–µ –∑–∞–ø–∏—Å–∏ —Å ID 25: ${allUsers25?.length || 0}`);
    
    if (allUsers25 && allUsers25.length > 0) {
      allUsers25.forEach((user, i) => {
        console.log(`  ${i+1}. internal_id: ${user.id}, telegram_id: ${user.telegram_id}, username: ${user.username}`);
      });
    }
    
    // –§–ò–ù–ê–õ–¨–ù–´–ï –í–´–í–û–î–´
    console.log('\n=== üéØ –í–´–í–û–î–´ –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–Ø ===');
    console.log('1. User 25 –≤ —Å–∏—Å—Ç–µ–º–µ:', user25 ? '–ù–ê–ô–î–ï–ù' : '–ù–ï –ù–ê–ô–î–ï–ù');
    console.log('2. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ User 25 –∑–∞ 2 —á–∞—Å–∞:', (transactionsByTelegramId?.length || 0) + (transactionsByInternalId?.length || 0));
    console.log('3. TON –¥–µ–ø–æ–∑–∏—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ:', tonDeposits?.length || 0);
    console.log('4. Pending —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', pendingTx?.length || 0);
    console.log('5. –û—à–∏–±–∫–∏ –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö:', errorLogs?.length || 0);
    
    if (user25) {
      console.log('\nüìä –¢–ï–ö–£–©–ò–ô –ë–ê–õ–ê–ù–° USER 25:');
      console.log(`   UNI: ${user25.balance_uni}`);
      console.log(`   TON: ${user25.balance_ton}`);
      console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω: ${user25.updated_at}`);
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:', error);
    console.error('Stack:', error.stack);
  }
}

investigateMissingDeposit();