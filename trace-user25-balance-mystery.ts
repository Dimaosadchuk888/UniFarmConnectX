/**
 * –ì–õ–£–ë–û–ö–û–ï –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ü–æ—á–µ–º—É BalanceManager –Ω–µ –æ–±–Ω–æ–≤–∏–ª –±–∞–ª–∞–Ω—Å User ID 25
 * –ò—â–µ–º —Ç–æ—á–Ω—ã–π –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –±–∞–ª–∞–Ω—Å –¥–æ–ª–∂–µ–Ω –±—ã–ª –∏–∑–º–µ–Ω–∏—Ç—å—Å—è
 */

import { supabase } from './core/supabaseClient';

async function traceUser25BalanceMystery() {
  console.log('üïµÔ∏è –¢–†–ê–°–°–ò–†–û–í–ö–ê –ü–†–û–ü–ê–í–®–ï–ì–û –ë–ê–õ–ê–ù–°–ê USER ID 25');
  console.log('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:', new Date().toISOString());
  console.log('='.repeat(80));

  try {
    // 1. –û–ü–†–ï–î–ï–õ–Ø–ï–ú –¢–û–ß–ù–û–ï –í–†–ï–ú–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–ò 1910979
    console.log('\n1Ô∏è‚É£ –¢–û–ß–ù–û–ï –í–†–ï–ú–Ø –°–û–ó–î–ê–ù–ò–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–ò 1910979:');
    const { data: targetTx, error: targetError } = await supabase
      .from('transactions')
      .select('*')
      .eq('id', 1910979)
      .single();

    if (targetError || !targetTx) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é 1910979:', targetError);
      return;
    }

    const txTime = new Date(targetTx.created_at).getTime();
    console.log(`‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è 1910979 —Å–æ–∑–¥–∞–Ω–∞: ${targetTx.created_at}`);
    console.log(`   –í—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö: ${txTime}`);

    // 2. –ü–û–ò–°–ö –í–°–ï–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô USER 25 –í–û–ö–†–£–ì –≠–¢–û–ì–û –í–†–ï–ú–ï–ù–ò (¬±5 –º–∏–Ω—É—Ç)
    console.log('\n2Ô∏è‚É£ –í–°–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò USER 25 –í–û–ö–†–£–ì ¬±5 –ú–ò–ù–£–¢:');
    const fiveMinutes = 5 * 60 * 1000;
    const timeStart = new Date(txTime - fiveMinutes).toISOString();
    const timeEnd = new Date(txTime + fiveMinutes).toISOString();

    const { data: aroundTx, error: aroundError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 25)
      .gte('created_at', timeStart)
      .lte('created_at', timeEnd)
      .order('created_at', { ascending: true });

    if (aroundError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –æ–∫—Ä—É–∂–∞—é—â–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', aroundError);
    } else if (aroundTx && aroundTx.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${aroundTx.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –æ–∫–Ω–µ ¬±5 –º–∏–Ω—É—Ç:`);
      
      let runningTonBalance = 4.96363; // –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
      
      aroundTx.forEach((tx, index) => {
        const isTarget = tx.id === 1910979;
        const mark = isTarget ? ' ‚≠ê –¶–ï–õ–ï–í–ê–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø' : '';
        
        console.log(`\n--- ${index + 1}. ${tx.created_at}${mark} ---`);
        console.log(`ID: ${tx.id}`);
        console.log(`Type: ${tx.type}`);
        console.log(`Amount TON: ${tx.amount_ton || 0}`);
        console.log(`Amount UNI: ${tx.amount_uni || 0}`);
        console.log(`Currency: ${tx.currency}`);
        console.log(`Status: ${tx.status}`);
        
        // –°–ò–ú–£–õ–Ø–¶–ò–Ø –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê
        if (tx.status === 'completed') {
          if (tx.type === 'TON_DEPOSIT' && tx.amount_ton) {
            runningTonBalance += tx.amount_ton;
            console.log(`üí∞ –ë–∞–ª–∞–Ω—Å –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å: ${runningTonBalance.toFixed(6)} TON (+${tx.amount_ton})`);
          } else if (tx.type === 'WITHDRAWAL' && tx.currency === 'TON' && tx.amount_ton) {
            runningTonBalance -= tx.amount_ton;
            console.log(`üí∏ –ë–∞–ª–∞–Ω—Å –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å: ${runningTonBalance.toFixed(6)} TON (-${tx.amount_ton})`);
          } else if (tx.type?.includes('REWARD') && tx.currency === 'TON' && tx.amount_ton) {
            runningTonBalance += tx.amount_ton;
            console.log(`üéÅ –ë–∞–ª–∞–Ω—Å –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å: ${runningTonBalance.toFixed(6)} TON (+${tx.amount_ton})`);
          }
        }
        
        if (isTarget) {
          console.log('üéØ –≠–¢–ê –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø –î–û–õ–ñ–ù–ê –ë–´–õ–ê –î–û–ë–ê–í–ò–¢–¨ +1 TON!');
          console.log(`   –û–∂–∏–¥–∞–µ–º—ã–π –±–∞–ª–∞–Ω—Å: ${runningTonBalance.toFixed(6)} TON`);
          console.log(`   –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å: 4.96363 TON`);
          console.log(`   –†–ê–ó–ù–ò–¶–ê: ${(runningTonBalance - 4.96363).toFixed(6)} TON`);
        }
      });
      
      console.log(`\nüìä –ò–¢–û–ì–û–í–´–ô –†–ê–°–ß–ï–¢:`);
      console.log(`   –û–∂–∏–¥–∞–µ–º—ã–π –±–∞–ª–∞–Ω—Å: ${runningTonBalance.toFixed(6)} TON`);
      console.log(`   –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å: 4.96363 TON`);
      console.log(`   –ü–†–û–ü–£–°–ö: ${(runningTonBalance - 4.96363).toFixed(6)} TON`);
    }

    // 3. –ü–†–û–í–ï–†–Ø–ï–ú –ö–û–ú–ü–ï–ù–°–ò–†–£–Æ–©–ò–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò
    console.log('\n3Ô∏è‚É£ –ü–û–ò–°–ö –ö–û–ú–ü–ï–ù–°–ò–†–£–Æ–©–ò–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
    console.log('–ò—â–µ–º withdrawal/outgoing —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ "—Å—ä–µ—Å—Ç—å" +1 TON...');
    
    const { data: withdrawals, error: withdrawError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 25)
      .in('type', ['WITHDRAWAL', 'FARMING_DEPOSIT', 'BOOST_PURCHASE'])
      .eq('currency', 'TON')
      .gte('created_at', timeStart)
      .lte('created_at', timeEnd)
      .order('created_at', { ascending: true });

    if (withdrawError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ withdrawals:', withdrawError);
    } else if (withdrawals && withdrawals.length > 0) {
      console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${withdrawals.length} –∏—Å—Ö–æ–¥—è—â–∏—Ö TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:`);
      
      withdrawals.forEach((w, index) => {
        console.log(`${index + 1}. ID ${w.id}: ${w.type} - ${w.amount_ton} TON - ${w.created_at}`);
        
        if (w.amount_ton === 1) {
          console.log('   üö® –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–û: –¢–æ—á–Ω–æ 1 TON –∫–∞–∫ –≤ –¥–µ–ø–æ–∑–∏—Ç–µ!');
        }
      });
    } else {
      console.log('‚úÖ –ö–æ–º–ø–µ–Ω—Å–∏—Ä—É—é—â–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }

    // 4. –ü–†–û–í–ï–†–Ø–ï–ú –î–†–£–ì–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò - –ë–´–õ–ê –õ–ò –û–®–ò–ë–ö–ê –í USER_ID
    console.log('\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –û–®–ò–ë–ö–ò USER_ID:');
    console.log('–ò—â–µ–º TON_DEPOSIT –Ω–∞ 1 TON –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    
    const { data: otherDeposits, error: otherError } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'TON_DEPOSIT')
      .eq('amount_ton', 1)
      .eq('status', 'completed')
      .gte('created_at', timeStart)
      .lte('created_at', timeEnd)
      .neq('user_id', 25)
      .order('created_at', { ascending: true });

    if (otherError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', otherError);
    } else if (otherDeposits && otherDeposits.length > 0) {
      console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${otherDeposits.length} –¥–µ–ø–æ–∑–∏—Ç–æ–≤ 1 TON —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:`);
      
      otherDeposits.forEach((d, index) => {
        console.log(`${index + 1}. User ${d.user_id}: ID ${d.id} - ${d.created_at}`);
        
        // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º tx_hash –∏–ª–∏ wallet_address
        if (d.metadata?.tx_hash === targetTx.metadata?.tx_hash) {
          console.log('   üö® –î–£–ë–õ–ò–ö–ê–¢: –¢–æ—Ç –∂–µ tx_hash!');
        }
        if (d.metadata?.wallet_address === targetTx.metadata?.wallet_address) {
          console.log('   üö® –î–£–ë–õ–ò–ö–ê–¢: –¢–æ—Ç –∂–µ wallet_address!');
        }
      });
    } else {
      console.log('‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }

    // 5. –ü–†–û–í–ï–†–Ø–ï–ú –ò–°–¢–û–†–ò–Æ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê –ß–ï–†–ï–ó AUDIT/LOGS
    console.log('\n5Ô∏è‚É£ –ü–û–ò–°–ö –õ–û–ì–û–í –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê:');
    
    try {
      const { data: logs, error: logsError } = await supabase
        .from('logs')
        .select('*')
        .or(`message.ilike.%user%25%,message.ilike.%1910979%,message.ilike.%BalanceManager%`)
        .gte('created_at', timeStart)
        .lte('created_at', timeEnd)
        .order('created_at', { ascending: true })
        .limit(20);

      if (logsError) {
        console.log('‚ÑπÔ∏è –¢–∞–±–ª–∏—Ü–∞ logs –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ –ø—É—Å—Ç–∞');
      } else if (logs && logs.length > 0) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${logs.length} —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –ª–æ–≥–æ–≤:`);
        
        logs.forEach((log, index) => {
          console.log(`\n--- –õ–æ–≥ ${index + 1} (${log.created_at}) ---`);
          console.log(`Level: ${log.level}`);
          console.log(`Message: ${log.message}`);
          
          if (log.message.includes('1910979')) {
            console.log('üéØ –ù–ê–ô–î–ï–ù –õ–û–ì –û –ù–ê–®–ï–ô –¢–†–ê–ù–ó–ê–ö–¶–ò–ò!');
          }
          if (log.message.includes('BalanceManager') && log.message.includes('25')) {
            console.log('üí∞ –ù–ê–ô–î–ï–ù –õ–û–ì –û–ë –û–ë–ù–û–í–õ–ï–ù–ò–ò –ë–ê–õ–ê–ù–°–ê USER 25!');
          }
        });
      } else {
        console.log('‚ÑπÔ∏è –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
    } catch (error) {
      console.log('‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –ø—Ä–æ–ø—É—â–µ–Ω–∞ (—Ç–∞–±–ª–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)');
    }

    // 6. –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
    console.log('\n' + '='.repeat(80));
    console.log('6Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´:');
    
    console.log('\nüîç –§–ê–ö–¢–´:');
    console.log(`‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è 1910979 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏–º–µ–µ—Ç status="completed"`);
    console.log(`‚úÖ Amount = 1 TON, currency = TON`);
    console.log(`‚úÖ –ü–æ–ª–µ balance_ton —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î`);
    console.log(`‚úÖ Hash –∏–∑–≤–ª–µ—á–µ–Ω –∏–∑ BOC (hash_extracted: true)`);
    console.log(`‚ùå balance_ton –æ—Å—Ç–∞–ª—Å—è 4.96363 –≤–º–µ—Å—Ç–æ 5.96363`);
    
    console.log('\nüö® –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:');
    console.log('1. BalanceManager –Ω–µ –≤—ã–∑—ã–≤–∞–ª—Å—è –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ 1910979');
    console.log('2. BalanceManager –≤—ã–∑—ã–≤–∞–ª—Å—è, –Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π');
    console.log('3. BalanceManager –æ–±–Ω–æ–≤–∏–ª –±–∞–ª–∞–Ω—Å, –Ω–æ –¥—Ä—É–≥–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –µ–≥–æ –æ—Ç–∫–∞—Ç–∏–ª–∞');
    console.log('4. UnifiedTransactionService —Å–æ–∑–¥–∞–ª —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –±–µ–∑ –≤—ã–∑–æ–≤–∞ BalanceManager');
    console.log('5. Race condition –º–µ–∂–¥—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏');
    
    console.log('\nüí° –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å backend logs –≤–æ –≤—Ä–µ–º—è 05:09:52');
    console.log('2. –ù–∞–π—Ç–∏ –≤—ã–∑–æ–≤—ã BalanceManager –¥–ª—è User 25');
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ UnifiedTransactionService –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞ updateBalance');
    console.log('4. –í—Ä–µ–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å +1 TON –≤—Ä—É—á–Ω—É—é –¥–ª—è User 25');

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫—É
traceUser25BalanceMystery().then(() => {
  console.log('\n‚úÖ –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  process.exit(0);
}).catch((error) => {
  console.error('üí• –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});