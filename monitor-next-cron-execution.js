#!/usr/bin/env node

/**
 * –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–õ–ï–î–£–Æ–©–ï–ì–û CRON –í–´–ü–û–õ–ù–ï–ù–ò–Ø
 * –†–µ–∞–ª-—Ç–∞–π–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
 */

console.log('üîç –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–õ–ï–î–£–Æ–©–ï–ì–û CRON –í–´–ü–û–õ–ù–ï–ù–ò–Ø');
console.log('='.repeat(60));

const startTime = new Date();
console.log(`‚è∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—á–∞—Ç: ${startTime.toLocaleTimeString()}`);

// –†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ CRON
const now = new Date();
const nextCron = new Date(now);
nextCron.setMinutes(Math.ceil(now.getMinutes() / 5) * 5, 0, 0);
const timeToNext = nextCron.getTime() - now.getTime();
const minutesToNext = Math.floor(timeToNext / 60000);
const secondsToNext = Math.floor((timeToNext % 60000) / 1000);

console.log(`üìÖ –°–ª–µ–¥—É—é—â–∏–π CRON: ${nextCron.toLocaleTimeString()}`);
console.log(`‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: ${minutesToNext}–º ${secondsToNext}—Å`);

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 184
let lastBalance = 278103.901397; // –ò–∑ –ª–æ–≥–æ–≤ –±—Ä–∞—É–∑–µ—Ä–∞
console.log(`üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å User 184: ${lastBalance.toLocaleString()} UNI`);

console.log('\nüìã –ü–õ–ê–ù –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê:');
console.log('  1. –û–∂–∏–¥–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ CRON –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
console.log('  2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞');
console.log('  3. –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞');
console.log('  4. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ–∂–∏–¥–∞–µ–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏');

// –û–∂–∏–¥–∞–µ–º–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
const expectedIncome = 0.669826; // UNI –∑–∞ 5 –º–∏–Ω—É—Ç –ø—Ä–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ
console.log(`\nüí° –û–ñ–ò–î–ê–ï–ú–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï:`);
console.log(`  –ü—Ä–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ: +${expectedIncome} UNI`);
console.log(`  –ü—Ä–∏ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ: +200-600 UNI (–∫–∞–∫ –±—ã–ª–æ —Ä–∞–Ω–µ–µ)`);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞
async function checkBalance() {
  try {
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ API
    console.log(`\nüîç [${new Date().toLocaleTimeString()}] –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞...`);
    
    // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API –∑–∞–ø—Ä–æ—Å
    // –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    console.log(`  ‚îî‚îÄ‚îÄ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ –≤–∞–ª–∏–¥–Ω–æ–≥–æ JWT —Ç–æ–∫–µ–Ω–∞`);
    
    return null;
  } catch (error) {
    console.log(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞: ${error.message}`);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤
function checkLogs() {
  try {
    const fs = require('fs');
    console.log(`\nüìÑ [${new Date().toLocaleTimeString()}] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤...`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º server_debug.log
    if (fs.existsSync('server_debug.log')) {
      const stats = fs.statSync('server_debug.log');
      const modTime = stats.mtime;
      console.log(`  server_debug.log –∏–∑–º–µ–Ω–µ–Ω: ${modTime.toLocaleTimeString()}`);
      
      // –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫
      try {
        const { execSync } = require('child_process');
        const lastLines = execSync('tail -n 10 server_debug.log', { encoding: 'utf8' });
        const relevantLines = lastLines.split('\n').filter(line => 
          line.includes('CRON-PROTECTED') || 
          line.includes('calculateIncome') ||
          line.includes('UnifiedFarmingCalculator')
        );
        
        if (relevantLines.length > 0) {
          console.log(`  üìù –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏:`);
          relevantLines.forEach(line => {
            console.log(`    ${line}`);
          });
        } else {
          console.log(`  ‚ö†Ô∏è  –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ CRON/calculateIncome –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 —Å—Ç—Ä–æ–∫–∞—Ö`);
        }
      } catch (e) {
        console.log(`  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤: ${e.message}`);
      }
    } else {
      console.log(`  ‚ùå server_debug.log –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  } catch (error) {
    console.log(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤: ${error.message}`);
  }
}

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
let monitorCount = 0;
const maxMonitorTime = 8; // 8 –ø—Ä–æ–≤–µ—Ä–æ–∫ = 4 –º–∏–Ω—É—Ç—ã

console.log(`\nüîÑ –ù–ê–ß–ò–ù–ê–ï–ú –ú–û–ù–ò–¢–û–†–ò–ù–ì (–∫–∞–∂–¥—ã–µ 30 —Å–µ–∫):`);

const monitorInterval = setInterval(async () => {
  monitorCount++;
  const currentTime = new Date();
  
  console.log(`\n--- –ü–†–û–í–ï–†–ö–ê #${monitorCount} [${currentTime.toLocaleTimeString()}] ---`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ –≤—Ä–µ–º—è CRON
  if (currentTime >= nextCron) {
    console.log(`‚úÖ –í–†–ï–ú–Ø CRON –ù–ê–°–¢–£–ü–ò–õ–û! (${nextCron.toLocaleTimeString()})`);
    
    // –î–∞–µ–º 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    setTimeout(() => {
      console.log(`\nüîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï CRON:`);
      checkLogs();
      checkBalance();
      
      console.log(`\nüéØ –ò–¢–û–ì–ò –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê:`);
      console.log(`  –í—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: ${new Date().toLocaleTimeString()}`);
      console.log(`  –ü—Ä–æ–≤–µ—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${monitorCount}`);
      console.log(`  CRON –≤—Ä–µ–º—è: ${nextCron.toLocaleTimeString()}`);
      
      clearInterval(monitorInterval);
      process.exit(0);
    }, 30000);
  } else {
    const remaining = Math.ceil((nextCron - currentTime) / 1000);
    console.log(`‚è≥ –î–æ CRON –æ—Å—Ç–∞–ª–æ—Å—å: ${remaining} —Å–µ–∫—É–Ω–¥`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
  checkLogs();
  
  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑ 4 –º–∏–Ω—É—Ç—ã
  if (monitorCount >= maxMonitorTime) {
    console.log(`\n‚è∞ –ú–û–ù–ò–¢–û–†–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ)`);
    clearInterval(monitorInterval);
    process.exit(0);
  }
}, 30000);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ Ctrl+C
process.on('SIGINT', () => {
  console.log(`\n\nüõë –ú–û–ù–ò–¢–û–†–ò–ù–ì –ü–†–ï–†–í–ê–ù –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú`);
  console.log(`–í—ã–ø–æ–ª–Ω–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ${monitorCount}`);
  clearInterval(monitorInterval);
  process.exit(0);
});

console.log(`\nüí° –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞`);
console.log(`‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ ${maxMonitorTime * 0.5} –º–∏–Ω—É—Ç`);