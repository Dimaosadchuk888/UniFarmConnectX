/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ production —Å–µ—Ä–≤–µ—Ä–µ
 */

const PRODUCTION_URL = 'https://uni-farm-connect-x-lukyanenkolawfa.replit.app';

async function forceProductionUpdate() {
  console.log('üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ production —Å–µ—Ä–≤–µ—Ä–∞...');
  
  try {
    // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    
    // 1. Admin –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞
    console.log('üîÑ 1. –ü–æ–ø—ã—Ç–∫–∞ admin –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞...');
    const adminResponse = await fetch(`${PRODUCTION_URL}/api/admin/refresh-cache`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ force: true, timestamp: Date.now() })
    });
    
    if (adminResponse.ok) {
      console.log('‚úÖ Admin –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log('‚ùå Admin API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', adminResponse.status);
    }
    
    // 2. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ API –º–∏—Å—Å–∏–π —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
    console.log('üîÑ 2. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –º–∏—Å—Å–∏–π...');
    const missionsResponse = await fetch(`${PRODUCTION_URL}/api/v2/missions/active?force_refresh=true&cache_bust=${Date.now()}`, {
      method: 'GET',
      headers: { 
        'Cache-Control': 'no-cache, no-store, must-revalidate',
        'Pragma': 'no-cache',
        'Expires': '0'
      }
    });
    
    const missionsData = await missionsResponse.json();
    console.log('üìä –¢–µ–∫—É—â–∏–µ –º–∏—Å—Å–∏–∏:', missionsData.data?.length || 0);
    
    if (missionsData.data) {
      missionsData.data.forEach((mission, index) => {
        console.log(`   ${index + 1}. ${mission.title} ‚Üí ${mission.reward_uni} UNI`);
      });
    }
    
    // 3. –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ health check
    console.log('üîÑ 3. Health check —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π...');
    const healthResponse = await fetch(`${PRODUCTION_URL}/api/health?reload=true&timestamp=${Date.now()}`);
    
    if (healthResponse.ok) {
      console.log('‚úÖ Health check —É—Å–ø–µ—à–µ–Ω');
    }
    
    console.log('\nüéØ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üì± –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram —Å–µ–π—á–∞—Å');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error.message);
  }
}

forceProductionUpdate();