/**
 * –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø –°–ò–°–¢–ï–ú–´ –ú–ì–ù–û–í–ï–ù–ù–´–• –û–ë–ù–û–í–õ–ï–ù–ò–ô –ë–ê–õ–ê–ù–°–û–í
 * –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞
 */

import { supabase } from './core/supabase';

async function checkBalanceSystemHealth() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ –ú–ì–ù–û–í–ï–ù–ù–´–• –û–ë–ù–û–í–õ–ï–ù–ò–ô –ë–ê–õ–ê–ù–°–û–í');
  console.log('='.repeat(70));
  
  const issues = [];
  const warnings = [];
  
  try {
    // 1. –ü–†–û–í–ï–†–Ø–ï–ú –¶–ï–ù–¢–†–ê–õ–¨–ù–´–ô –ë–ê–õ–ê–ù–°–ú–ï–ù–ï–î–ñ–ï–†
    console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê BalanceManager:');
    console.log('-'.repeat(50));
    
    try {
      const { BalanceManager } = await import('./core/BalanceManager');
      const manager = BalanceManager.getInstance();
      
      console.log('‚úÖ BalanceManager —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
      console.log(`‚úÖ Singleton instance —Å–æ–∑–¥–∞–Ω: ${!!manager}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤
      const hasMethods = {
        updateUserBalance: typeof manager.updateUserBalance === 'function',
        getUserBalance: typeof manager.getUserBalance === 'function',
        addBalance: typeof manager.addBalance === 'function',
        subtractBalance: typeof manager.subtractBalance === 'function'
      };
      
      Object.entries(hasMethods).forEach(([method, exists]) => {
        if (exists) {
          console.log(`‚úÖ –ú–µ—Ç–æ–¥ ${method}: –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
        } else {
          console.log(`‚ùå –ú–µ—Ç–æ–¥ ${method}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
          issues.push(`BalanceManager: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–µ—Ç–æ–¥ ${method}`);
        }
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º WebSocket callback
      const hasCallback = (manager as any).onBalanceUpdate !== undefined;
      if (hasCallback) {
        console.log('‚úÖ WebSocket callback –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      } else {
        console.log('‚ö†Ô∏è WebSocket callback –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        warnings.push('BalanceManager: WebSocket callback –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ BalanceManager:', error);
      issues.push(`BalanceManager: –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ - ${error}`);
    }
    
    // 2. –ü–†–û–í–ï–†–Ø–ï–ú WEBSOCKET –ò–ù–¢–ï–ì–†–ê–¶–ò–Æ
    console.log('\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê WebSocket Integration:');
    console.log('-'.repeat(50));
    
    try {
      const { setupWebSocketBalanceIntegration } = await import('./server/websocket-balance-integration');
      console.log('‚úÖ WebSocket integration –º–æ–¥—É–ª—å –¥–æ—Å—Ç—É–ø–µ–Ω');
      
      if (typeof setupWebSocketBalanceIntegration === 'function') {
        console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è setupWebSocketBalanceIntegration —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      } else {
        console.log('‚ùå –§—É–Ω–∫—Ü–∏—è setupWebSocketBalanceIntegration –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        issues.push('WebSocket Integration: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
      }
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ WebSocket integration:', error);
      issues.push(`WebSocket Integration: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - ${error}`);
    }
    
    // 3. –ü–†–û–í–ï–†–Ø–ï–ú NOTIFICATION SERVICE
    console.log('\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê BalanceNotificationService:');
    console.log('-'.repeat(50));
    
    try {
      const { BalanceNotificationService } = await import('./core/balanceNotificationService');
      const service = BalanceNotificationService.getInstance();
      
      console.log('‚úÖ BalanceNotificationService –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
      console.log(`‚úÖ Singleton instance: ${!!service}`);
      
      const serviceMethods = {
        notifyBalanceUpdate: typeof service.notifyBalanceUpdate === 'function',
        registerConnection: typeof service.registerConnection === 'function',
        removeConnection: typeof service.removeConnection === 'function',
        flushPendingUpdates: typeof service.flushPendingUpdates === 'function'
      };
      
      Object.entries(serviceMethods).forEach(([method, exists]) => {
        if (exists) {
          console.log(`‚úÖ –ú–µ—Ç–æ–¥ ${method}: –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
        } else {
          console.log(`‚ùå –ú–µ—Ç–æ–¥ ${method}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
          issues.push(`BalanceNotificationService: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–µ—Ç–æ–¥ ${method}`);
        }
      });
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ BalanceNotificationService:', error);
      issues.push(`BalanceNotificationService: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - ${error}`);
    }
    
    // 4. –ü–†–û–í–ï–†–Ø–ï–ú TRANSACTIONSERVICE
    console.log('\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê TransactionService:');
    console.log('-'.repeat(50));
    
    try {
      const { UnifiedTransactionService } = await import('./core/TransactionService');
      const service = new UnifiedTransactionService();
      
      console.log('‚úÖ UnifiedTransactionService –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º shouldUpdateBalance (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ - –º–æ–∂–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å)
      console.log('‚úÖ shouldUpdateBalance –ª–æ–≥–∏–∫–∞: –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –ø–æ —Ç–∏–ø–∞–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –∫–æ—Ç–æ—Ä—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç –±–∞–ª–∞–Ω—Å
      const incomeTypes = [
        'FARMING_REWARD',
        'REFERRAL_REWARD', 
        'MISSION_REWARD',
        'DAILY_BONUS',
        'TON_BOOST_INCOME',
        'UNI_DEPOSIT',
        'TON_DEPOSIT',
        'AIRDROP_REWARD',
        'DEPOSIT'
      ];
      
      console.log('üí° –¢–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –æ–±–Ω–æ–≤–ª—è—é—â–∏–µ –±–∞–ª–∞–Ω—Å:');
      incomeTypes.forEach(type => {
        console.log(`   - ${type}`);
      });
      
      // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: BOOST_PURCHASE mapping
      const TRANSACTION_TYPE_MAPPING = {
        'BOOST_PURCHASE': 'FARMING_REWARD'
      };
      
      const boostPurchaseType = TRANSACTION_TYPE_MAPPING['BOOST_PURCHASE'];
      console.log(`üîç BOOST_PURCHASE –º–∞–ø–∏—Ç—Å—è –≤: ${boostPurchaseType}`);
      
      if (incomeTypes.includes(boostPurchaseType)) {
        console.log('üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: BOOST_PURCHASE –º–∞–ø–∏—Ç—Å—è –≤ —Ç–∏–ø –æ–±–Ω–æ–≤–ª—è—é—â–∏–π –±–∞–ª–∞–Ω—Å!');
        console.log('   –≠—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–≥ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–æ–∫ TON Boost');
        issues.push('TransactionService: BOOST_PURCHASE –º–∞–ø–∏—Ç—Å—è –≤ FARMING_REWARD (–æ–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å)');
      } else {
        console.log('‚úÖ BOOST_PURCHASE –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
      }
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ TransactionService:', error);
      issues.push(`TransactionService: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - ${error}`);
    }
    
    // 5. –ü–†–û–í–ï–†–Ø–ï–ú –ò–°–¢–û–ß–ù–ò–ö–ò –û–ë–ù–û–í–õ–ï–ù–ò–ô
    console.log('\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ò–°–¢–û–ß–ù–ò–ö–û–í –û–ë–ù–û–í–õ–ï–ù–ò–ô:');
    console.log('-'.repeat(50));
    
    const sources = [
      { path: './modules/boost/service.ts', name: 'BoostService' },
      { path: './modules/wallet/service.ts', name: 'WalletService' },
      { path: './modules/boost/TonFarmingRepository.ts', name: 'TonFarmingRepository' }
    ];
    
    for (const source of sources) {
      try {
        const module = await import(source.path);
        console.log(`‚úÖ ${source.name}: –¥–æ—Å—Ç—É–ø–µ–Ω`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–∏ BalanceManager
        const moduleStr = JSON.stringify(module);
        if (moduleStr.includes('BalanceManager') || moduleStr.includes('updateUserBalance')) {
          console.log(`   üîó –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å BalanceManager`);
        } else {
          console.log(`   ‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç BalanceManager`);
          warnings.push(`${source.name}: –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å BalanceManager`);
        }
        
      } catch (error) {
        console.log(`‚ùå ${source.name}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - ${error}`);
        issues.push(`${source.name}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`);
      }
    }
    
    // 6. –ü–†–û–í–ï–†–Ø–ï–ú RACE CONDITIONS
    console.log('\n6Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–• RACE CONDITIONS:');
    console.log('-'.repeat(50));
    
    console.log('üîç –ê–Ω–∞–ª–∏–∑ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º:');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤–æ–π–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    console.log('   üí° –î–≤–æ–π–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
    console.log('      - BalanceManager.updateUserBalance()');
    console.log('      - TransactionService.shouldUpdateBalance()');
    console.log('      üî¥ –†–ò–°–ö: –û–¥–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –¥–≤–∞–∂–¥—ã');
    warnings.push('–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ –¥–≤–æ–π–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: BalanceManager + TransactionService');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º debounce –≤ notifications
    console.log('   üí° WebSocket debounce: 2000ms');
    console.log('      üî¥ –†–ò–°–ö: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –Ω–µ –≤–∏–¥–µ—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    warnings.push('WebSocket debounce 2s –º–æ–∂–µ—Ç –∑–∞–¥–µ—Ä–∂–∏–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≥—Ä–µ–≥–∞—Ü–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π
    console.log('   üí° –ê–≥—Ä–µ–≥–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ BalanceNotificationService');
    console.log('      ‚ö†Ô∏è –†–ò–°–ö: –ú–µ–ª–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–≥—É—Ç —Ç–µ—Ä—è—Ç—å—Å—è –≤ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏');
    
    // 7. –ü–†–û–í–ï–†–Ø–ï–ú –ü–û–°–õ–ï–î–ù–ò–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò
    console.log('\n7Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï–î–ù–ò–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
    console.log('-'.repeat(50));
    
    const { data: recentTransactions, error: txError } = await supabase
      .from('transactions')
      .select('id, user_id, type, amount_ton, created_at, description')
      .gte('created_at', new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString())
      .order('created_at', { ascending: false })
      .limit(20);
    
    if (txError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError);
      issues.push('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    } else if (recentTransactions) {
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 —á–∞—Å–æ–≤: ${recentTransactions.length}`);
      
      const typeAnalysis = {};
      recentTransactions.forEach(tx => {
        if (!typeAnalysis[tx.type]) {
          typeAnalysis[tx.type] = { count: 0, users: new Set() };
        }
        typeAnalysis[tx.type].count++;
        typeAnalysis[tx.type].users.add(tx.user_id);
      });
      
      console.log('üìã –ê–Ω–∞–ª–∏–∑ –ø–æ —Ç–∏–ø–∞–º:');
      Object.entries(typeAnalysis).forEach(([type, data]: [string, any]) => {
        console.log(`   ${type}: ${data.count} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, ${data.users.size} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
        
        // –ò—â–µ–º –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
        if (type === 'BOOST_PURCHASE' && data.count > 0) {
          const boostTx = recentTransactions.filter(tx => tx.type === 'BOOST_PURCHASE');
          const positiveAmounts = boostTx.filter(tx => parseFloat(tx.amount_ton || '0') > 0);
          
          if (positiveAmounts.length > 0) {
            console.log(`   üî¥ –ü–†–û–ë–õ–ï–ú–ê: ${positiveAmounts.length} BOOST_PURCHASE —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π —Å—É–º–º–æ–π!`);
            issues.push(`BOOST_PURCHASE: ${positiveAmounts.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞—á–∏—Å–ª—è—é—Ç TON`);
          }
        }
      });
    }
    
    // 8. –§–ò–ù–ê–õ–¨–ù–ê–Ø –û–¶–ï–ù–ö–ê
    console.log('\n8Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –û–¶–ï–ù–ö–ê –°–ò–°–¢–ï–ú–´:');
    console.log('-'.repeat(50));
    
    console.log(`üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´: ${issues.length}`);
    issues.forEach((issue, index) => {
      console.log(`   ${index + 1}. ${issue}`);
    });
    
    console.log(`\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø: ${warnings.length}`);
    warnings.forEach((warning, index) => {
      console.log(`   ${index + 1}. ${warning}`);
    });
    
    // –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –ó–î–û–†–û–í–¨–Ø
    const healthScore = Math.max(0, 100 - (issues.length * 20) - (warnings.length * 5));
    console.log(`\nüìä –û–ë–©–ò–ô –°–ß–ï–¢ –ó–î–û–†–û–í–¨–Ø: ${healthScore}/100`);
    
    if (healthScore >= 80) {
      console.log('‚úÖ –°–ò–°–¢–ï–ú–ê –í –•–û–†–û–®–ï–ú –°–û–°–¢–û–Ø–ù–ò–ò');
    } else if (healthScore >= 60) {
      console.log('‚ö†Ô∏è –°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø');
    } else {
      console.log('üî¥ –°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –°–†–û–ß–ù–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø');
    }
    
    // –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
    console.log('\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('-'.repeat(50));
    
    if (issues.some(i => i.includes('BOOST_PURCHASE'))) {
      console.log('1. üî¥ –ö–†–ò–¢–ò–ß–ù–û: –ò—Å–ø—Ä–∞–≤–∏—Ç—å mapping BOOST_PURCHASE ‚Üí –Ω–µ –æ–±–Ω–æ–≤–ª—è—é—â–∏–π –±–∞–ª–∞–Ω—Å —Ç–∏–ø');
    }
    
    if (warnings.some(w => w.includes('–¥–≤–æ–π–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ'))) {
      console.log('2. ‚ö†Ô∏è –î–æ–±–∞–≤–∏—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç –¥–≤–æ–π–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å–∞');
    }
    
    if (warnings.some(w => w.includes('debounce'))) {
      console.log('3. üí° –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —É–º–µ–Ω—å—à–µ–Ω–∏–µ debounce —Å 2s –¥–æ 500ms –¥–ª—è –ª—É—á—à–µ–≥–æ UX');
    }
    
    console.log('4. üìä –î–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–∞—Å—Ç–æ—Ç—ã –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–ª–∞–Ω—Å–æ–º –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('5. üîç –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ source –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏');
    
  } catch (error) {
    console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏—Å—Ç–µ–º—ã:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
checkBalanceSystemHealth()
  .then(() => {
    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    process.exit(0);
  })
  .catch(error => {
    console.error('üí• –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
    process.exit(1);
  });