/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * –£—Å—Ç—Ä–∞–Ω—è–µ—Ç PostgreSQL/Neon –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –º–µ—à–∞—é—â–∏–µ Supabase API
 */

const conflictingVars = [
  'DATABASE_URL',
  'PGHOST', 
  'PGPORT',
  'PGUSER',
  'PGPASSWORD', 
  'PGDATABASE',
  'DATABASE_PROVIDER',
  'USE_NEON_DB'
];

function removeConflictingVariables() {
  console.log('üßπ –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...\n');
  
  let removed = 0;
  let notFound = 0;
  
  conflictingVars.forEach(varName => {
    if (process.env[varName]) {
      delete process.env[varName];
      console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–∞: ${varName}`);
      removed++;
    } else {
      console.log(`‚ÑπÔ∏è –£–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${varName}`);
      notFound++;
    }
  });
  
  console.log(`\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:`);
  console.log(`- –£–¥–∞–ª–µ–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: ${removed}`);
  console.log(`- –£–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–∏: ${notFound}`);
  console.log(`- –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${conflictingVars.length}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ Supabase –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  const envKeys = Object.keys(process.env).filter(key => 
    key.includes('DATABASE') || 
    key.includes('PG') || 
    key.includes('SUPABASE') ||
    key.includes('NEON')
  );
  
  envKeys.forEach(key => {
    if (key.startsWith('SUPABASE_')) {
      console.log(`‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${key}=${process.env[key]?.substring(0, 30)}...`);
    } else {
      console.log(`‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è: ${key}=${process.env[key]?.substring(0, 30)}...`);
    }
  });
  
  console.log('\n‚úÖ –ó–ê–î–ê–ß–ê 3 –ó–ê–í–ï–†–®–ï–ù–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã');
  
  return {
    removed,
    notFound,
    total: conflictingVars.length,
    status: 'COMPLETED'
  };
}

// –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
const result = removeConflictingVariables();
console.log(`\nüìã –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${result.status}`);