import { supabase } from './core/supabaseClient';
import { TonFarmingRepository } from './modules/boost/TonFarmingRepository';

async function testBoostFixes() {
  const userId = '184';
  console.log('=== –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô TON BOOST ===\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  console.log('1. –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
  const { data: userBefore } = await supabase
    .from('users')
    .select('balance_ton, ton_farming_balance, ton_boost_package')
    .eq('id', userId)
    .single();
    
  console.log(`‚îú‚îÄ‚îÄ balance_ton: ${userBefore?.balance_ton || 0} TON`);
  console.log(`‚îú‚îÄ‚îÄ ton_farming_balance: ${userBefore?.ton_farming_balance || 0} TON`);
  console.log(`‚îî‚îÄ‚îÄ ton_boost_package: ${userBefore?.ton_boost_package || 0}\n`);
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º calculateUserTonDeposits
  console.log('2. –¢–ï–°–¢ –†–ê–°–ß–ï–¢–ê –î–ï–ü–û–ó–ò–¢–û–í (—Å —É—á–µ—Ç–æ–º BOOST_PURCHASE):');
  const tonRepo = new TonFarmingRepository();
  
  // –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞
  const calculateMethod = (tonRepo as any).calculateUserTonDeposits.bind(tonRepo);
  const calculatedDeposits = await calculateMethod(parseInt(userId));
  
  console.log(`‚îî‚îÄ‚îÄ –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è —Å—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${calculatedDeposits} TON\n`);
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ BOOST_PURCHASE
  console.log('3. –¢–†–ê–ù–ó–ê–ö–¶–ò–ò BOOST_PURCHASE:');
  const { data: boostPurchases } = await supabase
    .from('transactions')
    .select('amount_ton, created_at, type')
    .eq('user_id', userId)
    .eq('type', 'BOOST_PURCHASE')
    .order('created_at', { ascending: false });
    
  let totalBoostPurchases = 0;
  if (boostPurchases && boostPurchases.length > 0) {
    boostPurchases.forEach(tx => {
      const amount = Math.abs(parseFloat(tx.amount_ton));
      totalBoostPurchases += amount;
      console.log(`‚îú‚îÄ‚îÄ ${tx.created_at}: ${amount} TON (–±—ã–ª–æ –∑–∞–ø–∏—Å–∞–Ω–æ –∫–∞–∫ ${tx.amount_ton})`);
    });
    console.log(`‚îî‚îÄ‚îÄ –í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫ boost: ${totalBoostPurchases} TON\n`);
  } else {
    console.log('‚îî‚îÄ‚îÄ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n');
  }
  
  // 4. –ê–Ω–∞–ª–∏–∑
  console.log('üìä –ê–ù–ê–õ–ò–ó:');
  console.log(`‚îú‚îÄ‚îÄ –¢–µ–∫—É—â–∏–π ton_farming_balance: ${userBefore?.ton_farming_balance || 0} TON`);
  console.log(`‚îú‚îÄ‚îÄ –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è —Å—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${calculatedDeposits} TON`);
  console.log(`‚îú‚îÄ‚îÄ –°—É–º–º–∞ BOOST_PURCHASE: ${totalBoostPurchases} TON`);
  console.log(`‚îú‚îÄ‚îÄ –û–∂–∏–¥–∞–µ–º—ã–π –±–∞–ª–∞–Ω—Å: ${parseFloat(userBefore?.ton_farming_balance || '0') + totalBoostPurchases} TON`);
  console.log(`‚îî‚îÄ‚îÄ –†–∞–∑–Ω–∏—Ü–∞: ${calculatedDeposits - parseFloat(userBefore?.ton_farming_balance || '0')} TON\n`);
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º getByUserId
  console.log('5. –¢–ï–°–¢ getByUserId (–Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–ø–∏—Å—å —Å 0):');
  const farmingData = await tonRepo.getByUserId(userId);
  if (farmingData) {
    console.log(`‚îú‚îÄ‚îÄ farming_balance: ${farmingData.farming_balance} TON`);
    console.log(`‚îú‚îÄ‚îÄ boost_active: ${farmingData.boost_active}`);
    console.log(`‚îî‚îÄ‚îÄ boost_package_id: ${farmingData.boost_package_id}\n`);
  } else {
    console.log('‚îî‚îÄ‚îÄ –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n');
  }
  
  console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:');
  console.log('1. BOOST_PURCHASE —Ç–µ–ø–µ—Ä—å —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ calculateUserTonDeposits');
  console.log('2. –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ');
  console.log('3. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å users —Ç–∞–±–ª–∏—Ü–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ activateBoost');
  console.log('4. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö user_id –≤ upsert');
  
  console.log('\n‚ö†Ô∏è –î–õ–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê:');
  console.log(`–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å ${totalBoostPurchases} TON –∫ ton_farming_balance`);
  console.log(`UPDATE users SET ton_farming_balance = ton_farming_balance + ${totalBoostPurchases} WHERE id = ${userId};`);
}

testBoostFixes();