#!/usr/bin/env node

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö API endpoints —á–µ—Ä–µ–∑ localhost
 */

import http from 'http';

console.log('üîç –ü–†–û–í–ï–†–ö–ê –í–ù–£–¢–†–ï–ù–ù–ò–• ENDPOINTS');
console.log('================================');

function checkLocalEndpoint(path, description) {
  return new Promise((resolve) => {
    const options = {
      hostname: 'localhost',
      port: 3000,
      path: path,
      method: 'GET',
      timeout: 3000
    };

    const req = http.request(options, (res) => {
      const status = res.statusCode;
      const statusIcon = status === 200 ? '‚úÖ' : status === 404 ? '‚ö†Ô∏è' : '‚ùå';
      console.log(`${description}: ${statusIcon} HTTP ${status}`);
      resolve(status === 200);
    });

    req.on('error', (err) => {
      console.log(`${description}: ‚ùå –û–®–ò–ë–ö–ê - ${err.message}`);
      resolve(false);
    });

    req.on('timeout', () => {
      console.log(`${description}: ‚ùå –¢–ê–ô–ú–ê–£–¢`);
      req.destroy();
      resolve(false);
    });

    req.end();
  });
}

async function checkEndpoints() {
  const endpoints = [
    ['/tonconnect-manifest.json', 'TON Connect –º–∞–Ω–∏—Ñ–µ—Å—Ç'],
    ['/.well-known/tonconnect-manifest.json', 'Well-known –º–∞–Ω–∏—Ñ–µ—Å—Ç'],
    ['/api/v2/health', 'Health API'],
    ['/webhook', 'Webhook endpoint'],
    ['/api/v2/users/profile', 'User Profile API'],
    ['/api/v2/wallet/balance', 'Wallet Balance API']
  ];

  console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º endpoints –Ω–∞ localhost:3000...\n');

  let workingEndpoints = 0;
  for (const [path, description] of endpoints) {
    const isWorking = await checkLocalEndpoint(path, description);
    if (isWorking) workingEndpoints++;
  }

  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${workingEndpoints}/${endpoints.length} endpoints —Ä–∞–±–æ—Ç–∞—é—Ç`);
  
  if (workingEndpoints >= 4) {
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
  } else {
    console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
  }
}

checkEndpoints().catch(console.error);