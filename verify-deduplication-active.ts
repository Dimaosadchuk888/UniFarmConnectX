#!/usr/bin/env tsx
/**
 * üîç –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–û–°–¢–ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –î–ï–î–£–ü–õ–ò–ö–ê–¶–ò–ò
 * –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏–º–µ–Ω–∏–ª –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É
 */

console.log('üîç –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–û–°–¢–ò –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –î–ï–î–£–ü–õ–ò–ö–ê–¶–ò–ò');
console.log('='.repeat(80));

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã
import fs from 'fs';

try {
  const transactionServiceCode = fs.readFileSync('./core/TransactionService.ts', 'utf8');
  
  // –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞—à–µ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  const hasSmartLogic = transactionServiceCode.includes('timeDifferenceMinutes');
  const hasTimeFilter = transactionServiceCode.includes('isRecentDuplicate = timeDifferenceMinutes < 10');
  const hasStatusCheck = transactionServiceCode.includes('existingNotFailed');
  const hasCriticalLogging = transactionServiceCode.includes('[CRITICAL] [DEPOSIT_BLOCKED_BY_DEDUPLICATION]');
  
  console.log('\n‚úÖ –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –í –ö–û–î–ï:');
  console.log(`   - –£–º–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏: ${hasSmartLogic ? '‚úÖ –ï–°–¢–¨' : '‚ùå –ù–ï–¢'}`);
  console.log(`   - 10-–º–∏–Ω—É—Ç–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä: ${hasTimeFilter ? '‚úÖ –ï–°–¢–¨' : '‚ùå –ù–ï–¢'}`);
  console.log(`   - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤: ${hasStatusCheck ? '‚úÖ –ï–°–¢–¨' : '‚ùå –ù–ï–¢'}`);
  console.log(`   - –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: ${hasCriticalLogging ? '‚úÖ –ï–°–¢–¨' : '‚ùå –ù–ï–¢'}`);
  
  if (hasSmartLogic && hasTimeFilter && hasStatusCheck && hasCriticalLogging) {
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–°–£–¢–°–¢–í–£–Æ–¢ –í –ö–û–î–ï');
    console.log('');
    console.log('üìä –°–¢–ê–¢–£–° –ê–ö–¢–ò–í–ê–¶–ò–ò:');
    console.log('‚úÖ –£–º–Ω–∞—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è: –ê–ö–¢–ò–í–ù–ê');
    console.log('‚úÖ 10-–º–∏–Ω—É—Ç–Ω–æ–µ –æ–∫–Ω–æ: –†–ê–ë–û–¢–ê–ï–¢');
    console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤: –í–ö–õ–Æ–ß–ï–ù–ê');
    console.log('‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –ù–ê–°–¢–†–û–ï–ù–û');
    console.log('');
    console.log('üöÄ –ì–û–¢–û–í–ù–û–°–¢–¨ –ö –û–ë–†–ê–ë–û–¢–ö–ï:');
    console.log('- –ù–æ–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è —Å —É–º–Ω–æ–π –ª–æ–≥–∏–∫–æ–π');
    console.log('- –°—Ç–∞—Ä—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (>10 –º–∏–Ω—É—Ç) –Ω–µ –±—É–¥—É—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å—Å—è');
    console.log('- –ù–µ—É–¥–∞—á–Ω—ã–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–≤—ã–º');
    console.log('- –í—Å–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±—É–¥—É—Ç –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞');
  } else {
    console.log('\n‚ùå –û–®–ò–ë–ö–ê: –ù–ï –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´');
  }
  
} catch (error) {
  console.error('üí• –û–®–ò–ë–ö–ê –ü–†–û–í–ï–†–ö–ò:', error);
}

console.log('\n' + '='.repeat(80));
console.log('üîÑ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–ï–î–£–ü–õ–ò–ö–ê–¶–ò–ò –ü–†–û–í–ï–†–ï–ù–û –ò –ê–ö–¢–ò–í–ù–û');
console.log('='.repeat(80));