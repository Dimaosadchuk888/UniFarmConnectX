/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞ @UniFarming_Bot
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
 */

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
import { config } from 'dotenv';
import fetch from 'node-fetch';
import https from 'https';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const REQUIRED_BOT_USERNAME = 'UniFarming_Bot';
const REQUIRED_MINI_APP_URL = 'https://t.me/UniFarming_Bot/UniFarm';
const REQUIRED_WEBHOOK_URL = 'https://uni-farm-connect-2-misterxuniverse.replit.app/api/telegram/webhook';
const REQUIRED_MENU_BUTTON_TEXT = '–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ';
const REQUIRED_COMMANDS = [
  { command: 'start', description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ' },
  { command: 'app', description: '–û—Ç–∫—Ä—ã—Ç—å Mini App –¥–ª—è —Ñ–∞—Ä–º–∏–Ω–≥–∞ –∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞' },
  { command: 'refcode', description: '–ü–æ–ª—É—á–∏—Ç—å –≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥' },
  { command: 'info', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ' },
  { command: 'ping', description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–æ—Ç–æ–º' }
];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞
if (!BOT_TOKEN) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞');
  process.exit(1);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ Telegram API
async function callTelegramApi(method, data = {}) {
  try {
    const url = `https://api.telegram.org/bot${BOT_TOKEN}/${method}`;
    const response = await fetch(url, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    });
    
    return await response.json();
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ API ${method}:`, error.message);
    return { ok: false, description: error.message };
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç API
async function getFromTelegramApi(method) {
  try {
    const url = `https://api.telegram.org/bot${BOT_TOKEN}/${method}`;
    const response = await fetch(url);
    
    return await response.json();
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö API ${method}:`, error.message);
    return { ok: false, description: error.message };
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL (–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å, —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã)
async function checkUrl(url) {
  return new Promise((resolve) => {
    https.get(url, (res) => {
      const statusCode = res.statusCode;
      const location = res.headers.location;
      
      resolve({
        url,
        statusCode,
        location,
        isRedirect: statusCode >= 300 && statusCode < 400,
        isOk: statusCode >= 200 && statusCode < 300
      });
    }).on('error', (err) => {
      resolve({
        url,
        error: err.message,
        isOk: false,
        isRedirect: false
      });
    });
  });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
async function checkBotInfo() {
  console.log('ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...');
  
  const result = await getFromTelegramApi('getMe');
  
  if (!result.ok) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ:', result.description);
    return false;
  }
  
  const botInfo = result.result;
  console.log(`‚úÖ –ë–æ—Ç @${botInfo.username} (ID: ${botInfo.id}) –Ω–∞–π–¥–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (botInfo.username !== REQUIRED_BOT_USERNAME) {
    console.warn(`‚ö†Ô∏è –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞ (@${botInfo.username}) –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É (@${REQUIRED_BOT_USERNAME})`);
  } else {
    console.log(`‚úÖ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞ (@${botInfo.username}) —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º`);
  }
  
  return botInfo;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
async function checkBotCommands() {
  console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞...');
  
  const result = await getFromTelegramApi('getMyCommands');
  
  if (!result.ok) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:', result.description);
    return false;
  }
  
  const commands = result.result;
  console.log(`–ù–∞–π–¥–µ–Ω–æ ${commands.length} –∫–æ–º–∞–Ω–¥:`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç—Ä–µ–±—É–µ–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
  let allCommandsPresent = true;
  
  for (const requiredCmd of REQUIRED_COMMANDS) {
    const foundCmd = commands.find(cmd => cmd.command === requiredCmd.command);
    
    if (!foundCmd) {
      console.error(`‚ùå –ö–æ–º–∞–Ω–¥–∞ /${requiredCmd.command} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
      allCommandsPresent = false;
    } else {
      console.log(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ /${requiredCmd.command} –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞`);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
      if (foundCmd.description !== requiredCmd.description) {
        console.warn(`‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /${requiredCmd.command} –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–≥–æ`);
        console.warn(`   –¢–µ–∫—É—â–µ–µ: "${foundCmd.description}"`);
        console.warn(`   –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ: "${requiredCmd.description}"`);
      }
    }
  }
  
  if (allCommandsPresent) {
    console.log('‚úÖ –í—Å–µ —Ç—Ä–µ–±—É–µ–º—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  } else {
    console.error('‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É–µ–º—ã–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
  }
  
  return commands;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
async function checkMenuButton() {
  console.log('\nüîò –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é (Menu Button)...');
  
  const result = await callTelegramApi('getChatMenuButton');
  
  if (!result.ok) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–æ–ø–∫–µ –º–µ–Ω—é:', result.description);
    return false;
  }
  
  const menuButton = result.result;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∫–Ω–æ–ø–∫–∏
  if (menuButton.type !== 'web_app') {
    console.error(`‚ùå –¢–∏–ø –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é (${menuButton.type}) –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É (web_app)`);
    return false;
  }
  
  console.log('‚úÖ –¢–∏–ø –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é (web_app) —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
  if (menuButton.text !== REQUIRED_MENU_BUTTON_TEXT) {
    console.warn(`‚ö†Ô∏è –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é ("${menuButton.text}") –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É ("${REQUIRED_MENU_BUTTON_TEXT}")`);
  } else {
    console.log(`‚úÖ –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é ("${menuButton.text}") —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
  const menuUrl = menuButton.web_app?.url;
  
  if (!menuUrl) {
    console.error('‚ùå URL –¥–ª—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    return false;
  }
  
  console.log(`‚ÑπÔ∏è URL –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é: ${menuUrl}`);
  
  if (menuUrl !== REQUIRED_MINI_APP_URL) {
    console.error(`‚ùå URL –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É`);
    console.error(`   –¢–µ–∫—É—â–∏–π: ${menuUrl}`);
    console.error(`   –¢—Ä–µ–±—É–µ–º—ã–π: ${REQUIRED_MINI_APP_URL}`);
  } else {
    console.log('‚úÖ URL –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–ª–µ—à–∞ –≤ –∫–æ–Ω—Ü–µ URL
  if (menuUrl.endsWith('/')) {
    console.error('‚ùå URL –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–µ—à –≤ –∫–æ–Ω—Ü–µ, —á—Ç–æ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¢–ó');
  } else {
    console.log('‚úÖ URL –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–µ—à –≤ –∫–æ–Ω—Ü–µ, —á—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¢–ó');
  }
  
  return menuButton;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
async function checkWebhook() {
  console.log('\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ webhook...');
  
  const result = await getFromTelegramApi('getWebhookInfo');
  
  if (!result.ok) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook:', result.description);
    return false;
  }
  
  const webhookInfo = result.result;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ webhook
  if (!webhookInfo.url) {
    console.error('‚ùå Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    return false;
  }
  
  console.log(`‚ÑπÔ∏è –¢–µ–∫—É—â–∏–π webhook URL: ${webhookInfo.url}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL webhook
  if (webhookInfo.url !== REQUIRED_WEBHOOK_URL) {
    console.warn(`‚ö†Ô∏è URL webhook –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–º—É`);
    console.warn(`   –¢–µ–∫—É—â–∏–π: ${webhookInfo.url}`);
    console.warn(`   –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π: ${REQUIRED_WEBHOOK_URL}`);
  } else {
    console.log('‚úÖ URL webhook —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–º—É');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏ webhook
  if (webhookInfo.last_error_date) {
    const errorDate = new Date(webhookInfo.last_error_date * 1000);
    console.error(`‚ùå –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞ webhook: ${webhookInfo.last_error_message} (${errorDate.toLocaleString()})`);
  } else {
    console.log('‚úÖ –û—à–∏–±–æ–∫ webhook –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ');
  }
  
  return webhookInfo;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL Mini App
async function checkMiniAppUrl() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL Mini App...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π URL
  console.log(`‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º URL: ${REQUIRED_MINI_APP_URL}`);
  const urlCheck = await checkUrl(REQUIRED_MINI_APP_URL);
  
  if (urlCheck.error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ URL: ${urlCheck.error}`);
  } else if (urlCheck.isRedirect) {
    console.warn(`‚ö†Ô∏è URL –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞: ${urlCheck.location} (–∫–æ–¥ ${urlCheck.statusCode})`);
  } else if (urlCheck.isOk) {
    console.log(`‚úÖ URL –¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥ ${urlCheck.statusCode})`);
  } else {
    console.error(`‚ùå URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥ ${urlCheck.statusCode})`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL —Å –∑–∞–≤–µ—Ä—à–∞—é—â–∏–º —Å–ª–µ—à–µ–º
  const urlWithSlash = `${REQUIRED_MINI_APP_URL}/`;
  console.log(`‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º URL —Å –∑–∞–≤–µ—Ä—à–∞—é—â–∏–º —Å–ª–µ—à–µ–º: ${urlWithSlash}`);
  const slashUrlCheck = await checkUrl(urlWithSlash);
  
  if (slashUrlCheck.error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ URL: ${slashUrlCheck.error}`);
  } else if (slashUrlCheck.isRedirect) {
    console.log(`‚úÖ URL —Å –∑–∞–≤–µ—Ä—à–∞—é—â–∏–º —Å–ª–µ—à–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞: ${slashUrlCheck.location} (–∫–æ–¥ ${slashUrlCheck.statusCode})`);
  } else if (slashUrlCheck.isOk) {
    console.warn(`‚ö†Ô∏è URL —Å –∑–∞–≤–µ—Ä—à–∞—é—â–∏–º —Å–ª–µ—à–µ–º –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞–ø—Ä—è–º—É—é (–∫–æ–¥ ${slashUrlCheck.statusCode}), –æ–∂–∏–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ`);
  } else {
    console.error(`‚ùå URL —Å –∑–∞–≤–µ—Ä—à–∞—é—â–∏–º —Å–ª–µ—à–µ–º –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥ ${slashUrlCheck.statusCode})`);
  }
  
  return { urlCheck, slashUrlCheck };
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤
async function checkMetaTags() {
  console.log('\nüè∑Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Mini App...');
  console.log('‚ÑπÔ∏è –≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–∞-—Ç–µ–≥–∏:');
  console.log('1. <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />');
  console.log('2. <meta name="telegram-web-app-ready" content="true" />');
  console.log('3. <meta name="format-detection" content="telephone=no" />');
  console.log('4. <meta name="color-scheme" content="light dark" />');
}

// –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
function generateSummary() {
  console.log('\nüìù –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú –ü–†–û–í–ï–†–ö–ò');
  console.log('===========================================');
  console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ URL:');
  console.log(`   - –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL –±–µ–∑ —Å–ª–µ—à–∞: ${REQUIRED_MINI_APP_URL}`);
  console.log(`   - –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç URL –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∏ –∫–Ω–æ–ø–∫–∞—Ö`);
  console.log('\n2. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –±–æ—Ç—É —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó:');
  console.log('   - Menu Button –≤ –ø—Ä–æ—Ñ–∏–ª–µ –±–æ—Ç–∞: —Ç–µ–∫—Å—Ç "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"');
  console.log('   - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "üöÄ –û—Ç–∫—Ä—ã—Ç—å UniFarm"');
  console.log('   - –ö–æ–º–∞–Ω–¥–∞ /app –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App');
  console.log('   - –ö–æ–º–∞–Ω–¥–∞ /start –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App');
  console.log('\n3. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
  console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö (iOS, Android, Desktop)');
  console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–∫–∏ "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ Telegram"');
  console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Mini App –≤–Ω—É—Ç—Ä–∏ Telegram');
  console.log('===========================================');
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞ @UniFarming_Bot...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
  const botInfo = await checkBotInfo();
  if (!botInfo) return;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
  await checkBotCommands();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
  await checkMenuButton();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
  await checkWebhook();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL Mini App
  await checkMiniAppUrl();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏
  await checkMetaTags();
  
  // –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  generateSummary();
  
  console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main().catch(error => {
  console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', error);
});