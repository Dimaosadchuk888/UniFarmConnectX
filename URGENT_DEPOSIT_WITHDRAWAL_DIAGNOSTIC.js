#!/usr/bin/env node

/**
 * –°–†–û–ß–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–û–ß–ï–ú–£ –°–ò–°–¢–ï–ú–ê –°–ü–ò–°–´–í–ê–ï–¢ –î–ï–ü–û–ó–ò–¢–´ –° –ë–ê–õ–ê–ù–°–ê
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ User #25 –∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏
 */

import { createClient } from '@supabase/supabase-js';
import 'dotenv/config';

const supabaseUrl = process.env.VITE_SUPABASE_URL || process.env.SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || process.env.SUPABASE_ANON_KEY || process.env.SUPABASE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

async function urgentDepositWithdrawalDiagnostic() {
  console.log('üö® –°–†–û–ß–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–û–ß–ï–ú–£ –°–ò–°–¢–ï–ú–ê –°–ü–ò–°–´–í–ê–ï–¢ –î–ï–ü–û–ó–ò–¢–´ –° –ë–ê–õ–ê–ù–°–ê');
  console.log('='.repeat(80));
  console.log(`üìÖ ${new Date().toLocaleString('ru-RU')}`);
  
  // 1. –ê–ù–ê–õ–ò–ó –¢–†–ê–ù–ó–ê–ö–¶–ò–ô User #25 –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 5 –î–ù–ï–ô
  console.log('\n1Ô∏è‚É£ –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –¢–†–ê–ù–ó–ê–ö–¶–ò–ô USER #25');
  console.log('-'.repeat(60));
  
  const fiveDaysAgo = new Date();
  fiveDaysAgo.setDate(fiveDaysAgo.getDate() - 5);
  
  const { data: user25Transactions, error: user25Error } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', 25)
    .gte('created_at', fiveDaysAgo.toISOString())
    .order('created_at', { ascending: false });

  if (user25Error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π User #25:', user25Error.message);
    return;
  }

  console.log(`üìä –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π User #25 –∑–∞ 5 –¥–Ω–µ–π: ${user25Transactions.length}`);
  
  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º –∏ –∑–Ω–∞–∫–∞–º –æ–ø–µ—Ä–∞—Ü–∏–π
  const transactionAnalysis = {};
  let totalTonDeposits = 0;
  let totalTonWithdrawals = 0;
  let totalTonBalance = 0;

  user25Transactions.forEach(tx => {
    const type = tx.type;
    const tonAmount = parseFloat(tx.amount_ton || 0);
    const description = tx.description || '';
    
    if (!transactionAnalysis[type]) {
      transactionAnalysis[type] = { count: 0, totalTon: 0, examples: [] };
    }
    
    transactionAnalysis[type].count++;
    transactionAnalysis[type].totalTon += tonAmount;
    
    if (transactionAnalysis[type].examples.length < 3) {
      transactionAnalysis[type].examples.push({
        id: tx.id,
        amount: tonAmount,
        description: description.substring(0, 50),
        date: tx.created_at.split('T')[0]
      });
    }
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –±–∞–ª–∞–Ω—Å
    if (description.includes('deposit') || description.includes('TON deposit')) {
      totalTonDeposits += tonAmount;
    } else if (description.includes('withdrawal') || type.includes('WITHDRAWAL')) {
      totalTonWithdrawals += tonAmount;
    }
    
    // –°—á–∏—Ç–∞–µ–º –æ–±—â–∏–π –±–∞–ª–∞–Ω—Å (+ –¥–ª—è –¥–æ—Ö–æ–¥–æ–≤, - –¥–ª—è —Ä–∞—Å—Ö–æ–¥–æ–≤)
    if (type === 'FARMING_REWARD' || type === 'REFERRAL_REWARD') {
      totalTonBalance += tonAmount;
    } else if (type.includes('WITHDRAWAL') || description.includes('withdrawal')) {
      totalTonBalance -= tonAmount;
    }
  });

  console.log('\nüìã –ê–ù–ê–õ–ò–ó –¢–†–ê–ù–ó–ê–ö–¶–ò–ô –ü–û –¢–ò–ü–ê–ú:');
  Object.entries(transactionAnalysis).forEach(([type, data]) => {
    console.log(`\nüî∏ ${type}:`);
    console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${data.count}`);
    console.log(`   –û–±—â–∞—è —Å—É–º–º–∞ TON: ${data.totalTon.toFixed(6)}`);
    console.log(`   –ü—Ä–∏–º–µ—Ä—ã:`);
    data.examples.forEach(ex => {
      console.log(`     ‚Ä¢ ID:${ex.id} | ${ex.date} | ${ex.amount} TON | ${ex.description}...`);
    });
  });

  console.log(`\nüí∞ –°–í–û–î–ö–ê –î–í–ò–ñ–ï–ù–ò–Ø TON User #25:`);
  console.log(`   –î–µ–ø–æ–∑–∏—Ç—ã: +${totalTonDeposits.toFixed(6)} TON`);
  console.log(`   –í—ã–≤–æ–¥—ã: -${totalTonWithdrawals.toFixed(6)} TON`);
  console.log(`   –†–∞—Å—á–µ—Ç–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${totalTonBalance.toFixed(6)} TON`);

  // 2. –ü–û–ò–°–ö –ù–ï–ì–ê–¢–ò–í–ù–´–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô (–°–ü–ò–°–ê–ù–ò–Ø)
  console.log('\n2Ô∏è‚É£ –ü–û–ò–°–ö –ù–ï–ì–ê–¢–ò–í–ù–´–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô (–°–ü–ò–°–ê–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê)');
  console.log('-'.repeat(60));
  
  const negativeTransactions = user25Transactions.filter(tx => {
    const description = (tx.description || '').toLowerCase();
    const type = tx.type || '';
    return description.includes('withdrawal') || 
           description.includes('—Å–ø–∏—Å–∞–Ω–∏') || 
           description.includes('–≤—ã–≤–æ–¥') ||
           type.includes('WITHDRAWAL') ||
           parseFloat(tx.amount_ton || 0) < 0;
  });

  console.log(`üîç –ù–∞–π–¥–µ–Ω–æ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${negativeTransactions.length}`);
  
  if (negativeTransactions.length > 0) {
    console.log('\nüìã –î–ï–¢–ê–õ–ò –ù–ï–ì–ê–¢–ò–í–ù–´–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
    negativeTransactions.forEach(tx => {
      console.log(`‚Ä¢ ID: ${tx.id} | ${tx.created_at.split('T')[0]}`);
      console.log(`  –¢–∏–ø: ${tx.type} | –°—É–º–º–∞: ${tx.amount_ton} TON`);
      console.log(`  –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
      console.log(`  –°—Ç–∞—Ç—É—Å: ${tx.status}`);
      console.log('  ---');
    });
  }

  // 3. –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ì–û –ë–ê–õ–ê–ù–°–ê User #25
  console.log('\n3Ô∏è‚É£ –¢–ï–ö–£–©–ò–ô –ë–ê–õ–ê–ù–° User #25');
  console.log('-'.repeat(60));
  
  const { data: user25Data, error: balanceError } = await supabase
    .from('users')
    .select('id, username, balance_ton, balance_uni')
    .eq('id', 25)
    .single();

  if (balanceError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', balanceError.message);
  } else {
    const actualBalance = parseFloat(user25Data.balance_ton || 0);
    const difference = actualBalance - totalTonBalance;
    
    console.log(`üë§ User #25 (@${user25Data.username})`);
    console.log(`üí∞ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å: ${actualBalance} TON`);
    console.log(`üìä –†–∞—Å—á–µ—Ç–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${totalTonBalance.toFixed(6)} TON`);
    console.log(`‚ö†Ô∏è  –†–∞–∑–Ω–∏—Ü–∞: ${difference.toFixed(6)} TON`);
    
    if (Math.abs(difference) > 0.001) {
      console.log('üö® –ö–†–ò–¢–ò–ß–ù–û: –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –ë–ê–õ–ê–ù–°–ê –ò –¢–†–ê–ù–ó–ê–ö–¶–ò–ô!');
    }
  }

  // 4. –ü–†–û–í–ï–†–ö–ê –î–†–£–ì–ò–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –° –ê–ù–û–ú–ê–õ–ò–Ø–ú–ò
  console.log('\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –î–†–£–ì–ò–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –° TON –ë–ê–õ–ê–ù–°–û–ú');
  console.log('-'.repeat(60));
  
  const { data: usersWithTon, error: usersError } = await supabase
    .from('users')
    .select('id, username, balance_ton')
    .gt('balance_ton', 0.05)
    .neq('id', 25)
    .order('balance_ton', { ascending: false })
    .limit(10);

  if (usersError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', usersError.message);
  } else {
    console.log(`üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å TON > 0.05: ${usersWithTon.length}`);
    
    for (const user of usersWithTon.slice(0, 5)) {
      // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      const { data: userTx } = await supabase
        .from('transactions')
        .select('type, amount_ton, description, created_at')
        .eq('user_id', user.id)
        .gte('created_at', fiveDaysAgo.toISOString())
        .order('created_at', { ascending: false })
        .limit(10);

      const depositCount = userTx?.filter(tx => 
        tx.description?.includes('deposit') || tx.description?.includes('blockchain')
      ).length || 0;
      
      const withdrawalCount = userTx?.filter(tx => 
        tx.type?.includes('WITHDRAWAL') || tx.description?.includes('withdrawal')
      ).length || 0;

      console.log(`‚Ä¢ User #${user.id} (@${user.username || 'N/A'}): ${user.balance_ton} TON`);
      console.log(`  –î–µ–ø–æ–∑–∏—Ç—ã: ${depositCount} | –í—ã–≤–æ–¥—ã: ${withdrawalCount} | –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${userTx?.length || 0}`);
    }
  }

  // 5. –ò–¢–û–ì–û–í–´–ï –í–´–í–û–î–´
  console.log('\n5Ô∏è‚É£ –ò–¢–û–ì–û–í–´–ï –í–´–í–û–î–´ –û –ü–†–û–ë–õ–ï–ú–ï');
  console.log('='.repeat(60));
  
  const hasWithdrawals = negativeTransactions.length > 0;
  const hasBalanceDiscrepancy = user25Data && Math.abs(parseFloat(user25Data.balance_ton) - totalTonBalance) > 0.001;
  const hasRealDeposits = user25Transactions.some(tx => 
    tx.description?.includes('blockchain') && parseFloat(tx.amount_ton || 0) > 0
  );

  console.log(`üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´:`);
  console.log(`   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –≤—ã–≤–æ–¥–æ–≤/—Å–ø–∏—Å–∞–Ω–∏–π: ${negativeTransactions.length}`);
  console.log(`   ‚Ä¢ –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –±–∞–ª–∞–Ω—Å–∞: ${hasBalanceDiscrepancy ? '–î–ê' : '–ù–ï–¢'}`);
  console.log(`   ‚Ä¢ –ï—Å—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã: ${hasRealDeposits ? '–î–ê' : '–ù–ï–¢'}`);
  
  if (hasWithdrawals) {
    console.log('\nüö® –ù–ê–ô–î–ï–ù–´ –û–ü–ï–†–ê–¶–ò–ò –°–ü–ò–°–ê–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê!');
    console.log('   –°–∏—Å—Ç–µ–º–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–ø–∏—Å—ã–≤–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –±–∞–ª–∞–Ω—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
  }
  
  if (hasBalanceDiscrepancy) {
    console.log('\n‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–û –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –ë–ê–õ–ê–ù–°–ê!');
    console.log('   –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—É–º–º–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.');
  }

  if (!hasRealDeposits && parseFloat(user25Data?.balance_ton || 0) > 0) {
    console.log('\n‚ùì –ó–ê–ì–ê–î–ö–ê: –ë–ê–õ–ê–ù–° –ë–ï–ó –î–ï–ü–û–ó–ò–¢–û–í!');
    console.log('   –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å TON –±–∞–ª–∞–Ω—Å, –Ω–æ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö.');
  }

  console.log('\n' + '='.repeat(80));
  console.log('üìã –¢–†–ï–ë–£–ï–¢–°–Ø –°–†–û–ß–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:');
  console.log('1. –õ–æ–≥–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π —Å–ø–∏—Å–∞–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞');
  console.log('2. –§—É–Ω–∫—Ü–∏–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–ø–∏—Å–∞–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤');
  console.log('3. –ü—Ä–æ—Ü–µ—Å—Å–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—É—Å–ø–µ—à–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
  console.log('='.repeat(80));
}

urgentDepositWithdrawalDiagnostic().catch(console.error);