#!/usr/bin/env node
/**
 * –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 */

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY
);

async function testTransactionCreation() {
  console.log('üß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ –ë–î...\n');

  try {
    const testPayload = {
      user_id: 184,
      type: 'FARMING_DEPOSIT',
      amount: '999',
      amount_uni: '999',
      amount_ton: '0',
      currency: 'UNI',
      status: 'completed',
      description: 'TEST: Manual transaction creation test',
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    };

    console.log('üìù –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é:', testPayload);

    const { data, error } = await supabase
      .from('transactions')
      .insert([testPayload])
      .select()
      .single();

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error);
      return;
    }

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
    console.log('üìä –î–∞–Ω–Ω—ã–µ:', data);

    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    console.log('\nüóëÔ∏è –£–¥–∞–ª—è—é —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é...');
    const { error: deleteError } = await supabase
      .from('transactions')
      .delete()
      .eq('id', data.id);

    if (deleteError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', deleteError);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞');
    }

  } catch (error) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–µ:', error);
  }
}

testTransactionCreation();