#!/usr/bin/env tsx

/**
 * –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –í–´–í–û–î–ê –°–†–ï–î–°–¢–í
 * –ê–Ω–∞–ª–∏–∑: –ë–î –∑–∞–ø–∏—Å–∏, —Å–ø–∏—Å–∞–Ω–∏–µ, –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
 * –î–∞—Ç–∞: 28.07.2025
 */

import { supabase } from './core/supabase';

console.log('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –í–´–í–û–î–ê –°–†–ï–î–°–¢–í');
console.log('üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞: –ë–î –∑–∞–ø–∏—Å–∏, —Å–ø–∏—Å–∞–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞, –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è');
console.log('='.repeat(80));

async function checkWithdrawalTables() {
  console.log('\nüìä –ü–†–û–í–ï–†–ö–ê –¢–ê–ë–õ–ò–¶ –ë–ê–ó–´ –î–ê–ù–ù–´–•...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã withdraw_requests
    const { data: withdrawSchema, error: schemaError } = await supabase
      .from('withdraw_requests')
      .select('*')
      .limit(1);
    
    if (schemaError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ withdraw_requests:', schemaError.message);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ withdraw_requests –¥–æ—Å—Ç—É–ø–Ω–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    const { data: recentRequests, error: requestsError } = await supabase
      .from('withdraw_requests')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(5);
    
    if (requestsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫:', requestsError.message);
    } else {
      console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥: ${recentRequests?.length || 0}`);
      
      if (recentRequests && recentRequests.length > 0) {
        recentRequests.forEach((req, index) => {
          console.log(`\n   [${index + 1}] ID: ${req.id} | Status: ${req.status}`);
          console.log(`       User: ${req.username || req.user_id} (ID: ${req.user_id})`);
          console.log(`       Amount: ${req.amount_ton || req.amount} TON`);
          console.log(`       Created: ${req.created_at}`);
          console.log(`       Wallet: ${req.ton_wallet || req.wallet_address || 'N/A'}`);
        });
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ WITHDRAWAL
    const { data: withdrawalTx, error: txError } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'WITHDRAWAL')
      .order('created_at', { ascending: false })
      .limit(5);
    
    if (txError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è WITHDRAWAL —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError.message);
    } else {
      console.log(`\nüí∞ WITHDRAWAL —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${withdrawalTx?.length || 0}`);
      
      if (withdrawalTx && withdrawalTx.length > 0) {
        withdrawalTx.forEach((tx, index) => {
          console.log(`   [${index + 1}] ID: ${tx.id} | User: ${tx.user_id} | ${tx.amount_ton} TON`);
        });
      }
    }
    
  } catch (error) {
    console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î:', error);
  }
}

async function checkUser184Balance() {
  console.log('\nüë§ –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–ê USER 184...');
  
  try {
    const { data: user, error } = await supabase
      .from('users')
      .select('id, username, balance_uni, balance_ton, telegram_id')
      .eq('id', 184)
      .single();
    
    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 184:', error.message);
    } else if (user) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 184 –Ω–∞–π–¥–µ–Ω:');
      console.log(`   Username: @${user.username}`);
      console.log(`   UNI Balance: ${user.balance_uni}`);
      console.log(`   TON Balance: ${user.balance_ton}`);
      console.log(`   Telegram ID: ${user.telegram_id}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞
      const tonBalance = parseFloat(user.balance_ton || "0");
      const uniBalance = parseFloat(user.balance_uni || "0");
      
      console.log('\nüí∏ –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –í–´–í–û–î–ê:');
      console.log(`   TON: ${tonBalance >= 1 ? '‚úÖ –ú–æ–∂–µ—Ç (–º–∏–Ω. 1 TON)' : '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ (–º–∏–Ω. 1 TON)'}`);
      console.log(`   UNI: ${uniBalance >= 1000 ? '‚úÖ –ú–æ–∂–µ—Ç (–º–∏–Ω. 1000 UNI)' : '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ (–º–∏–Ω. 1000 UNI)'}`);
      
      if (uniBalance >= 1000) {
        const commission = Math.ceil(uniBalance / 1000) * 0.1;
        console.log(`   UNI –∫–æ–º–∏—Å—Å–∏—è: ${commission} TON (${tonBalance >= commission ? '‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ' : '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ'})`);
      }
    }
  } catch (error) {
    console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  }
}

function analyzeRecentChanges() {
  console.log('\nüîß –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–ù–ò–• –ò–ó–ú–ï–ù–ï–ù–ò–ô –í –°–ò–°–¢–ï–ú–ï –í–´–í–û–î–ê...');
  
  console.log('üìã –ü–û–°–õ–ï–î–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø (–∏–∑ replit.md):');
  console.log('1. Critical Withdrawal System Authorization Fix Applied (July 28, 2025)');
  console.log('   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: telegram.user.telegram_id ‚Üí telegram.user.id');
  console.log('   - –§–∞–π–ª: modules/wallet/controller.ts - Lines 201 and 218-222');
  
  console.log('\n2. Critical Withdrawal System Integration Completed (July 27, 2025)');
  console.log('   - –î–æ–±–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AdminBotService');
  console.log('   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã webhook 500 –æ—à–∏–±–∫–∏');
  console.log('   - –§–∞–π–ª—ã: modules/adminBot/service.ts, modules/wallet/service.ts');
  
  console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –ö–û–î–ê processWithdrawal:');
  const fs = require('fs');
  
  try {
    const serviceCode = fs.readFileSync('modules/wallet/service.ts', 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    const hasWithdrawRequests = serviceCode.includes('withdraw_requests');
    const hasBalanceManager = serviceCode.includes('balanceManager.subtractBalance');
    const hasTransactionCreate = serviceCode.includes("type: 'WITHDRAWAL'");
    const hasAdminNotification = serviceCode.includes('AdminBotService');
    
    console.log(`   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ withdraw_requests: ${hasWithdrawRequests ? '–ï–°–¢–¨' : '–û–¢–°–£–¢–°–¢–í–£–ï–¢'}`);
    console.log(`   ‚úÖ –°–ø–∏—Å–∞–Ω–∏–µ —á–µ—Ä–µ–∑ balanceManager: ${hasBalanceManager ? '–ï–°–¢–¨' : '–û–¢–°–£–¢–°–¢–í–£–ï–¢'}`);
    console.log(`   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ WITHDRAWAL —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${hasTransactionCreate ? '–ï–°–¢–¨' : '–û–¢–°–£–¢–°–¢–í–£–ï–¢'}`);
    console.log(`   ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${hasAdminNotification ? '–ï–°–¢–¨' : '–û–¢–°–£–¢–°–¢–í–£–ï–¢'}`);
    
    // –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–µ—Å—Ç–∞
    if (serviceCode.includes('telegram_id: telegram.user.telegram_id')) {
      console.log('   ‚ùå –ù–ê–ô–î–ï–ù–ê –°–¢–ê–†–ê–Ø –û–®–ò–ë–ö–ê: telegram.user.telegram_id');
    } else if (serviceCode.includes('telegram_id: telegram.user.id')) {
      console.log('   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ telegram_id –ø—Ä–∏–º–µ–Ω–µ–Ω–æ');
    }
    
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–¥–∞:', error);
  }
}

function checkWorkflowPattern() {
  console.log('\nüîÑ –ê–ù–ê–õ–ò–ó WORKFLOW –í–´–í–û–î–ê –°–†–ï–î–°–¢–í...');
  
  console.log('üìã –û–ñ–ò–î–ê–ï–ú–´–ô WORKFLOW:');
  console.log('1. Frontend: –§–æ—Ä–º–∞ –≤—ã–≤–æ–¥–∞ ‚Üí validation');
  console.log('2. Frontend: POST /api/v2/wallet/withdraw + JWT');
  console.log('3. Backend: requireTelegramAuth ‚Üí validateBody');
  console.log('4. Backend: WalletController.withdraw()');
  console.log('5. Backend: WalletService.processWithdrawal()');
  console.log('   ‚îú‚îÄ‚îÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('   ‚îú‚îÄ‚îÄ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ withdraw_requests');
  console.log('   ‚îú‚îÄ‚îÄ –°–ø–∏—Å–∞–Ω–∏–µ —á–µ—Ä–µ–∑ balanceManager.subtractBalance()');
  console.log('   ‚îú‚îÄ‚îÄ –°–æ–∑–¥–∞–Ω–∏–µ WITHDRAWAL —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
  console.log('   ‚îî‚îÄ‚îÄ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ AdminBotService.notifyWithdrawal()');
  console.log('6. Backend: Response { success: true }');
  console.log('7. AdminBot: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º');
  
  console.log('\n‚ö†Ô∏è –í–û–ó–ú–û–ñ–ù–´–ï –¢–û–ß–ö–ò –°–ë–û–Ø:');
  console.log('1. JWT token –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–ª–∏ –∏—Å—Ç–µ–∫—à–∏–π');
  console.log('2. validateBody –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã');
  console.log('3. strictRateLimit –±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã');
  console.log('4. –û—à–∏–±–∫–∞ –≤ telegram_id mapping (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ 28.07)');
  console.log('5. balanceManager.subtractBalance() –ø–∞–¥–∞–µ—Ç —Å –æ—à–∏–±–∫–æ–π');
  console.log('6. –ü—Ä–æ–±–ª–µ–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –≤ –ë–î');
}

async function runInvestigation() {
  await checkWithdrawalTables();
  await checkUser184Balance();
  analyzeRecentChanges();
  checkWorkflowPattern();
  
  console.log('\n' + '='.repeat(80));
  console.log('üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ö–†–ò–¢–ò–ß–ï–°–ö–û–ì–û –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø');
  console.log('='.repeat(80));
  
  console.log('üìã –°–û–°–¢–û–Ø–ù–ò–ï –°–ò–°–¢–ï–ú–´:');
  console.log('1. ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–∞–±–ª–∏—Ü—ã');
  console.log('2. ‚úÖ processWithdrawal() –º–µ—Ç–æ–¥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
  console.log('3. ‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (28.07)');
  console.log('4. ‚ùì Frontend –ø–æ–ª—É—á–∞–µ—Ç 401 Unauthorized –≤–º–µ—Å—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏');
  
  console.log('\nüö® –ì–õ–ê–í–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê:');
  console.log('–°–∏—Å—Ç–µ–º–∞ –≤—ã–≤–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ backend, –Ω–æ frontend –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç');
  console.log('"–æ—à–∏–±–∫—É —Å–µ—Ç–∏" –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ 401 Unauthorized. –≠—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞');
  console.log('–æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤–æ frontend, –∞ –Ω–µ backend logic.');
  
  console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
  console.log('1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å JWT token –≤ localStorage/sessionStorage');
  console.log('2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å correctApiRequest.ts –æ–±—Ä–∞–±–æ—Ç–∫—É 401 –æ—à–∏–±–æ–∫');
  console.log('3. –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å server logs –≤–æ –≤—Ä–µ–º—è withdrawal –ø–æ–ø—ã—Ç–∫–∏');
  console.log('4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –≤–∞–ª–∏–¥–Ω—ã–º JWT —Ç–æ–∫–µ–Ω–æ–º —á–µ—Ä–µ–∑ curl');
}

runInvestigation().catch(console.error);