#!/usr/bin/env node

/**
 * –°–ö–†–ò–ü–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø: –î–µ–ø–æ–∑–∏—Ç User #25 - 0.1 TON
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–∑—ã–≤–∞–µ—Ç backend API –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–∞ User #25,
 * –∫–æ—Ç–æ—Ä—ã–π —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª –≤ –±–ª–æ–∫—á–µ–π–Ω–µ –Ω–æ –Ω–µ –±—ã–ª –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –≤ –ë–î.
 */

const fetch = require('node-fetch');

const USER25_DEPOSIT_DATA = {
  ton_tx_hash: 'b30da7471672b8fc154baca674b2cc9c0829ead2a443bfa901f7b676ced2c70d',
  amount: 0.1,
  wallet_address: 'user25_wallet_address' // –ú–æ–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –∏–∑ –±–ª–æ–∫—á–µ–π–Ω –¥–∞–Ω–Ω—ã—Ö
};

async function restoreUser25Deposit() {
  console.log('üéØ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –î–ï–ü–û–ó–ò–¢–ê USER #25');
  console.log('==================================');
  console.log('User: DimaOsadchuk (ID: 25, telegram_id: 425855744)');
  console.log('–°—É–º–º–∞:', USER25_DEPOSIT_DATA.amount, 'TON');
  console.log('Hash:', USER25_DEPOSIT_DATA.ton_tx_hash);
  console.log('');

  try {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ backend API...');
    
    const response = await fetch('http://localhost:3000/api/v2/wallet/ton-deposit', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        // –í–ê–ñ–ù–û: –ù—É–∂–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π JWT —Ç–æ–∫–µ–Ω User #25 –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        // 'Authorization': 'Bearer <USER25_JWT_TOKEN>'
      },
      body: JSON.stringify(USER25_DEPOSIT_DATA)
    });

    const result = await response.json();

    console.log('üì• –û—Ç–≤–µ—Ç –æ—Ç backend:');
    console.log('Status:', response.status);
    console.log('Response:', JSON.stringify(result, null, 2));

    if (response.ok && result.success) {
      console.log('');
      console.log('‚úÖ –î–ï–ü–û–ó–ò–¢ –£–°–ü–ï–®–ù–û –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù!');
      console.log('- –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ID:', result.transaction_id);
      console.log('- –°—É–º–º–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∞:', result.amount, 'TON');
      console.log('- User #25 —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å –≤ UI');
    } else {
      console.log('');
      console.log('‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ò:');
      console.log('- –ö–æ–¥ –æ—à–∏–±–∫–∏:', response.status);
      console.log('- –°–æ–æ–±—â–µ–Ω–∏–µ:', result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      
      if (response.status === 401) {
        console.log('');
        console.log('üîê –¢–†–ï–ë–£–ï–¢–°–Ø –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø:');
        console.log('–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞ –Ω—É–∂–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π JWT —Ç–æ–∫–µ–Ω User #25.');
        console.log('–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é User #25 –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization.');
      }
    }

  } catch (error) {
    console.log('');
    console.log('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    console.log('–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ backend server –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:3000');
  }

  console.log('');
  console.log('üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
  console.log('1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å User #25 –≤ UI');  
  console.log('2. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ—è–≤–∏–ª–∞—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏');
  console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ TON –¥–µ–ø–æ–∑–∏—Ç—ã —á–µ—Ä–µ–∑ TON Connect');
}

restoreUser25Deposit().catch(console.error);