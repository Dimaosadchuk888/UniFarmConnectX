#!/usr/bin/env node
/**
 * –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô –í –ö–û–î–ï
 * –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ—Ö –ø—Ä–æ–±–ª–µ–º:
 * 1. –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è REFERRAL_REWARD ‚Üí REFERRAL_REWARD_TON
 * 2. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ - –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫—Ä–æ–Ω–∞
 * 3. TON –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ TonConnect - —Ü–µ–ø–æ—á–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */

const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
require('dotenv').config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY
);

async function detailedDiagnosisWithoutChanges() {
  console.log('üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô –í –ö–û–î–ï\n');
  console.log('üìã –ó–∞–¥–∞—á–∏:');
  console.log('   1. –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ referral_reward');
  console.log('   2. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∫—Ä–æ–Ω–∞');
  console.log('   3. –¶–µ–ø–æ—á–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è TON –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π —á–µ—Ä–µ–∑ TonConnect\n');

  // ================================
  // 1. –ê–ù–ê–õ–ò–ó REFERRAL_REWARD –¢–ò–ü–û–í
  // ================================
  console.log('üß© –ü–†–û–ë–õ–ï–ú–ê 1: –ü–û–°–õ–ï–î–°–¢–í–ò–Ø –ò–ó–ú–ï–ù–ï–ù–ò–Ø REFERRAL_REWARD ‚Üí REFERRAL_REWARD_TON\n');

  try {
    // –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö REFERRAL_REWARD —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const { data: allReferralTx, error: refError } = await supabase
      .from('transactions')
      .select('id, user_id, type, currency, amount, description, created_at, metadata')
      .eq('type', 'REFERRAL_REWARD')
      .order('created_at', { ascending: false });

    if (refError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è referral —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', refError);
    } else {
      console.log(`üìä –ù–ê–ô–î–ï–ù–û ${allReferralTx.length} REFERRAL_REWARD —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:`);
      
      let uniCount = 0;
      let tonCount = 0;
      
      allReferralTx.forEach(tx => {
        if (tx.currency === 'UNI') uniCount++;
        if (tx.currency === 'TON') tonCount++;
      });
      
      console.log(`   üìà UNI —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${uniCount}`);
      console.log(`   üìà TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${tonCount}`);
      
      console.log('\nüîç –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–°–¢–í–ò–ô –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ type:');
      console.log(`   ‚ö†Ô∏è –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞ REFERRAL_REWARD_TON:`);
      console.log(`      - ${tonCount} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å—Ç–∞–Ω—É—Ç –∏–º–µ—Ç—å –¥—Ä—É–≥–æ–π type`);
      console.log(`      - –§–∏–ª—å—Ç—Ä—ã –ø–æ type === 'REFERRAL_REWARD' –Ω–µ –Ω–∞–π–¥—É—Ç TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏`);
      console.log(`      - –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ UNI —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 TON referral –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ metadata
      const recentTonReferrals = allReferralTx
        .filter(tx => tx.currency === 'TON')
        .slice(0, 5);
        
      console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 TON referral —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:');
      recentTonReferrals.forEach((tx, i) => {
        console.log(`   ${i + 1}. ID ${tx.id}: ${tx.amount} TON`);
        console.log(`      User: ${tx.user_id}`);
        console.log(`      Type: ${tx.type} (—Å–µ–π—á–∞—Å)`);
        console.log(`      Metadata: ${tx.metadata ? JSON.stringify(tx.metadata) : 'null'}`);
        console.log(`      –°–æ–∑–¥–∞–Ω–∞: ${new Date(tx.created_at).toLocaleString()}`);
      });
      
      // –ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      console.log('\nüîç –ê–ù–ê–õ–ò–ó –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô:');
      console.log('   üìÇ –¢–∞–±–ª–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å type:');
      console.log('      - transactions (–æ—Å–Ω–æ–≤–Ω–∞—è)');
      console.log('      - referral_earnings (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)'); 
      console.log('      - user_missions (–≤–æ–∑–º–æ–∂–Ω–æ)');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –≤ –∫–æ–¥–µ
      console.log('\n   üîç –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ type:');
      console.log('      - TransactionHistory.tsx: —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ type');
      console.log('      - WalletService: getTransactionsByType()');
      console.log('      - ReferralService: –ø–æ–¥—Å—á–µ—Ç referral –Ω–∞–≥—Ä–∞–¥');
      console.log('      - Dashboard: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ referral —Ç–∏–ø–æ–≤:', error.message);
  }

  // ================================
  // 2. –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê
  // ================================
  console.log('\n\n‚è±Ô∏è –ü–†–û–ë–õ–ï–ú–ê 2: –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –ö–†–û–ù–ê\n');

  try {
    console.log('üîç –ü–æ–∏—Å–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã cron/scheduler
    const possibleSchedulerFiles = [
      'server/scheduler.ts',
      'server/schedulers/index.ts', 
      'modules/farming/scheduler.ts',
      'core/scheduler.ts',
      'scripts/cron.js',
      'scripts/scheduler.js',
      'package.json'  // scripts section
    ];
    
    console.log('üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:');
    for (const file of possibleSchedulerFiles) {
      if (fs.existsSync(file)) {
        console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω: ${file}`);
      } else {
        console.log(`   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${file}`);
      }
    }
    
    // –ê–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π TON Boost
    console.log('\nüìä –ê–ù–ê–õ–ò–ó –ò–ù–¢–ï–†–í–ê–õ–û–í –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê:');
    
    const { data: tonBoostTx, error: boostError } = await supabase
      .from('transactions')
      .select('id, amount, created_at, description, metadata')
      .eq('currency', 'TON')
      .eq('type', 'FARMING_REWARD')
      .order('created_at', { ascending: false })
      .limit(20); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—ã–±–æ—Ä–∫—É –¥–ª—è –ª—É—á—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞

    if (boostError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è TON Boost —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', boostError);
    } else {
      console.log(`üîç –ê–Ω–∞–ª–∏–∑ ${tonBoostTx.length} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö TON Boost —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:`);
      
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
      const timeGroups = {};
      const intervals = [];
      
      tonBoostTx.reverse(); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏
      
      let previousTime = null;
      tonBoostTx.forEach((tx, i) => {
        const currentTime = new Date(tx.created_at);
        const timeKey = currentTime.toLocaleString().substr(0, 16); // –¥–æ –º–∏–Ω—É—Ç
        
        if (!timeGroups[timeKey]) {
          timeGroups[timeKey] = [];
        }
        timeGroups[timeKey].push(tx);
        
        if (previousTime) {
          const intervalMinutes = (currentTime - previousTime) / (1000 * 60);
          intervals.push({
            from: previousTime.toLocaleTimeString(),
            to: currentTime.toLocaleTimeString(),
            minutes: intervalMinutes,
            txId: tx.id
          });
        }
        
        previousTime = currentTime;
      });
      
      console.log('\nüïê –ì–†–£–ü–ü–´ –¢–†–ê–ù–ó–ê–ö–¶–ò–ô –ü–û –í–†–ï–ú–ï–ù–ò (–ø–æ–∏—Å–∫ batch\'–æ–≤):');
      Object.entries(timeGroups).forEach(([time, txs]) => {
        if (txs.length > 1) {
          console.log(`   üö® ${time}: ${txs.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ!`);
          console.log(`      IDs: ${txs.map(tx => tx.id).join(', ')}`);
        } else {
          console.log(`   ‚úÖ ${time}: 1 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è (ID: ${txs[0].id})`);
        }
      });
      
      console.log('\nüìà –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ù–¢–ï–†–í–ê–õ–û–í:');
      
      // –ê–Ω–∞–ª–∏–∑ –∫–æ—Ä–æ—Ç–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ (< 1 –º–∏–Ω—É—Ç–∞)
      const shortIntervals = intervals.filter(int => int.minutes < 1);
      const normalIntervals = intervals.filter(int => int.minutes >= 4 && int.minutes <= 6);
      const longIntervals = intervals.filter(int => int.minutes > 6);
      
      console.log(`   üö® –ö–æ—Ä–æ—Ç–∫–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã (< 1 –º–∏–Ω): ${shortIntervals.length}`);
      console.log(`   ‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã (4-6 –º–∏–Ω): ${normalIntervals.length}`);
      console.log(`   ‚è∞ –î–ª–∏–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã (> 6 –º–∏–Ω): ${longIntervals.length}`);
      
      if (shortIntervals.length > 0) {
        console.log('\n   üîç –ü—Ä–∏–º–µ—Ä—ã –∫–æ—Ä–æ—Ç–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤:');
        shortIntervals.slice(0, 5).forEach(int => {
          console.log(`      ${int.from} ‚Üí ${int.to}: ${int.minutes.toFixed(3)} –º–∏–Ω (TX: ${int.txId})`);
        });
      }
      
      console.log('\nüéØ –î–ò–ê–ì–ù–û–ó –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê:');
      if (shortIntervals.length > normalIntervals.length) {
        console.log('   üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ –∏–ª–∏ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ');
        console.log('   üìã –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('      - –î–≤–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ cron —Ä–∞–±–æ—Ç–∞—é—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ');
        console.log('      - pm2 –∏–ª–∏ Docker –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫');
        console.log('      - –ö–µ—à —Å—Ç–∞—Ä–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –Ω–µ –æ—á–∏—â–µ–Ω');
        console.log('      - –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª');
      } else {
        console.log('   ‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ');
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:', error.message);
  }

  // ================================
  // 3. TON CONNECT –ü–û–ü–û–õ–ù–ï–ù–ò–Ø
  // ================================
  console.log('\n\nüí∏ –ü–†–û–ë–õ–ï–ú–ê 3: TON –ü–û–ü–û–õ–ù–ï–ù–ò–Ø –ß–ï–†–ï–ó TONCONNECT\n');

  try {
    console.log('üîç –ê–Ω–∞–ª–∏–∑ —Ü–µ–ø–æ—á–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è TON –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π...');
    
    // –ò—â–µ–º TON –¥–µ–ø–æ–∑–∏—Ç—ã (–Ω–µ referral –∏ –Ω–µ farming reward)
    const { data: tonDeposits, error: depError } = await supabase
      .from('transactions')
      .select('id, user_id, type, amount, currency, description, created_at, metadata')
      .eq('currency', 'TON')
      .not('type', 'eq', 'REFERRAL_REWARD')
      .not('type', 'eq', 'FARMING_REWARD')
      .order('created_at', { ascending: false })
      .limit(10);

    if (depError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤:', depError);
    } else {
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${tonDeposits.length} –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤:`);
      
      if (tonDeposits.length === 0) {
        console.log('   üö® –ù–ï–¢ TON –î–ï–ü–û–ó–ò–¢–û–í –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
        console.log('   üìã –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç:');
        console.log('      - TonConnect —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ù–ï —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∫–∞–∫ –¥–µ–ø–æ–∑–∏—Ç—ã');
        console.log('      - –¢–æ–ª—å–∫–æ balance –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è transaction –∑–∞–ø–∏—Å–∏'); 
        console.log('      - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–æ –Ω–µ –≤–∏–¥–∏—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é');
      } else {
        tonDeposits.forEach((tx, i) => {
          console.log(`   ${i + 1}. ID ${tx.id}: ${tx.amount} TON`);
          console.log(`      Type: ${tx.type}`);
          console.log(`      User: ${tx.user_id}`);
          console.log(`      Description: ${tx.description}`);
          console.log(`      Created: ${new Date(tx.created_at).toLocaleString()}`);
          console.log(`      Metadata: ${tx.metadata ? JSON.stringify(tx.metadata) : 'null'}`);
        });
      }
    }
    
    // –ê–Ω–∞–ª–∏–∑ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π User 184 –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
    console.log('\nüîç –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π User 184:');
    
    const { data: user184TonTx, error: userTonError } = await supabase
      .from('transactions')
      .select('id, type, amount, description, created_at, metadata')
      .eq('user_id', 184)
      .eq('currency', 'TON')
      .order('created_at', { ascending: false })
      .limit(15);

    if (userTonError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userTonError);
    } else {
      console.log(`üìã ${user184TonTx.length} TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π User 184:`);
      
      const txByType = {};
      user184TonTx.forEach(tx => {
        if (!txByType[tx.type]) {
          txByType[tx.type] = [];
        }
        txByType[tx.type].push(tx);
      });
      
      Object.entries(txByType).forEach(([type, txs]) => {
        console.log(`   üìä ${type}: ${txs.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
        if (type === 'TON_DEPOSIT' || type === 'DEPOSIT') {
          console.log('      ‚úÖ –≠—Ç–æ TON –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è');
          txs.slice(0, 3).forEach(tx => {
            console.log(`         ID ${tx.id}: ${tx.amount} TON - ${tx.description}`);
          });
        }
      });
      
      console.log('\nüéØ –ê–ù–ê–õ–ò–ó –¶–ï–ü–û–ß–ö–ò –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø:');
      
      if (txByType['TON_DEPOSIT'] || txByType['DEPOSIT']) {
        console.log('   ‚úÖ TON –¥–µ–ø–æ–∑–∏—Ç—ã –ï–°–¢–¨ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        console.log('   üìã –ü—Ä–æ–±–ª–µ–º–∞ –≤ Frontend –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏:');
        console.log('      - TransactionHistory.tsx: —Ñ–∏–ª—å—Ç—Ä—ã –º–æ–≥—É—Ç –∏—Å–∫–ª—é—á–∞—Ç—å TON –¥–µ–ø–æ–∑–∏—Ç—ã');
        console.log('      - WalletService: getTransactionsByType() –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç –¥–µ–ø–æ–∑–∏—Ç—ã');
        console.log('      - UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: StyledTransactionItem –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ç–∏–ø');
      } else {
        console.log('   üö® TON –¥–µ–ø–æ–∑–∏—Ç—ã –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –≤ –±–∞–∑–µ');
        console.log('   üìã –ü—Ä–æ–±–ª–µ–º–∞ –≤ Backend —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:');
        console.log('      - TonConnect service –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç createTransaction()');
        console.log('      - WalletService.processTonDeposit() –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
        console.log('      - –¢–æ–ª—å–∫–æ balance –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é');
      }
      
      console.log('\nüìÇ –¶–ï–ü–û–ß–ö–ê –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:');
      console.log('   1. Frontend: TonConnect ‚Üí sendTonTransaction()');
      console.log('   2. Backend: /api/v2/wallet/ton-deposit');
      console.log('   3. Service: WalletService.processTonDeposit()');
      console.log('   4. Repository: —Å–æ–∑–¥–∞–Ω–∏–µ transaction –∑–∞–ø–∏—Å–∏');
      console.log('   5. UI: TransactionHistory ‚Üí StyledTransactionItem');
      
      console.log('\nüîç –§–ê–ô–õ–´ –î–õ–Ø –ü–†–û–í–ï–†–ö–ò (–ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô):');
      console.log('   - client/src/services/tonConnectService.ts');
      console.log('   - server/routes/wallet.ts');
      console.log('   - modules/wallet/service.ts');
      console.log('   - client/src/components/wallet/TransactionHistory.tsx');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ TON –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π:', error.message);
  }

  console.log('\nüéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
  console.log('üìã –ì–æ—Ç–æ–≤ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Ç—Ä–µ—Ö –ø—Ä–æ–±–ª–µ–º');
  console.log('‚ö†Ô∏è –ù–ò–ö–ê–ö–ò–• –ò–ó–ú–ï–ù–ï–ù–ò–ô –í –ö–û–î –ù–ï –í–ù–ï–°–ï–ù–û');
}

detailedDiagnosisWithoutChanges();