/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏ —É–º–Ω–æ–≥–æ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
 */

import { balanceCoordinator } from './client/src/services/balanceUpdateCoordinator';

async function testBalanceCachingFix() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ö–ï–®–ò–†–û–í–ê–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê');
  console.log('=' .repeat(60));
  
  // –°–æ–∑–¥–∞–µ–º mock —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  let updateCallCount = 0;
  const mockRefreshBalance = async (forceRefresh: boolean) => {
    updateCallCount++;
    console.log(`[Mock] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ #${updateCallCount}, forceRefresh: ${forceRefresh}`);
    await new Promise(resolve => setTimeout(resolve, 100)); // –∏–º–∏—Ç–∞—Ü–∏—è API –∑–∞–ø—Ä–æ—Å–∞
  };
  
  console.log('\nüéØ –¢–µ—Å—Ç 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞');
  balanceCoordinator.registerUpdateCallback(184, mockRefreshBalance);
  console.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 184');
  
  console.log('\nüéØ –¢–µ—Å—Ç 2: –î–µ–±–∞—É–Ω—Å–∏–Ω–≥ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤');
  console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ...');
  
  const promises = [
    balanceCoordinator.requestUpdate(184, 'test-1', true),
    balanceCoordinator.requestUpdate(184, 'test-2', false),
    balanceCoordinator.requestUpdate(184, 'test-3', true),
    balanceCoordinator.requestUpdate(184, 'test-4', false),
    balanceCoordinator.requestUpdate(184, 'test-5', true)
  ];
  
  await Promise.all(promises);
  
  console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${updateCallCount} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–æ–∂–∏–¥–∞–µ—Ç—Å—è 1 –∏–∑-–∑–∞ –¥–µ–±–∞—É–Ω—Å–∏–Ω–≥–∞)`);
  
  console.log('\nüéØ –¢–µ—Å—Ç 3: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏');
  updateCallCount = 0;
  
  await balanceCoordinator.requestUpdate(184, 'interval-test-1', false);
  console.log('–ü–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
  
  // –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ä–∞–∑—É –∂–µ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ)
  await balanceCoordinator.requestUpdate(184, 'interval-test-2', false);
  console.log('–í—Ç–æ—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ)');
  
  console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${updateCallCount} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–æ–∂–∏–¥–∞–µ—Ç—Å—è 1 –∏–∑-–∑–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞)`);
  
  console.log('\nüéØ –¢–µ—Å—Ç 4: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ');
  updateCallCount = 0;
  
  await balanceCoordinator.forceUpdate(184, 'force-test');
  console.log(`‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${updateCallCount} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–æ–∂–∏–¥–∞–µ—Ç—Å—è 1)`);
  
  console.log('\nüéØ –¢–µ—Å—Ç 5: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞');
  const stats = balanceCoordinator.getStats();
  console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞:', JSON.stringify(stats, null, 2));
  
  console.log('\nüéØ –¢–µ—Å—Ç 6: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞');
  balanceCoordinator.unregisterUpdateCallback(184);
  console.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 184');
  
  const finalStats = balanceCoordinator.getStats();
  console.log('üìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', JSON.stringify(finalStats, null, 2));
  
  console.log('\n' + '=' .repeat(60));
  console.log('üéä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!');
  console.log('‚úÖ –í—Å–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  console.log('‚úÖ –î–µ–±–∞—É–Ω—Å–∏–Ω–≥ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã');
  console.log('‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç —Å–ø–∞–º–∞');
  console.log('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testBalanceCachingFix().catch(console.error);