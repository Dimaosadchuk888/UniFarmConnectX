#!/usr/bin/env node
/**
 * –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—ã–ª–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
 */

const fs = require('fs');
const path = require('path');

console.log('üîç –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´');
console.log('==============================================\n');

function verifyCodeFixes() {
  console.log('1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –í –ö–û–î–ï:');
  console.log('----------------------------------');
  
  try {
    const authServicePath = path.join(process.cwd(), 'modules/auth/service.ts');
    
    if (!fs.existsSync(authServicePath)) {
      console.log('‚ùå –§–∞–π–ª modules/auth/service.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return false;
    }
    
    const content = fs.readFileSync(authServicePath, 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏
    const hasParseInt = content.includes('parseInt(newUserId)');
    const hasStringRewards = content.includes("reward_uni: '0'");
    const hasExtendedLogging = content.includes('–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê —Å–æ–∑–¥–∞–Ω–∏—è referrals –∑–∞–ø–∏—Å–∏');
    
    console.log(`‚úÖ parseInt(newUserId): ${hasParseInt ? '‚úÖ –ù–ê–ô–î–ï–ù–û' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û'}`);
    console.log(`‚úÖ reward_uni: '0': ${hasStringRewards ? '‚úÖ –ù–ê–ô–î–ï–ù–û' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û'}`);
    console.log(`‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: ${hasExtendedLogging ? '‚úÖ –ù–ê–ô–î–ï–ù–û' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û'}`);
    
    const allFixesPresent = hasParseInt && hasStringRewards && hasExtendedLogging;
    console.log(`\nüìä –°—Ç–∞—Ç—É—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: ${allFixesPresent ? '‚úÖ –í–°–ï –ü–†–ò–ú–ï–ù–ï–ù–´' : '‚ùå –ß–ê–°–¢–ò–ß–ù–û –ü–†–ò–ú–ï–ù–ï–ù–´'}`);
    
    return allFixesPresent;
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞:', error.message);
    return false;
  }
}

function checkDiagnosticTools() {
  console.log('\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–• –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í:');
  console.log('------------------------------------------');
  
  const tools = [
    'test_referral_system_fix.js',
    'check_supabase_rls_permissions.js', 
    'REFERRAL_FIX_IMPLEMENTATION_REPORT.md',
    'REFERRAL_SYSTEM_FIX_SUMMARY.md'
  ];
  
  const existingTools = tools.filter(tool => fs.existsSync(path.join(process.cwd(), tool)));
  
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: ${existingTools.length}/${tools.length}`);
  existingTools.forEach(tool => console.log(`   ‚úÖ ${tool}`));
  
  const missingTools = tools.filter(tool => !existingTools.includes(tool));
  if (missingTools.length > 0) {
    console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç:');
    missingTools.forEach(tool => console.log(`   ‚ùå ${tool}`));
  }
  
  return existingTools.length === tools.length;
}

function generateTestPlan() {
  console.log('\n3Ô∏è‚É£ –ü–õ–ê–ù –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:');
  console.log('----------------------------------');
  
  console.log('üìã –®–ê–ì 1: –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞');
  console.log('   npm start –∏–ª–∏ tsx server/index.ts');
  
  console.log('\nüìã –®–ê–ì 2: –û—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –∏ DevTools Console');
  console.log('   F12 ‚Üí Console Tab');
  
  console.log('\nüìã –®–ê–ì 3: –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã');
  console.log('   1. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ test_referral_system_fix.js');
  console.log('   2. –í—Å—Ç–∞–≤–∏—Ç—å –≤ Console –∏ –Ω–∞–∂–∞—Ç—å Enter');
  console.log('   3. –ù–∞–±–ª—é–¥–∞—Ç—å –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏');
  
  console.log('\nüìã –®–ê–ì 4: –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –ø—Ä–æ–≤–µ—Ä–∏—Ç—å RLS –ø—Ä–∞–≤–∞');
  console.log('   1. –í—ã–ø–æ–ª–Ω–∏—Ç—å check_supabase_rls_permissions.js');
  console.log('   2. –ü—Ä–∏–º–µ–Ω–∏—Ç—å SQL –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞');
  console.log('   3. –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
  
  console.log('\nüìã –®–ê–ì 5: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
  console.log('   ‚úÖ referred_by –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  console.log('   ‚úÖ –ó–∞–ø–∏—Å–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü–µ referrals');
  console.log('   ‚úÖ buildReferrerChain() –Ω–∞—Ö–æ–¥–∏—Ç —Ü–µ–ø–æ—á–∫–∏');
  console.log('   ‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è');
}

function checkCriticalPoints() {
  console.log('\n4Ô∏è‚É£ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–û–ß–ö–ò –ö–û–ù–¢–†–û–õ–Ø:');
  console.log('-------------------------------');
  
  console.log('üîç –õ–û–ì–ò –°–ï–†–í–ï–†–ê –¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å:');
  console.log('   ‚úÖ "[AuthService] ‚úÖ –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–í–Ø–ó–¨ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù–ê"');
  console.log('   ‚ùå –ù–ï –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å: "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê —Å–æ–∑–¥–∞–Ω–∏—è referrals –∑–∞–ø–∏—Å–∏"');
  
  console.log('\nüóÑÔ∏è –ë–ê–ó–ê –î–ê–ù–ù–´–• –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å:');
  console.log('   ‚úÖ –ù–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ referrals');
  console.log('   ‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ referred_by –ø–æ–ª—è –≤ users');
  
  console.log('\nüåê API –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å:');
  console.log('   ‚úÖ 200 OK –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å ref_by');
  console.log('   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ JWT —Ç–æ–∫–µ–Ω—ã');
  console.log('   ‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏');
}

// –ó–∞–ø—É—Å–∫ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
console.log('üöÄ –ù–ê–ß–ê–õ–û –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò...\n');

const codeFixed = verifyCodeFixes();
const toolsCreated = checkDiagnosticTools();

generateTestPlan();
checkCriticalPoints();

console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:');
console.log('===================');
console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–¥–µ: ${codeFixed ? '‚úÖ –ì–û–¢–û–í–û' : '‚ùå –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø'}`);
console.log(`‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: ${toolsCreated ? '‚úÖ –ì–û–¢–û–í–û' : '‚ùå –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø'}`);
console.log(`‚úÖ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: ${codeFixed && toolsCreated ? '‚úÖ –ü–û–õ–ù–ê–Ø –ì–û–¢–û–í–ù–û–°–¢–¨' : '‚ùå –ß–ê–°–¢–ò–ß–ù–ê–Ø –ì–û–¢–û–í–ù–û–°–¢–¨'}`);

if (codeFixed && toolsCreated) {
  console.log('\nüéØ –í–°–ï –ì–û–¢–û–í–û! –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.');
  console.log('üìã –°–ª–µ–¥—É–π—Ç–µ –ø–ª–∞–Ω—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã—à–µ.');
} else {
  console.log('\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º.');
}