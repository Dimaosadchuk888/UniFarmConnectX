/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º users.ton_boost_package
 */

import { createClient } from '@supabase/supabase-js';

async function debugDbUpdate() {
  const supabaseUrl = process.env.SUPABASE_URL;
  const supabaseKey = process.env.SUPABASE_KEY;
  
  const supabase = createClient(supabaseUrl, supabaseKey);
  
  console.log('=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ë–î ===');
  
  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const { data: current } = await supabase
    .from('users')
    .select('id, balance_ton, ton_boost_package, ton_boost_rate')
    .eq('id', 48)
    .single();
  
  console.log('\n1. –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
  console.log('   ID:', current.id);
  console.log('   TON:', current.balance_ton);
  console.log('   –ü–∞–∫–µ—Ç:', current.ton_boost_package);
  console.log('   –°—Ç–∞–≤–∫–∞:', current.ton_boost_rate);
  
  // 2. –ü—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Supabase
  console.log('\n2. –ü–†–Ø–ú–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï:');
  const { data: updateResult, error: updateError } = await supabase
    .from('users')
    .update({ 
      ton_boost_package: 3, // Advanced Boost
      ton_boost_rate: 0.02  // 2% daily
    })
    .eq('id', 48)
    .select('id, ton_boost_package, ton_boost_rate');
  
  if (updateError) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateError.message);
    console.log('   –î–µ—Ç–∞–ª–∏:', updateError);
  } else {
    console.log('   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:', updateResult);
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  const { data: after } = await supabase
    .from('users')
    .select('id, balance_ton, ton_boost_package, ton_boost_rate')
    .eq('id', 48)
    .single();
  
  console.log('\n3. –ü–û–°–õ–ï –û–ë–ù–û–í–õ–ï–ù–ò–Ø:');
  console.log('   ID:', after.id);
  console.log('   TON:', after.balance_ton);
  console.log('   –ü–∞–∫–µ—Ç:', after.ton_boost_package);
  console.log('   –°—Ç–∞–≤–∫–∞:', after.ton_boost_rate);
  
  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  const isActive = after.ton_boost_package && after.ton_boost_package !== 0;
  const hasBalance = parseFloat(after.balance_ton) >= 10;
  
  console.log('\n4. –ö–†–ò–¢–ï–†–ò–ò –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê:');
  console.log('   –ü–∞–∫–µ—Ç –∞–∫—Ç–∏–≤–µ–Ω:', isActive);
  console.log('   –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ TON:', hasBalance);
  console.log('   –ë—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω:', isActive && hasBalance);
  
  if (isActive && hasBalance) {
    console.log('\n   üéØ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ê–ö–¢–ò–í–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!');
    console.log('   –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É');
  }
  
  console.log('\n=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===');
}

debugDbUpdate().catch(console.error);