#!/usr/bin/env tsx
/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è TON Boost
 */

import { TonFarmingRepository } from '../modules/boost/TonFarmingRepository';
import { supabase } from '../core/supabase';

async function diagnoseTonBoostData() {
  console.log('=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –î–ê–ù–ù–´–• TON BOOST ===\n');
  
  // 1. –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
  const tonFarmingRepo = new TonFarmingRepository();
  const activeBoostUsers = await tonFarmingRepo.getActiveBoostUsers();
  
  console.log(`–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${activeBoostUsers.length}\n`);
  
  if (activeBoostUsers.length > 0) {
    console.log('–ü—Ä–∏–º–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ getActiveBoostUsers():');
    const firstUser = activeBoostUsers[0];
    console.log('  user_id:', firstUser.user_id);
    console.log('  farming_balance:', firstUser.farming_balance);
    console.log('  farming_rate:', firstUser.farming_rate);
    console.log('  boost_package_id:', firstUser.boost_package_id);
    console.log('  boost_active:', firstUser.boost_active);
    console.log('  –ü–æ–ª—è balance_ton/balance_uni:', 
      'balance_ton' in firstUser ? firstUser.balance_ton : '–û–¢–°–£–¢–°–¢–í–£–Æ–¢');
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å
    console.log('\n\n–ß—Ç–æ –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫:');
    console.log('  user.balance_ton - –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢ –≤ TonFarmingData');
    console.log('  user.balance_uni - –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢ –≤ TonFarmingData');
    console.log('  user.ton_boost_package - –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å boost_package_id');
    console.log('  user.ton_boost_rate - –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å farming_rate');
    
    // 3. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users
    console.log('\n\n–ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ User 74 –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users:');
    const { data: user74, error } = await supabase
      .from('users')
      .select('id, balance_ton, balance_uni, ton_boost_active, ton_boost_package, ton_boost_rate')
      .eq('id', 74)
      .single();
      
    if (user74) {
      console.log('  balance_ton:', user74.balance_ton);
      console.log('  balance_uni:', user74.balance_uni);
      console.log('  ton_boost_package:', user74.ton_boost_package);
      console.log('  ton_boost_rate:', user74.ton_boost_rate);
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ü–∏–∫–ª–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    console.log('\n\n–ü—Ä–æ–±–ª–µ–º–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ (—Å—Ç—Ä–æ–∫–∞ 77):');
    console.log('  const userDeposit = Math.max(0, parseFloat(user.balance_ton || "0") - 10);');
    console.log('  ^^^ user.balance_ton = undefined, —Ä–µ–∑—É–ª—å—Ç–∞—Ç = -10, Math.max = 0');
    console.log('  –ü–æ—ç—Ç–æ–º—É userDeposit = 0 –∏ –¥–æ—Ö–æ–¥ –Ω–µ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è!');
    
    // 5. –†–µ—à–µ–Ω–∏–µ
    console.log('\n\nüîß –†–ï–®–ï–ù–ò–ï:');
    console.log('  1. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–æ–ª–∂–µ–Ω –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å balance_ton/balance_uni –∏–∑ users');
    console.log('  2. –ò–ª–∏ TonFarmingRepository –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('  3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å farming_balance –≤–º–µ—Å—Ç–æ balance_ton –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤');
  }
  
  process.exit(0);
}

diagnoseTonBoostData().catch(console.error);