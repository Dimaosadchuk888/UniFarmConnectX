import { supabase } from '../core/supabase';

async function checkTonReferralDeep() {
  console.log('=== –ì–õ–£–ë–û–ö–û–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï TON –†–ï–§–ï–†–ê–õ–¨–ù–´–• –ù–ê–ß–ò–°–õ–ï–ù–ò–ô ===\n');
  console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å TON\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('1Ô∏è‚É£ –ê–ö–¢–ò–í–ù–´–ï TON BOOST –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:');
    console.log('‚îÅ'.repeat(50));
    
    const { data: tonBoostUsers, error: tonError } = await supabase
      .from('ton_farming_data')
      .select('*')
      .not('boost_package_id', 'is', null)
      .order('created_at', { ascending: false });
      
    if (tonError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è TON Boost:', tonError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${tonBoostUsers?.length || 0}`);
      
      if (tonBoostUsers && tonBoostUsers.length > 0) {
        console.log('\n–ê–∫—Ç–∏–≤–Ω—ã–µ TON Boost –¥–µ–ø–æ–∑–∏—Ç—ã:');
        tonBoostUsers.slice(0, 5).forEach(boost => {
          console.log(`  - User ${boost.user_id}: –ø–∞–∫–µ—Ç ${boost.boost_package_id}, –¥–µ–ø–æ–∑–∏—Ç ${boost.farming_balance} TON`);
          console.log(`    –î–∞—Ç–∞: ${new Date(boost.created_at).toLocaleString()}`);
        });
      }
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ—Ñ–µ—Ä–µ—Ä–∞–º–∏
    console.log('\n2Ô∏è‚É£ TON BOOST –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –° –†–ï–§–ï–†–ï–†–ê–ú–ò:');
    console.log('‚îÅ'.repeat(50));
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const tonUserIds = tonBoostUsers?.map(u => u.user_id) || [];
    
    if (tonUserIds.length > 0) {
      const { data: tonUsersWithReferrers, error: refError } = await supabase
        .from('users')
        .select('id, username, referred_by, balance_ton')
        .in('id', tonUserIds)
        .not('referred_by', 'is', null);
        
      if (refError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', refError.message);
      } else {
        console.log(`‚úÖ TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ—Ñ–µ—Ä–µ—Ä–∞–º–∏: ${tonUsersWithReferrers?.length || 0}`);
        
        if (tonUsersWithReferrers && tonUsersWithReferrers.length > 0) {
          console.log('\n–ü—Ä–∏–º–µ—Ä—ã:');
          tonUsersWithReferrers.slice(0, 5).forEach(user => {
            const tonData = tonBoostUsers?.find(t => t.user_id === user.id);
            console.log(`  - User ${user.id} (${user.username})`);
            console.log(`    –†–µ—Ñ–µ—Ä–µ—Ä: ${user.referred_by}`);
            console.log(`    TON –±–∞–ª–∞–Ω—Å: ${user.balance_ton}`);
            console.log(`    Boost –¥–µ–ø–æ–∑–∏—Ç: ${tonData?.farming_balance || 0} TON`);
          });
        }
      }
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('\n3Ô∏è‚É£ –ü–û–°–õ–ï–î–ù–ò–ï TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:');
    console.log('‚îÅ'.repeat(50));
    
    const { data: tonTransactions, error: txError } = await supabase
      .from('transactions')
      .select('*')
      .eq('currency', 'TON')
      .order('created_at', { ascending: false })
      .limit(10);
      
    if (txError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${tonTransactions?.length || 0}`);
      
      if (tonTransactions && tonTransactions.length > 0) {
        console.log('\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:');
        tonTransactions.slice(0, 5).forEach(tx => {
          console.log(`  - ${new Date(tx.created_at).toLocaleString()}: User ${tx.user_id}`);
          console.log(`    –¢–∏–ø: ${tx.type}, –°—É–º–º–∞: ${tx.amount_ton || tx.amount} TON`);
          console.log(`    –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
        });
      }
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º TON Boost income —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('\n4Ô∏è‚É£ TON BOOST INCOME –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:');
    console.log('‚îÅ'.repeat(50));
    
    const { data: boostIncome, error: incomeError } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'FARMING_REWARD')
      .gt('amount_ton', 0)
      .order('created_at', { ascending: false })
      .limit(20);
      
    if (incomeError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è income:', incomeError.message);
    } else {
      const tonBoostIncome = boostIncome?.filter(tx => 
        tx.metadata?.original_type === 'TON_BOOST_INCOME' ||
        tx.description?.includes('TON Boost')
      );
      
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ TON Boost income —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${tonBoostIncome?.length || 0}`);
      
      if (tonBoostIncome && tonBoostIncome.length > 0) {
        console.log('\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ TON Boost –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è:');
        tonBoostIncome.slice(0, 5).forEach(tx => {
          console.log(`  - ${new Date(tx.created_at).toLocaleString()}: User ${tx.user_id}`);
          console.log(`    –°—É–º–º–∞: +${tx.amount_ton} TON`);
          console.log(`    –ü–∞–∫–µ—Ç: ${tx.metadata?.boost_package_id || '?'}`);
        });
      }
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ TON –Ω–∞–≥—Ä–∞–¥—ã
    console.log('\n5Ô∏è‚É£ –†–ï–§–ï–†–ê–õ–¨–ù–´–ï TON –ù–ê–ì–†–ê–î–´:');
    console.log('‚îÅ'.repeat(50));
    
    const { data: tonReferralRewards, error: refRewardError } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'REFERRAL_REWARD')
      .gt('amount_ton', 0)
      .order('created_at', { ascending: false })
      .limit(10);
      
    if (refRewardError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥:', refRewardError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ TON —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥: ${tonReferralRewards?.length || 0}`);
      
      if (tonReferralRewards && tonReferralRewards.length > 0) {
        console.log('\n–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ TON –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è:');
        tonReferralRewards.forEach(tx => {
          console.log(`  - ${new Date(tx.created_at).toLocaleString()}: User ${tx.user_id}`);
          console.log(`    –°—É–º–º–∞: +${tx.amount_ton} TON`);
          console.log(`    –£—Ä–æ–≤–µ–Ω—å: ${tx.metadata?.level || '?'}`);
          console.log(`    –û—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞: ${tx.metadata?.sourceUserId || '?'}`);
        });
      } else {
        console.log('‚ö†Ô∏è TON —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥ –ø–æ–∫–∞ –Ω–µ—Ç');
      }
    }
    
    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ TON Boost
    console.log('\n6Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –†–ê–ë–û–¢–´ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê TON BOOST:');
    console.log('‚îÅ'.repeat(50));
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const { data: recentTonBoostTx } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'FARMING_REWARD')
      .gt('amount_ton', 0)
      .like('description', '%TON Boost%')
      .order('created_at', { ascending: false })
      .limit(5);
      
    if (recentTonBoostTx && recentTonBoostTx.length > 0) {
      const lastTx = recentTonBoostTx[0];
      const timeSinceLastTx = Date.now() - new Date(lastTx.created_at).getTime();
      const minutesSinceLastTx = Math.floor(timeSinceLastTx / 1000 / 60);
      
      console.log(`‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç!`);
      console.log(`   - –ü–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ: ${minutesSinceLastTx} –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥`);
      console.log(`   - –û–∂–∏–¥–∞–µ–º—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: 5 –º–∏–Ω—É—Ç`);
      
      if (minutesSinceLastTx > 10) {
        console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (>10 –º–∏–Ω—É—Ç –±–µ–∑ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π)');
      }
    } else {
      console.log('‚ùå –ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –æ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ TON Boost');
    }
    
    // 7. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\n7Ô∏è‚É£ –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê TON:');
    console.log('‚îÅ'.repeat(50));
    
    // –°—á–∏—Ç–∞–µ–º –æ–±—â–∏–µ —Å—É–º–º—ã
    const totalTonBoostUsers = tonBoostUsers?.length || 0;
    const totalTonDeposits = tonBoostUsers?.reduce((sum, u) => sum + parseFloat(u.farming_balance || '0'), 0) || 0;
    const totalTonIncome = boostIncome?.reduce((sum, tx) => sum + parseFloat(tx.amount_ton || '0'), 0) || 0;
    const totalTonReferralRewards = tonReferralRewards?.reduce((sum, tx) => sum + parseFloat(tx.amount_ton || '0'), 0) || 0;
    
    console.log(`üìä TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalTonBoostUsers}`);
    console.log(`üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${totalTonDeposits.toFixed(2)} TON`);
    console.log(`üìà –û–±—â–∏–π –¥–æ—Ö–æ–¥ –Ω–∞—á–∏—Å–ª–µ–Ω: ${totalTonIncome.toFixed(6)} TON`);
    console.log(`ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥: ${totalTonReferralRewards.toFixed(6)} TON`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
    console.log('\nüìã –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ü–û TON:');
    console.log('‚îÅ'.repeat(50));
    
    const hasTonBoostUsers = totalTonBoostUsers > 0;
    const hasTonIncome = totalTonIncome > 0;
    const isSchedulerWorking = recentTonBoostTx && recentTonBoostTx.length > 0;
    
    if (hasTonBoostUsers && hasTonIncome && isSchedulerWorking) {
      console.log('‚úÖ TON Boost —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
      console.log('   - –ï—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏');
      console.log('   - –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞—á–∏—Å–ª—è–µ—Ç –¥–æ—Ö–æ–¥');
      console.log('   - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ');
      
      if (totalTonReferralRewards === 0) {
        console.log('\n‚ö†Ô∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ TON –Ω–∞–≥—Ä–∞–¥—ã = 0, –ø–æ—Ç–æ–º—É —á—Ç–æ:');
        console.log('   - –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –∏–º–µ—é—Ç —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤');
        console.log('   - –ò–ª–∏ –¥–æ—Ö–æ–¥ –µ—â–µ —Å–ª–∏—à–∫–æ–º –º–∞–ª –¥–ª—è –∑–∞–º–µ—Ç–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –≤—ã–ø–ª–∞—Ç');
      }
    } else {
      console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å TON Boost:');
      if (!hasTonBoostUsers) console.log('   - –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      if (!hasTonIncome) console.log('   - –ù–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –¥–æ—Ö–æ–¥–∞');
      if (!isSchedulerWorking) console.log('   - –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkTonReferralDeep()
  .then(() => {
    console.log('\n‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    process.exit(0);
  })
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', error);
    process.exit(1);
  });