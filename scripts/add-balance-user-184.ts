/**
 * –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 184 –Ω–∞ 100 TON
 */

import { supabase } from '../core/supabase';

async function addBalanceUser184() {
  console.log('üí∞ –ü–û–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø 184 –ù–ê 100 TON');
  console.log('=' .repeat(50));
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('id, balance_ton')
      .eq('id', 184)
      .single();
    
    if (userError || !user) {
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 184 –Ω–µ –Ω–∞–π–¥–µ–Ω:', userError);
      return;
    }
    
    const currentBalance = parseFloat(user.balance_ton || '0');
    const addAmount = 100;
    const newBalance = currentBalance + addAmount;
    
    console.log('üìä –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:', currentBalance, 'TON');
    console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º:', addAmount, 'TON');
    console.log('üéØ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:', newBalance, 'TON');
    
    // 2. –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    const { error: updateError } = await supabase
      .from('users')
      .update({ balance_ton: newBalance.toString() })
      .eq('id', 184);
    
    if (updateError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', updateError);
      return;
    }
    
    console.log('‚úÖ –ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
    
    // 3. –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
    const { error: transError } = await supabase
      .from('transactions')
      .insert({
        user_id: 184,
        type: 'DEPOSIT',
        amount: addAmount,
        currency: 'TON',
        status: 'completed',
        description: '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º',
        metadata: {
          admin_deposit: true,
          original_type: 'ADMIN_DEPOSIT',
          source: 'manual_top_up'
        },
        created_at: new Date().toISOString()
      });
    
    if (transError) {
      console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', transError);
      console.log('‚úÖ –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω, –Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞');
    } else {
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏');
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const { data: updatedUser } = await supabase
      .from('users')
      .select('balance_ton')
      .eq('id', 184)
      .single();
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:');
    console.log('–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –≤ –ë–î:', updatedUser?.balance_ton, 'TON');
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫
addBalanceUser184().then(() => {
  console.log('\n‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  process.exit(1);
});