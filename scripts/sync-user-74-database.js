import { supabase } from '../core/supabase.js';

async function syncUser74() {
  console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 74 —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö Supabase...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 74...');
    const { data: existingUser, error: selectError } = await supabase
      .from('users')
      .select('*')
      .eq('id', 74)
      .single();
      
    if (selectError && selectError.code !== 'PGRST116') {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', selectError);
      return;
    }
    
    if (existingUser) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', {
        id: existingUser.id,
        telegram_id: existingUser.telegram_id,
        username: existingUser.username,
        balance_uni: existingUser.balance_uni,
        balance_ton: existingUser.balance_ton,
        created_at: existingUser.created_at
      });
      
      // 2. –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      if (existingUser.balance_uni !== 1000 || existingUser.balance_ton !== 1000) {
        console.log('\n2Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤ –¥–æ 1000 UNI / 1000 TON...');
        
        const { error: updateError } = await supabase
          .from('users')
          .update({
            balance_uni: 1000,
            balance_ton: 1000
          })
          .eq('id', 74);
          
        if (updateError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤:', updateError);
          return;
        }
        
        console.log('‚úÖ –ë–∞–ª–∞–Ω—Å—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
      } else {
        console.log('‚úÖ –ë–∞–ª–∞–Ω—Å—ã —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ: 1000 UNI / 1000 TON');
      }
      
    } else {
      // 3. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 74 –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –Ω–æ–≤–æ–≥–æ...\n');
      
      const newUser = {
        id: 74,
        telegram_id: 999489,
        username: 'test_user_1752129840905',
        first_name: 'Test User',
        ref_code: 'TEST_1752129840905_dokxv0',
        balance_uni: 1000,
        balance_ton: 1000,
        uni_farming_active: false,
        uni_deposit_amount: 0,
        uni_farming_balance: 0,
        ton_boost_active: false,
        ton_boost_package: null,
        created_at: new Date().toISOString()
      };
      
      const { error: insertError } = await supabase
        .from('users')
        .insert(newUser);
        
      if (insertError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', insertError);
        return;
      }
      
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
      console.log(newUser);
    }
    
    // 4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\n3Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const { data: finalUser, error: finalError } = await supabase
      .from('users')
      .select('id, telegram_id, username, balance_uni, balance_ton, created_at')
      .eq('id', 74)
      .single();
      
    if (finalError || !finalUser) {
      console.error('‚ùå –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å:', finalError);
      return;
    }
    
    console.log('\n‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
    console.log('üìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
    console.log(finalUser);
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É wallets –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const { data: tables } = await supabase
      .rpc('get_tables', { schema_name: 'public' });
      
    if (tables && tables.some(t => t.table_name === 'wallets')) {
      console.log('üìÇ –ù–∞–π–¥–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ wallets, –ø—Ä–æ–≤–µ—Ä—è—é...');
      
      const { data: wallet, error: walletError } = await supabase
        .from('wallets')
        .select('*')
        .eq('user_id', 74)
        .single();
        
      if (!walletError && wallet) {
        console.log('‚úÖ –ó–∞–ø–∏—Å—å –≤ wallets –Ω–∞–π–¥–µ–Ω–∞:', wallet);
      } else if (walletError && walletError.code === 'PGRST116') {
        console.log('‚ö†Ô∏è –ó–∞–ø–∏—Å–∏ –≤ wallets –Ω–µ—Ç, –Ω–æ –±–∞–ª–∞–Ω—Å—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ users');
      }
    }
    
    console.log('\n‚ú® –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('üéØ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 74 –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
    console.log('üí∞ –ë–∞–ª–∞–Ω—Å—ã: 1000 UNI / 1000 TON');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

syncUser74();