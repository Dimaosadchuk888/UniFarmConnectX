/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã UniFarm
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
 */

import { supabase } from '../core/supabase';
import { ReferralService } from '../modules/referral/service';

async function diagnoseReferralIssues() {
  console.log('\n' + '='.repeat(80));
  console.log('–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´');
  console.log('='.repeat(80) + '\n');

  const issues: string[] = [];
  const solutions: string[] = [];

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—á–µ–º—É processReferral –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å–∏
    console.log('1. –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê processReferral()');
    console.log('-'.repeat(50));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã referrals
    const { data: tableCheck, error: tableError } = await supabase
      .from('referrals')
      .select('*')
      .limit(1);
    
    if (tableError) {
      issues.push('‚ùå –¢–∞–±–ª–∏—Ü–∞ referrals –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞: ' + tableError.message);
      solutions.push('üîß –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã referrals –≤ Supabase Dashboard');
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ referrals —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω–∞');
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∑–æ–≤–∞ processReferral –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    console.log('\n2. –ê–ù–ê–õ–ò–ó –ü–†–û–¶–ï–°–°–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò');
    console.log('-'.repeat(50));
    
    // –ò—â–µ–º –≤—ã–∑–æ–≤—ã processReferral –≤ –∫–æ–¥–µ
    console.log('–ü–æ–∏—Å–∫ –≤—ã–∑–æ–≤–æ–≤ processReferral –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:');
    console.log('- auth/service.ts: –ù–ï–¢ –≤—ã–∑–æ–≤–∞ processReferral() ‚ùå');
    console.log('- user/service.ts: –ù–ï–¢ –≤—ã–∑–æ–≤–∞ processReferral() ‚ùå');
    console.log('- –¢–æ–ª—å–∫–æ –≤ referral/controller.ts —á–µ—Ä–µ–∑ API endpoint /process');
    
    issues.push('‚ùå processReferral() –ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    solutions.push('üîß –î–æ–±–∞–≤–∏—Ç—å –≤—ã–∑–æ–≤ referralService.processReferral() –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ auth/service.ts');
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Ü–µ–ø–æ—á–µ–∫
    console.log('\n3. –ü–†–û–í–ï–†–ö–ê –ü–û–°–¢–†–û–ï–ù–ò–Ø –†–ï–§–ï–†–ê–õ–¨–ù–´–• –¶–ï–ü–û–ß–ï–ö');
    console.log('-'.repeat(50));
    
    const referralService = new ReferralService();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º
    const { data: userWithRef } = await supabase
      .from('users')
      .select('id, username, referred_by')
      .not('referred_by', 'is', null)
      .limit(1)
      .single();
    
    if (userWithRef) {
      console.log(`\n–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ü–µ–ø–æ—á–∫—É –¥–ª—è User ${userWithRef.id} (referred_by: ${userWithRef.referred_by}):`);
      
      // –°—Ç—Ä–æ–∏–º —Ü–µ–ø–æ—á–∫—É —á–µ—Ä–µ–∑ referred_by
      const chain = await referralService.buildReferrerChain(userWithRef.id.toString());
      console.log(`–¶–µ–ø–æ—á–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞: ${chain.length} —É—Ä–æ–≤–Ω–µ–π`);
      
      if (chain.length > 0) {
        console.log('‚úÖ buildReferrerChain —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —á–µ—Ä–µ–∑ –ø–æ–ª–µ referred_by');
      } else if (userWithRef.referred_by) {
        issues.push('‚ö†Ô∏è buildReferrerChain –Ω–µ –º–æ–∂–µ—Ç –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Ü–µ–ø–æ—á–∫—É –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ referred_by');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        const { data: referrer } = await supabase
          .from('users')
          .select('id')
          .eq('id', userWithRef.referred_by)
          .single();
        
        if (!referrer) {
          issues.push(`‚ùå Orphaned –∑–∞–ø–∏—Å—å: User ${userWithRef.id} —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ User ${userWithRef.referred_by}`);
          solutions.push(`üîß –û—á–∏—Å—Ç–∏—Ç—å referred_by –¥–ª—è User ${userWithRef.id} –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å User ${userWithRef.referred_by}`);
        }
      }
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥
    console.log('\n4. –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ù–ê–ß–ò–°–õ–ï–ù–ò–Ø –ù–ê–ì–†–ê–î');
    console.log('-'.repeat(50));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ farming —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const { data: farmingTx, count: farmingCount } = await supabase
      .from('transactions')
      .select('*', { count: 'exact' })
      .eq('type', 'FARMING_REWARD')
      .limit(1);
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${farmingCount || 0} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π FARMING_REWARD`);
    
    if (farmingCount && farmingCount > 0) {
      console.log('‚úÖ Farming —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–∑–æ–≤ distributeReferralRewards
      const { data: referralTx, count: referralCount } = await supabase
        .from('transactions')
        .select('*', { count: 'exact' })
        .eq('type', 'REFERRAL_REWARD')
        .limit(1);
      
      if (!referralCount || referralCount === 0) {
        issues.push('‚ùå distributeReferralRewards –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è');
        console.log('\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('1. –¶–µ–ø–æ—á–∫–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤ –ø—É—Å—Ç—ã–µ (buildReferrerChain –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç [])');
        console.log('2. –û—à–∏–±–∫–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
        console.log('3. –û—à–∏–±–∫–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–æ–≤');
        
        solutions.push('üîß –î–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ distributeReferralRewards –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏');
      }
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ–ª–∏
    console.log('\n5. –ê–ù–ê–õ–ò–ó –≠–ö–û–ù–û–ú–ò–ß–ï–°–ö–û–ô –ú–û–î–ï–õ–ò');
    console.log('-'.repeat(50));
    
    console.log('–¢–µ–∫—É—â–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã:');
    console.log('–£—Ä–æ–≤–µ–Ω—å 1: 100% (!) - —ç—Ç–æ 1:1 –æ—Ç –¥–æ—Ö–æ–¥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞');
    console.log('–£—Ä–æ–≤–Ω–∏ 2-20: –æ—Ç 2% –¥–æ 20%');
    console.log('–ò–¢–û–ì–û: 310% –æ–±—â–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞');
    
    issues.push('‚ö†Ô∏è –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å –Ω–µ—É—Å—Ç–æ–π—á–∏–≤–∞ - 310% —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞');
    solutions.push('üîß –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç—ã: –Ω–∞–ø—Ä–∏–º–µ—Ä, —É—Ä–æ–≤–µ–Ω—å 1 = 5-10%, —É—Ä–æ–≤–Ω–∏ 2-20 = 0.5-2%');
    
    // 6. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\n' + '='.repeat(80));
    console.log('–û–ë–ù–ê–†–£–ñ–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:');
    console.log('='.repeat(80));
    
    issues.forEach((issue, index) => {
      console.log(`${index + 1}. ${issue}`);
    });
    
    console.log('\n' + '='.repeat(80));
    console.log('–ö–û–ù–ö–†–ï–¢–ù–´–ï –†–ï–®–ï–ù–ò–Ø (–ë–ï–ó –í–†–ï–î–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Æ):');
    console.log('='.repeat(80));
    
    solutions.forEach((solution, index) => {
      console.log(`${index + 1}. ${solution}`);
    });
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
    console.log('\n' + '='.repeat(80));
    console.log('–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('='.repeat(80));
    
    console.log('\nüìå –ë–´–°–¢–†–û–ï –†–ï–®–ï–ù–ò–ï (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è):');
    console.log('1. –í auth/service.ts –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–±–∞–≤–∏—Ç—å:');
    console.log('   if (isNewUser && userData.ref_by) {');
    console.log('     const referralService = new ReferralService();');
    console.log('     await referralService.processReferral(userData.ref_by, userInfo.id);');
    console.log('   }');
    
    console.log('\nüìå –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ORPHANED –ó–ê–ü–ò–°–ï–ô:');
    console.log('1. –í—ã–ø–æ–ª–Ω–∏—Ç—å SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–≤—è–∑–µ–π:');
    console.log('   UPDATE users SET referred_by = NULL');
    console.log('   WHERE referred_by NOT IN (SELECT id FROM users);');
    
    console.log('\nüìå –í–†–ï–ú–ï–ù–ù–û–ï –†–ï–®–ï–ù–ò–ï –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('1. –°–æ–∑–¥–∞—Ç—å endpoint –¥–ª—è —Ä—É—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π');
    console.log('2. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å referred_by –≤—ã–∑–≤–∞—Ç—å processReferral()');
    
    console.log('\nüìå –ú–û–ù–ò–¢–û–†–ò–ù–ì:');
    console.log('1. –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ distributeReferralRewards –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è');
    console.log('2. –°–æ–∑–¥–∞—Ç—å –¥–∞—à–±–æ—Ä–¥ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }

  console.log('\n' + '='.repeat(80));
  console.log('–ö–û–ù–ï–¶ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò');
  console.log('='.repeat(80) + '\n');
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
diagnoseReferralIssues();