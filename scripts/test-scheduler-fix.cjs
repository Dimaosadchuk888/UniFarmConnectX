#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö scheduler'–æ–≤
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç scheduler'—ã –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 */

const dotenv = require('dotenv');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: path.join(__dirname, '..', '.env') });

async function testSchedulers() {
  console.log('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• SCHEDULER\'–û–í ===');
  console.log(new Date().toLocaleString('ru-RU'));
  console.log('');

  try {
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç TypeScript –º–æ–¥—É–ª–µ–π
    console.log('üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π...');
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º ts-node –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å TypeScript
    require('ts-node').register({
      transpileOnly: true,
      compilerOptions: {
        module: 'commonjs',
        target: 'es2020',
        esModuleInterop: true,
        allowSyntheticDefaultImports: true
      }
    });

    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º scheduler'—ã
    const { farmingScheduler } = require('../core/scheduler/farmingScheduler');
    const { tonBoostIncomeScheduler } = require('../modules/scheduler/tonBoostIncomeScheduler');
    
    console.log('‚úÖ –ú–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    console.log('');

    // –ó–∞–ø—É—Å–∫–∞–µ–º scheduler'—ã
    console.log('üöÄ –ó–∞–ø—É—Å–∫ UNI Farming Scheduler...');
    farmingScheduler.start();
    
    console.log('üöÄ –ó–∞–ø—É—Å–∫ TON Boost Income Scheduler...');
    tonBoostIncomeScheduler.start();
    
    console.log('');
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã scheduler\'–æ–≤...');
    console.log('üìä –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ª–æ–≥–∞–º–∏ –Ω–∏–∂–µ:');
    console.log('=====================================');
    console.log('');

    // –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ª–æ–≥–∏
    await new Promise(resolve => setTimeout(resolve, 30000));

    console.log('');
    console.log('=====================================');
    console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.');
    console.log('');
    console.log('–ï—Å–ª–∏ –≤—ã –≤–∏–¥–µ–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è—Ö - scheduler\'—ã —Ä–∞–±–æ—Ç–∞—é—Ç!');
    console.log('–ï—Å–ª–∏ –Ω–µ—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö.');
    
    process.exit(0);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ scheduler\'–æ–≤:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testSchedulers().catch(console.error);