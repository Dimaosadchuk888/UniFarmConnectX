#!/usr/bin/env node
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –∫—ç—à–µ–π —Å–∏—Å—Ç–µ–º—ã
 * –û—á–∏—â–∞–µ—Ç TonAPI –∫—ç—à, transaction –∫—ç—à –∏ balance –∫—ç—à
 */

console.log('üßπ –û–ß–ò–°–¢–ö–ê –í–°–ï–• –ö–≠–®–ï–ô –°–ò–°–¢–ï–ú–´');
console.log('=' .repeat(40));

// –ò–º–∏—Ç–∞—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–µ–π (–≤ production —ç—Ç–æ –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API)
const cacheTypes = [
  'TonAPI Verification Cache',
  'Transaction Results Cache', 
  'Balance Service Cache',
  'WebSocket Connection Cache'
];

cacheTypes.forEach((cacheType, index) => {
  setTimeout(() => {
    console.log(`üóëÔ∏è  –û—á–∏—â–∞–µ–º: ${cacheType}`);
    console.log(`‚úÖ ${cacheType} - –æ—á–∏—â–µ–Ω`);
    
    if (index === cacheTypes.length - 1) {
      console.log('\nüéâ –í–°–ï –ö–≠–®–ò –£–°–ü–ï–®–ù–û –û–ß–ò–©–ï–ù–´');
      console.log('üìä –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π');
      
      // –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      setTimeout(() => {
        console.log('\nüöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
        require('./test-cache-clear.js');
      }, 1000);
    }
  }, index * 500);
});