import { supabase } from '../core/supabase.js';
import * as fs from 'fs';
import * as path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

interface SyncResult {
  field: string;
  totalRecords: number;
  syncedRecords: number;
  errors: number;
  details: any[];
}

async function synchronizeDuplicateFields() {
  console.log('üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –î–£–ë–õ–ò–†–£–Æ–©–ò–•–°–Ø –ü–û–õ–ï–ô');
  console.log('='.repeat(80));
  console.log('');
  console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –º–µ–∂–¥—É –¥—É–±–ª–∏—Ä—É—é—â–∏–º–∏—Å—è –ø–æ–ª—è–º–∏');
  console.log('üìù –û—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∞—É–¥–∏—Ç–µ, –±—É–¥—É—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è:');
  console.log('   1. uni_deposit_amount ‚Üí uni_farming_deposit');
  console.log('   2. ton_boost_package ‚Üí ton_boost_package_id');
  console.log('   3. wallet ‚Üî ton_wallet_address (–¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è)');
  console.log('   4. balance_uni –∏ uni_farming_balance –ù–ï —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è (—Ä–∞–∑–Ω–∞—è –ª–æ–≥–∏–∫–∞)');
  console.log('');

  const results: SyncResult[] = [];

  try {
    // 1. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è UNI Deposit
    console.log('\n1Ô∏è‚É£ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è UNI Deposit (uni_deposit_amount ‚Üí uni_farming_deposit)');
    console.log('-'.repeat(60));

    // –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å–∏ —Å —Ä–∞–∑–ª–∏—á–∏—è–º–∏
    const { data: depositDiffs } = await supabase
      .from('users')
      .select('id, telegram_id, uni_deposit_amount, uni_farming_deposit')
      .neq('uni_deposit_amount', 'uni_farming_deposit');

    if (depositDiffs && depositDiffs.length > 0) {
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${depositDiffs.length} –∑–∞–ø–∏—Å–µ–π —Å —Ä–∞–∑–ª–∏—á–∏—è–º–∏`);
      
      let syncedCount = 0;
      let errorCount = 0;
      const syncDetails: any[] = [];

      for (const user of depositDiffs) {
        try {
          // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º: uni_deposit_amount —è–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–Ω—ã–º –ø–æ–ª–µ–º
          const { error } = await supabase
            .from('users')
            .update({ uni_farming_deposit: user.uni_deposit_amount })
            .eq('id', user.id);

          if (error) {
            errorCount++;
            console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è user ${user.id}:`, error);
          } else {
            syncedCount++;
            syncDetails.push({
              userId: user.id,
              old_value: user.uni_farming_deposit,
              new_value: user.uni_deposit_amount
            });
          }
        } catch (e) {
          errorCount++;
          console.error(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è user ${user.id}:`, e);
        }
      }

      console.log(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${syncedCount}/${depositDiffs.length}`);
      if (errorCount > 0) console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);

      results.push({
        field: 'uni_deposit_amount ‚Üí uni_farming_deposit',
        totalRecords: depositDiffs.length,
        syncedRecords: syncedCount,
        errors: errorCount,
        details: syncDetails.slice(0, 5) // –ü–µ—Ä–≤—ã–µ 5 –¥–ª—è –æ—Ç—á–µ—Ç–∞
      });
    } else {
      console.log('‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }

    // 2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è TON Boost Package
    console.log('\n2Ô∏è‚É£ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è TON Boost Package (ton_boost_package ‚Üí ton_boost_package_id)');
    console.log('-'.repeat(60));

    // –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å–∏ –≥–¥–µ ton_boost_package > 0, –Ω–æ ton_boost_package_id = null
    const { data: boostDiffs } = await supabase
      .from('users')
      .select('id, telegram_id, ton_boost_package, ton_boost_package_id')
      .gt('ton_boost_package', 0)
      .is('ton_boost_package_id', null);

    if (boostDiffs && boostDiffs.length > 0) {
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${boostDiffs.length} –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏`);
      
      let syncedCount = 0;
      let errorCount = 0;
      const syncDetails: any[] = [];

      for (const user of boostDiffs) {
        try {
          // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º: –∫–æ–ø–∏—Ä—É–µ–º ton_boost_package –≤ ton_boost_package_id
          const { error } = await supabase
            .from('users')
            .update({ ton_boost_package_id: user.ton_boost_package })
            .eq('id', user.id);

          if (error) {
            errorCount++;
            console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è user ${user.id}:`, error);
          } else {
            syncedCount++;
            syncDetails.push({
              userId: user.id,
              package_value: user.ton_boost_package
            });
          }
        } catch (e) {
          errorCount++;
          console.error(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è user ${user.id}:`, e);
        }
      }

      console.log(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${syncedCount}/${boostDiffs.length}`);
      if (errorCount > 0) console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);

      results.push({
        field: 'ton_boost_package ‚Üí ton_boost_package_id',
        totalRecords: boostDiffs.length,
        syncedRecords: syncedCount,
        errors: errorCount,
        details: syncDetails.slice(0, 5)
      });
    } else {
      console.log('‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }

    // 3. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Wallet Address
    console.log('\n3Ô∏è‚É£ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Wallet Address (–¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è)');
    console.log('-'.repeat(60));

    // –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å–∏ –≥–¥–µ –æ–¥–Ω–æ –ø–æ–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ, –∞ –¥—Ä—É–≥–æ–µ –Ω–µ—Ç
    const { data: walletDiffs1 } = await supabase
      .from('users')
      .select('id, telegram_id, wallet, ton_wallet_address')
      .not('wallet', 'is', null)
      .is('ton_wallet_address', null);

    const { data: walletDiffs2 } = await supabase
      .from('users')
      .select('id, telegram_id, wallet, ton_wallet_address')
      .is('wallet', null)
      .not('ton_wallet_address', 'is', null);

    const walletDiffs = [...(walletDiffs1 || []), ...(walletDiffs2 || [])];

    if (walletDiffs.length > 0) {
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${walletDiffs.length} –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏`);
      
      let syncedCount = 0;
      let errorCount = 0;
      const syncDetails: any[] = [];

      for (const user of walletDiffs) {
        try {
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
          const updateData = user.wallet && !user.ton_wallet_address
            ? { ton_wallet_address: user.wallet }
            : { wallet: user.ton_wallet_address };

          const { error } = await supabase
            .from('users')
            .update(updateData)
            .eq('id', user.id);

          if (error) {
            errorCount++;
            console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è user ${user.id}:`, error);
          } else {
            syncedCount++;
            syncDetails.push({
              userId: user.id,
              wallet: user.wallet || user.ton_wallet_address,
              direction: user.wallet ? 'wallet ‚Üí ton_wallet_address' : 'ton_wallet_address ‚Üí wallet'
            });
          }
        } catch (e) {
          errorCount++;
          console.error(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è user ${user.id}:`, e);
        }
      }

      console.log(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${syncedCount}/${walletDiffs.length}`);
      if (errorCount > 0) console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);

      results.push({
        field: 'wallet ‚Üî ton_wallet_address',
        totalRecords: walletDiffs.length,
        syncedRecords: syncedCount,
        errors: errorCount,
        details: syncDetails.slice(0, 5)
      });
    } else {
      console.log('‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }

    // 4. –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ balance –ø–æ–ª–µ–π
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Balance –ø–æ–ª–µ–π (–ù–ï —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º - —Ä–∞–∑–Ω–∞—è –ª–æ–≥–∏–∫–∞)');
    console.log('-'.repeat(60));

    const { data: balanceCheck } = await supabase
      .from('users')
      .select('id, balance_uni, uni_farming_balance, uni_deposit_amount')
      .neq('balance_uni', 'uni_farming_balance')
      .limit(5);

    if (balanceCheck && balanceCheck.length > 0) {
      console.log('üìä –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–∑–ª–∏—á–∏–π (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ!):');
      balanceCheck.forEach(user => {
        const totalBalance = parseFloat(user.balance_uni || '0');
        const farmingBalance = parseFloat(user.uni_farming_balance || '0');
        const depositAmount = parseFloat(user.uni_deposit_amount || '0');
        
        console.log(`  User ${user.id}:`);
        console.log(`    - balance_uni: ${totalBalance} (–æ–±—â–∏–π –±–∞–ª–∞–Ω—Å)`);
        console.log(`    - uni_farming_balance: ${farmingBalance} (–Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è)`);
        console.log(`    - uni_deposit_amount: ${depositAmount} (–¥–µ–ø–æ–∑–∏—Ç)`);
        console.log(`    - –§–æ—Ä–º—É–ª–∞: ${depositAmount} + ${farmingBalance} ‚âà ${totalBalance}`);
      });
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    const report = {
      timestamp: new Date().toISOString(),
      syncResults: results,
      summary: {
        totalSynced: results.reduce((sum, r) => sum + r.syncedRecords, 0),
        totalErrors: results.reduce((sum, r) => sum + r.errors, 0),
        fieldsProcessed: results.length
      },
      recommendations: [
        'uni_deposit_amount –∏ uni_farming_deposit —Ç–µ–ø–µ—Ä—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã',
        'ton_boost_package –∏ ton_boost_package_id —Ç–µ–ø–µ—Ä—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã',
        'wallet –∏ ton_wallet_address —Ç–µ–ø–µ—Ä—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã',
        'balance_uni –∏ uni_farming_balance –ù–ï —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã (—Ä–∞–∑–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞)'
      ]
    };

    fs.writeFileSync(
      path.join(__dirname, '..', 'FIELD_SYNCHRONIZATION_REPORT.json'),
      JSON.stringify(report, null, 2)
    );

    // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\n\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:');
    console.log('='.repeat(80));
    console.log(`‚úÖ –í—Å–µ–≥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${report.summary.totalSynced}`);
    console.log(`‚ùå –í—Å–µ–≥–æ –æ—à–∏–±–æ–∫: ${report.summary.totalErrors}`);
    console.log(`üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≥—Ä—É–ø–ø –ø–æ–ª–µ–π: ${report.summary.fieldsProcessed}`);
    
    console.log('\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    console.log('2. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–¥ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≥–ª–∞–≤–Ω—ã—Ö –ø–æ–ª–µ–π');
    console.log('3. –î–æ–±–∞–≤—å—Ç–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –ë–î –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤ –±—É–¥—É—â–µ–º');
    console.log('4. –ù–ï —É–¥–∞–ª—è–π—Ç–µ –ø–æ–ª—è —Å—Ä–∞–∑—É - —Å–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–∏—Ç–µ –≤–µ—Å—å –∫–æ–¥');
    
    console.log('\n‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ FIELD_SYNCHRONIZATION_REPORT.json');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
console.log('–ó–∞–ø—É—Å–∫–∞—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ø–æ–ª–µ–π...\n');
console.log('‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–∑–º–µ–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ –≤ –ë–î!');
console.log('–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è.');
console.log('–ù–∞—á–∏–Ω–∞—é —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...\n');

setTimeout(() => {
  synchronizeDuplicateFields().catch(console.error);
}, 5000);