import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL || process.env.VITE_SUPABASE_URL,
  process.env.SUPABASE_KEY || process.env.SUPABASE_SERVICE_KEY
);

async function checkMissions() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∏—Å—Å–∏–π –≤ –ë–î...\n');
  
  const { data, error, count } = await supabase
    .from('missions')
    .select('*', { count: 'exact' });
    
  if (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∏—Å—Å–∏–π:', error.message);
    return;
  }
  
  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–∏—Å—Å–∏–π: ${count || 0}\n`);
  
  if (data && data.length > 0) {
    console.log('üìã –°–ø–∏—Å–æ–∫ –º–∏—Å—Å–∏–π:');
    data.forEach((mission, index) => {
      console.log(`\n${index + 1}. ${mission.title}`);
      console.log(`   ID: ${mission.id}`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${mission.description}`);
      console.log(`   –ù–∞–≥—Ä–∞–¥–∞ UNI: ${mission.reward_uni || 0}`);
      console.log(`   –ù–∞–≥—Ä–∞–¥–∞ TON: ${mission.reward_ton || 0}`);
      console.log(`   –¢–∏–ø: ${mission.type}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${mission.status}`);
    });
  } else {
    console.log('‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ missions –ø—É—Å—Ç–∞—è');
  }
}

checkMissions();