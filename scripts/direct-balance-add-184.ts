/**
 * –ü—Ä—è–º–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 184 —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π TransactionService
 */

import { UnifiedTransactionService } from '../core/TransactionService';
import { supabase } from '../core/supabase';

async function directBalanceAdd() {
  console.log('üí∞ –ü–†–Ø–ú–û–ï –ü–û–ü–û–õ–ù–ï–ù–ò–ï –ë–ê–õ–ê–ù–°–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø 184 –ù–ê 100 TON');
  console.log('=' .repeat(60));
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('id, balance_ton')
      .eq('id', 184)
      .single();
    
    if (userError || !user) {
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 184 –Ω–µ –Ω–∞–π–¥–µ–Ω:', userError);
      return;
    }
    
    const currentBalance = parseFloat(user.balance_ton || '0');
    console.log('üìä –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:', currentBalance, 'TON');
    
    // 2. –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —á–µ—Ä–µ–∑ UnifiedTransactionService
    const transactionService = new UnifiedTransactionService();
    
    const transactionData = {
      user_id: 184,
      type: 'TON_DEPOSIT' as const, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø
      amount: 100,
      currency: 'TON' as const,
      status: 'completed' as const,
      description: '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º (–ø—Ä—è–º–æ–µ)',
      metadata: {
        admin_deposit: true,
        original_type: 'ADMIN_DEPOSIT',
        source: 'direct_admin_top_up',
        manual_addition: true
      }
    };
    
    console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ UnifiedTransactionService...');
    const transaction = await transactionService.createTransaction(transactionData);
    
    if (transaction && transaction.success && transaction.transaction_id) {
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:', transaction.transaction_id);
      console.log('üí´ –°—É–º–º–∞:', transactionData.amount, 'TON');
      
      // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const { data: updatedUser } = await supabase
        .from('users')
        .select('balance_ton')
        .eq('id', 184)
        .single();
      
      const newBalance = parseFloat(updatedUser?.balance_ton || '0');
      console.log('üìä –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:', newBalance, 'TON');
      console.log('‚ûï –ò–∑–º–µ–Ω–µ–Ω–∏–µ:', (newBalance - currentBalance), 'TON');
      
    } else {
      console.error('‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞');
    }
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫
directBalanceAdd().then(() => {
  console.log('\n‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  process.exit(1);
});