import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL || process.env.VITE_SUPABASE_URL,
  process.env.SUPABASE_KEY || process.env.SUPABASE_SERVICE_KEY
);

async function checkMissionsStructure() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã missions...\n');
  
  // –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–æ–Ω–∫–∞—Ö —Ç–∞–±–ª–∏—Ü—ã
  const { data, error } = await supabase
    .from('missions')
    .select('*')
    .limit(1);
    
  if (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error.message);
    return;
  }
  
  if (data && data.length > 0) {
    console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã missions:');
    console.log('–ö–æ–ª–æ–Ω–∫–∏:', Object.keys(data[0]));
    console.log('\n–ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏:');
    console.log(JSON.stringify(data[0], null, 2));
  } else {
    console.log('‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ missions –ø—É—Å—Ç–∞—è, –Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —á–µ—Ä–µ–∑ SQL
    const { data: schemaData, error: schemaError } = await supabase
      .rpc('get_table_columns', { table_name: 'missions' })
      .single();
      
    if (!schemaError && schemaData) {
      console.log('\n–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –∏–∑ —Å—Ö–µ–º—ã:');
      console.log(schemaData);
    }
  }
}

checkMissionsStructure();