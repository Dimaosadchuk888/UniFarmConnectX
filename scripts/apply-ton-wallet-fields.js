import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY
);

async function applyTonWalletFields() {
  console.log('[ApplyTonWalletFields] –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è TON-–∫–æ—à–µ–ª—å–∫–∞...\n');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: sampleUser, error: fetchError } = await supabase
      .from('users')
      .select('*')
      .limit(1)
      .single();

    if (fetchError) {
      console.error('[ERROR] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', fetchError);
      return;
    }

    console.log('üìä –¢–µ–∫—É—â–∏–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
    const fields = Object.keys(sampleUser);
    console.log('  –í—Å–µ–≥–æ –ø–æ–ª–µ–π:', fields.length);
    console.log('  –°–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π:', fields.join(', '));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª–µ–π TON-–∫–æ—à–µ–ª—å–∫–∞
    const tonFields = ['ton_wallet_address', 'ton_wallet_verified', 'ton_wallet_linked_at'];
    const missingFields = tonFields.filter(field => !fields.includes(field));

    if (missingFields.length === 0) {
      console.log('\n‚úÖ –í—Å–µ –ø–æ–ª—è TON-–∫–æ—à–µ–ª—å–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç!');
      return;
    }

    console.log('\n‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è:', missingFields.join(', '));
    console.log('\nüìù –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL-–∑–∞–ø—Ä–æ—Å –∏–∑ —Ñ–∞–π–ª–∞:');
    console.log('   scripts/add-ton-wallet-fields.sql');
    console.log('\n   –í Supabase Dashboard:');
    console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ SQL Editor');
    console.log('   2. –í—Å—Ç–∞–≤—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ SQL-—Ñ–∞–π–ª–∞');
    console.log('   3. –ù–∞–∂–º–∏—Ç–µ "Run"');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å TON Boost
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–∫—Ç–∏–≤–Ω—ã–º TON Boost...');
    const { data: tonBoostUsers, error: boostError } = await supabase
      .from('users')
      .select('id, username, ton_boost_package')
      .not('ton_boost_package', 'is', null)
      .limit(10);

    if (!boostError && tonBoostUsers?.length > 0) {
      console.log(`\nüìä –ù–∞–π–¥–µ–Ω–æ ${tonBoostUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å TON Boost:`);
      tonBoostUsers.forEach(user => {
        console.log(`  - User ${user.id} (${user.username}): Package ${user.ton_boost_package}`);
      });
    }

  } catch (error) {
    console.error('[ERROR] –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
applyTonWalletFields();