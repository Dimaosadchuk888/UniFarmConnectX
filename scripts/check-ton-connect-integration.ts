/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ TON Connect
 */

import { supabase } from '../core/supabase';

async function checkTonConnectIntegration() {
  console.log('\n' + '='.repeat(80));
  console.log('–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TON CONNECT –ò –°–ò–°–¢–ï–ú–´ –î–ï–ü–û–ó–ò–¢–û–í');
  console.log('='.repeat(80) + '\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    console.log('1. –ü–†–û–í–ï–†–ö–ê –¢–ò–ü–û–í –¢–†–ê–ù–ó–ê–ö–¶–ò–ô –í –ë–î:');
    const { data: sampleTx } = await supabase
      .from('transactions')
      .select('type')
      .limit(1);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const typesToCheck = ['FARMING_REWARD', 'REFERRAL_REWARD', 'MISSION_REWARD', 'DAILY_BONUS', 'BOOST_PURCHASE'];
    
    for (const type of typesToCheck) {
      const { data, error } = await supabase
        .from('transactions')
        .select('id')
        .eq('type', type)
        .limit(1);
      
      if (!error) {
        console.log(`  ‚úÖ ${type} - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è`);
      }
    }
    
    console.log('\n  ‚ÑπÔ∏è  –î–ª—è TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–∏–ø FARMING_REWARD');
    console.log('      —Å metadata.transaction_source = "ton_deposit"');
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ TON Connect —Ñ–∞–π–ª–æ–≤
    console.log('\n2. –ü–†–û–í–ï–†–ö–ê TON CONNECT –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:');
    console.log('  üìÑ client/public/tonconnect-manifest.json');
    console.log('  üìÑ client/public/.well-known/tonconnect-manifest.json');
    console.log('  üìÑ scripts/generate-manifests.js - –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤');
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ TON Connect
    console.log('\n3. –ö–û–ú–ü–û–ù–ï–ù–¢–´ TON CONNECT:');
    console.log('  ‚úÖ client/src/components/TonConnectButton.tsx - –∫–Ω–æ–ø–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
    console.log('  ‚úÖ client/src/components/TonDepositCard.tsx - —Ñ–æ—Ä–º–∞ –¥–µ–ø–æ–∑–∏—Ç–∞');
    console.log('  ‚úÖ client/src/contexts/UserContext.tsx - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è TON Connect UI');
    console.log('  ‚úÖ client/src/App.tsx - TonConnectUIProvider —Å manifestUrl');
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints
    console.log('\n4. API ENDPOINTS –î–õ–Ø TON:');
    console.log('  ‚úÖ POST /api/v2/wallet/ton-deposit - –ø—Ä–∏–µ–º –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('  ‚úÖ –ü–æ–ª—è: ton_tx_hash, amount, wallet_address');
    console.log('  ‚úÖ –°–æ–∑–¥–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Ç–∏–ø–∞ FARMING_REWARD');
    console.log('  ‚úÖ –î–æ–±–∞–≤–ª—è–µ—Ç metadata –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–ª—é–±—ã—Ö)
    console.log('\n5. –ü–û–°–õ–ï–î–ù–ò–ï TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ò (7 –¥–Ω–µ–π):');
    const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString();
    
    const { data: tonTxs } = await supabase
      .from('transactions')
      .select('*')
      .eq('currency', 'TON')
      .gte('created_at', sevenDaysAgo)
      .order('created_at', { ascending: false })
      .limit(5);
    
    if (tonTxs && tonTxs.length > 0) {
      tonTxs.forEach(tx => {
        console.log(`\n  ID: ${tx.id}`);
        console.log(`    - –¢–∏–ø: ${tx.type}`);
        console.log(`    - –°—É–º–º–∞: ${tx.amount} TON`);
        console.log(`    - –ò—Å—Ç–æ—á–Ω–∏–∫: ${tx.metadata?.transaction_source || 'N/A'}`);
        console.log(`    - TX Hash: ${tx.tx_hash || 'N/A'}`);
      });
    } else {
      console.log('  ‚ÑπÔ∏è  –ù–µ—Ç TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π');
    }
    
    // 6. –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    console.log('\n6. –ò–ó–í–ï–°–¢–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ (–∏–∑ changelog):');
    console.log('  ‚ö†Ô∏è  –ú–∞–Ω–∏—Ñ–µ—Å—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—Ç hardcoded URL: uni-farm-connect-x-ab245275.replit.app');
    console.log('  ‚ö†Ô∏è  manifestUrl –≤ App.tsx —Ç–∞–∫–∂–µ hardcoded (—Å—Ç—Ä–æ–∫–∞ 285)');
    console.log('  ‚ÑπÔ∏è  –ü—Ä–∏ —Å–º–µ–Ω–µ –¥–æ–º–µ–Ω–∞ –Ω—É–∂–Ω–æ:');
    console.log('     1. –û–±–Ω–æ–≤–∏—Ç—å TELEGRAM_WEBAPP_URL –≤ Replit Secrets');
    console.log('     2. –ó–∞–ø—É—Å—Ç–∏—Ç—å: node scripts/generate-manifests.js');
    console.log('     3. –û–±–Ω–æ–≤–∏—Ç—å manifestUrl –≤ App.tsx');
    
    // 7. –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    console.log('\n' + '-'.repeat(80));
    console.log('–ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò:');
    console.log('\n‚úÖ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–†–ò–ï–ú–£ –ü–õ–ê–¢–ï–ñ–ï–ô:');
    console.log('   - API endpoint /api/v2/wallet/ton-deposit —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   - –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    console.log('   - –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ BalanceManager');
    console.log('   - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ metadata');
    
    console.log('\n‚ö†Ô∏è  –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û –ü–†–û–í–ï–†–ò–¢–¨:');
    console.log('   1. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–æ–º–µ–Ω –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞—Ö TON Connect');
    console.log('   2. –ü–µ—Ä–µ–º–µ–Ω–Ω—É—é TELEGRAM_WEBAPP_URL –≤ Replit Secrets');
    console.log('   3. manifestUrl –≤ App.tsx (—Å—Ç—Ä–æ–∫–∞ 285)');
    
    console.log('\nüì± –ü–†–û–¶–ï–°–° –î–ï–ü–û–ó–ò–¢–ê:');
    console.log('   1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç "Connect Wallet"');
    console.log('   2. –í—ã–±–∏—Ä–∞–µ—Ç –∫–æ—à–µ–ª–µ–∫ (Tonkeeper, MyTonWallet –∏ –¥—Ä.)');
    console.log('   3. –í–≤–æ–¥–∏—Ç —Å—É–º–º—É –≤ TonDepositCard');
    console.log('   4. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –∫–æ—à–µ–ª—å–∫–µ');
    console.log('   5. –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª—É—á–∞–µ—Ç tx_hash –∏ –Ω–∞—á–∏—Å–ª—è–µ—Ç TON');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
  
  process.exit(0);
}

checkTonConnectIntegration();