#!/usr/bin/env tsx
/**
 * –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê USER 287 –ü–û–°–õ–ï –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê
 */

import { supabase } from '../core/supabase';

async function checkUser287Specifically() {
  console.log('üéØ –ü–†–û–í–ï–†–ö–ê USER 287 –ü–û–°–õ–ï –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê –°–ò–°–¢–ï–ú–´');
  console.log('===============================================');
  console.log(`–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\n`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç (–ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞)
  const tenMinutesAgo = new Date(Date.now() - 10 * 60 * 1000).toISOString();
  
  console.log('1. üìä –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –ó–ê 10 –ú–ò–ù–£–¢:');
  
  const { data: recentIncomes } = await supabase
    .from('transactions')
    .select('user_id, created_at, amount_ton, description, metadata')
    .eq('type', 'FARMING_REWARD')
    .eq('currency', 'TON')
    .gte('created_at', tenMinutesAgo)
    .order('created_at', { ascending: false });

  console.log(`   –í—Å–µ–≥–æ TON –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π: ${recentIncomes?.length || 0}`);
  
  if (recentIncomes && recentIncomes.length > 0) {
    const uniqueUsers = [...new Set(recentIncomes.map(tx => tx.user_id))];
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∏–≤—à–∏–µ –¥–æ—Ö–æ–¥—ã: ${uniqueUsers.sort().join(', ')}`);
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    const timeGroups = new Map();
    recentIncomes.forEach(tx => {
      const minute = new Date(tx.created_at).toLocaleTimeString('ru-RU', { 
        hour: '2-digit', 
        minute: '2-digit' 
      });
      if (!timeGroups.has(minute)) timeGroups.set(minute, []);
      timeGroups.get(minute).push(tx.user_id);
    });

    console.log('\n   –ù–∞—á–∏—Å–ª–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏:');
    Array.from(timeGroups.entries()).sort().reverse().slice(0, 3).forEach(([time, users]) => {
      const uniqueUsers = [...new Set(users)];
      console.log(`   ‚Ä¢ ${time}: ${users.length} –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π (${uniqueUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${uniqueUsers.sort().join(', ')})`);
    });
  }

  console.log('\n2. üéØ –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê USER 287:');
  
  const user287Transactions = recentIncomes?.filter(tx => tx.user_id === 287) || [];
  
  if (user287Transactions.length > 0) {
    console.log(`   ‚úÖ USER 287 –ü–û–õ–£–ß–ò–õ –î–û–•–û–î–´! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${user287Transactions.length}`);
    
    user287Transactions.forEach((tx, i) => {
      console.log(`   –î–æ—Ö–æ–¥ ${i + 1}: +${parseFloat(tx.amount_ton).toFixed(8)} TON –≤ ${new Date(tx.created_at).toLocaleTimeString('ru-RU')}`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
      if (tx.metadata?.transaction_source) {
        console.log(`   –ò—Å—Ç–æ—á–Ω–∏–∫: ${tx.metadata.transaction_source}`);
      }
    });
    
    console.log('\n   üéâ –ü–†–û–ë–õ–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –†–ï–®–ï–ù–ê!');
    console.log('   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ –°–Ω–∏–∂–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞ –ø–æ–º–æ–≥–ª–æ');
    console.log('   ‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø–æ–º–æ–≥');
    
  } else {
    console.log('   ‚ùå User 287 –µ—â–µ –Ω–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Ö–æ–¥—ã');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Å—Ç–∞—Ç—É—Å
    const { data: farmingData } = await supabase
      .from('ton_farming_data')
      .select('*')
      .eq('user_id', '287')
      .single();
      
    const { data: userData } = await supabase
      .from('users')
      .select('balance_ton, ton_boost_package')
      .eq('id', 287)
      .single();

    console.log('\n   üìã –°—Ç–∞—Ç—É—Å User 287:');
    console.log(`   Farming active: ${farmingData?.boost_active}`);
    console.log(`   Farming balance: ${farmingData?.farming_balance} TON`);
    console.log(`   Package ID: ${farmingData?.boost_package_id}`);
    console.log(`   Current balance: ${userData?.balance_ton} TON`);
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥
    const deposit = parseFloat(farmingData?.farming_balance || '0');
    const rate = parseFloat(farmingData?.farming_rate || '0.01');
    const fiveMinIncome = (deposit * rate) / 288;
    
    console.log(`\n   üí∞ –û–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥ –∑–∞ 5 –º–∏–Ω: ${fiveMinIncome.toFixed(8)} TON`);
    console.log(`   –ü—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ—Ä–æ–≥ 0.00001: ${fiveMinIncome > 0.00001 ? '–î–ê' : '–ù–ï–¢'}`);
    
    console.log('\n   ‚è≥ –ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ü–∏–∫–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞');
  }

  console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ User 287 –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –ó–∞–ø—É—Å–∫
checkUser287Specifically()
  .then(() => process.exit(0))
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  });