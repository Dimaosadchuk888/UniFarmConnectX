import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase –∫–∞–∫ –≤ middleware
const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY
);

async function debugMiddlewareLogs() {
  console.log('üîç –û—Ç–ª–∞–¥–∫–∞ middleware –ª–æ–≥–∏–∫–∏ –¥–ª—è user_id=62');
  console.log('='.repeat(50));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º require –ª–æ–≥–∏–∫—É –∫–∞–∫ –≤ middleware
  console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ require() –º–æ–¥—É–ª—è –∫–∞–∫ –≤ middleware:');
  
  try {
    // –≠–º—É–ª–∏—Ä—É–µ–º require –∫–∞–∫ –≤ middleware (—Å—Ç—Ä–æ–∫–∞ 53)
    const { SupabaseUserRepository } = require('../modules/user/service');
    console.log('  ‚úÖ require() —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª SupabaseUserRepository');
    
    const userRepository = new SupabaseUserRepository();
    console.log('  ‚úÖ –°–æ–∑–¥–∞–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä userRepository');
    
    // –≠–º—É–ª–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –≤ middleware (—Å—Ç—Ä–æ–∫–∞ 58)
    console.log('\nüìã –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –≤ middleware:');
    const fullUser = await userRepository.getUserById(62);
    
    if (fullUser) {
      console.log('  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:');
      console.log(`    ID: ${fullUser.id}`);
      console.log(`    telegram_id: ${fullUser.telegram_id}`);
      console.log(`    username: ${fullUser.username}`);
    } else {
      console.log('  ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω');
    }
    
  } catch (error) {
    console.error('  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ require():', error.message);
    console.error('  Stack:', error.stack);
    
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±
    console.log('\nüìã –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥:');
    try {
      // –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ Supabase
      const { data: user, error: dbError } = await supabase
        .from('users')
        .select('*')
        .eq('id', 62)
        .single();
        
      if (dbError && dbError.code !== 'PGRST116') {
        console.log('  ‚ùå –û—à–∏–±–∫–∞ –ë–î:', dbError.message);
      } else if (user) {
        console.log('  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Supabase');
      } else {
        console.log('  ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    } catch (e) {
      console.error('  ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', e.message);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é
  console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–µ–π:');
  console.log(`  –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${process.cwd()}`);
  console.log(`  __dirname –±—ã–ª –±—ã: ${import.meta.url}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  console.log(`  NODE_ENV: ${process.env.NODE_ENV}`);
  console.log(`  Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω: ${!!supabase}`);
  
  console.log('\n' + '='.repeat(50));
}

debugMiddlewareLogs();