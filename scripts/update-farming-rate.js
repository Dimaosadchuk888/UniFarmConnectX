#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ uni_farming_rate –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 62
 * –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π —Ñ–∞—Ä–º–∏–Ω–≥–∞
 */

import fetch from 'node-fetch';

async function updateFarmingRate() {
  console.log('üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ uni_farming_rate –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 62...\n');
  
  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  const API_URL = 'http://localhost:3000/api/v2';
  const USER_ID = 62;
  const FARMING_RATE = '0.01'; // 0.01 UNI –≤ —á–∞—Å (1% –≤ –¥–µ–Ω—å)
  
  // JWT —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–º–æ–∂–Ω–æ –≤–∑—è—Ç—å –∏–∑ localStorage –±—Ä–∞—É–∑–µ—Ä–∞)
  const JWT_TOKEN = process.env.JWT_TOKEN || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYyLCJ0ZWxlZ3JhbUlkIjo4ODg4ODg4OCwidXNlcm5hbWUiOiJ0ZXN0X3VzZXIiLCJmaXJzdE5hbWUiOiJUZXN0IiwicmVmQ29kZSI6IlJFRl8xNzUxOTcxNTYyMTI1X3M2dTFwNyIsImlhdCI6MTc1MjA3MDYzNiwiZXhwIjoxNzUyNjc1NDM2fQ.O0uJJJfwKfV2PYj9aEIDCnSLTHN7JKJCiZgRB4iT5_k';
  
  try {
    // 1. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const statusResponse = await fetch(`${API_URL}/farming/status?user_id=${USER_ID}`, {
      headers: {
        'Authorization': `Bearer ${JWT_TOKEN}`
      }
    });
    
    if (statusResponse.ok) {
      const statusData = await statusResponse.json();
      console.log('–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Ñ–∞—Ä–º–∏–Ω–≥–∞:');
      console.log(`- –ê–∫—Ç–∏–≤–µ–Ω: ${statusData.data?.uni_farming_active || false}`);
      console.log(`- –î–µ–ø–æ–∑–∏—Ç: ${statusData.data?.uni_deposit_amount || 0} UNI`);
      console.log(`- –°—Ç–∞–≤–∫–∞: ${statusData.data?.uni_farming_rate || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}`);
      console.log('');
    }
    
    // 2. –û–±–Ω–æ–≤–ª—è–µ–º uni_farming_rate
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...');
    const updateResponse = await fetch(`${API_URL}/users/${USER_ID}`, {
      method: 'PUT',
      headers: {
        'Authorization': `Bearer ${JWT_TOKEN}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        uni_farming_rate: FARMING_RATE
      })
    });
    
    if (!updateResponse.ok) {
      const errorText = await updateResponse.text();
      throw new Error(`–û—à–∏–±–∫–∞ HTTP ${updateResponse.status}: ${errorText}`);
    }
    
    const result = await updateResponse.json();
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!');
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', JSON.stringify(result, null, 2));
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞...');
    const newStatusResponse = await fetch(`${API_URL}/farming/status?user_id=${USER_ID}`, {
      headers: {
        'Authorization': `Bearer ${JWT_TOKEN}`
      }
    });
    
    if (newStatusResponse.ok) {
      const newStatusData = await newStatusResponse.json();
      console.log('–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å —Ñ–∞—Ä–º–∏–Ω–≥–∞:');
      console.log(`- –ê–∫—Ç–∏–≤–µ–Ω: ${newStatusData.data?.uni_farming_active || false}`);
      console.log(`- –î–µ–ø–æ–∑–∏—Ç: ${newStatusData.data?.uni_deposit_amount || 0} UNI`);
      console.log(`- –°—Ç–∞–≤–∫–∞: ${newStatusData.data?.uni_farming_rate || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}`);
      
      if (newStatusData.data?.uni_farming_rate === FARMING_RATE) {
        console.log('\nüéâ –°—Ç–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!');
        console.log('–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞—á–Ω–µ—Ç –Ω–∞—á–∏—Å–ª—è—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ü–∏–∫–ª–µ (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç).');
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error('\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.error('1. –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ localhost:3000 –¥–æ—Å—Ç—É–ø–µ–Ω)');
    console.error('2. JWT —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫ –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω');
    console.error('3. –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
updateFarmingRate();