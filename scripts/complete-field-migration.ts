import { supabase } from '../core/supabase.js';
import * as fs from 'fs';
import * as path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

interface MigrationResult {
  phase: string;
  success: boolean;
  details: any;
  errors: string[];
}

async function completeFieldMigration() {
  console.log('üöÄ –ü–û–õ–ù–ê–Ø –ú–ò–ì–†–ê–¶–ò–Ø –ò –£–î–ê–õ–ï–ù–ò–ï –î–£–ë–õ–ò–†–£–Æ–©–ò–•–°–Ø –ü–û–õ–ï–ô');
  console.log('='.repeat(80));
  console.log('');
  console.log('üìã –ü–õ–ê–ù –ú–ò–ì–†–ê–¶–ò–ò:');
  console.log('1. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –≥–ª–∞–≤–Ω—ã–µ –ø–æ–ª—è');
  console.log('2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≥–ª–∞–≤–Ω—ã—Ö –ø–æ–ª–µ–π');
  console.log('3. –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ø–æ–ª–µ–π –∏–∑ –ë–î');
  console.log('');
  
  const results: MigrationResult[] = [];
  
  try {
    // –§–ê–ó–ê 1: –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –î–ê–ù–ù–´–•
    console.log('\nüìä –§–ê–ó–ê 1: –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –î–ê–ù–ù–´–•');
    console.log('-'.repeat(60));
    
    // 1.1 –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è uni_deposit_amount
    console.log('\n1.1. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è uni_deposit_amount (–≥–ª–∞–≤–Ω–æ–µ –ø–æ–ª–µ)');
    
    const { data: depositDiffs } = await supabase
      .from('users')
      .select('id, uni_deposit_amount, uni_farming_deposit')
      .or('uni_deposit_amount.neq.uni_farming_deposit,uni_farming_deposit.is.null');
    
    if (depositDiffs && depositDiffs.length > 0) {
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${depositDiffs.length} –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏`);
      
      for (const user of depositDiffs) {
        // –ë–µ—Ä–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –ø–æ–ª—è, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ null
        const finalValue = user.uni_deposit_amount !== null 
          ? user.uni_deposit_amount 
          : user.uni_farming_deposit || 0;
          
        await supabase
          .from('users')
          .update({ 
            uni_deposit_amount: finalValue,
            uni_farming_deposit: finalValue 
          })
          .eq('id', user.id);
      }
      
      console.log(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ${depositDiffs.length} –∑–∞–ø–∏—Å–µ–π`);
    } else {
      console.log('‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }
    
    // 1.2 –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ton_boost_package
    console.log('\n1.2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ton_boost_package (–≥–ª–∞–≤–Ω–æ–µ –ø–æ–ª–µ)');
    
    const { data: boostDiffs } = await supabase
      .from('users')
      .select('id, ton_boost_package, ton_boost_package_id')
      .or('ton_boost_package.neq.ton_boost_package_id,and(ton_boost_package_id.not.is.null,ton_boost_package.eq.0)');
    
    if (boostDiffs && boostDiffs.length > 0) {
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${boostDiffs.length} –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏`);
      
      for (const user of boostDiffs) {
        // –ë–µ—Ä–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–µ 0)
        const finalValue = Math.max(
          user.ton_boost_package || 0,
          user.ton_boost_package_id || 0
        );
          
        await supabase
          .from('users')
          .update({ 
            ton_boost_package: finalValue,
            ton_boost_package_id: finalValue 
          })
          .eq('id', user.id);
      }
      
      console.log(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ${boostDiffs.length} –∑–∞–ø–∏—Å–µ–π`);
    } else {
      console.log('‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }
    
    // 1.3 –ú–∏–≥—Ä–∞—Ü–∏—è wallet ‚Üí ton_wallet_address
    console.log('\n1.3. –ú–∏–≥—Ä–∞—Ü–∏—è wallet ‚Üí ton_wallet_address');
    
    const { data: walletDiffs } = await supabase
      .from('users')
      .select('id, wallet, ton_wallet_address')
      .or('wallet.neq.ton_wallet_address,and(wallet.not.is.null,ton_wallet_address.is.null),and(wallet.is.null,ton_wallet_address.not.is.null)');
    
    if (walletDiffs && walletDiffs.length > 0) {
      console.log(`–ù–∞–π–¥–µ–Ω–æ ${walletDiffs.length} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏`);
      
      for (const user of walletDiffs) {
        // –ë–µ—Ä–µ–º –Ω–µ–ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        const finalValue = user.ton_wallet_address || user.wallet || null;
          
        await supabase
          .from('users')
          .update({ 
            ton_wallet_address: finalValue,
            wallet: finalValue // –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
          })
          .eq('id', user.id);
      }
      
      console.log(`‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ ${walletDiffs.length} –∑–∞–ø–∏—Å–µ–π`);
    } else {
      console.log('‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã');
    }
    
    results.push({
      phase: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö',
      success: true,
      details: {
        uni_deposit: depositDiffs?.length || 0,
        ton_boost: boostDiffs?.length || 0,
        wallet: walletDiffs?.length || 0
      },
      errors: []
    });
    
    // –§–ê–ó–ê 2: –ê–ù–ê–õ–ò–ó –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í –ö–û–î–ï
    console.log('\n\nüìù –§–ê–ó–ê 2: –ê–ù–ê–õ–ò–ó –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í –ö–û–î–ï');
    console.log('-'.repeat(60));
    
    const codeUpdates = {
      'uni_farming_deposit': 'uni_deposit_amount',
      'ton_boost_package_id': 'ton_boost_package',
      'wallet': 'ton_wallet_address'
    };
    
    const filesNeedingUpdate: Set<string> = new Set();
    
    // –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å
    const directories = ['modules', 'server', 'client/src', 'shared'];
    const extensions = ['.ts', '.tsx', '.js', '.jsx'];
    
    for (const [oldField, newField] of Object.entries(codeUpdates)) {
      console.log(`\n–ü–æ–∏—Å–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –ø–æ–ª—è: ${oldField}`);
      
      for (const dir of directories) {
        const dirPath = path.join(__dirname, '..', dir);
        if (!fs.existsSync(dirPath)) continue;
        
        const searchDir = (currentPath: string) => {
          try {
            const items = fs.readdirSync(currentPath);
            
            for (const item of items) {
              const fullPath = path.join(currentPath, item);
              const stat = fs.statSync(fullPath);
              
              if (stat.isDirectory() && !item.includes('node_modules')) {
                searchDir(fullPath);
              } else if (stat.isFile() && extensions.some(ext => item.endsWith(ext))) {
                const content = fs.readFileSync(fullPath, 'utf8');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                const patterns = [
                  new RegExp(`\\.${oldField}\\b`, 'g'),
                  new RegExp(`\\['${oldField}'\\]`, 'g'),
                  new RegExp(`\\["${oldField}"\\]`, 'g'),
                  new RegExp(`${oldField}:`, 'g')
                ];
                
                for (const pattern of patterns) {
                  if (pattern.test(content)) {
                    filesNeedingUpdate.add(fullPath.replace(path.join(__dirname, '..'), ''));
                    break;
                  }
                }
              }
            }
          } catch (error) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–∞
          }
        };
        
        searchDir(dirPath);
      }
    }
    
    console.log(`\nüìä –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${filesNeedingUpdate.size}`);
    if (filesNeedingUpdate.size > 0) {
      console.log('\n–§–∞–π–ª—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
      Array.from(filesNeedingUpdate).slice(0, 10).forEach(file => {
        console.log(`  - ${file}`);
      });
      if (filesNeedingUpdate.size > 10) {
        console.log(`  ... –∏ –µ—â–µ ${filesNeedingUpdate.size - 10} —Ñ–∞–π–ª–æ–≤`);
      }
    }
    
    results.push({
      phase: '–ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞',
      success: true,
      details: {
        filesNeedingUpdate: filesNeedingUpdate.size,
        files: Array.from(filesNeedingUpdate)
      },
      errors: []
    });
    
    // –§–ê–ó–ê 3: –°–û–ó–î–ê–ù–ò–ï SQL –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø –ü–û–õ–ï–ô
    console.log('\n\nüóëÔ∏è –§–ê–ó–ê 3: –ü–û–î–ì–û–¢–û–í–ö–ê SQL –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø –ü–û–õ–ï–ô');
    console.log('-'.repeat(60));
    
    const dropFieldsSQL = `
-- SQL –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ø–æ–ª–µ–π
-- –í–ù–ò–ú–ê–ù–ò–ï: –í—ã–ø–æ–ª–Ω—è—Ç—å –¢–û–õ–¨–ö–û –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ –∫–æ–¥–∞!

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
SELECT 
  COUNT(*) as total_users,
  COUNT(CASE WHEN uni_deposit_amount != uni_farming_deposit THEN 1 END) as deposit_diffs,
  COUNT(CASE WHEN ton_boost_package != ton_boost_package_id THEN 1 END) as boost_diffs,
  COUNT(CASE WHEN wallet != ton_wallet_address THEN 1 END) as wallet_diffs
FROM users;

-- –ï—Å–ª–∏ –≤—Å–µ —Ä–∞–∑–ª–∏—á–∏—è = 0, –º–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª—è—Ç—å –ø–æ–ª—è:

-- 1. –£–¥–∞–ª–µ–Ω–∏–µ uni_farming_deposit (–¥—É–±–ª–∏–∫–∞—Ç uni_deposit_amount)
ALTER TABLE users DROP COLUMN IF EXISTS uni_farming_deposit;

-- 2. –£–¥–∞–ª–µ–Ω–∏–µ ton_boost_package_id (–¥—É–±–ª–∏–∫–∞—Ç ton_boost_package)
ALTER TABLE users DROP COLUMN IF EXISTS ton_boost_package_id;

-- 3. –£–¥–∞–ª–µ–Ω–∏–µ wallet (–∑–∞–º–µ–Ω–µ–Ω –Ω–∞ ton_wallet_address)
ALTER TABLE users DROP COLUMN IF EXISTS wallet;

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
SELECT column_name 
FROM information_schema.columns 
WHERE table_schema = 'public' 
  AND table_name = 'users'
  AND column_name IN ('uni_farming_deposit', 'ton_boost_package_id', 'wallet');
`;

    fs.writeFileSync(
      path.join(__dirname, '..', 'DROP_DUPLICATE_FIELDS.sql'),
      dropFieldsSQL
    );
    
    console.log('‚úÖ SQL –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ DROP_DUPLICATE_FIELDS.sql');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç –æ –º–∏–≥—Ä–∞—Ü–∏–∏
    const migrationReport = {
      timestamp: new Date().toISOString(),
      phases: results,
      summary: {
        dataSync: {
          uni_deposit: depositDiffs?.length || 0,
          ton_boost: boostDiffs?.length || 0,
          wallet: walletDiffs?.length || 0
        },
        codeChangesNeeded: filesNeedingUpdate.size,
        fieldsToRemove: ['uni_farming_deposit', 'ton_boost_package_id', 'wallet'],
        fieldsToKeep: {
          'uni_deposit_amount': '–ì–ª–∞–≤–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è UNI –¥–µ–ø–æ–∑–∏—Ç–∞',
          'balance_uni': '–û–±—â–∏–π –±–∞–ª–∞–Ω—Å UNI',
          'uni_farming_balance': '–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è –æ—Ç —Ñ–∞—Ä–º–∏–Ω–≥–∞ (–ù–ï –¥—É–±–ª–∏–∫–∞—Ç!)',
          'ton_boost_package': 'ID –ø–∞–∫–µ—Ç–∞ TON Boost',
          'ton_wallet_address': 'TON –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞'
        }
      },
      nextSteps: [
        '1. –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≥–ª–∞–≤–Ω—ã—Ö –ø–æ–ª–µ–π',
        '2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞',
        '3. –í—ã–ø–æ–ª–Ω–∏—Ç—å DROP_DUPLICATE_FIELDS.sql –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤',
        '4. –£–¥–∞–ª–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å Views –µ—Å–ª–∏ –æ–Ω–∏ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã'
      ]
    };
    
    fs.writeFileSync(
      path.join(__dirname, '..', 'MIGRATION_REPORT_' + new Date().toISOString().split('T')[0] + '.json'),
      JSON.stringify(migrationReport, null, 2)
    );
    
    // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\n\n‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!');
    console.log('='.repeat(80));
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
    console.log(`  - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ UNI deposit –∑–∞–ø–∏—Å–µ–π: ${depositDiffs?.length || 0}`);
    console.log(`  - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ TON boost –∑–∞–ø–∏—Å–µ–π: ${boostDiffs?.length || 0}`);
    console.log(`  - –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ wallet –∑–∞–ø–∏—Å–µ–π: ${walletDiffs?.length || 0}`);
    console.log(`  - –§–∞–π–ª–æ–≤ –∫–æ–¥–∞ —Ç—Ä–µ–±—É—é—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${filesNeedingUpdate.size}`);
    
    console.log('\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('1. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–¥ –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö (—Å–ø–∏—Å–æ–∫ –≤ –æ—Ç—á–µ—Ç–µ)');
    console.log('2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É');
    console.log('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ DROP_DUPLICATE_FIELDS.sql –≤ Supabase');
    
    console.log('\nüìÑ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:');
    console.log('  - MIGRATION_REPORT_' + new Date().toISOString().split('T')[0] + '.json');
    console.log('  - DROP_DUPLICATE_FIELDS.sql');
    
  } catch (error) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
    results.push({
      phase: '–û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏',
      success: false,
      details: {},
      errors: [error.message]
    });
  }
}

// –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏
console.log('–ó–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é –ø–æ–ª–µ–π...\n');
console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö!');
console.log('–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ –∏ —É–¥–∞–ª–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã.');
console.log('–ù–∞—á–∏–Ω–∞—é —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...\n');

setTimeout(() => {
  completeFieldMigration().catch(console.error);
}, 5000);