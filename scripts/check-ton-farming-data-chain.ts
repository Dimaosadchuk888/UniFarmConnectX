/**
 * –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ü–µ–ø–æ—á–∫–∏ –¥–∞–Ω–Ω—ã—Ö TON Farming
 * –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–ª–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */

import { supabase } from '../core/supabase.js';
import { BoostService } from '../modules/boost/service.js';

async function analyzeTonFarmingDataChain() {
  console.log('\n=== –ê–ù–ê–õ–ò–ó –¶–ï–ü–û–ß–ö–ò –î–ê–ù–ù–´–• TON FARMING ===\n');

  const userId = '74';
  
  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ users
  console.log('1. –î–ê–ù–ù–´–ï –í –¢–ê–ë–õ–ò–¶–ï USERS:');
  const { data: userData, error: userError } = await supabase
    .from('users')
    .select('id, balance_ton, ton_boost_package, ton_farming_balance, ton_farming_rate')
    .eq('id', userId)
    .single();
    
  if (userData) {
    console.log('  - balance_ton:', userData.balance_ton);
    console.log('  - ton_boost_package:', userData.ton_boost_package);
    console.log('  - ton_farming_balance:', userData.ton_farming_balance || '–ù–ï –°–£–©–ï–°–¢–í–£–ï–¢ –í –¢–ê–ë–õ–ò–¶–ï');
    console.log('  - ton_farming_rate:', userData.ton_farming_rate || '–ù–ï –°–£–©–ï–°–¢–í–£–ï–¢ –í –¢–ê–ë–õ–ò–¶–ï');
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ ton_farming_data
  console.log('\n2. –î–ê–ù–ù–´–ï –í –¢–ê–ë–õ–ò–¶–ï TON_FARMING_DATA:');
  const { data: farmingData, error: farmingError } = await supabase
    .from('ton_farming_data')
    .select('*')
    .eq('user_id', userId)
    .single();
    
  if (farmingError) {
    console.log('  ‚ùå –û—à–∏–±–∫–∞:', farmingError.message);
    if (farmingError.code === 'PGRST116') {
      console.log('  ‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', userId);
    }
  } else if (farmingData) {
    console.log('  - user_id:', farmingData.user_id);
    console.log('  - farming_balance:', farmingData.farming_balance);
    console.log('  - farming_rate:', farmingData.farming_rate);
    console.log('  - boost_package_id:', farmingData.boost_package_id);
    console.log('  - status:', farmingData.status);
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API
  console.log('\n3. –î–ê–ù–ù–´–ï –û–¢ API getTonBoostFarmingStatus:');
  const boostService = new BoostService();
  const apiResult = await boostService.getTonBoostFarmingStatus(userId);
  console.log('  - dailyIncomeTon:', apiResult.dailyIncomeTon);
  console.log('  - deposits:', JSON.stringify(apiResult.deposits, null, 2));
  
  // 4. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã
  console.log('\n4. –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:');
  
  if (apiResult.deposits.length > 0) {
    const deposit = apiResult.deposits[0];
    console.log('\n  ‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê:');
    console.log('  - API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç amount =', deposit.amount, 'TON');
    console.log('  - –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ—Ä–µ—Ç—Å—è –∏–∑ balance_ton (', userData?.balance_ton, ')');
    console.log('  - –ê –¥–æ–ª–∂–Ω–æ –±—Ä–∞—Ç—å—Å—è –∏–∑ farming_balance (', farmingData?.farming_balance || '???', ')');
    console.log('\n  üìä –†–ê–°–•–û–ñ–î–ï–ù–ò–ï:');
    console.log('  - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è:', deposit.amount, 'TON (–≤–µ—Å—å –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞)');
    console.log('  - –î–æ–ª–∂–Ω–æ –±—ã—Ç—å:', farmingData?.farming_balance || '???', 'TON (—Å—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤)');
  }
  
  // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤ –¥–æ—Ö–æ–¥–∞
  console.log('\n5. –ü–†–û–í–ï–†–ö–ê –†–ê–°–ß–ï–¢–û–í –î–û–•–û–î–ê:');
  if (userData && farmingData) {
    const balanceUsed = parseFloat(userData.balance_ton);
    const shouldUseBalance = parseFloat(farmingData.farming_balance || '0');
    const rate = parseFloat(farmingData.farming_rate || '0.02');
    
    console.log('  - –¢–µ–∫—É—â–∏–π —Ä–∞—Å—á–µ—Ç: ', balanceUsed, '* ', rate, '=', (balanceUsed * rate).toFixed(6), 'TON/–¥–µ–Ω—å');
    console.log('  - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç:', shouldUseBalance, '* ', rate, '=', (shouldUseBalance * rate).toFixed(6), 'TON/–¥–µ–Ω—å');
    console.log('  - –†–∞–∑–Ω–∏—Ü–∞:', ((balanceUsed - shouldUseBalance) * rate).toFixed(6), 'TON/–¥–µ–Ω—å –ª–∏—à–Ω–µ–≥–æ –¥–æ—Ö–æ–¥–∞');
  }
  
  // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  console.log('\n6. FRONTEND –ö–û–ú–ü–û–ù–ï–ù–¢ TonFarmingStatusCard:');
  console.log('  - –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç "–û–±—â—É—é —Å—É–º–º—É" —Å—É–º–º–∏—Ä—É—è deposits[].amount');
  console.log('  - –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç balance_ton –≤–º–µ—Å—Ç–æ farming_balance,');
  console.log('    —Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–∫–∞–∂–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—É–º–º—É');
  
  console.log('\n7. –í–´–í–û–î–´:');
  console.log('  ‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ - —Å—É–º–º–∏—Ä—É–µ—Ç deposits');
  console.log('  ‚ùå Backend –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
  console.log('     - amount: balance_ton –≤–º–µ—Å—Ç–æ farming_balance');
  console.log('     - –¥–æ—Ö–æ–¥ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç –≤—Å–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞, –∞ –Ω–µ –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞');
}

analyzeTonFarmingDataChain()
  .then(() => {
    console.log('\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω');
    process.exit(0);
  })
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  });