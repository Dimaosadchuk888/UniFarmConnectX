import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY
);

async function checkDepositTransactions() {
  console.log('[CheckDepositTransactions] –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–ø–æ–∑–∏—Ç–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...\n');

  try {
    // –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏ (–¥–µ–ø–æ–∑–∏—Ç—ã)
    const { data: deposits, error } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'FARMING_REWARD')
      .lt('amount_uni', 0)  // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã
      .limit(10)
      .order('created_at', { ascending: false });

    if (error) {
      console.error('[ERROR] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', error);
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${deposits?.length || 0} –¥–µ–ø–æ–∑–∏—Ç–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã):\n`);
    
    deposits?.forEach(t => {
      console.log(`  ID: ${t.id}`);
      console.log(`  User: ${t.user_id}`);
      console.log(`  Type: ${t.type}`);
      console.log(`  Amount: ${t.amount_uni} UNI`);
      console.log(`  Description: ${t.description}`);
      console.log(`  Created: ${t.created_at}`);
      console.log('  ---');
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–∫–∂–µ user_id=62
    console.log('\nüîç –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 62:');
    const { data: userTransactions } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 62)
      .eq('type', 'FARMING_REWARD')
      .limit(5)
      .order('created_at', { ascending: false });

    userTransactions?.forEach(t => {
      console.log(`  ${t.created_at}: ${t.amount_uni} UNI - ${t.description}`);
    });

  } catch (error) {
    console.error('[ERROR] –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

checkDepositTransactions();