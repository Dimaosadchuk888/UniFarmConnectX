#!/usr/bin/env tsx
/**
 * –ú–û–ù–ò–¢–û–†–ò–ù–ì –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê TON BOOST
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ User 287 –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç –¥–æ—Ö–æ–¥—ã –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 */

import { supabase } from '../core/supabase';

async function monitorSchedulerFix() {
  console.log('üîç –ú–û–ù–ò–¢–û–†–ò–ù–ì –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê TON BOOST');
  console.log('===============================================');
  console.log(`–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\n`);

  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  console.log('1. üìä –ü–û–°–õ–ï–î–ù–ò–ï –ù–ê–ß–ò–°–õ–ï–ù–ò–Ø TON BOOST:');
  
  const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000).toISOString();
  const { data: recentTonIncomes } = await supabase
    .from('transactions')
    .select('user_id, created_at, amount_ton, description')
    .eq('type', 'FARMING_REWARD')
    .eq('currency', 'TON')
    .gte('created_at', fiveMinutesAgo)
    .order('created_at', { ascending: false });

  if (recentTonIncomes && recentTonIncomes.length > 0) {
    console.log(`   –ù–æ–≤—ã—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π TON –∑–∞ 5 –º–∏–Ω—É—Ç: ${recentTonIncomes.length}`);
    
    const uniqueUsers = [...new Set(recentTonIncomes.map(tx => tx.user_id))];
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–∏–ª–æ –¥–æ—Ö–æ–¥—ã: ${uniqueUsers.length}`);
    
    console.log('\n   –î–µ—Ç–∞–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π:');
    recentTonIncomes.slice(0, 5).forEach(tx => {
      const time = new Date(tx.created_at).toLocaleTimeString('ru-RU');
      console.log(`   ‚Ä¢ User ${tx.user_id}: +${parseFloat(tx.amount_ton).toFixed(6)} TON (${time})`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º User 287 —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ
    const user287Income = recentTonIncomes.find(tx => tx.user_id === 287);
    if (user287Income) {
      const time = new Date(user287Income.created_at).toLocaleTimeString('ru-RU');
      console.log(`\n   ‚úÖ USER 287 –ü–û–õ–£–ß–ò–õ –î–û–•–û–î: +${parseFloat(user287Income.amount_ton).toFixed(6)} TON (${time})`);
      console.log('   üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –†–ê–ë–û–¢–ê–ï–¢!');
    } else {
      console.log('\n   ‚è≥ User 287 –µ—â–µ –Ω–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Ö–æ–¥ - –æ–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ü–∏–∫–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞');
    }
  } else {
    console.log('   –ù–æ–≤—ã—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π TON –ø–æ–∫–∞ –Ω–µ—Ç - –ø—Ä–æ–≤–µ—Ä–∏–º —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç');
  }

  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö 8 –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  console.log('\n2. üë• –°–¢–ê–¢–£–° –í–°–ï–• 8 –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:');
  
  const problemUsers = [25, 186, 187, 188, 189, 190, 224, 287];
  
  for (const userId of problemUsers) {
    const { data: lastIncome } = await supabase
      .from('transactions')
      .select('created_at, amount_ton')
      .eq('user_id', userId)
      .eq('type', 'FARMING_REWARD')
      .eq('currency', 'TON')
      .order('created_at', { ascending: false })
      .limit(1);

    if (lastIncome && lastIncome.length > 0) {
      const minutesAgo = Math.round((Date.now() - new Date(lastIncome[0].created_at).getTime()) / (1000 * 60));
      const amount = parseFloat(lastIncome[0].amount_ton).toFixed(6);
      console.log(`   User ${userId}: –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ ${minutesAgo} –º–∏–Ω –Ω–∞–∑–∞–¥ (+${amount} TON)`);
    } else {
      console.log(`   User ${userId}: –î–æ—Ö–æ–¥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç - –æ–∂–∏–¥–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫`);
    }
  }

  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  console.log('\n3. ‚öôÔ∏è –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê:');
  
  const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000).toISOString();
  const { data: allTonIncomes } = await supabase
    .from('transactions')
    .select('created_at')
    .eq('type', 'FARMING_REWARD')
    .eq('currency', 'TON')
    .gte('created_at', oneHourAgo);

  if (allTonIncomes && allTonIncomes.length > 0) {
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ 5-–º–∏–Ω—É—Ç–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º
    const intervals = new Map();
    allTonIncomes.forEach(tx => {
      const time = new Date(tx.created_at);
      const interval = new Date(time.getFullYear(), time.getMonth(), time.getDate(), time.getHours(), Math.floor(time.getMinutes() / 5) * 5);
      const key = interval.toISOString();
      intervals.set(key, (intervals.get(key) || 0) + 1);
    });

    const sortedIntervals = Array.from(intervals.entries()).sort().reverse().slice(0, 6);
    console.log('   –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –º–∏–Ω—É—Ç):');
    sortedIntervals.forEach(([interval, count]) => {
      const time = new Date(interval).toLocaleTimeString('ru-RU');
      console.log(`   ‚Ä¢ ${time}: ${count} –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π`);
    });
  } else {
    console.log('   –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å');
  }

  // 4. –°–æ—Å—Ç–æ—è–Ω–∏–µ farming_data –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  console.log('\n4. üìã –°–û–°–¢–û–Ø–ù–ò–ï FARMING DATA:');
  
  const { data: farmingData } = await supabase
    .from('ton_farming_data')
    .select('user_id, farming_balance, farming_rate, boost_package_id, boost_active')
    .eq('boost_active', true);

  if (farmingData) {
    console.log(`   –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ farming_data: ${farmingData.length}`);
    farmingData.forEach(user => {
      const balance = parseFloat(user.farming_balance || '0').toFixed(3);
      const rate = parseFloat(user.farming_rate || '0').toFixed(3);
      console.log(`   ‚Ä¢ User ${user.user_id}: ${balance} TON –¥–µ–ø–æ–∑–∏—Ç, –ø–∞–∫–µ—Ç ${user.boost_package_id}, rate ${rate}`);
    });
  }

  // 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  console.log('\n5. üìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
  console.log('‚ïê'.repeat(40));
  
  if (recentTonIncomes && recentTonIncomes.length > 0) {
    console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç –¥–æ—Ö–æ–¥—ã');
    
    if (recentTonIncomes.find(tx => tx.user_id === 287)) {
      console.log('‚úÖ User 287 –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Ö–æ–¥—ã - –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ—à–µ–Ω–∞!');
    } else {
      console.log('‚è≥ User 287 —Å–∫–æ—Ä–æ –ø–æ–ª—É—á–∏—Ç –¥–æ—Ö–æ–¥ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ü–∏–∫–ª–µ');
    }
  } else {
    console.log('‚è≥ –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ü–∏–∫–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)');
    console.log('üí° –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5-10 –º–∏–Ω—É—Ç');
  }

  console.log('\n‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω');
}

// –ó–∞–ø—É—Å–∫
monitorSchedulerFix()
  .then(() => process.exit(0))
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:', error);
    process.exit(1);
  });