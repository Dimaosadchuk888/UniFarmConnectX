#!/usr/bin/env tsx
/**
 * –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∞—Å–ø–µ–∫—Ç—ã —Ä–∞–±–æ—Ç—ã –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –≤–∫–ª—é—á–∞—è User 287
 */

import { supabase } from '../core/supabase';

async function finalSchedulerStatusCheck() {
  console.log('üèÅ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê');
  console.log('==========================================');
  console.log(`–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\n`);

  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  console.log('1. üìä –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –ó–ê 10 –ú–ò–ù–£–¢:');
  
  const tenMinutesAgo = new Date(Date.now() - 10 * 60 * 1000).toISOString();
  const { data: recentTonIncomes } = await supabase
    .from('transactions')
    .select('user_id, created_at, amount_ton, description')
    .eq('type', 'FARMING_REWARD')
    .eq('currency', 'TON')
    .gte('created_at', tenMinutesAgo)
    .order('created_at', { ascending: false });

  if (recentTonIncomes && recentTonIncomes.length > 0) {
    console.log(`   –í—Å–µ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π TON –∑–∞ 10 –º–∏–Ω—É—Ç: ${recentTonIncomes.length}`);
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    const timeGroups = new Map();
    recentTonIncomes.forEach(tx => {
      const minute = new Date(tx.created_at).toLocaleTimeString('ru-RU', { 
        hour: '2-digit', 
        minute: '2-digit' 
      });
      if (!timeGroups.has(minute)) timeGroups.set(minute, []);
      timeGroups.get(minute).push(tx.user_id);
    });

    console.log('\n   –ù–∞—á–∏—Å–ª–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏:');
    Array.from(timeGroups.entries()).sort().reverse().slice(0, 3).forEach(([time, users]) => {
      const uniqueUsers = [...new Set(users)].sort();
      console.log(`   ‚Ä¢ ${time}: ${users.length} –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π (${uniqueUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${uniqueUsers.join(', ')})`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º User 287 —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ
    const user287Transactions = recentTonIncomes.filter(tx => tx.user_id === 287);
    if (user287Transactions.length > 0) {
      console.log(`\n   ‚úÖ USER 287 –ü–û–õ–£–ß–ò–õ –î–û–•–û–î–´:`, {
        count: user287Transactions.length,
        lastTime: new Date(user287Transactions[0].created_at).toLocaleTimeString('ru-RU'),
        amount: user287Transactions[0].amount_ton
      });
      console.log('   üéâ –ü–†–û–ë–õ–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –†–ï–®–ï–ù–ê!');
    } else {
      console.log('\n   ‚ùå User 287 –Ω–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Ö–æ–¥—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç');
    }
  } else {
    console.log('   –ù–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π TON –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç');
  }

  // 2. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–≥–æ –∏–∑ 8 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  console.log('\n2. üë• –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –í–°–ï–• 8 –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:');
  
  const targetUsers = [25, 186, 187, 188, 189, 190, 224, 287];
  
  for (const userId of targetUsers) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º farming_data
    const { data: farmingData } = await supabase
      .from('ton_farming_data')
      .select('farming_balance, boost_active, farming_rate')
      .eq('user_id', userId.toString())
      .single();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º users
    const { data: userData } = await supabase
      .from('users')
      .select('balance_ton, ton_boost_package')
      .eq('id', userId)
      .single();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥
    const { data: lastIncome } = await supabase
      .from('transactions')
      .select('created_at, amount_ton')
      .eq('user_id', userId)
      .eq('type', 'FARMING_REWARD')
      .eq('currency', 'TON')
      .order('created_at', { ascending: false })
      .limit(1);

    const status = farmingData?.boost_active ? '‚úÖ' : '‚ùå';
    const deposit = farmingData?.farming_balance || 0;
    const lastTime = lastIncome?.[0] ? 
      Math.round((Date.now() - new Date(lastIncome[0].created_at).getTime()) / (1000 * 60)) : 
      '‚àû';
    const lastAmount = lastIncome?.[0]?.amount_ton || '0';

    console.log(`   User ${userId} ${status}: –¥–µ–ø–æ–∑–∏—Ç ${deposit} TON, –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ ${lastTime} –º–∏–Ω –Ω–∞–∑–∞–¥ (+${parseFloat(lastAmount).toFixed(6)} TON)`);
  }

  // 3. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ –¥–æ—Ö–æ–¥—ã
  console.log('\n3. üí∞ –†–ê–°–ß–ï–¢ –û–ñ–ò–î–ê–ï–ú–´–• –î–û–•–û–î–û–í:');
  
  const { data: allFarmingUsers } = await supabase
    .from('ton_farming_data')
    .select('user_id, farming_balance, farming_rate')
    .eq('boost_active', true);

  if (allFarmingUsers) {
    console.log(`   –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${allFarmingUsers.length}`);
    let totalExpectedIncome = 0;

    allFarmingUsers.forEach(user => {
      const deposit = parseFloat(user.farming_balance || '0');
      const rate = parseFloat(user.farming_rate || '0.01');
      const fiveMinuteIncome = (deposit * rate) / 288;
      const passesThreshold = fiveMinuteIncome > 0.00001;
      
      if (passesThreshold) {
        totalExpectedIncome += fiveMinuteIncome;
      }

      if (user.user_id === '287') {
        console.log(`   User 287: ${fiveMinuteIncome.toFixed(8)} TON –∑–∞ 5 –º–∏–Ω, –ø–æ—Ä–æ–≥: ${passesThreshold ? '–ü–†–û–•–û–î–ò–¢ ‚úÖ' : '–ù–ï –ü–†–û–•–û–î–ò–¢ ‚ùå'}`);
      }
    });

    console.log(`   –û–∂–∏–¥–∞–µ–º—ã–π –æ–±—â–∏–π –¥–æ—Ö–æ–¥ –∑–∞ 5 –º–∏–Ω—É—Ç: ${totalExpectedIncome.toFixed(6)} TON`);
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ—Ö–æ–¥—è—â–∏—Ö –ø–æ—Ä–æ–≥: ${allFarmingUsers.filter(u => {
      const deposit = parseFloat(u.farming_balance || '0');
      const rate = parseFloat(u.farming_rate || '0.01');
      return ((deposit * rate) / 288) > 0.00001;
    }).length}`);
  }

  // 4. –ò—Ç–æ–≥–æ–≤–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ
  console.log('\n4. üéØ –ò–¢–û–ì–û–í–û–ï –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
  console.log('‚ïê'.repeat(50));
  
  if (recentTonIncomes && recentTonIncomes.length > 0) {
    const uniqueUsers = [...new Set(recentTonIncomes.map(tx => tx.user_id))].length;
    const user287Income = recentTonIncomes.find(tx => tx.user_id === 287);
    
    if (user287Income) {
      console.log('üéâ –ü–û–õ–ù–´–ô –£–°–ü–ï–•: –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–µ—à–µ–Ω—ã!');
      console.log('‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç—Ä–∞–Ω–µ–Ω–∞');
      console.log('‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ —Å–Ω–∏–∂–µ–Ω'); 
      console.log('‚úÖ User 287 –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Ö–æ–¥—ã');
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    } else {
      console.log('‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•: –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞');
      console.log('‚úÖ 7 –∏–∑ 8 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–∞—é—Ç –¥–æ—Ö–æ–¥—ã');
      console.log('üîß User 287 —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏');
      console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–µ–Ω –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞');
    }
    
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${recentTonIncomes.length} –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π, ${uniqueUsers} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
  } else {
    console.log('‚ùå –ü–õ–ê–ù–ò–†–û–í–©–ò–ö –ù–ï –ê–ö–¢–ò–í–ï–ù');
    console.log('üö® –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã');
  }

  console.log('\n‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –ó–∞–ø—É—Å–∫
finalSchedulerStatusCheck()
  .then(() => process.exit(0))
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  });