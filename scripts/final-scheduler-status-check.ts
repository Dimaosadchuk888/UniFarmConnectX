#!/usr/bin/env tsx
/**
 * –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ TON Boost
 * –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–≤–æ–¥–æ–≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
 */

import { supabase } from '../core/supabase';

async function finalSchedulerStatusCheck() {
  console.log('üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê');
  console.log('==========================================');
  console.log(`–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ${new Date().toLocaleString('ru-RU')}\n`);

  // 1. –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç
  console.log('1. üìä –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç):');
  const tenMinutesAgo = new Date(Date.now() - 10 * 60 * 1000).toISOString();
  
  const { data: recentActivity } = await supabase
    .from('transactions')
    .select('user_id, created_at, amount_ton, description')
    .eq('type', 'FARMING_REWARD')
    .eq('currency', 'TON')
    .gte('created_at', tenMinutesAgo)
    .order('created_at', { ascending: false });

  if (recentActivity && recentActivity.length > 0) {
    console.log(`   ‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ê–ö–¢–ò–í–ï–ù - ${recentActivity.length} –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –∑–∞ 10 –º–∏–Ω—É—Ç\n`);
    
    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    const userStats = new Map();
    recentActivity.forEach(tx => {
      const userId = tx.user_id;
      if (!userStats.has(userId)) {
        userStats.set(userId, { count: 0, total: 0, lastTime: tx.created_at });
      }
      const stats = userStats.get(userId);
      stats.count++;
      stats.total += parseFloat(tx.amount_ton);
      userStats.set(userId, stats);
    });

    console.log('   üìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:');
    for (const [userId, stats] of userStats) {
      console.log(`   ‚Ä¢ User ${userId}: ${stats.count} –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π, ${stats.total.toFixed(6)} TON`);
      console.log(`     –ü–æ—Å–ª–µ–¥–Ω–µ–µ: ${stats.lastTime}`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—à–∏—Ö —Ü–µ–ª–µ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const user25Active = userStats.has(25);
    const user287Active = userStats.has(287);
    
    console.log('\n   üéØ –¶–ï–õ–ï–í–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:');
    console.log(`   ‚Ä¢ User 25: ${user25Active ? '‚úÖ –ü–û–õ–£–ß–ê–ï–¢ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è' : '‚ùå –ù–ï–¢ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π'}`);
    console.log(`   ‚Ä¢ User 287: ${user287Active ? '‚úÖ –ü–û–õ–£–ß–ê–ï–¢ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è' : '‚ùå –ù–ï–¢ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π'}`);
  } else {
    console.log('   ‚ùå –ü–õ–ê–ù–ò–†–û–í–©–ò–ö –ù–ï –ê–ö–¢–ò–í–ï–ù - –Ω–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –∑–∞ 10 –º–∏–Ω—É—Ç');
  }

  // 2. –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  console.log('\n2. üë• –í–°–ï –ê–ö–¢–ò–í–ù–´–ï TON BOOST –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:');
  const { data: activeBoostUsers } = await supabase
    .from('ton_farming_data')
    .select('user_id, boost_package_id, farming_balance, boost_active, start_date, end_date')
    .eq('boost_active', true)
    .gt('farming_balance', 0)
    .order('user_id');

  if (activeBoostUsers && activeBoostUsers.length > 0) {
    console.log(`   –ù–∞–π–¥–µ–Ω–æ ${activeBoostUsers.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n`);
    
    activeBoostUsers.forEach(user => {
      console.log(`   User ${user.user_id}:`);
      console.log(`   ‚Ä¢ Package: ${user.boost_package_id}`);
      console.log(`   ‚Ä¢ –ë–∞–ª–∞–Ω—Å: ${user.farming_balance} TON`);
      console.log(`   ‚Ä¢ –ê–∫—Ç–∏–≤–µ–Ω: ${user.boost_active ? '–î–ê' : '–ù–ï–¢'}`);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏—Å—Ç–µ—á–µ–Ω–∏–µ —Å—Ä–æ–∫–∞
      if (user.end_date) {
        const endTime = new Date(user.end_date);
        const isExpired = endTime < new Date();
        console.log(`   ‚Ä¢ –°—Ä–æ–∫: ${isExpired ? '‚ùå –ò–°–¢–ï–ö' : '‚úÖ –ê–ö–¢–ò–í–ï–ù'} (–¥–æ ${endTime.toLocaleString('ru-RU')})`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π
      const hasRecentIncome = recentActivity?.some(tx => tx.user_id === user.user_id);
      console.log(`   ‚Ä¢ –ù–∞—á–∏—Å–ª–µ–Ω–∏—è: ${hasRecentIncome ? '‚úÖ –ü–û–õ–£–ß–ê–ï–¢' : '‚ùå –ù–ï –ü–û–õ–£–ß–ê–ï–¢'}`);
      console.log('');
    });
  } else {
    console.log('   ‚ùå –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  }

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏ –¥–ª—è User 287
  console.log('3. üîç –ü–†–û–í–ï–†–ö–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –î–õ–Ø USER 287:');
  
  const { data: user287Users } = await supabase
    .from('users')
    .select('id, ton_boost_package, ton_boost_package_id, ton_boost_rate')
    .eq('id', 287)
    .single();

  const { data: user287Farming } = await supabase
    .from('ton_farming_data')
    .select('user_id, boost_package_id, boost_active, farming_balance')
    .eq('user_id', 287);

  console.log('   –¢–∞–±–ª–∏—Ü–∞ users:');
  if (user287Users) {
    console.log(`   ‚Ä¢ ton_boost_package: ${user287Users.ton_boost_package || 'NULL'}`);
    console.log(`   ‚Ä¢ ton_boost_package_id: ${user287Users.ton_boost_package_id || 'NULL'}`);
    console.log(`   ‚Ä¢ ton_boost_rate: ${user287Users.ton_boost_rate || 'NULL'}`);
  }

  console.log('\n   –¢–∞–±–ª–∏—Ü–∞ ton_farming_data:');
  if (user287Farming && user287Farming.length > 0) {
    user287Farming.forEach((record, index) => {
      console.log(`   –ó–∞–ø–∏—Å—å ${index + 1}:`);
      console.log(`   ‚Ä¢ boost_package_id: ${record.boost_package_id}`);
      console.log(`   ‚Ä¢ boost_active: ${record.boost_active}`);
      console.log(`   ‚Ä¢ farming_balance: ${record.farming_balance}`);
    });
  }

  // –ê–Ω–∞–ª–∏–∑ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π
  const hasUsersRecord = user287Users?.ton_boost_package;
  const hasFarmingRecord = user287Farming?.length > 0 && user287Farming[0].boost_active;
  
  console.log('\n   üìä –ê–ù–ê–õ–ò–ó –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò:');
  console.log(`   ‚Ä¢ –ó–∞–ø–∏—Å—å –≤ users: ${hasUsersRecord ? '‚úÖ –ï–°–¢–¨' : '‚ùå –ù–ï–¢'}`);
  console.log(`   ‚Ä¢ –ó–∞–ø–∏—Å—å –≤ farming_data: ${hasFarmingRecord ? '‚úÖ –ï–°–¢–¨' : '‚ùå –ù–ï–¢'}`);
  
  if (hasUsersRecord && hasFarmingRecord) {
    console.log('   ‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ö–û–†–†–ï–ö–¢–ù–ê - –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∞—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è');
  } else {
    console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò - –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π');
  }

  // 4. –§–∏–Ω–∞–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã
  console.log('\n4. üéØ –§–ò–ù–ê–õ–¨–ù–´–ï –í–´–í–û–î–´:');
  console.log('‚ïê'.repeat(50));
  
  const plannerActive = recentActivity && recentActivity.length > 0;
  const user25GetsIncome = recentActivity?.some(tx => tx.user_id === 25);
  const user287GetsIncome = recentActivity?.some(tx => tx.user_id === 287);
  
  console.log(`üìä –°—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: ${plannerActive ? '‚úÖ –ê–ö–¢–ò–í–ï–ù' : '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}`);
  console.log(`üî¥ User 25: ${user25GetsIncome ? '‚úÖ –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è' : '‚ùå –ù–ï –ø–æ–ª—É—á–∞–µ—Ç'} (–ø—Ä–æ–±–ª–µ–º–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è)`);
  console.log(`üü° User 287: ${user287GetsIncome ? '‚úÖ –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è' : '‚ùå –ù–ï –ø–æ–ª—É—á–∞–µ—Ç'} (—Å–µ–ª–µ–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞)`);
  
  if (plannerActive && !user287GetsIncome && hasFarmingRecord) {
    console.log('\n‚ö†Ô∏è –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û: –°–µ–ª–µ–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è User 287');
    console.log('   –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ, –Ω–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('   –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –ª–æ–≥–∏–∫–∏ –≤—ã–±–æ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ');
  }

  console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –ó–∞–ø—É—Å–∫
finalSchedulerStatusCheck()
  .then(() => process.exit(0))
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  });