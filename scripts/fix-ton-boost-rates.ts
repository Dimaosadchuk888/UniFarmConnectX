import { createClient } from '@supabase/supabase-js';
import * as dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL!;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;
const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function fixTonBoostRates() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–≤–æ–∫ –≤ ton_boost_purchases...\n');
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å—Ç–∞–≤–∫–∞–º–∏ (–±–æ–ª—å—à–µ 1)
  const { data: wrongRates, error } = await supabase
    .from('ton_boost_purchases')
    .select('*')
    .gt('rate', '1');
    
  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
    return;
  }
  
  console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å—Ç–∞–≤–∫–∞–º–∏: ${wrongRates?.length || 0}`);
  
  if (wrongRates && wrongRates.length > 0) {
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å
    for (const purchase of wrongRates) {
      const correctRate = purchase.rate / 100; // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º 100 –≤ 1.0, 1.5 –≤ 0.015 –∏ —Ç.–¥.
      const amount = parseFloat(purchase.amount);
      const correctDailyIncome = amount * correctRate;
      
      const { error: updateError } = await supabase
        .from('ton_boost_purchases')
        .update({
          rate: correctRate.toString(),
          daily_income: correctDailyIncome.toString()
        })
        .eq('id', purchase.id);
        
      if (updateError) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ ${purchase.id}:`, updateError);
      } else {
        console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å ${purchase.id}: —Å—Ç–∞–≤–∫–∞ ${purchase.rate}% ‚Üí ${correctRate * 100}%`);
      }
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const { data: checkData, error: checkError } = await supabase
    .from('ton_boost_purchases')
    .select('rate')
    .gt('rate', '1');
    
  if (!checkError) {
    console.log(`\n‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–µ–π —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å—Ç–∞–≤–∫–∞–º–∏: ${checkData?.length || 0}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
fixTonBoostRates().catch(console.error);