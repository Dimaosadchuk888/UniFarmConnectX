import { supabase } from '../core/supabase.js';
import jwt from 'jsonwebtoken';
import dotenv from 'dotenv';

dotenv.config();

async function diagnoseUser74() {
  console.log('üî¨ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 74...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º JWT —Ç–æ–∫–µ–Ω
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ JWT —Ç–æ–∫–µ–Ω–∞...');
    const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjc0LCJ0ZWxlZ3JhbV9pZCI6OTk5NDg5LCJ1c2VybmFtZSI6InRlc3RfdXNlcl8xNzUyMTI5ODQwOTA1IiwicmVmX2NvZGUiOiJURVNUXzE3NTIxMjk4NDA5MDVfZG9reHYwIiwiaWF0IjoxNzUyMTQzMjE3LCJleHAiOjE3NTI3NDgwMTd9.0SHPKWAt_BazW4o8HX7r6hsXGUynqEoRiMbI9uNG5aI';
    
    const JWT_SECRET = process.env.JWT_SECRET;
    console.log('JWT_SECRET —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', !!JWT_SECRET);
    
    try {
      const decoded = jwt.verify(token, JWT_SECRET);
      console.log('‚úÖ JWT —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π:', decoded);
      console.log('   - userId:', decoded.userId, '(—Ç–∏–ø:', typeof decoded.userId, ')');
      console.log('   - telegram_id:', decoded.telegram_id);
      console.log('   - –ò—Å—Ç–µ–∫–∞–µ—Ç:', new Date(decoded.exp * 1000).toLocaleString());
    } catch (err) {
      console.error('‚ùå JWT —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π:', err.message);
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –ø–æ —Ä–∞–∑–Ω—ã–º –ø–æ–ª—è–º
    console.log('\n2Ô∏è‚É£ –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü–æ ID
    const { data: userById, error: errorById } = await supabase
      .from('users')
      .select('*')
      .eq('id', 74)
      .single();
      
    console.log('\n–ü–æ–∏—Å–∫ –ø–æ id=74:');
    if (userById) {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω:', {
        id: userById.id,
        telegram_id: userById.telegram_id,
        username: userById.username,
        balance_uni: userById.balance_uni,
        balance_ton: userById.balance_ton
      });
    } else {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω. –û—à–∏–±–∫–∞:', errorById);
    }
    
    // –ü–æ telegram_id
    const { data: userByTelegramId, error: errorByTelegramId } = await supabase
      .from('users')
      .select('*')
      .eq('telegram_id', 999489)
      .single();
      
    console.log('\n–ü–æ–∏—Å–∫ –ø–æ telegram_id=999489:');
    if (userByTelegramId) {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω:', {
        id: userByTelegramId.id,
        telegram_id: userByTelegramId.telegram_id,
        username: userByTelegramId.username
      });
    } else {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω. –û—à–∏–±–∫–∞:', errorByTelegramId);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å ID –æ–∫–æ–ª–æ 74
    console.log('\n3Ô∏è‚É£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å ID 70-80...');
    const { data: nearbyUsers } = await supabase
      .from('users')
      .select('id, telegram_id, username, created_at')
      .gte('id', 70)
      .lte('id', 80)
      .order('id');
      
    if (nearbyUsers && nearbyUsers.length > 0) {
      console.log('–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', nearbyUsers.length);
      nearbyUsers.forEach(u => {
        console.log(`  - ID ${u.id}: @${u.username} (telegram_id: ${u.telegram_id})`);
      });
    } else {
      console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 70-80 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö ID –≤ –ë–î
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö...');
    if (userById) {
      console.log('–¢–∏–ø –ø–æ–ª—è id –≤ –ë–î:', typeof userById.id);
      console.log('–ó–Ω–∞—á–µ–Ω–∏–µ id:', userById.id);
      console.log('–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —á–∏—Å–ª–æ–º 74:', userById.id === 74);
      console.log('–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–æ —Å—Ç—Ä–æ–∫–æ–π "74":', userById.id === '74');
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

diagnoseUser74();