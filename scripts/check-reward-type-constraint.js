import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL || process.env.VITE_SUPABASE_URL,
  process.env.SUPABASE_KEY || process.env.SUPABASE_SERVICE_KEY
);

async function checkRewardTypeConstraint() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è reward_type...\n');
  
  // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è reward_type
  const testValues = ['coins', 'UNI', 'TON', 'tokens', 'points', 'uni', 'ton'];
  
  for (const value of testValues) {
    const { error } = await supabase
      .from('missions')
      .insert({
        id: 999,
        title: 'TEST',
        description: 'TEST',
        mission_type: 'one_time',
        reward_type: value,
        reward_amount: 100
      });
      
    if (error) {
      console.log(`‚ùå "${value}" - ${error.message.includes('reward_type_check') ? '–ù–ï–î–û–ü–£–°–¢–ò–ú–û' : '–¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞'}`);
    } else {
      console.log(`‚úÖ "${value}" - –î–û–ü–£–°–¢–ò–ú–û`);
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
      await supabase.from('missions').delete().eq('id', 999);
      break; // –ù–∞—à–ª–∏ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    }
  }
}

checkRewardTypeConstraint();