#!/usr/bin/env tsx
/**
 * üîç –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï: TON –∫–æ—à–µ–ª–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—à–µ–ª–µ–∫ –∏ –∏—â–µ–º –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã
 */

import { supabase } from './core/supabase';

async function investigateUser255Wallet() {
  console.log('üîç –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï: TON –∫–æ—à–µ–ª–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255');
  console.log('='.repeat(70));

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 255
    console.log('\n1Ô∏è‚É£ TON –ö–û–®–ï–õ–ï–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ID 255:');
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('id, telegram_id, username, ton_wallet_address, ton_wallet_verified, balance_ton, created_at')
      .eq('id', 255)
      .single();

    if (userError || !user) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError?.message);
      return;
    }

    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∞:', {
      id: user.id,
      telegram_id: user.telegram_id,
      username: user.username,
      ton_wallet_address: user.ton_wallet_address || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù',
      ton_wallet_verified: user.ton_wallet_verified || false,
      balance_ton: user.balance_ton,
      created_at: user.created_at
    });

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º TON –¥–µ–ø–æ–∑–∏—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (user.ton_wallet_address) {
      console.log('\n2Ô∏è‚É£ –ü–û–ò–°–ö –î–ï–ü–û–ó–ò–¢–û–í –ü–û –ê–î–†–ï–°–£ –ö–û–®–ï–õ–¨–ö–ê:');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü–µ transactions
      const { data: walletDeposits, error: walletError } = await supabase
        .from('transactions')
        .select('*')
        .eq('type', 'TON_DEPOSIT')
        .ilike('description', `%${user.ton_wallet_address}%`)
        .order('created_at', { ascending: false });

      if (walletError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –∞–¥—Ä–µ—Å—É:', walletError.message);
      } else {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ø–æ –∞–¥—Ä–µ—Å—É: ${walletDeposits?.length || 0}`);
        walletDeposits?.forEach((dep, i) => {
          console.log(`\nüí∞ –î–µ–ø–æ–∑–∏—Ç ${i + 1}:`, {
            user_id: dep.user_id,
            amount: dep.amount,
            status: dep.status,
            tx_hash: dep.tx_hash || '–ù–ï–¢ –•–ï–®–ê',
            created_at: dep.created_at,
            description: dep.description
          });
        });
      }
    } else {
      console.log('\n2Ô∏è‚É£ ‚ùå –£ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ù–ï–¢ TON –ö–û–®–ï–õ–¨–ö–ê!');
      console.log('   –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –ø—Ä–æ–±–ª–µ–º—ã - –¥–µ–ø–æ–∑–∏—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
    }

    // 3. –ü–æ–∏—Å–∫ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤ —Å —Å—É–º–º–∞–º–∏ 0.65 –∏ 1.0 –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞
    console.log('\n3Ô∏è‚É£ –ü–û–ò–°–ö –î–ï–ü–û–ó–ò–¢–û–í 0.65 –ò 1.0 TON –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 2 –ß–ê–°–ê:');
    const twoHoursAgo = new Date();
    twoHoursAgo.setHours(twoHoursAgo.getHours() - 2);

    const { data: recentTargetDeposits, error: recentError } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'TON_DEPOSIT')
      .eq('currency', 'TON')
      .in('amount', ['0.65', '1.0', '1', '0.650000', '1.000000'])
      .gte('created_at', twoHoursAgo.toISOString())
      .order('created_at', { ascending: false });

    if (recentError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤:', recentError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–µ–¥–∞–≤–Ω–∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ —Å –Ω—É–∂–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏: ${recentTargetDeposits?.length || 0}`);
      recentTargetDeposits?.forEach((dep, i) => {
        console.log(`\nüéØ –ù–µ–¥–∞–≤–Ω–∏–π –¥–µ–ø–æ–∑–∏—Ç ${i + 1}:`, {
          user_id: dep.user_id,
          amount: dep.amount,
          status: dep.status,
          tx_hash: dep.tx_hash || '–ù–ï–¢ –•–ï–®–ê',
          created_at: dep.created_at,
          description: dep.description
        });
      });
    }

    // 4. –ü–æ–∏—Å–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∑–∞–≤–∏—Å—à–∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    console.log('\n4Ô∏è‚É£ –ü–û–ò–°–ö –ù–ï–û–ë–†–ê–ë–û–¢–ê–ù–ù–´–• –î–ï–ü–û–ó–ò–¢–û–í:');
    const { data: pendingDeposits, error: pendingError } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'TON_DEPOSIT')
      .neq('status', 'completed')
      .gte('created_at', twoHoursAgo.toISOString())
      .order('created_at', { ascending: false });

    if (pendingError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö:', pendingError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${pendingDeposits?.length || 0}`);
      pendingDeposits?.forEach((dep, i) => {
        console.log(`\n‚è≥ –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç ${i + 1}:`, {
          user_id: dep.user_id,
          amount: dep.amount,
          status: dep.status,
          tx_hash: dep.tx_hash || '–ù–ï–¢ –•–ï–®–ê',
          created_at: dep.created_at,
          description: dep.description
        });
      });
    }

    // 5. –ê–Ω–∞–ª–∏–∑ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ - –ø–æ–∏—Å–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    console.log('\n5Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –í–•–û–î–Ø–©–ò–• TON –ù–ê –ê–î–ú–ò–ù–°–ö–ò–ô –ö–û–®–ï–õ–ï–ö:');
    console.log('   –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω—ã –ª–∏ 1.65 TON –Ω–∞ –∞–¥–º–∏–Ω—Å–∫–∏–π –∫–æ—à–µ–ª–µ–∫...');
    
    // –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const { data: allRecentDeposits, error: allRecentError } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'TON_DEPOSIT')
      .gte('created_at', twoHoursAgo.toISOString())
      .order('created_at', { ascending: false });

    if (allRecentError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤:', allRecentError.message);
    } else {
      console.log(`‚úÖ –í—Å–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ 2 —á–∞—Å–∞: ${allRecentDeposits?.length || 0}`);
      
      const totalAmount = allRecentDeposits?.reduce((sum, dep) => sum + parseFloat(dep.amount || '0'), 0) || 0;
      console.log(`   –û–±—â–∞—è —Å—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${totalAmount.toFixed(6)} TON`);
      
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
      const byUsers = allRecentDeposits?.reduce((acc, dep) => {
        const userId = dep.user_id;
        if (!acc[userId]) acc[userId] = [];
        acc[userId].push(dep);
        return acc;
      }, {} as Record<number, any[]>) || {};
      
      console.log('\n   üìä –î–µ–ø–æ–∑–∏—Ç—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:');
      Object.entries(byUsers).forEach(([userId, deposits]) => {
        const userTotal = deposits.reduce((sum, dep) => sum + parseFloat(dep.amount || '0'), 0);
        console.log(`   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}: ${deposits.length} –¥–µ–ø–æ–∑–∏—Ç–æ–≤, ${userTotal.toFixed(6)} TON`);
      });
    }

    console.log('\n' + '='.repeat(70));
    console.log('üéØ –í–´–í–û–î–´ –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–Ø:');
    
    if (!user.ton_wallet_address) {
      console.log('‚ùå –ö–†–ò–¢–ò–ß–ù–û: –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255 –ù–ï–¢ TON –∫–æ—à–µ–ª—å–∫–∞!');
      console.log('   –î–µ–ø–æ–∑–∏—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω—ã —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º');
      console.log('   –†–µ—à–µ–Ω–∏–µ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –ø–æ–¥–∫–ª—é—á–∏—Ç—å TON –∫–æ—à–µ–ª–µ–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏');
    } else if (!user.ton_wallet_verified) {
      console.log('‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: TON –∫–æ—à–µ–ª–µ–∫ –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω!');
      console.log('   –î–µ–ø–æ–∑–∏—Ç—ã –º–æ–≥—É—Ç –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è');
    } else {
      console.log('‚úÖ TON –∫–æ—à–µ–ª–µ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
      console.log('   –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    }
    
    console.log('\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ TON –∫–æ—à–µ–ª–µ–∫ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 255');
    console.log('2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Å—Ç—É–ø–∏–ª–∏ –ª–∏ 1.65 TON –Ω–∞ –∞–¥–º–∏–Ω—Å–∫–∏–π –∫–æ—à–µ–ª–µ–∫');
    console.log('4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç—ã –≤—Ä—É—á–Ω—É—é');
    console.log('='.repeat(70));

  } catch (error) {
    console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
  }
}

investigateUser255Wallet().catch(console.error);