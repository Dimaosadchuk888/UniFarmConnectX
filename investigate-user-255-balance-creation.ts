#!/usr/bin/env tsx
/**
 * üîç –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –°–û–ó–î–ê–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê USER 255
 * –ò–∑—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏
 */

import { supabase } from './core/supabase';

async function investigateBalanceCreation() {
  console.log('üîç –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –°–û–ó–î–ê–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê USER 255');
  console.log('='.repeat(80));

  try {
    // 1. –ò–∑—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π –±–∞–ª–∞–Ω—Å–∞
    console.log('\n1Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶–´ user_balances:');
    
    const { data: sampleBalances } = await supabase
      .from('user_balances')
      .select('*')
      .limit(3);
      
    if (sampleBalances && sampleBalances.length > 0) {
      console.log('üìã –ü—Ä–∏–º–µ—Ä —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π:');
      sampleBalances.forEach((balance, i) => {
        console.log(`\n   ${i + 1}. User ${balance.user_id}:`);
        console.log(`      UNI: ${balance.uni_balance}`);
        console.log(`      TON: ${balance.ton_balance}`);
        console.log(`      –°–æ–∑–¥–∞–Ω: ${balance.created_at}`);
        console.log(`      –û–±–Ω–æ–≤–ª–µ–Ω: ${balance.updated_at}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø–æ–ª—è –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        Object.keys(balance).forEach(key => {
          if (!['user_id', 'uni_balance', 'ton_balance', 'created_at', 'updated_at'].includes(key)) {
            console.log(`      ${key}: ${balance[key]}`);
          }
        });
      });
    }
    
    // 2. –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    console.log('\n2Ô∏è‚É£ –ü–û–ü–´–¢–ö–ê –°–û–ó–î–ê–ù–ò–Ø –° –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò:');
    
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏–º –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    await supabase
      .from('user_balances')
      .delete()
      .eq('user_id', 255);
    
    console.log('‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
    
    // –°–æ–∑–¥–∞–µ–º —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º
    const { data: newBalance, error: createError } = await supabase
      .from('user_balances')
      .insert({
        user_id: 255,
        uni_balance: 154.076667,
        ton_balance: 2.60
      })
      .select()
      .single();
      
    if (createError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è (–ø–æ–ø—ã—Ç–∫–∞ 1):', createError);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
      console.log('\n3Ô∏è‚É£ –ü–û–ü–´–¢–ö–ê –° –ü–û–õ–ù–´–ú –ù–ê–ë–û–†–û–ú –ü–û–õ–ï–ô:');
      
      const { data: fullBalance, error: fullError } = await supabase
        .from('user_balances')
        .insert({
          user_id: 255,
          uni_balance: 154.076667,
          ton_balance: 2.60,
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        })
        .select()
        .single();
        
      if (fullError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è (–ø–æ–ø—ã—Ç–∫–∞ 2):', fullError);
        
        // –ü–æ—Å–º–æ—Ç—Ä–∏–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
        console.log('\nüìä –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏:');
        console.log('Code:', fullError.code);
        console.log('Message:', fullError.message);
        console.log('Details:', fullError.details);
        console.log('Hint:', fullError.hint);
        
      } else {
        console.log('‚úÖ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù (–ø–æ–ø—ã—Ç–∫–∞ 2)!');
        console.log('–î–∞–Ω–Ω—ã–µ:', fullBalance);
      }
      
    } else {
      console.log('‚úÖ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù (–ø–æ–ø—ã—Ç–∫–∞ 1)!');
      console.log('–î–∞–Ω–Ω—ã–µ:', newBalance);
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –§–ò–ù–ê–õ–¨–ù–û–ì–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê:');
    
    const { data: finalCheck } = await supabase
      .from('user_balances')
      .select('*')
      .eq('user_id', 255)
      .single();
      
    if (finalCheck) {
      console.log('‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ –Ω–∞–π–¥–µ–Ω–∞:');
      console.log(`   User ID: ${finalCheck.user_id}`);
      console.log(`   UNI –±–∞–ª–∞–Ω—Å: ${finalCheck.uni_balance}`);
      console.log(`   TON –±–∞–ª–∞–Ω—Å: ${finalCheck.ton_balance}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${finalCheck.created_at}`);
      console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω: ${finalCheck.updated_at}`);
      
      console.log('\nüéâ –ü–†–û–ë–õ–ï–ú–ê –° –ë–ê–õ–ê–ù–°–û–ú USER 255 –†–ï–®–ï–ù–ê!');
      console.log('');
      console.log('–¢–µ–ø–µ—Ä—å –∏–∑—É—á–∞–µ–º –ø–æ—á–µ–º—É —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–µ–ø–æ–∑–∏—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏...');
      
    } else {
      console.log('‚ùå –ó–∞–ø–∏—Å—å –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // 5. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤
    console.log('\n5Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–• –î–ï–ü–û–ó–ò–¢–û–í:');
    console.log('');
    console.log('üîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ù–ï –ó–ê–ü–ò–°–ò –î–ï–ü–û–ó–ò–¢–û–í:');
    console.log('');
    console.log('1. ‚ùå –û–¢–°–£–¢–°–¢–í–ò–ï WEBHOOK –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:');
    console.log('   - –ù–µ—Ç —Å–µ–∫—Ä–µ—Ç–æ–≤ TON API (TONAPI_KEY, TON_WEBHOOK_SECRET)');
    console.log('   - –ù–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('   - –°–∏—Å—Ç–µ–º–∞ –∂–¥–µ—Ç —Ä—É—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ /api/v2/wallet/ton-deposit');
    console.log('');
    console.log('2. ‚ùå MISSING USER_BALANCES RECORD:');
    console.log('   - User 255 –Ω–µ –∏–º–µ–ª –∑–∞–ø–∏—Å–∏ –≤ user_balances');
    console.log('   - processTonDeposit -> BalanceManager –Ω–µ –º–æ–≥ –æ–±–Ω–æ–≤–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –±–∞–ª–∞–Ω—Å');
    console.log('   - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–≤–∞–ª–∞—Å—å, –Ω–æ –±–∞–ª–∞–Ω—Å –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è');
    console.log('');
    console.log('3. ‚ö†Ô∏è FRONTEND DEPENDENCY:');
    console.log('   - –î–µ–ø–æ–∑–∏—Ç—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç frontend –∑–∞–ø—Ä–æ—Å–∞');
    console.log('   - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª TON, –Ω–æ –Ω–µ –Ω–∞–∂–∞–ª –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ - –¥–µ–ø–æ–∑–∏—Ç –ø–æ—Ç–µ—Ä—è–µ—Ç—Å—è');
    console.log('   - –ù–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–ª–æ–∫—á–µ–π–Ω–∞');
    console.log('');
    console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û:');
    console.log('   - –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å user_balances –¥–ª—è User 255');
    console.log('   - –¢–µ–ø–µ—Ä—å –µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç—ã –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    console.log('');
    console.log('üîß –î–õ–Ø –ü–û–õ–ù–û–ô –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò –ù–£–ñ–ù–û:');
    console.log('   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å TON API —Å–µ–∫—Ä–µ—Ç—ã');
    console.log('   - –î–æ–±–∞–≤–∏—Ç—å webhook endpoint –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ TON –∫–æ—à–µ–ª—å–∫–∞');
    
    console.log('\n' + '='.repeat(80));
    
  } catch (error) {
    console.error('üí• –û–®–ò–ë–ö–ê –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø:', error);
  }
}

investigateBalanceCreation().catch(console.error);