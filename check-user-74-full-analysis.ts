import { supabase } from './core/supabase.js';

async function checkUser74FullAnalysis() {
  console.log('üîç –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó USER 74 - TON BOOST –ò –ë–ê–õ–ê–ù–°–´\n');
  console.log('='*60 + '\n');
  
  const userId = 74;
  
  // 1. –ü–†–û–í–ï–†–ö–ê –í–°–ï–• TON BOOST –ü–ê–ö–ï–¢–û–í
  console.log('1Ô∏è‚É£ –í–°–ï TON BOOST –ü–ê–ö–ï–¢–´ USER 74:\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫ boost –ø–∞–∫–µ—Ç–æ–≤
  const { data: boostPurchases } = await supabase
    .from('boost_purchases')
    .select('*')
    .eq('user_id', userId)
    .order('created_at', { ascending: false });
    
  if (boostPurchases && boostPurchases.length > 0) {
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ boost_purchases: ${boostPurchases.length}\n`);
    boostPurchases.forEach((purchase, index) => {
      console.log(`–ü–æ–∫—É–ø–∫–∞ #${index + 1}:`);
      console.log(`- ID: ${purchase.id}`);
      console.log(`- –ü–∞–∫–µ—Ç: ${purchase.package_name} (ID: ${purchase.package_id})`);
      console.log(`- –¢–∏–ø: ${purchase.package_type}`);
      console.log(`- –°—Ç–∞—Ç—É—Å: ${purchase.status}`);
      console.log(`- –î–∞—Ç–∞: ${new Date(purchase.created_at).toLocaleString()}`);
      console.log('');
    });
  } else {
    console.log('‚ùå –ó–∞–ø–∏—Å–µ–π –≤ boost_purchases –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º TON farming data
  const { data: tonFarmingData } = await supabase
    .from('ton_farming_data')
    .select('*')
    .eq('user_id', userId);
    
  console.log(`\nüìä TON Farming Data –∑–∞–ø–∏—Å–∏: ${tonFarmingData?.length || 0}`);
  if (tonFarmingData) {
    tonFarmingData.forEach((data, index) => {
      console.log(`\n–ó–∞–ø–∏—Å—å #${index + 1}:`);
      console.log(`- Boost –∞–∫—Ç–∏–≤–µ–Ω: ${data.boost_active}`);
      console.log(`- –ü–∞–∫–µ—Ç ID: ${data.boost_package_id}`);
      console.log(`- –ò—Å—Ç–µ–∫–∞–µ—Ç: ${data.boost_expires_at || '–ë–µ—Å—Å—Ä–æ—á–Ω–æ'}`);
    });
  }
  
  // 2. –ê–ù–ê–õ–ò–ó –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø –ë–ê–õ–ê–ù–°–û–í
  console.log('\n' + '='*60);
  console.log('\n2Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø –ë–ê–õ–ê–ù–°–û–í:\n');
  
  // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –∏–∑ –ë–î
  const { data: userFromDB } = await supabase
    .from('users')
    .select('balance_ton, balance_uni')
    .eq('id', userId)
    .single();
    
  console.log('üìä –ë–∞–ª–∞–Ω—Å—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
  console.log(`- TON: ${userFromDB?.balance_ton || 0}`);
  console.log(`- UNI: ${userFromDB?.balance_uni || 0}`);
  
  console.log('\nüì± –ë–∞–ª–∞–Ω—Å—ã –≤ UI (–∏–∑ –ª–æ–≥–æ–≤):');
  console.log('- TON: 866.163795');
  console.log('- UNI: 1518293.957115');
  
  const tonDiff = 866.163795 - parseFloat(userFromDB?.balance_ton || '0');
  const uniDiff = 1518293.957115 - parseFloat(userFromDB?.balance_uni || '0');
  
  console.log('\n‚ö†Ô∏è –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è:');
  console.log(`- TON: ${tonDiff.toFixed(6)} (UI –±–æ–ª—å—à–µ –Ω–∞ ${tonDiff.toFixed(2)})`);
  console.log(`- UNI: ${uniDiff.toFixed(6)} (UI –±–æ–ª—å—à–µ –Ω–∞ ${uniDiff.toFixed(2)})`);
  
  // 3. –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–ù–ò–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô
  console.log('\n' + '='*60);
  console.log('\n3Ô∏è‚É£ –ü–û–°–õ–ï–î–ù–ò–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –î–õ–Ø –í–´–Ø–í–õ–ï–ù–ò–Ø –ü–†–ò–ß–ò–ù:\n');
  
  // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  const { data: recentTransactions } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', userId)
    .order('created_at', { ascending: false })
    .limit(10);
    
  if (recentTransactions) {
    console.log('–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:');
    console.log('-'.repeat(100));
    console.log('–î–∞—Ç–∞'.padEnd(25) + '| –¢–∏–ø'.padEnd(25) + '| UNI'.padEnd(15) + '| TON'.padEnd(15) + '| –°—Ç–∞—Ç—É—Å');
    console.log('-'.repeat(100));
    
    recentTransactions.forEach(tx => {
      const date = new Date(tx.created_at).toLocaleString();
      const type = tx.type + (tx.metadata?.original_type ? ` (${tx.metadata.original_type})` : '');
      const uni = tx.amount_uni ? `+${tx.amount_uni}` : '0';
      const ton = tx.amount_ton ? `+${tx.amount_ton}` : '0';
      
      console.log(
        date.padEnd(25) + '| ' +
        type.padEnd(25) + '| ' +
        uni.padEnd(15) + '| ' +
        ton.padEnd(15) + '| ' +
        tx.status
      );
    });
  }
  
  // 4. –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø
  console.log('\n' + '='*60);
  console.log('\n4Ô∏è‚É£ –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø:\n');
  
  console.log('1. –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ frontend - UI –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ');
  console.log('2. –ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ - –µ—Å—Ç—å pending —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –æ—Ç—Ä–∞–∂–µ–Ω–Ω—ã–µ –≤ –ë–î');
  console.log('3. WebSocket —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è - –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –¥–æ—Ö–æ–¥—è—Ç –¥–æ UI');
  console.log('4. –õ–æ–∫–∞–ª—å–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è - UI –¥–æ–±–∞–≤–ª—è–µ—Ç –æ–∂–∏–¥–∞–µ–º—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –¥–æ –∏—Ö —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º pending —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  const { data: pendingTx } = await supabase
    .from('transactions')
    .select('amount_uni, amount_ton')
    .eq('user_id', userId)
    .eq('status', 'pending');
    
  if (pendingTx && pendingTx.length > 0) {
    let pendingTon = 0;
    let pendingUni = 0;
    
    pendingTx.forEach(tx => {
      pendingTon += parseFloat(tx.amount_ton || '0');
      pendingUni += parseFloat(tx.amount_uni || '0');
    });
    
    console.log(`\n‚è≥ –ù–∞–π–¥–µ–Ω–æ pending —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${pendingTx.length}`);
    console.log(`- –û–∂–∏–¥–∞–µ—Ç—Å—è TON: ${pendingTon.toFixed(6)}`);
    console.log(`- –û–∂–∏–¥–∞–µ—Ç—Å—è UNI: ${pendingUni.toFixed(6)}`);
  } else {
    console.log('\n‚úÖ Pending —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
}

checkUser74FullAnalysis();