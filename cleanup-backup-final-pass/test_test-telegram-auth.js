
console.log('üîç –¢–ï–°–¢ TELEGRAM –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò');

async function testTelegramAuth() {
  const baseUrl = 'https://uni-farm-connect-xo-osadchukdmitro2.replit.app';
  
  console.log('\nüì° –≠—Ç–∞–ø 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints');
  
  // 1. –¢–µ—Å—Ç /api/v2/me –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  try {
    const response = await fetch(`${baseUrl}/api/v2/me`);
    console.log(`‚úÖ /api/v2/me —Å—Ç–∞—Ç—É—Å: ${response.status}`);
    if (response.status !== 401) {
      console.log('‚ùå –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 401 (Unauthorized)');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ /api/v2/me:', error.message);
  }
  
  // 2. –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ initData endpoint
  try {
    const response = await fetch(`${baseUrl}/api/auth/validate-init-data`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ initData: 'test_data' })
    });
    console.log(`‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è initData —Å—Ç–∞—Ç—É—Å: ${response.status}`);
  } catch (error) {
    console.log('‚ùå Endpoint –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
  }
  
  // 3. –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ guest_id
  try {
    const testGuestId = 'test-guest-' + Date.now();
    const response = await fetch(`${baseUrl}/api/register/guest`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        guest_id: testGuestId,
        ref_code: null 
      })
    });
    console.log(`‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è guest —Å—Ç–∞—Ç—É—Å: ${response.status}`);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', data.user?.id);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ guest:', error.message);
  }
  
  console.log('\nü§ñ –≠—Ç–∞–ø 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Bot');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
  try {
    const response = await fetch(`${baseUrl}/api/telegram/bot-info`);
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω:', data.username);
    } else {
      console.log('‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞:', error.message);
  }
  
  console.log('\nüíæ –≠—Ç–∞–ø 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
  try {
    const response = await fetch(`${baseUrl}/api/admin/db-status`);
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ –ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞:', data.isConnected);
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î:', data.tables?.users || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î:', error.message);
  }
  
  console.log('\nüéÆ –≠—Ç–∞–ø 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π');
  
  // –¢–µ—Å—Ç –º–∏—Å—Å–∏–π
  try {
    const response = await fetch(`${baseUrl}/api/v2/missions/active`);
    console.log(`‚úÖ –ú–∏—Å—Å–∏–∏ —Å—Ç–∞—Ç—É—Å: ${response.status}`);
    if (response.ok) {
      const data = await response.json();
      console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –º–∏—Å—Å–∏–π: ${data.data?.length || 0}`);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–∏—Å—Å–∏–π:', error.message);
  }
  
  console.log('\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
}

testTelegramAuth().catch(console.error);
