/**
 * –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ TON BOOST
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∑–∞–¥–∞–Ω–∏—é
 */

import { createClient } from '@supabase/supabase-js';

async function comprehensiveTonBoostAudit() {
  const supabaseUrl = process.env.SUPABASE_URL;
  const supabaseKey = process.env.SUPABASE_KEY;
  
  const supabase = createClient(supabaseUrl, supabaseKey);
  
  console.log('üéØ –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ TON BOOST');
  console.log('=' * 60);
  
  const userId = 48;
  
  // 1. –ê–ù–ê–õ–ò–ó –¢–ï–ö–£–©–ï–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
  console.log('\nüìä 1. –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø 48:');
  
  const { data: user, error: userError } = await supabase
    .from('users')
    .select('id, balance_ton, ton_boost_package, ton_boost_rate, ton_boost_active')
    .eq('id', userId)
    .single();
  
  if (userError) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError.message);
    return;
  }
  
  console.log(`   ‚Ä¢ –ë–∞–ª–∞–Ω—Å TON: ${user.balance_ton}`);
  console.log(`   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–π –ø–∞–∫–µ—Ç: ${user.ton_boost_package || '–Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'}`);
  console.log(`   ‚Ä¢ –°—Ç–∞–≤–∫–∞: ${user.ton_boost_rate || 0}%`);
  console.log(`   ‚Ä¢ –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${user.ton_boost_active || false}`);
  
  // 2. –ê–ù–ê–õ–ò–ó –ü–û–ö–£–ü–û–ö BOOST –ü–ê–ö–ï–¢–û–í
  console.log('\nüîÅ 2. –ê–ù–ê–õ–ò–ó –ü–û–ö–£–ü–û–ö BOOST –ü–ê–ö–ï–¢–û–í:');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É boost_purchases (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
  const { data: boostPurchases, error: boostError } = await supabase
    .from('boost_purchases')
    .select('*')
    .eq('user_id', userId)
    .order('created_at', { ascending: false });
  
  if (boostError && !boostError.message.includes('does not exist')) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫:', boostError.message);
  } else if (boostError) {
    console.log('   ‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ boost_purchases –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  } else {
    console.log(`   ‚Ä¢ –í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫ –≤ boost_purchases: ${boostPurchases?.length || 0}`);
    if (boostPurchases?.length > 0) {
      boostPurchases.forEach((purchase, idx) => {
        console.log(`     ${idx + 1}. ID: ${purchase.id}, –ü–∞–∫–µ—Ç: ${purchase.package_id}, –°—Ç–∞—Ç—É—Å: ${purchase.status}, –î–∞—Ç–∞: ${purchase.created_at}`);
      });
    }
  }
  
  // –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ TON Boost
  const { data: purchaseTransactions, error: purchaseError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', userId)
    .or('description.ilike.%boost%,description.ilike.%–ø–æ–∫—É–ø–∫–∞%')
    .order('created_at', { ascending: false });
  
  if (purchaseError) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–∫—É–ø–∫–∏:', purchaseError.message);
  } else {
    console.log(`   ‚Ä¢ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–∫—É–ø–∫–∏ Boost: ${purchaseTransactions?.length || 0}`);
    if (purchaseTransactions?.length > 0) {
      purchaseTransactions.forEach((tx, idx) => {
        console.log(`     ${idx + 1}. ID: ${tx.id}, –°—É–º–º–∞: ${tx.amount} ${tx.currency}, –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}, –î–∞—Ç–∞: ${tx.created_at}`);
      });
    }
  }
  
  // 3. –ê–ù–ê–õ–ò–ó –ù–ê–ß–ò–°–õ–ï–ù–ò–ô –û–¢ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê
  console.log('\n‚è± 3. –ê–ù–ê–õ–ò–ó –ù–ê–ß–ò–°–õ–ï–ù–ò–ô –û–¢ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê:');
  
  const { data: boostIncomeTransactions, error: incomeError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', userId)
    .eq('currency', 'TON')
    .or('description.ilike.%TON Boost –¥–æ—Ö–æ–¥%,description.ilike.%boost income%')
    .order('created_at', { ascending: false })
    .limit(50);
  
  if (incomeError) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–æ—Ö–æ–¥–æ–≤:', incomeError.message);
  } else {
    console.log(`   ‚Ä¢ –í—Å–µ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π TON Boost: ${boostIncomeTransactions?.length || 0}`);
    
    if (boostIncomeTransactions?.length > 0) {
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–Ω—è–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
      const incomeByDay = {};
      let totalIncome = 0;
      
      boostIncomeTransactions.forEach(tx => {
        const date = new Date(tx.created_at).toISOString().split('T')[0];
        if (!incomeByDay[date]) incomeByDay[date] = [];
        incomeByDay[date].push(tx);
        totalIncome += parseFloat(tx.amount);
      });
      
      console.log(`   ‚Ä¢ –û–±—â–∞—è —Å—É–º–º–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π: ${totalIncome.toFixed(8)} TON`);
      console.log(`   ‚Ä¢ –ù–∞—á–∏—Å–ª–µ–Ω–∏—è –ø–æ –¥–Ω—è–º:`);
      
      Object.keys(incomeByDay).sort().reverse().forEach(date => {
        const dayIncome = incomeByDay[date];
        const dayTotal = dayIncome.reduce((sum, tx) => sum + parseFloat(tx.amount), 0);
        console.log(`     ${date}: ${dayIncome.length} –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π, ${dayTotal.toFixed(6)} TON`);
      });
      
      // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π
      console.log(`   ‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π:`);
      boostIncomeTransactions.slice(0, 10).forEach((tx, idx) => {
        const time = new Date(tx.created_at).toLocaleString('ru-RU');
        console.log(`     ${idx + 1}. ${tx.amount} TON | ${time} | ${tx.description}`);
      });
    }
  }
  
  // 4. –ê–ù–ê–õ–ò–ó –ò–ù–¢–ï–†–í–ê–õ–û–í –ù–ê–ß–ò–°–õ–ï–ù–ò–ô
  console.log('\nüìà 4. –ê–ù–ê–õ–ò–ó –ò–ù–¢–ï–†–í–ê–õ–û–í –ù–ê–ß–ò–°–õ–ï–ù–ò–ô:');
  
  if (boostIncomeTransactions?.length >= 2) {
    const intervals = [];
    for (let i = 0; i < Math.min(10, boostIncomeTransactions.length - 1); i++) {
      const current = new Date(boostIncomeTransactions[i].created_at);
      const next = new Date(boostIncomeTransactions[i + 1].created_at);
      const intervalMinutes = (current - next) / (1000 * 60);
      intervals.push(intervalMinutes);
    }
    
    const avgInterval = intervals.reduce((sum, int) => sum + int, 0) / intervals.length;
    console.log(`   ‚Ä¢ –°—Ä–µ–¥–Ω–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è–º–∏: ${avgInterval.toFixed(1)} –º–∏–Ω—É—Ç`);
    console.log(`   ‚Ä¢ –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π: ${intervals.slice(0, 5).map(i => i.toFixed(1)).join(', ')} –º–∏–Ω—É—Ç`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç
    const now = new Date();
    const recentTransactions = boostIncomeTransactions.filter(tx => {
      const txTime = new Date(tx.created_at);
      return (now - txTime) / (1000 * 60) <= 10;
    });
    
    console.log(`   ‚Ä¢ –ù–∞—á–∏—Å–ª–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç: ${recentTransactions.length}`);
    if (recentTransactions.length > 0) {
      console.log(`     –ü–æ—Å–ª–µ–¥–Ω–µ–µ: ${recentTransactions[0].amount} TON | ${new Date(recentTransactions[0].created_at).toLocaleString('ru-RU')}`);
    }
  }
  
  // 5. –†–ê–°–ß–ï–¢–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –î–û–•–û–î–ù–û–°–¢–ò
  console.log('\nüßÆ 5. –†–ê–°–ß–ï–¢–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –î–û–•–û–î–ù–û–°–¢–ò:');
  
  if (user.ton_boost_package && user.ton_boost_rate && user.balance_ton) {
    const currentBalance = parseFloat(user.balance_ton);
    const deposit = Math.max(0, currentBalance - 10);
    const dailyRate = user.ton_boost_rate;
    const dailyIncome = deposit * dailyRate;
    const fiveMinIncome = dailyIncome / 288;
    const hourlyIncome = dailyIncome / 24;
    
    console.log(`   ‚Ä¢ –¢–µ–∫—É—â–∏–π –¥–µ–ø–æ–∑–∏—Ç: ${deposit} TON (–±–∞–ª–∞–Ω—Å ${currentBalance} - —Ä–µ–∑–µ—Ä–≤ 10)`);
    console.log(`   ‚Ä¢ –î–Ω–µ–≤–Ω–∞—è —Å—Ç–∞–≤–∫–∞: ${(dailyRate * 100).toFixed(1)}%`);
    console.log(`   ‚Ä¢ –û–∂–∏–¥–∞–µ–º—ã–π –¥–Ω–µ–≤–Ω–æ–π –¥–æ—Ö–æ–¥: ${dailyIncome.toFixed(6)} TON`);
    console.log(`   ‚Ä¢ –û–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥ –∑–∞ 5 –º–∏–Ω—É—Ç: ${fiveMinIncome.toFixed(8)} TON`);
    console.log(`   ‚Ä¢ –û–∂–∏–¥–∞–µ–º—ã–π —á–∞—Å–æ–≤–æ–π –¥–æ—Ö–æ–¥: ${hourlyIncome.toFixed(6)} TON`);
    
    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è–º–∏
    if (boostIncomeTransactions?.length > 0) {
      const lastHourTransactions = boostIncomeTransactions.filter(tx => {
        const txTime = new Date(tx.created_at);
        return (now - txTime) / (1000 * 60 * 60) <= 1;
      });
      
      if (lastHourTransactions.length > 0) {
        const actualHourlyIncome = lastHourTransactions.reduce((sum, tx) => sum + parseFloat(tx.amount), 0);
        const deviation = Math.abs(actualHourlyIncome - hourlyIncome) / hourlyIncome * 100;
        
        console.log(`   ‚Ä¢ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –¥–æ—Ö–æ–¥ –∑–∞ —á–∞—Å: ${actualHourlyIncome.toFixed(6)} TON`);
        console.log(`   ‚Ä¢ –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ: ${deviation.toFixed(1)}%`);
      }
    }
  }
  
  // 6. –ü–†–û–í–ï–†–ö–ê –û–ë–©–ò–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô TON
  console.log('\nüí∞ 6. –û–ë–©–ò–ô –ê–ù–ê–õ–ò–ó –¢–†–ê–ù–ó–ê–ö–¶–ò–ô TON:');
  
  const { data: allTonTransactions, error: allTonError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', userId)
    .eq('currency', 'TON')
    .order('created_at', { ascending: false })
    .limit(100);
  
  if (allTonError) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', allTonError.message);
  } else {
    console.log(`   ‚Ä¢ –í—Å–µ–≥–æ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${allTonTransactions?.length || 0}`);
    
    if (allTonTransactions?.length > 0) {
      // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ç–∏–ø–∞–º
      const transactionTypes = {};
      let totalIncome = 0;
      let totalOutcome = 0;
      
      allTonTransactions.forEach(tx => {
        const amount = parseFloat(tx.amount);
        const description = tx.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è';
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        let type = '–î—Ä—É–≥–æ–µ';
        if (description.includes('TON Boost –¥–æ—Ö–æ–¥')) type = 'TON Boost –¥–æ—Ö–æ–¥';
        else if (description.includes('–ø–æ–∫—É–ø–∫–∞') || description.includes('purchase')) type = '–ü–æ–∫—É–ø–∫–∞';
        else if (description.includes('–¥–µ–ø–æ–∑–∏—Ç') || description.includes('deposit')) type = '–î–µ–ø–æ–∑–∏—Ç';
        else if (description.includes('withdraw') || description.includes('–≤—ã–≤–æ–¥')) type = '–í—ã–≤–æ–¥';
        
        if (!transactionTypes[type]) transactionTypes[type] = { count: 0, sum: 0 };
        transactionTypes[type].count++;
        transactionTypes[type].sum += amount;
        
        if (amount > 0) totalIncome += amount;
        else totalOutcome += Math.abs(amount);
      });
      
      console.log(`   ‚Ä¢ –¢–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:`);
      Object.keys(transactionTypes).forEach(type => {
        const data = transactionTypes[type];
        console.log(`     ${type}: ${data.count} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, ${data.sum.toFixed(6)} TON`);
      });
      
      console.log(`   ‚Ä¢ –û–±—â–∏–π –ø—Ä–∏—Ö–æ–¥: ${totalIncome.toFixed(6)} TON`);
      console.log(`   ‚Ä¢ –û–±—â–∏–π —Ä–∞—Å—Ö–æ–¥: ${totalOutcome.toFixed(6)} TON`);
      console.log(`   ‚Ä¢ –ë–∞–ª–∞–Ω—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${(totalIncome - totalOutcome).toFixed(6)} TON`);
    }
  }
  
  // 7. –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–í–û–î–ö–ê
  console.log('\nüìã 7. –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–í–û–î–ö–ê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');
  
  const summary = {
    currentBalance: user.balance_ton,
    activePackage: user.ton_boost_package,
    boostRate: user.ton_boost_rate,
    totalBoostTransactions: boostIncomeTransactions?.length || 0,
    totalTonTransactions: allTonTransactions?.length || 0,
    systemStatus: 'unknown'
  };
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
  if (user.ton_boost_package && user.ton_boost_rate > 0) {
    if (boostIncomeTransactions?.length > 0) {
      const lastIncomeTime = new Date(boostIncomeTransactions[0].created_at);
      const minutesSinceLastIncome = (now - lastIncomeTime) / (1000 * 60);
      
      if (minutesSinceLastIncome <= 10) {
        summary.systemStatus = 'üü¢ –†–ê–ë–û–¢–ê–ï–¢ (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ < 10 –º–∏–Ω –Ω–∞–∑–∞–¥)';
      } else if (minutesSinceLastIncome <= 30) {
        summary.systemStatus = 'üü° –ó–ê–î–ï–†–ñ–ö–ê (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ ' + minutesSinceLastIncome.toFixed(0) + ' –º–∏–Ω –Ω–∞–∑–∞–¥)';
      } else {
        summary.systemStatus = 'üî¥ –ù–ï –†–ê–ë–û–¢–ê–ï–¢ (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ > 30 –º–∏–Ω –Ω–∞–∑–∞–¥)';
      }
    } else {
      summary.systemStatus = 'üî¥ –ù–ï –†–ê–ë–û–¢–ê–ï–¢ (–Ω–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π)';
    }
  } else {
    summary.systemStatus = '‚ö™ –ù–ï –ê–ö–¢–ò–í–ò–†–û–í–ê–ù';
  }
  
  console.log(`   ‚Ä¢ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${summary.currentBalance} TON`);
  console.log(`   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–π –ø–∞–∫–µ—Ç: ${summary.activePackage || '–Ω–µ—Ç'}`);
  console.log(`   ‚Ä¢ –°—Ç–∞–≤–∫–∞: ${(summary.boostRate * 100).toFixed(1)}%`);
  console.log(`   ‚Ä¢ –ù–∞—á–∏—Å–ª–µ–Ω–∏–π TON Boost: ${summary.totalBoostTransactions}`);
  console.log(`   ‚Ä¢ –í—Å–µ–≥–æ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${summary.totalTonTransactions}`);
  console.log(`   ‚Ä¢ –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: ${summary.systemStatus}`);
  
  console.log('\n' + '=' * 60);
  console.log('üéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
}

comprehensiveTonBoostAudit().catch(console.error);