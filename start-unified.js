/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è UniFarm
 * –†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ç–∞–∫ –∏ –≤ production-—Å—Ä–µ–¥–µ Replit
 */

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º
const isProd = process.env.NODE_ENV === 'production';
const port = process.env.PORT || (isProd ? '8080' : '3000');

console.log(`üöÄ –ó–∞–ø—É—Å–∫ UniFarm –≤ ${isProd ? 'production' : 'development'} —Ä–µ–∂–∏–º–µ –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);

// –í —Ä–µ–∂–∏–º–µ production –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
if (isProd) {
  console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º production-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è production
  process.env.PORT = port;
  
  try {
    console.log('üîÑ –ó–∞–ø—É—Å–∫ production-—Å–µ—Ä–≤–µ—Ä–∞...');
    require('./production-server.js');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ production-—Å–µ—Ä–≤–µ—Ä–∞:', error);
    
    // –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø–∞—Å–Ω–æ–π –º–µ—Ö–∞–Ω–∏–∑–º
    console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø–∞—Å–Ω–æ–π –º–µ—Ö–∞–Ω–∏–∑–º...');
    try {
      const { spawn } = require('child_process');
      const server = spawn('node', ['production-server.js'], {
        stdio: 'inherit',
        env: { ...process.env }
      });
      
      server.on('error', (err) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∑–∞–ø–∞—Å–Ω–æ–≥–æ –º–µ—Ö–∞–Ω–∏–∑–º–∞:', err);
        process.exit(1);
      });
    } catch (err) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err);
      process.exit(1);
    }
  }
} else {
  // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
  console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
  
  try {
    require('./server');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:', error);
    process.exit(1);
  }
}