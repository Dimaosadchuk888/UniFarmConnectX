#!/usr/bin/env node

/**
 * Unified entry point for production deployment
 * –ó–∞–ø—É—Å–∫–∞—î —Å–µ—Ä–≤–µ—Ä –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º –¥–æ –≤–∞—à–æ—ó production –±–∞–∑–∏ ep-lucky-boat-a463bggt
 */

const { spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ [UNIFIED START] –ó–∞–ø—É—Å–∫ UniFarm production —Å–µ—Ä–≤–µ—Ä–∞...');

// –°–ò–°–¢–ï–ú–ù–û–ï –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê –ü–†–ê–í–ò–õ–¨–ù–£–Æ –ë–ê–ó–£
process.env.NODE_ENV = 'production';
process.env.DATABASE_URL = 'postgresql://neondb_owner:npg_SpgdNBV70WKl@ep-lucky-boat-a463bggt-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require';
process.env.PGHOST = 'ep-lucky-boat-a463bggt-pooler.us-east-1.aws.neon.tech';
process.env.PGUSER = 'neondb_owner';
process.env.PGPASSWORD = 'npg_SpgdNBV70WKl';
process.env.PGDATABASE = 'neondb';
process.env.PGPORT = '5432';
process.env.DATABASE_PROVIDER = 'neon';
process.env.FORCE_NEON_DB = 'true';
process.env.DISABLE_REPLIT_DB = 'true';
process.env.OVERRIDE_DB_PROVIDER = 'neon';
process.env.SKIP_PARTITION_CREATION = 'true';

// –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—å —â–æ –ø–æ—Ä—Ç –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π
if (!process.env.PORT) {
  process.env.PORT = '3000';
}

console.log('‚úÖ [UNIFIED START] Production –∑–º—ñ–Ω–Ω—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ');
console.log('üéØ [UNIFIED START] –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Neon DB:', process.env.FORCE_NEON_DB);
console.log('üì° [UNIFIED START] –ü–æ—Ä—Ç:', process.env.PORT);

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
const isProduction = process.env.NODE_ENV === 'production';
const port = process.env.PORT || 3000;

console.log(`üöÄ –ó–∞–ø—É—Å–∫ UniFarm –≤ ${isProduction ? 'production' : 'development'} —Ä–µ–∂–∏–º–µ –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);

let startCommand, startArgs;

if (isProduction) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
  const distIndexPath = path.join(__dirname, 'dist', 'index.js');

  if (fs.existsSync(distIndexPath)) {
    console.log('‚úÖ [UNIFIED START] –ù–∞–π–¥–µ–Ω —Å–æ–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª, –∑–∞–ø—É—Å–∫–∞–µ–º production –≤–µ—Ä—Å–∏—é');
    startCommand = 'node';
    startArgs = ['dist/index.js'];
  } else {
    console.log('‚ö†Ô∏è [UNIFIED START] –°–æ–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ tsx');
    startCommand = 'tsx';
    startArgs = ['server/index.ts'];
  }
} else {
  console.log('üîß [UNIFIED START] Development —Ä–µ–∂–∏–º, –∑–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ tsx');
  startCommand = 'tsx';
  startArgs = ['server/index.ts'];
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
console.log(`üî• [UNIFIED START] –í—ã–ø–æ–ª–Ω—è—é –∫–æ–º–∞–Ω–¥—É: ${startCommand} ${startArgs.join(' ')}`);

const child = spawn(startCommand, startArgs, {
  stdio: 'inherit',
  env: process.env
});

child.on('error', (error) => {
  console.error('‚ùå [UNIFIED START] –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', error);
  process.exit(1);
});

child.on('exit', (code) => {
  console.log(`üìõ [UNIFIED START] –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º ${code}`);
  process.exit(code);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
  console.log('üõë [UNIFIED START] –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
  child.kill('SIGINT');
});

process.on('SIGTERM', () => {
  console.log('üõë [UNIFIED START] –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
  child.kill('SIGTERM');
});