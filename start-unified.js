// @ts-check
// @ts-nocheck
// @ts-ignore

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è UniFarm
 * –†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ç–∞–∫ –∏ –≤ production-—Å—Ä–µ–¥–µ Replit
 * –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ ESM —Å—Ä–µ–¥–µ (package.json type: module)
 * 
 * @format
 * @type {module}
 * @packageDocumentation
 */

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º
const isProd = process.env.NODE_ENV === 'production';
// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç 3000 –¥–∞–∂–µ –≤ production —Ä–µ–∂–∏–º–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Replit
const port = process.env.PORT || '3000';

console.log(`üöÄ –ó–∞–ø—É—Å–∫ UniFarm –≤ ${isProd ? 'production' : 'development'} —Ä–µ–∂–∏–º–µ –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);

// –í —Ä–µ–∂–∏–º–µ production –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
if (isProd) {
  console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º production-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è production
  process.env.PORT = port;
  
  try {
    console.log('üîÑ –ó–∞–ø—É—Å–∫ production-—Å–µ—Ä–≤–µ—Ä–∞...');
    
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –¥–ª—è ES –º–æ–¥—É–ª–µ–π
    const childProcess = await import('child_process');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ—á–µ—Ä–Ω–∏–π –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ ESM –º–æ–¥—É–ª—è
    const server = childProcess.spawn('node', ['production-server.mjs'], {
      stdio: 'inherit',
      env: { ...process.env }
    });
    
    server.on('error', async (err) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ production-—Å–µ—Ä–≤–µ—Ä–∞:', err);
      
      // –ü—Ä–æ–±—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —Å .js —Ñ–∞–π–ª–æ–º
      console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø–∞—Å–Ω–æ–π –º–µ—Ö–∞–Ω–∏–∑–º...');
      try {
        const fallbackServer = childProcess.spawn('node', ['production-server.js'], {
          stdio: 'inherit',
          env: { ...process.env }
        });
        
        fallbackServer.on('error', (fallbackErr) => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∑–∞–ø–∞—Å–Ω–æ–≥–æ –º–µ—Ö–∞–Ω–∏–∑–º–∞:', fallbackErr);
          process.exit(1);
        });
      } catch (fallbackErr) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', fallbackErr);
        process.exit(1);
      }
    });
  } catch (err) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err);
    process.exit(1);
  }
} else {
  // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
  console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –¥–ª—è ESM
    import('./server/index.ts').catch(err => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ ./server/index.ts:', err);
      
      // –ü—Ä–æ–±—É–µ–º fallback
      import('./server/index.js').catch(err2 => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ ./server/index.js:', err2);
        
        // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –ø—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ –∏–∑ dist
        import('./dist/index.js').catch(err3 => {
          console.error('‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ ./server –Ω–µ—É–¥–∞—á–Ω—ã:', err3);
          process.exit(1);
        });
      });
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:', error);
    process.exit(1);
  }
}