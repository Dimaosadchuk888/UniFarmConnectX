/**
 * –ë–´–°–¢–†–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TON –î–ï–ü–û–ó–ò–¢–û–í
 * –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è TON –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤
 */

console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TON –î–ï–ü–û–ó–ò–¢–û–í –°–û–ì–õ–ê–°–ù–û –¢–ó');
console.log('=' .repeat(50));

// –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ë–î
function analyzeCodeStructure() {
  console.log('\n1Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ö–û–î–ê processTonDeposit()');
  
  try {
    const fs = require('fs');
    const walletServiceCode = fs.readFileSync('./modules/wallet/service.ts', 'utf8');
    
    console.log('   ‚úÖ –§–∞–π–ª modules/wallet/service.ts –Ω–∞–π–¥–µ–Ω');
    
    // –ò—â–µ–º –º–µ—Ç–æ–¥ processTonDeposit
    if (walletServiceCode.includes('processTonDeposit')) {
      console.log('   ‚úÖ –ú–µ—Ç–æ–¥ processTonDeposit() –Ω–∞–π–¥–µ–Ω');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ BalanceManager
      if (walletServiceCode.includes('BalanceManager')) {
        console.log('   ‚úÖ BalanceManager –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
        if (walletServiceCode.includes('addBalance')) {
          console.log('   ‚úÖ –ú–µ—Ç–æ–¥ addBalance() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è');
        } else {
          console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: addBalance() –ù–ï –ò–°–ü–û–õ–¨–ó–£–ï–¢–°–Ø –≤ processTonDeposit()');
        }
      } else {
        console.log('   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: BalanceManager –ù–ï –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
      if (walletServiceCode.includes('update({ balance_ton:')) {
        console.log('   ‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–û: –ü—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ balance_ton –≤ Supabase');
        console.log('   ‚ùì –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –æ–±—Ö–æ–¥ BalanceManager');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      if (walletServiceCode.includes("type: 'DEPOSIT'") || walletServiceCode.includes('TON_DEPOSIT')) {
        console.log('   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ');
      } else {
        console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è');
      }
      
    } else {
      console.log('   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ú–µ—Ç–æ–¥ processTonDeposit() –ù–ï –ù–ê–ô–î–ï–ù');
    }
    
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', error.message);
  }
}

function analyzeFrontendIntegration() {
  console.log('\n2Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –§–†–û–ù–¢–ï–ù–î –ò–ù–¢–ï–ì–†–ê–¶–ò–ò');
  
  try {
    const fs = require('fs');
    const tonConnectCode = fs.readFileSync('./client/src/services/tonConnectService.ts', 'utf8');
    
    console.log('   ‚úÖ –§–∞–π–ª tonConnectService.ts –Ω–∞–π–¥–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–∑–æ–≤ backend API
    if (tonConnectCode.includes('/api/v2/wallet/ton-deposit')) {
      console.log('   ‚úÖ Frontend –≤—ã–∑—ã–≤–∞–µ—Ç /api/v2/wallet/ton-deposit');
      
      if (tonConnectCode.includes('correctApiRequest')) {
        console.log('   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è correctApiRequest –¥–ª—è backend');
      } else {
        console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: correctApiRequest –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–¥–∞—á—É –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
      if (tonConnectCode.includes('ton_tx_hash') && tonConnectCode.includes('amount')) {
        console.log('   ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã ton_tx_hash –∏ amount –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è');
      } else {
        console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ backend');
      }
      
    } else {
      console.log('   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: Frontend –ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç backend API');
      console.log('   ‚ùì –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
    }
    
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è frontend —Ñ–∞–π–ª–∞:', error.message);
  }
}

function analyzeControllerRouting() {
  console.log('\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ö–û–ù–¢–†–û–õ–õ–ï–†–ê –ò –†–û–£–¢–ò–ù–ì–ê');
  
  try {
    const fs = require('fs');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
    const controllerCode = fs.readFileSync('./modules/wallet/controller.ts', 'utf8');
    console.log('   ‚úÖ –§–∞–π–ª wallet/controller.ts –Ω–∞–π–¥–µ–Ω');
    
    if (controllerCode.includes('tonDeposit')) {
      console.log('   ‚úÖ –ú–µ—Ç–æ–¥ tonDeposit() –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ –Ω–∞–π–¥–µ–Ω');
      
      if (controllerCode.includes('walletService.processTonDeposit')) {
        console.log('   ‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤—ã–∑—ã–≤–∞–µ—Ç walletService.processTonDeposit()');
      } else {
        console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç processTonDeposit()');
      }
      
    } else {
      console.log('   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ú–µ—Ç–æ–¥ tonDeposit() –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ—É—Ç—ã
    const routesCode = fs.readFileSync('./modules/wallet/routes.ts', 'utf8');
    console.log('   ‚úÖ –§–∞–π–ª wallet/routes.ts –Ω–∞–π–¥–µ–Ω');
    
    if (routesCode.includes('ton-deposit')) {
      console.log('   ‚úÖ –†–æ—É—Ç /ton-deposit –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    } else {
      console.log('   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –†–æ—É—Ç /ton-deposit –ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
    
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞:', error.message);
  }
}

function analyzeBalanceManager() {
  console.log('\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó BALANCEMANAGER');
  
  try {
    const fs = require('fs');
    const balanceManagerCode = fs.readFileSync('./core/BalanceManager.ts', 'utf8');
    
    console.log('   ‚úÖ –§–∞–π–ª BalanceManager.ts –Ω–∞–π–¥–µ–Ω');
    
    if (balanceManagerCode.includes('addBalance')) {
      console.log('   ‚úÖ –ú–µ—Ç–æ–¥ addBalance() —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      
      if (balanceManagerCode.includes('updateUserBalance')) {
        console.log('   ‚úÖ –ú–µ—Ç–æ–¥ updateUserBalance() —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      }
      
      if (balanceManagerCode.includes('balance_ton')) {
        console.log('   ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ TON –±–∞–ª–∞–Ω—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      if (balanceManagerCode.includes('onBalanceUpdate') || balanceManagerCode.includes('notifyBalanceUpdate')) {
        console.log('   ‚úÖ WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
      } else {
        console.log('   ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å');
      }
      
    } else {
      console.log('   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ú–µ—Ç–æ–¥ addBalance() –ù–ï –Ω–∞–π–¥–µ–Ω');
    }
    
  } catch (error) {
    console.log('   ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ BalanceManager:', error.message);
  }
}

function provideDiagnosisConclusion() {
  console.log('\n' + '='.repeat(50));
  console.log('üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ü–û –î–ò–ê–ì–ù–û–°–¢–ò–ö–ï:');
  console.log('\nüìã –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ü–†–û–ë–õ–ï–ú–´:');
  console.log('   1. Frontend –ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç backend API –ø–æ—Å–ª–µ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
  console.log('   2. processTonDeposit() –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç BalanceManager.addBalance()');
  console.log('   3. –ü—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î –º–∏–Ω—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
  console.log('   4. –†–æ—É—Ç /api/v2/wallet/ton-deposit –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
  console.log('   5. WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç');
  
  console.log('\nüîß –ü–õ–ê–ù –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:');
  console.log('   1. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ Frontend –≤—ã–∑—ã–≤–∞–µ—Ç /api/v2/wallet/ton-deposit');
  console.log('   2. –ó–∞–º–µ–Ω–∏—Ç—å –ø—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î –Ω–∞ BalanceManager.addBalance()');
  console.log('   3. –î–æ–±–∞–≤–∏—Ç—å WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞');
  console.log('   4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É: TON Connect ‚Üí Backend ‚Üí Database ‚Üí UI');
  
  console.log('\n‚ö†Ô∏è –¢–ï–°–¢–û–í–ê–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø:');
  console.log('   Hash: 00a1ba3c2614f4d65cc346805feea960');
  console.log('   –°—Ç–∞—Ç—É—Å: –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –∏—Å—Ç–æ—Ä–∏–∏, –Ω–æ –±–∞–ª–∞–Ω—Å –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è');
  console.log('   –≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —á–∞—Å—Ç–∏—á–Ω—É—é —Ä–∞–±–æ—Ç—É processTonDeposit()');
  
  console.log('='.repeat(50));
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
analyzeCodeStructure();
analyzeFrontendIntegration();
analyzeControllerRouting();
analyzeBalanceManager();
provideDiagnosisConclusion();