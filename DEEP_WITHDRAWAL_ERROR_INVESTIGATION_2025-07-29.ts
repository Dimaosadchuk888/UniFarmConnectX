/**
 * –£–ì–õ–£–ë–õ–ï–ù–ù–û–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï: –ü–æ—á–µ–º—É withdrawal –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç "–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"
 * 
 * –¶–µ–ª—å: –ù–∞–π—Ç–∏ –¢–û–ß–ù–£–Æ —Ü–µ–ø–æ—á–∫—É —Å–æ–±—ã—Ç–∏–π –æ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –¥–æ –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏
 * –ó–∞–¥–∞—á–∞: –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ—à–∏–±–∫—É –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ–ª–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */

console.log('üîç –ù–ê–ß–ò–ù–ê–ï–ú –£–ì–õ–£–ë–õ–ï–ù–ù–û–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï WITHDRAWAL –û–®–ò–ë–ö–ò...');

const INVESTIGATION_ID = `investigation-${Date.now()}`;
console.log(`üìã ID –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: ${INVESTIGATION_ID}`);

// 1. –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï JWT –¢–û–ö–ï–ù–û–í
async function investigateJWTState() {
  console.log('\nüì± 1. –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï JWT –°–û–°–¢–û–Ø–ù–ò–Ø...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ localStorage
    console.log('üîë –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage...');
    console.log('Keys –≤ localStorage:', Object.keys(localStorage));
    
    const jwtToken = localStorage.getItem('jwt_token');
    const telegramData = localStorage.getItem('telegram_initData');
    
    console.log('JWT Token exists:', !!jwtToken);
    console.log('JWT Token length:', jwtToken?.length || 'N/A');
    console.log('Telegram initData exists:', !!telegramData);
    console.log('Telegram initData length:', telegramData?.length || 'N/A');
    
    if (jwtToken) {
      // –ü—ã—Ç–∞–µ–º—Å—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å JWT –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏
      try {
        const payload = JSON.parse(atob(jwtToken.split('.')[1]));
        console.log('JWT Payload decoded:', {
          user_id: payload.user_id,
          telegram_id: payload.telegram_id,
          exp: payload.exp,
          iat: payload.iat,
          isExpired: Date.now() / 1000 > payload.exp
        });
      } catch (decodeError) {
        console.log('‚ùå JWT –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—É–¥–∞—á–Ω–æ:', decodeError);
      }
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è JWT:', error);
  }
}

// 2. –¢–ï–°–¢–ò–†–£–ï–ú –†–ï–ê–õ–¨–ù–´–ô WITHDRAWAL REQUEST –° –ü–û–õ–ù–´–ú –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú
async function simulateRealWithdrawalFlow() {
  console.log('\nüí∏ 2. –°–ò–ú–£–õ–Ø–¶–ò–Ø –†–ï–ê–õ–¨–ù–û–ì–û WITHDRAWAL –ó–ê–ü–†–û–°–ê...');
  
  try {
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ —Ñ–æ—Ä–º–µ
    const testWithdrawalData = {
      user_id: 184, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      amount: "1",  // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ TON
      currency: "TON",
      wallet_address: "UQTestDiagnosticAddress2025-07-29_" + Date.now().toString(36)
    };
    
    console.log('üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', testWithdrawalData);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö
    const jwtToken = localStorage.getItem('jwt_token');
    const headers = {
      'Content-Type': 'application/json',
      ...(jwtToken && { 'Authorization': `Bearer ${jwtToken}` })
    };
    
    console.log('üì§ Headers –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞:', {
      'Content-Type': headers['Content-Type'],
      'Authorization': headers.Authorization ? `Bearer ${jwtToken?.slice(0, 20)}...` : 'NOT SET'
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ª–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —ç—Ç–∞–ø
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º withdrawal –∑–∞–ø—Ä–æ—Å...');
    
    const startTime = Date.now();
    let response;
    let errorCaught = null;
    
    try {
      response = await fetch('/api/v2/wallet/withdraw', {
        method: 'POST',
        headers: headers,
        body: JSON.stringify(testWithdrawalData)
      });
      
      const requestTime = Date.now() - startTime;
      console.log(`‚è±Ô∏è –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${requestTime}ms`);
      console.log('üì® Response status:', response.status);
      console.log('üì® Response statusText:', response.statusText);
      console.log('üì® Response headers:', Object.fromEntries(response.headers.entries()));
      
    } catch (fetchError) {
      errorCaught = fetchError;
      console.log('‚ùå Fetch error –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω:', {
        name: fetchError.name,
        message: fetchError.message,
        type: typeof fetchError,
        constructor: fetchError.constructor.name
      });
    }
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫—É
    if (response) {
      try {
        const responseText = await response.text();
        console.log('üìÑ Raw response text:', responseText);
        
        let responseData;
        try {
          responseData = JSON.parse(responseText);
          console.log('üìä Parsed response data:', responseData);
        } catch (parseError) {
          console.log('‚ùå JSON parse failed:', parseError);
          console.log('üìÑ Response –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON:', responseText.slice(0, 200));
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞
        if (response.status === 401) {
          console.log('üîê –ù–ê–ô–î–ï–ù 401 AUTHENTICATION ERROR!');
          console.log('üí° –≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Ç–µ–æ—Ä–∏—é –æ–± auth failure');
          
          if (responseData?.need_jwt_token) {
            console.log('‚úÖ Backend –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç need_jwt_token:', responseData.need_jwt_token);
          }
        }
        
      } catch (responseError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ response:', responseError);
      }
    }
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –ª–æ–≥–∏–∫—É correctApiRequest
    console.log('\nüîÑ –í–û–°–ü–†–û–ò–ó–í–û–î–ò–ú –õ–û–ì–ò–ö–£ correctApiRequest...');
    
    if (errorCaught) {
      console.log('üéØ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω—É—é –æ—à–∏–±–∫—É...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è network error
      const isTypeError = errorCaught instanceof Error && errorCaught.name === 'TypeError';
      const includesFetch = errorCaught.message && errorCaught.message.includes('fetch');
      
      console.log('‚ùì –£—Å–ª–æ–≤–∏—è network error check:');
      console.log('  - errorCaught instanceof Error:', errorCaught instanceof Error);
      console.log('  - errorCaught.name === "TypeError":', errorCaught.name === 'TypeError');
      console.log('  - message.includes("fetch"):', includesFetch);
      console.log('  - –ò—Ç–æ–≥–æ–≤–æ–µ —É—Å–ª–æ–≤–∏–µ (isTypeError && includesFetch):', isTypeError && includesFetch);
      
      if (isTypeError && includesFetch) {
        console.log('üö® –ù–ê–ô–î–ï–ù–ê –ü–†–ò–ß–ò–ù–ê: –û—à–∏–±–∫–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∞ –∫–∞–∫ "network error"!');
        console.log('üí° –ò–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"');
      }
    }
    
  } catch (investigationError) {
    console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:', investigationError);
  }
}

// 3. –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ê–õ–¨–ù–´–ï –õ–û–ì–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –í –ö–û–ù–°–û–õ–ò
async function checkUserConsoleErrors() {
  console.log('\nüñ•Ô∏è 3. –ü–†–û–í–ï–†–Ø–ï–ú –õ–û–ì–ò FRONTEND –ö–û–ù–°–û–õ–ò...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
  const consoleErrors = [];
  const originalConsoleError = console.error;
  
  console.error = function(...args) {
    consoleErrors.push({
      timestamp: new Date().toISOString(),
      args: args
    });
    originalConsoleError.apply(console, args);
  };
  
  // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ—à–∏–±–∫–∏ –≤ –ø–∞–º—è—Ç–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
  console.log('üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Å–æ–ª–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ');
  console.log('üîç –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –æ—à–∏–±–æ–∫ –≤–∫–ª—é—á–µ–Ω–æ');
  
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π console.error —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    console.error = originalConsoleError;
    console.log('üìã –°–æ–±—Ä–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –∫–æ–Ω—Å–æ–ª–∏ –∑–∞ –≤—Ä–µ–º—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:', consoleErrors);
  }, 5000);
}

// 4. –ü–†–û–í–ï–†–Ø–ï–ú API ENDPOINT –ù–ê–ü–†–Ø–ú–£–Æ
async function testAPIEndpointDirectly() {
  console.log('\nüåê 4. –ü–†–Ø–ú–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API ENDPOINT...');
  
  try {
    // –¢–µ—Å—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    console.log('üö´ –¢–µ—Å—Ç 1: –ë–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    const noAuthResponse = await fetch('/api/v2/wallet/withdraw', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        user_id: 184,
        amount: "1",
        currency: "TON",
        wallet_address: "UQTestNoAuth" + Date.now()
      })
    });
    
    const noAuthText = await noAuthResponse.text();
    console.log('üìä No auth result:', {
      status: noAuthResponse.status,
      statusText: noAuthResponse.statusText,
      body: noAuthText
    });
    
    // –¢–µ—Å—Ç —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π (–µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å)
    const jwtToken = localStorage.getItem('jwt_token');
    if (jwtToken) {
      console.log('üîë –¢–µ—Å—Ç 2: –° JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...');
      const authResponse = await fetch('/api/v2/wallet/withdraw', {
        method: 'POST',
        headers: { 
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${jwtToken}`
        },
        body: JSON.stringify({
          user_id: 184,
          amount: "1",
          currency: "TON",
          wallet_address: "UQTestWithAuth" + Date.now()
        })
      });
      
      const authText = await authResponse.text();
      console.log('üìä Auth result:', {
        status: authResponse.status,
        statusText: authResponse.statusText,
        body: authText.slice(0, 200)
      });
    }
    
  } catch (apiError) {
    console.log('‚ùå API endpoint test error:', apiError);
  }
}

// 5. –ê–ù–ê–õ–ò–ó–ò–†–£–ï–ú –†–ï–ê–õ–¨–ù–£–Æ –¶–ï–ü–û–ß–ö–£ –í–´–ó–û–í–û–í
async function analyzeCallChain() {
  console.log('\nüîó 5. –ê–ù–ê–õ–ò–ó –¶–ï–ü–û–ß–ö–ò –í–´–ó–û–í–û–í...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ UserContext
    console.log('üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ UserContext...');
    
    // –≠—Ç–æ—Ç –∫–æ–¥ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –±—Ä–∞—É–∑–µ—Ä–∞, –≥–¥–µ –¥–æ—Å—Ç—É–ø–µ–Ω window
    if (typeof window !== 'undefined' && window.React) {
      console.log('‚öõÔ∏è React –¥–æ—Å—Ç—É–ø–µ–Ω –≤ window');
      
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ context —á–µ—Ä–µ–∑ DevTools
      const rootElement = document.getElementById('root');
      if (rootElement) {
        console.log('üéØ Root element –Ω–∞–π–¥–µ–Ω');
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Network tab –≤ DevTools –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    console.log('üåê –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Network tab –≤ DevTools');
    console.log('üîç –ò—â–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –∫ /api/v2/wallet/withdraw');
    console.log('üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∫–æ–¥—ã –∏ response headers');
    
  } catch (contextError) {
    console.log('‚ùå Context analysis error:', contextError);
  }
}

// –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø
async function runDeepInvestigation() {
  console.log(`\nüéØ –ó–ê–ü–£–°–ö –£–ì–õ–£–ë–õ–ï–ù–ù–û–ì–û –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø ${INVESTIGATION_ID}`);
  console.log('=' .repeat(80));
  
  await investigateJWTState();
  await simulateRealWithdrawalFlow();
  await checkUserConsoleErrors();
  await testAPIEndpointDirectly();
  await analyzeCallChain();
  
  console.log('\n' + '='.repeat(80));
  console.log(`‚úÖ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï ${INVESTIGATION_ID} –ó–ê–í–ï–†–®–ï–ù–û`);
  console.log('üìã –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–≤–µ–¥–µ–Ω—ã –≤—ã—à–µ');
  console.log('üéØ –§–æ–∫—É—Å: –ù–∞–π—Ç–∏ —Ç–æ—á–Ω—ã–π –º–æ–º–µ–Ω—Ç –≥–¥–µ 401 auth error —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è network error');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
runDeepInvestigation().catch(error => {
  console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø:', error);
});