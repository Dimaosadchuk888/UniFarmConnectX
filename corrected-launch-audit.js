/**
 * –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É—é—â–∏–π –∞—É–¥–∏—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

import fetch from 'node-fetch';

async function correctiveAudit() {
  console.log('üîç –ö–û–†–†–ï–ö–¢–ò–†–£–Æ–©–ò–ô –ê–£–î–ò–¢ UniFarm\n');

  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è frontend
  console.log('1. FRONTEND STATUS:');
  try {
    const response = await fetch('https://uni-farm-connect-x-osadchukdmitro2.replit.app');
    const html = await response.text();
    
    // –ë–æ–ª–µ–µ —Ç–æ—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const hasReactApp = html.includes('id="root"') || html.includes('id="app"');
    const hasUniFarmAssets = html.includes('UniFarm') || html.includes('unifarm') || html.includes('index.js');
    const hasModernJS = html.includes('type="module"') || html.includes('assets/');
    
    console.log(`HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: ${hasReactApp ? '‚úÖ' : '‚ùå'}`);
    console.log(`Assets –ø–æ–¥–∫–ª—é—á–µ–Ω—ã: ${hasModernJS ? '‚úÖ' : '‚ùå'}`);
    console.log(`Response status: ${response.status}`);
    
    if (response.status === 200 && hasReactApp) {
      console.log('‚úÖ Frontend –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    }
  } catch (error) {
    console.log(`‚ùå Frontend error: ${error.message}`);
  }

  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ API
  console.log('\n2. ENVIRONMENT CHECK:');
  try {
    const healthResponse = await fetch('http://localhost:3000/health');
    const health = await healthResponse.json();
    
    if (health.status === 'ok') {
      console.log('‚úÖ Server environment —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç');
      console.log(`Environment: ${health.environment || 'production'}`);
    }
  } catch (error) {
    console.log(`‚ùå Health check failed: ${error.message}`);
  }

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram webhook status
  console.log('\n3. TELEGRAM INTEGRATION:');
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    const botResponse = await fetch('https://api.telegram.org/bot7980427501:AAHdia3LusU9dk2aRvhXgmj9Ozo08nR0Gug/getMe');
    const botData = await botResponse.json();
    
    if (botData.ok) {
      console.log(`‚úÖ Bot @${botData.result.username} –∞–∫—Ç–∏–≤–µ–Ω`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    const webhookResponse = await fetch('https://api.telegram.org/bot7980427501:AAHdia3LusU9dk2aRvhXgmj9Ozo08nR0Gug/getWebhookInfo');
    const webhookData = await webhookResponse.json();
    
    if (webhookData.ok) {
      const webhook = webhookData.result;
      console.log(`Webhook URL: ${webhook.url || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
      console.log(`Pending updates: ${webhook.pending_update_count}`);
      
      if (!webhook.url) {
        console.log('‚ö†Ô∏è Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ polling –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å');
      }
    }
  } catch (error) {
    console.log(`‚ùå Telegram check failed: ${error.message}`);
  }

  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ airdrop endpoint —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å
  console.log('\n4. AIRDROP MODULE:');
  try {
    const airdropResponse = await fetch('http://localhost:3000/api/v2/airdrop/register', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' }
    });
    
    console.log(`Airdrop status: ${airdropResponse.status}`);
    
    if (airdropResponse.status === 401) {
      console.log('‚úÖ Airdrop endpoint —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∑–∞—â–∏—â–µ–Ω');
    } else if (airdropResponse.status === 404) {
      console.log('‚ùå Airdrop endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω');
    } else {
      console.log(`‚ö†Ô∏è Airdrop endpoint —Å—Ç–∞—Ç—É—Å: ${airdropResponse.status}`);
    }
  } catch (error) {
    console.log(`‚ùå Airdrop check failed: ${error.message}`);
  }

  console.log('\nüìä –ò–¢–û–ì –ö–û–†–†–ï–ö–¢–ò–†–£–Æ–©–ï–ì–û –ê–£–î–ò–¢–ê:');
  console.log('–ù–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–∏–¥–Ω–æ —á—Ç–æ:');
  console.log('- UniFarm —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
  console.log('- Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ö–æ–¥–∏—Ç');
  console.log('- WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è');
  console.log('- API –∑–∞–ø—Ä–æ—Å—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è (401 = –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞)');
  console.log('\n–°–∏—Å—Ç–µ–º–∞ –±–æ–ª–µ–µ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω —á–µ–º –ø–æ–∫–∞–∑–∞–ª –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –∞—É–¥–∏—Ç.');
}

correctiveAudit();