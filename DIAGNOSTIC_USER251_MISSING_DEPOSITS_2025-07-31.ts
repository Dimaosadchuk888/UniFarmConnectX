#!/usr/bin/env tsx
/**
 * üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ü–ê–í–®–ò–• –î–ï–ü–û–ó–ò–¢–û–í USER 251
 * –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –±–∞–ª–∞–Ω—Å–æ–≤ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞
 * –î–∞—Ç–∞: 31.07.2025
 */

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL!;
const supabaseKey = process.env.SUPABASE_ANON_KEY!;
const supabase = createClient(supabaseUrl, supabaseKey);

console.log('üîç –ù–ê–ß–ò–ù–ê–ï–ú –î–ò–ê–ì–ù–û–°–¢–ò–ö–£ –ü–†–û–ü–ê–í–®–ò–• –î–ï–ü–û–ó–ò–¢–û–í USER 251');
console.log('='.repeat(60));

async function diagnoseUser251Deposits() {
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ 251
    console.log('\n1Ô∏è‚É£ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï 251:');
    const { data: user251, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('id', 251)
      .single();

    if (userError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 251:', userError);
      return;
    }

    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user251.first_name} ${user251.last_name} (@${user251.username})`);
    console.log(`üÜî Telegram ID: ${user251.telegram_id}`);
    console.log(`üí∞ –¢–µ–∫—É—â–∏–π UNI –±–∞–ª–∞–Ω—Å: ${user251.balance_uni || 0}`);
    console.log(`üíé –¢–µ–∫—É—â–∏–π TON –±–∞–ª–∞–Ω—Å: ${user251.balance_ton || 0}`);
    console.log(`üìÖ –°–æ–∑–¥–∞–Ω: ${user251.created_at}`);
    console.log(`‚è∞ –û–±–Ω–æ–≤–ª–µ–Ω: ${user251.updated_at}`);

    // 2. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 251
    console.log('\n2Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –í–°–ï–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô USER 251:');
    const { data: transactions, error: transError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 251)
      .order('created_at', { ascending: false });

    if (transError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', transError);
      return;
    }

    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactions.length}`);

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ —Ç–∏–ø–∞–º
    const transactionsByType = transactions.reduce((acc, tx) => {
      const type = tx.type;
      if (!acc[type]) acc[type] = [];
      acc[type].push(tx);
      return acc;
    }, {} as Record<string, any[]>);

    console.log('\nüìà –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –ü–û –¢–ò–ü–ê–ú:');
    Object.entries(transactionsByType).forEach(([type, txList]) => {
      console.log(`  ${type}: ${txList.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤
      if (type.includes('DEPOSIT') || type.includes('TON_DEPOSIT')) {
        console.log('    üí∞ –î–ï–ü–û–ó–ò–¢–´:');
        txList.forEach(tx => {
          console.log(`      - ${tx.created_at}: ${tx.amount} ${tx.currency} (${tx.status}) - ${tx.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}`);
        });
      }
    });

    // 3. –ò—â–µ–º –Ω–µ–¥–∞–≤–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç—ã (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π)
    console.log('\n3Ô∏è‚É£ –ù–ï–î–ê–í–ù–ò–ï –î–ï–ü–û–ó–ò–¢–´ (–ü–û–°–õ–ï–î–ù–ò–ï 7 –î–ù–ï–ô):');
    const sevenDaysAgo = new Date();
    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
    
    const recentDeposits = transactions.filter(tx => 
      (tx.type.includes('DEPOSIT') || tx.type === 'TON_DEPOSIT') &&
      new Date(tx.created_at) > sevenDaysAgo
    );

    if (recentDeposits.length === 0) {
      console.log('üîç –î–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π –ù–ï –ù–ê–ô–î–ï–ù–´');
    } else {
      console.log(`üì• –ù–∞–π–¥–µ–Ω–æ ${recentDeposits.length} –Ω–µ–¥–∞–≤–Ω–∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤:`);
      recentDeposits.forEach(deposit => {
        console.log(`  üìÖ ${deposit.created_at}`);
        console.log(`  üí∞ –°—É–º–º–∞: ${deposit.amount} ${deposit.currency}`);
        console.log(`  üìù –°—Ç–∞—Ç—É—Å: ${deposit.status}`);
        console.log(`  üè∑Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ: ${deposit.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`);
        console.log(`  üîó Hash: ${deposit.hash || '–ù–µ—Ç hash'}`);
        console.log(`  üìä Metadata: ${JSON.stringify(deposit.metadata || {}, null, 2)}`);
        console.log('  ' + '-'.repeat(40));
      });
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Ä–∞—Å—á–µ—Ç–Ω–æ –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º
    console.log('\n4Ô∏è‚É£ –†–ê–°–ß–ï–¢ –ë–ê–õ–ê–ù–°–ê –ü–û –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø–ú:');
    let calculatedUNI = 0;
    let calculatedTON = 0;

    transactions.forEach(tx => {
      const amount = parseFloat(tx.amount || 0);
      const currency = tx.currency;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –ø—Ä–∏–±–∞–≤–ª—è–µ–º –∏–ª–∏ –≤—ã—á–∏—Ç–∞–µ–º
      const isCredit = ['DEPOSIT', 'TON_DEPOSIT', 'REFERRAL_REWARD', 'FARMING_REWARD', 
                       'MISSION_REWARD', 'DAILY_BONUS', 'ADMIN_COMPENSATION', 'MANUAL_DEPOSIT'].includes(tx.type);
      const isDebit = ['WITHDRAWAL', 'BOOST_PURCHASE', 'withdrawal_fee'].includes(tx.type);

      if (currency === 'UNI') {
        if (isCredit) calculatedUNI += amount;
        if (isDebit) calculatedUNI -= amount;
      } else if (currency === 'TON') {
        if (isCredit) calculatedTON += amount;
        if (isDebit) calculatedTON -= amount;
      }
    });

    console.log(`üßÆ –†–∞—Å—á–µ—Ç–Ω—ã–π UNI –±–∞–ª–∞–Ω—Å: ${calculatedUNI.toFixed(6)}`);
    console.log(`üßÆ –†–∞—Å—á–µ—Ç–Ω—ã–π TON –±–∞–ª–∞–Ω—Å: ${calculatedTON.toFixed(6)}`);
    console.log(`üìä –ê–∫—Ç—É–∞–ª—å–Ω—ã–π UNI –±–∞–ª–∞–Ω—Å: ${user251.balance_uni || 0}`);
    console.log(`üìä –ê–∫—Ç—É–∞–ª—å–Ω—ã–π TON –±–∞–ª–∞–Ω—Å: ${user251.balance_ton || 0}`);

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è
    const uniDiff = Math.abs(calculatedUNI - parseFloat(user251.balance_uni || 0));
    const tonDiff = Math.abs(calculatedTON - parseFloat(user251.balance_ton || 0));

    console.log('\n5Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –†–ê–°–•–û–ñ–î–ï–ù–ò–ô:');
    if (uniDiff > 0.01) {
      console.log(`‚ö†Ô∏è –†–ê–°–•–û–ñ–î–ï–ù–ò–ï UNI: ${uniDiff.toFixed(6)} (–≤–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞)`);
    } else {
      console.log(`‚úÖ UNI –±–∞–ª–∞–Ω—Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º`);
    }

    if (tonDiff > 0.01) {
      console.log(`‚ö†Ô∏è –†–ê–°–•–û–ñ–î–ï–ù–ò–ï TON: ${tonDiff.toFixed(6)} (–≤–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞)`);
    } else {
      console.log(`‚úÖ TON –±–∞–ª–∞–Ω—Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º`);
    }

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º TON Boost —Å—Ç–∞—Ç—É—Å
    console.log('\n6Ô∏è‚É£ TON BOOST –°–¢–ê–¢–£–°:');
    console.log(`üöÄ TON Boost –∞–∫—Ç–∏–≤–µ–Ω: ${user251.ton_boost_active ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`üì¶ TON Boost –ø–∞–∫–µ—Ç: ${user251.ton_boost_package || '–ù–µ –≤—ã–±—Ä–∞–Ω'}`);
    console.log(`üìà TON Boost –∫—É—Ä—Å: ${user251.ton_boost_rate || 0}%`);

    // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–∞—Ä–º–∏–Ω–≥–∞
    const { data: farmingData, error: farmingError } = await supabase
      .from('ton_farming_data')
      .select('*')
      .eq('user_id', 251)
      .single();

    console.log('\n7Ô∏è‚É£ –î–ê–ù–ù–´–ï –§–ê–†–ú–ò–ù–ì–ê:');
    if (farmingError || !farmingData) {
      console.log('‚ùå –î–∞–Ω–Ω—ã–µ —Ñ–∞—Ä–º–∏–Ω–≥–∞ –ù–ï –ù–ê–ô–î–ï–ù–´');
    } else {
      console.log(`üí∞ Farming –±–∞–ª–∞–Ω—Å: ${farmingData.farming_balance || 0} TON`);
      console.log(`üìà Farming –∫—É—Ä—Å: ${farmingData.farming_rate || 0} TON/—Å–µ–∫`);
      console.log(`‚úÖ Boost –∞–∫—Ç–∏–≤–µ–Ω: ${farmingData.boost_active ? '–î–ê' : '–ù–ï–¢'}`);
      console.log(`üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${farmingData.updated_at || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    }

    // 8. –ò—Ç–æ–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
    console.log('\n8Ô∏è‚É£ –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó:');
    if (recentDeposits.length === 0) {
      console.log('üîç –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–µ–¥–∞–≤–Ω–∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ —É User 251 –ù–ï –û–ë–ù–ê–†–£–ñ–ï–ù–û');
      console.log('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('   ‚Ä¢ –î–µ–ø–æ–∑–∏—Ç—ã –±—ã–ª–∏ —Å–¥–µ–ª–∞–Ω—ã –±–æ–ª–µ–µ 7 –¥–Ω–µ–π –Ω–∞–∑–∞–¥');
      console.log('   ‚Ä¢ –î–µ–ø–æ–∑–∏—Ç—ã –Ω–µ –±—ã–ª–∏ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
      console.log('   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π TON Connect ‚Üí Backend');
    } else {
      console.log(`‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢: –ù–∞–π–¥–µ–Ω–æ ${recentDeposits.length} –Ω–µ–¥–∞–≤–Ω–∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤`);
      
      if (tonDiff > 0.01) {
        console.log('‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–∞—Å—á–µ—Ç–Ω—ã–º –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º TON –±–∞–ª–∞–Ω—Å–æ–º');
        console.log(`   –†–∞–∑–Ω–∏—Ü–∞: ${tonDiff.toFixed(6)} TON`);
        console.log('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('   ‚Ä¢ –î–µ–ø–æ–∑–∏—Ç—ã –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –Ω–æ –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∏ –±–∞–ª–∞–Ω—Å');
        console.log('   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –±–∞–ª–∞–Ω—Å–æ–≤ (rollback)');
        console.log('   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞ —Å BalanceManager –∏–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π');
      }
    }

  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
diagnoseUser251Deposits().then(() => {
  console.log('\n' + '='.repeat(60));
  console.log('üèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
  process.exit(0);
});