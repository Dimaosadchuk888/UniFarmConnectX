import { supabase } from './core/supabase.js';

async function deepBoostInvestigation() {
  console.log('üî¨ –ì–õ–£–ë–û–ö–û–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï TON BOOST –ü–ê–ö–ï–¢–û–í\n');
  console.log('='*60 + '\n');
  
  const userId = 74;
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –í–°–ï –ø–æ–∫—É–ø–∫–∏ TON Boost –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
  console.log('1Ô∏è‚É£ –í–°–ï –ü–û–ö–£–ü–ö–ò TON BOOST (–ø–æ –æ–ø–∏—Å–∞–Ω–∏—é):\n');
  
  const { data: allPurchases, count } = await supabase
    .from('transactions')
    .select('*', { count: 'exact' })
    .eq('user_id', userId)
    .like('description', '%–ü–æ–∫—É–ø–∫–∞ TON Boost%')
    .order('created_at', { ascending: false });
    
  console.log(`–ù–∞–π–¥–µ–Ω–æ –ø–æ–∫—É–ø–æ–∫ TON Boost: ${count || 0}\n`);
  
  if (allPurchases && allPurchases.length > 0) {
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const typeGroups = new Map<string, number>();
    
    allPurchases.forEach((tx, index) => {
      const type = tx.type || 'UNKNOWN';
      typeGroups.set(type, (typeGroups.get(type) || 0) + 1);
      
      if (index < 5) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
        console.log(`${index + 1}. ID: ${tx.id} | ${new Date(tx.created_at).toLocaleString()}`);
        console.log(`   –¢–∏–ø: ${tx.type} | –°—É–º–º–∞: ${tx.amount} ${tx.currency}`);
        console.log(`   ${tx.description}`);
        if (tx.metadata) {
          console.log(`   Metadata: ${JSON.stringify(tx.metadata)}`);
        }
        console.log('');
      }
    });
    
    console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:');
    typeGroups.forEach((count, type) => {
      console.log(`- ${type}: ${count} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
    });
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É boost_purchases
  console.log('\n' + '='*60);
  console.log('\n2Ô∏è‚É£ –¢–ê–ë–õ–ò–¶–ê BOOST_PURCHASES:\n');
  
  const { data: boostPurchases, count: purchaseTableCount } = await supabase
    .from('boost_purchases')
    .select('*', { count: 'exact' })
    .eq('user_id', userId)
    .order('created_at', { ascending: false });
    
  console.log(`–ó–∞–ø–∏—Å–µ–π –≤ boost_purchases: ${purchaseTableCount || 0}`);
  
  if (boostPurchases && boostPurchases.length > 0) {
    console.log('\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã:');
    boostPurchases.slice(0, 5).forEach((purchase, index) => {
      console.log(`${index + 1}. ID: ${purchase.id} | –ü–∞–∫–µ—Ç: ${purchase.boost_package_id}`);
      console.log(`   –î–∞—Ç–∞: ${new Date(purchase.created_at).toLocaleString()}`);
      console.log(`   –°—É–º–º–∞: ${purchase.amount} TON`);
      console.log('');
    });
  } else {
    console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ boost_purchases –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–∞–∫–µ—Ç–æ–≤ –≤ ton_farming_data
  console.log('\n' + '='*60);
  console.log('\n3Ô∏è‚É£ –ò–°–¢–û–†–ò–Ø –ü–ê–ö–ï–¢–û–í –í TON_FARMING_DATA:\n');
  
  const { data: allFarmingData } = await supabase
    .from('ton_farming_data')
    .select('*')
    .eq('user_id', userId.toString());
    
  console.log(`–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ ton_farming_data: ${allFarmingData?.length || 0}`);
  
  if (allFarmingData && allFarmingData.length > 0) {
    console.log('\n–í—Å–µ –∑–∞–ø–∏—Å–∏:');
    allFarmingData.forEach((data, index) => {
      console.log(`${index + 1}. –ü–∞–∫–µ—Ç ID: ${data.boost_package_id}`);
      console.log(`   –ê–∫—Ç–∏–≤–µ–Ω: ${data.boost_active ? '‚úÖ' : '‚ùå'}`);
      console.log(`   –°—Ç–∞–≤–∫–∞: ${(data.farming_rate * 100).toFixed(1)}% –≤ –¥–µ–Ω—å`);
      console.log(`   –ë–∞–ª–∞–Ω—Å: ${data.farming_balance} TON`);
      console.log(`   –î–µ–ø–æ–∑–∏—Ç: ${data.farming_deposit} TON`);
      console.log(`   –ù–∞—á–∞–ª–æ: ${data.farming_start_timestamp ? new Date(data.farming_start_timestamp).toLocaleString() : '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${new Date(data.farming_last_update).toLocaleString()}`);
      console.log('');
    });
  }
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—á–µ–º—É –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è BOOST_PURCHASE
  console.log('\n' + '='*60);
  console.log('\n4Ô∏è‚É£ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –¢–ò–ü–ê BOOST_PURCHASE:\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ–∫—É–ø–∫–∏
  const lastPurchase = allPurchases?.[0];
  if (lastPurchase) {
    console.log('–ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–∫—É–ø–∫–∞ TON Boost:');
    console.log(`- –°–æ–∑–¥–∞–Ω–∞: ${new Date(lastPurchase.created_at).toLocaleString()}`);
    console.log(`- –¢–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${lastPurchase.type}`);
    console.log(`- –û–∂–∏–¥–∞–µ–º—ã–π —Ç–∏–ø: BOOST_PURCHASE`);
    
    const timeSinceTypeAdded = Date.now() - new Date('2025-07-13T13:46:00').getTime();
    const minutesSinceTypeAdded = Math.floor(timeSinceTypeAdded / 1000 / 60);
    
    console.log(`\n‚è∞ –í—Ä–µ–º—è —Å –º–æ–º–µ–Ω—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∞: ${minutesSinceTypeAdded} –º–∏–Ω—É—Ç`);
    
    if (lastPurchase.type !== 'BOOST_PURCHASE') {
      console.log('\n‚ùå –¢–∏–ø BOOST_PURCHASE –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!');
      console.log('\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('1. –°–µ—Ä–≤–µ—Ä –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –≤ –ë–î');
      console.log('2. –ö–æ–¥ –º–æ–¥—É–ª—è boost/service.ts –≤—Å–µ –µ—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç FARMING_REWARD');
      console.log('3. –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞');
    }
  }
  
  // 5. –ê–Ω–∞–ª–∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
  console.log('\n' + '='*60);
  console.log('\n5Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´ –° –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ú–ò –ü–ê–ö–ï–¢–ê–ú–ò:\n');
  
  console.log('üìä –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã TON Boost:');
  console.log('1. ton_farming_data —Ö—Ä–∞–Ω–∏—Ç –û–î–ò–ù –∞–∫—Ç–∏–≤–Ω—ã–π –ø–∞–∫–µ—Ç –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('2. –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞ —Å—Ç–∞—Ä—ã–π –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è');
  console.log('3. –ü–æ–ª–µ boost_package_id –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º');
  console.log('\n‚ö†Ô∏è –í–´–í–û–î: –°–∏—Å—Ç–µ–º–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤!');
  console.log('–ï—Å–ª–∏ –≤—ã –∫—É–ø–∏–ª–∏ 7 –ø–∞–∫–µ—Ç–æ–≤, –∞–∫—Ç–∏–≤–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π.');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É–º–º—É –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫
  const totalSpent = allPurchases?.reduce((sum, tx) => sum + parseFloat(tx.amount || '0'), 0) || 0;
  console.log(`\nüí∞ –û–±—â–∞—è —Å—É–º–º–∞ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω–∞—è –Ω–∞ TON Boost: ${totalSpent} TON`);
  console.log(`üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: ${count || 0}`);
}

deepBoostInvestigation();