// –ê–ù–ê–õ–ò–ó: –ü–û–ß–ï–ú–£ –ê–ö–ö–ê–£–ù–¢–´ –ù–ï –ó–ê–ü–ò–°–ê–õ–ò–°–¨ –° –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ë–ê–õ–ê–ù–°–ê–ú–ò
// –ò—Å—Å–ª–µ–¥—É–µ–º –ª–æ–≥–∏–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –≤ ton_farming_data
// –î–∞—Ç–∞: 01 –∞–≤–≥—É—Å—Ç–∞ 2025

import { supabase } from './core/supabase';

interface AccountCreationAnalysis {
  deposit_flow: string[];
  boost_activation_flow: string[];
  data_sync_issues: string[];
  missing_integration_points: string[];
}

async function analyzeAccountCreationFlow(): Promise<void> {
  console.log('üîç –ê–ù–ê–õ–ò–ó –°–û–ó–î–ê–ù–ò–Ø –ê–ö–ö–ê–£–ù–¢–û–í TON BOOST');
  console.log('='.repeat(70));

  // 1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤
  console.log('\nüìÖ 1. –•–†–û–ù–û–õ–û–ì–ò–Ø –°–û–ó–î–ê–ù–ò–Ø –ê–ö–ö–ê–£–ù–¢–û–í:');
  
  const { data: tonFarmingRecords } = await supabase
    .from('ton_farming_data')
    .select('user_id, farming_balance, boost_active, created_at')
    .order('created_at', { ascending: true });

  if (tonFarmingRecords) {
    console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ ton_farming_data: ${tonFarmingRecords.length}`);
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–∞–º —Å–æ–∑–¥–∞–Ω–∏—è
    const byDate = tonFarmingRecords.reduce((acc, record) => {
      const date = record.created_at.split('T')[0];
      if (!acc[date]) acc[date] = [];
      acc[date].push(record);
      return acc;
    }, {} as Record<string, any[]>);

    console.log('\nüìã –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ –¥–∞—Ç–∞–º:');
    Object.entries(byDate).forEach(([date, records]) => {
      const withBalance = records.filter(r => parseFloat(r.farming_balance || '0') > 0).length;
      const withoutBalance = records.length - withBalance;
      console.log(`   ${date}: ${records.length} –∑–∞–ø–∏—Å–µ–π (${withBalance} —Å –±–∞–ª–∞–Ω—Å–æ–º, ${withoutBalance} –±–µ–∑)`);
    });
  }

  // 2. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ–ø–æ–∑–∏—Ç—ã –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—é boost
  console.log('\nüí∞ 2. –ê–ù–ê–õ–ò–ó –î–ï–ü–û–ó–ò–¢–û–í –ò BOOST –ê–ö–¢–ò–í–ê–¶–ò–ò:');
  
  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã
  const problemUsers = [244, 245, 262, 235]; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É –∫–æ—Ç–æ—Ä—ã—Ö –±—ã–ª 0 –±–∞–ª–∞–Ω—Å
  
  for (const userId of problemUsers) {
    console.log(`\nüë§ User ${userId}:`);
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const { data: transactions } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', userId)
      .order('created_at', { ascending: true });

    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å—å –≤ ton_farming_data
    const { data: farmingRecord } = await supabase
      .from('ton_farming_data')
      .select('*')
      .eq('user_id', userId)
      .single();

    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å—å –≤ users
    const { data: userRecord } = await supabase
      .from('users')
      .select('created_at, ton_boost_active, ton_farming_balance, ton_boost_package_id')
      .eq('id', userId)
      .single();

    if (transactions && farmingRecord && userRecord) {
      console.log(`   üìä –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactions.length}`);
      console.log(`   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${userRecord.created_at.split('T')[0]}`);
      console.log(`   üìã ton_farming_data —Å–æ–∑–¥–∞–Ω: ${farmingRecord.created_at.split('T')[0]}`);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏–π
      const depositTransactions = transactions.filter(t => 
        t.type === 'DEPOSIT' || t.type === 'TON_DEPOSIT'
      );
      
      const boostTransactions = transactions.filter(t => 
        t.type === 'BOOST_PURCHASE' || 
        (t.metadata && (
          typeof t.metadata === 'string' ? 
          JSON.parse(t.metadata).original_type === 'TON_BOOST_PURCHASE' :
          t.metadata.original_type === 'TON_BOOST_PURCHASE'
        ))
      );

      console.log(`   üíµ –î–µ–ø–æ–∑–∏—Ç—ã: ${depositTransactions.length} —à—Ç—É–∫`);
      if (depositTransactions.length > 0) {
        const firstDeposit = depositTransactions[0];
        const lastDeposit = depositTransactions[depositTransactions.length - 1];
        console.log(`      –ü–µ—Ä–≤—ã–π: ${firstDeposit.amount_ton} TON (${firstDeposit.created_at.split('T')[0]})`);
        console.log(`      –ü–æ—Å–ª–µ–¥–Ω–∏–π: ${lastDeposit.amount_ton} TON (${lastDeposit.created_at.split('T')[0]})`);
      }

      console.log(`   üéØ Boost –ø–æ–∫—É–ø–∫–∏: ${boostTransactions.length} —à—Ç—É–∫`);
      if (boostTransactions.length > 0) {
        const firstBoost = boostTransactions[0];
        console.log(`      –ü–µ—Ä–≤—ã–π: ${firstBoost.created_at.split('T')[0]}`);
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
      if (depositTransactions.length > 0) {
        const firstDepositDate = new Date(depositTransactions[0].created_at);
        const farmingCreatedDate = new Date(farmingRecord.created_at);
        
        if (firstDepositDate < farmingCreatedDate) {
          console.log(`   ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –î–µ–ø–æ–∑–∏—Ç –±—ã–ª –î–û —Å–æ–∑–¥–∞–Ω–∏—è farming –∑–∞–ø–∏—Å–∏`);
          console.log(`      –î–µ–ø–æ–∑–∏—Ç: ${depositTransactions[0].created_at}`);
          console.log(`      Farming –∑–∞–ø–∏—Å—å: ${farmingRecord.created_at}`);
        } else {
          console.log(`   ‚úÖ –ü–æ—Ä—è–¥–æ–∫ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: farming –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞ –¥–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤`);
        }
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –º–µ–∂–¥—É users –∏ ton_farming_data
      console.log(`   üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:`);
      console.log(`      users.ton_farming_balance: ${userRecord.ton_farming_balance}`);
      console.log(`      ton_farming_data.farming_balance: ${farmingRecord.farming_balance}`);
      console.log(`      users.ton_boost_active: ${userRecord.ton_boost_active}`);
      console.log(`      ton_farming_data.boost_active: ${farmingRecord.boost_active}`);
    }
  }

  // 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
  console.log('\nüîß 3. –ê–ù–ê–õ–ò–ó –õ–û–ì–ò–ö–ò –°–û–ó–î–ê–ù–ò–Ø –ó–ê–ü–ò–°–ï–ô:');
  console.log('–ú–µ—Å—Ç–∞ –≥–¥–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –∑–∞–ø–∏—Å–∏ –≤ ton_farming_data:');
  console.log('1. TonFarmingRepository.getByUserId() - –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  console.log('2. TonFarmingRepository.activateBoost() - –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ boost');
  console.log('3. –ú–∏–≥—Ä–∞—Ü–∏–∏ –∏–ª–∏ —Å–∫—Ä–∏–ø—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
  
  // –ò—â–µ–º –∑–∞–ø–∏—Å–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (–±–µ–∑ –¥–µ–ø–æ–∑–∏—Ç–æ–≤)
  const { data: allFarmingRecords } = await supabase
    .from('ton_farming_data')
    .select('user_id, farming_balance, boost_active, created_at');

  if (allFarmingRecords) {
    const autoCreated = allFarmingRecords.filter(record => 
      parseFloat(record.farming_balance || '0') === 0 && record.boost_active
    );
    
    console.log(`\nüìä –ó–∞–ø–∏—Å–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (–±–∞–ª–∞–Ω—Å=0, boost=true): ${autoCreated.length}`);
    
    if (autoCreated.length > 0) {
      console.log('–ü—Ä–∏–º–µ—Ä—ã:');
      autoCreated.slice(0, 5).forEach(record => {
        console.log(`   User ${record.user_id}: ${record.created_at.split('T')[0]}`);
      });
    }
  }

  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ TonFarmingRepository
  console.log('\nüìã 4. –ê–ù–ê–õ–ò–ó –ö–û–î–ê TonFarmingRepository.getByUserId():');
  console.log('–í —Å—Ç—Ä–æ–∫–∞—Ö 76-84 –µ—Å—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏:');
  console.log(`
  const newData: Partial<TonFarmingData> = {
    user_id: parseInt(userId),
    farming_balance: '0',  // ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –≤—Å–µ–≥–¥–∞ 0
    farming_rate: '0.01',
    farming_accumulated: '0',
    boost_active: false,   // ‚ö†Ô∏è –ù–ï –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  };
  `);
  
  console.log('\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ü–†–û–ë–õ–ï–ú–´:');
  console.log('1. getByUserId() —Å–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å–∏ —Å farming_balance=0');
  console.log('2. activateBoost() –Ω–µ –≤—Å–µ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö');
  console.log('3. –ù–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ —Å farming_balance');
  console.log('4. –ó–∞–ø–∏—Å–∏ –º–æ–≥–ª–∏ –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω—ã –º–∞—Å—Å–æ–≤–æ —Å–∫—Ä–∏–ø—Ç–æ–º –±–µ–∑ —É—á–µ—Ç–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
}

async function analyzeDepositToFarmingFlow(): Promise<void> {
  console.log('\nüîÑ –ê–ù–ê–õ–ò–ó –ü–û–¢–û–ö–ê: –î–ï–ü–û–ó–ò–¢ ‚Üí FARMING_BALANCE');
  console.log('='.repeat(50));

  // –ò—â–µ–º –≥–¥–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Å–≤—è–∑—å –º–µ–∂–¥—É –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏ –∏ farming_balance
  console.log('\nüìã –ú–ï–°–¢–ê –ì–î–ï –î–û–õ–ñ–ù–û –û–ë–ù–û–í–õ–Ø–¢–¨–°–Ø farming_balance:');
  console.log('1. –ü—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –≤ API');
  console.log('2. –ü—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ TON Boost –ø–∞–∫–µ—Ç–æ–≤');
  console.log('3. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∏ –∫–∞–∫ –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏—Å—å
  const { data: recentDeposits } = await supabase
    .from('transactions')
    .select('*')
    .in('type', ['DEPOSIT', 'TON_DEPOSIT'])
    .gte('created_at', '2025-07-31')
    .order('created_at', { ascending: false })
    .limit(10);

  if (recentDeposits) {
    console.log(`\nüí∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç—ã (—Å 31 –∏—é–ª—è): ${recentDeposits.length}`);
    
    for (const deposit of recentDeposits.slice(0, 3)) {
      console.log(`\nüìã –î–µ–ø–æ–∑–∏—Ç User ${deposit.user_id}:`);
      console.log(`   –°—É–º–º–∞: ${deposit.amount_ton} TON`);
      console.log(`   –î–∞—Ç–∞: ${deposit.created_at}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª–æ –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ farming_balance –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞
      const { data: farmingRecord } = await supabase
        .from('ton_farming_data')
        .select('farming_balance, updated_at')
        .eq('user_id', deposit.user_id)
        .single();

      if (farmingRecord) {
        const depositDate = new Date(deposit.created_at);
        const farmingUpdateDate = new Date(farmingRecord.updated_at);
        
        console.log(`   farming_balance: ${farmingRecord.farming_balance}`);
        console.log(`   farming –æ–±–Ω–æ–≤–ª–µ–Ω: ${farmingRecord.updated_at}`);
        
        if (farmingUpdateDate > depositDate) {
          console.log(`   ‚úÖ farming_balance –æ–±–Ω–æ–≤–ª–µ–Ω –ü–û–°–õ–ï –¥–µ–ø–æ–∑–∏—Ç–∞`);
        } else {
          console.log(`   ‚ùå farming_balance –ù–ï –æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –¥–µ–ø–æ–∑–∏—Ç–∞`);
        }
      } else {
        console.log(`   ‚ùå –ó–∞–ø–∏—Å—å –≤ ton_farming_data –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      }
    }
  }
}

async function findMissingIntegrationPoints(): Promise<void> {
  console.log('\nüîó –ü–û–ò–°–ö –ü–†–û–ü–£–©–ï–ù–ù–´–• –ò–ù–¢–ï–ì–†–ê–¶–ò–ô');
  console.log('='.repeat(40));

  console.log('\n‚ùå –ü–†–û–ë–õ–ï–ú–´ –í –¢–ï–ö–£–©–ï–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–ï:');
  console.log('1. –ù–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–≤—è–∑–∏ –º–µ–∂–¥—É DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏ –∏ farming_balance');
  console.log('2. getByUserId() –≤—Å–µ–≥–¥–∞ —Å–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å–∏ —Å farming_balance=0');
  console.log('3. activateBoost() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ –¥–ª—è –≤—Å–µ—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
  console.log('4. –ù–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–∂–¥—É users –∏ ton_farming_data');

  console.log('\nüí° –ß–¢–û –î–û–õ–ñ–ù–û –ë–´–¢–¨:');
  console.log('1. –ü—Ä–∏ –ª—é–±–æ–º TON –¥–µ–ø–æ–∑–∏—Ç–µ ‚Üí –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ farming_balance');
  console.log('2. –ü—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ boost ‚Üí –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ farming_balance');
  console.log('3. –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏');
  console.log('4. –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π');

  console.log('\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –ü–†–ï–î–û–¢–í–†–ê–©–ï–ù–ò–Ø:');
  console.log('1. –î–æ–±–∞–≤–∏—Ç—å webhook/trigger –Ω–∞ DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
  console.log('2. –ò–∑–º–µ–Ω–∏—Ç—å getByUserId() –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ farming_balance –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
  console.log('3. –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ boost');
  console.log('4. –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ');
}

async function main(): Promise<void> {
  console.log('üîç –ê–ù–ê–õ–ò–ó –ö–û–†–ù–ï–í–´–• –ü–†–ò–ß–ò–ù –ü–†–û–ë–õ–ï–ú–´ TON BOOST');
  console.log('='.repeat(80));
  console.log('–í–æ–ø—Ä–æ—Å: –ü–æ—á–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—ã –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–µ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –±–∞–ª–∞–Ω—Å–∞–º–∏?');
  console.log('');

  await analyzeAccountCreationFlow();
  await analyzeDepositToFarmingFlow();
  await findMissingIntegrationPoints();

  console.log('\n' + '='.repeat(80));
  console.log('üéØ –ò–¢–û–ì–û–í–´–ô –û–¢–í–ï–¢');
  console.log('='.repeat(80));

  console.log('\n‚ùå –ö–û–†–ù–ï–í–´–ï –ü–†–ò–ß–ò–ù–´:');
  console.log('1. TonFarmingRepository.getByUserId() —Å–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å–∏ —Å farming_balance="0"');
  console.log('2. –ù–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–µ–∂–¥—É DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏ –∏ farming_balance');
  console.log('3. activateBoost() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏');
  console.log('4. –í–æ–∑–º–æ–∂–Ω–æ –º–∞—Å—Å–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π —Å–∫—Ä–∏–ø—Ç–æ–º –±–µ–∑ —É—á–µ—Ç–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤');

  console.log('\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–û –°–ï–ì–û–î–ù–Ø:');
  console.log('‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã farming_balance –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
  console.log('‚úÖ 18 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞—é—Ç TON Boost –Ω–∞–≥—Ä–∞–¥—ã');
  console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –º–µ–∂–¥—É users –∏ ton_farming_data');

  console.log('\nüí° –î–õ–Ø –ü–†–ï–î–û–¢–í–†–ê–©–ï–ù–ò–Ø –í –ë–£–î–£–©–ï–ú:');
  console.log('üîÑ –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–µ–ø–æ–∑–∏—Ç–æ–≤ —Å farming_balance');
  console.log('üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ ton_farming_data');
  console.log('üîÑ –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ boost –ø–∞–∫–µ—Ç–æ–≤');
}

main().catch(console.error);