#!/usr/bin/env tsx

/**
 * –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è subtractBalance —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞
 */

import { readFileSync } from 'fs';

console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –ò–ó–ú–ï–ù–ï–ù–ò–ô –í subtractBalance\n');
console.log('='.repeat(60));

try {
  const content = readFileSync('./core/BalanceManager.ts', 'utf8');
  
  // –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é subtractBalance
  const subtractIndex = content.indexOf('async subtractBalance');
  if (subtractIndex === -1) {
    console.log('‚ùå –§—É–Ω–∫—Ü–∏—è subtractBalance –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
    process.exit(1);
  }
  
  // –ë–µ—Ä–µ–º —Å–ª–µ–¥—É—é—â–∏–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ —Ñ—É–Ω–∫—Ü–∏–∏
  const functionContent = content.substring(subtractIndex, subtractIndex + 1000);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  if (functionContent.includes('ANTI_ROLLBACK_PROTECTION')) {
    console.log('‚ùå –§–£–ù–ö–¶–ò–Ø –í–°–Å –ï–©–Å –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ê!');
    console.log('\n–ù–∞–π–¥–µ–Ω –∫–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ ANTI_ROLLBACK_PROTECTION');
  } else if (functionContent.includes('updateUserBalance')) {
    console.log('‚úÖ –§–£–ù–ö–¶–ò–Ø –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ê–ù–ê –ò –†–ê–ë–û–¢–ê–ï–¢!');
    console.log('\n–§—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç updateUserBalance –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤');
    console.log('–ü–æ–∫—É–ø–∫–∏ TON Boost –∏ –≤—ã–≤–æ–¥—ã —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å');
  } else {
    console.log('‚ö†Ô∏è  –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏');
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ —Ñ—É–Ω–∫—Ü–∏–∏
  console.log('\n–ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏:');
  console.log('-'.repeat(40));
  const lines = functionContent.split('\n').slice(0, 10);
  lines.forEach((line, i) => {
    console.log(`${i + 1}: ${line}`);
  });
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', error);
}

console.log('\n' + '='.repeat(60));