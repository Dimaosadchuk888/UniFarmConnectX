/**
 * –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô 25, 227 –ò –î–†–£–ì–ò–• –ê–ù–û–ú–ê–õ–ò–ô
 * –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É User 25
 */

import { supabase } from './core/supabase.js';

async function analyzeRealUsers() {
  console.log('üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô 25/227');
  console.log('‚è∞ –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞:', new Date().toISOString());
  
  try {
    // 1. –ò—â–µ–º –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å User 25
    console.log('\n=== 1. –ü–û–ò–°–ö –í–°–ï–• –ü–†–û–§–ò–õ–ï–ô USER 25 ===');
    
    const { data: user25Profiles } = await supabase
      .from('users')
      .select('id, telegram_id, username, balance_uni, balance_ton, created_at')
      .or('telegram_id.eq.25,id.eq.25,id.eq.227');
    
    console.log(`üë• –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è User 25: ${user25Profiles?.length || 0}`);
    
    if (user25Profiles && user25Profiles.length > 0) {
      user25Profiles.forEach((profile, i) => {
        console.log(`  –ü—Ä–æ—Ñ–∏–ª—å ${i+1}:`);
        console.log(`    internal_id: ${profile.id}`);
        console.log(`    telegram_id: ${profile.telegram_id}`);
        console.log(`    username: ${profile.username}`);
        console.log(`    UNI: ${profile.balance_uni}`);
        console.log(`    TON: ${profile.balance_ton}`);
        console.log(`    –°–æ–∑–¥–∞–Ω: ${profile.created_at}`);
        console.log('    ---');
      });
    }
    
    // 2. –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ telegram_id
    console.log('\n=== 2. –ü–û–ò–°–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ë–ï–ó TELEGRAM_ID ===');
    
    const { data: usersWithoutTelegram } = await supabase
      .from('users')
      .select('id, telegram_id, username, balance_uni, balance_ton, created_at')
      .or('telegram_id.is.null,telegram_id.eq.0');
    
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ telegram_id: ${usersWithoutTelegram?.length || 0}`);
    
    if (usersWithoutTelegram && usersWithoutTelegram.length > 0) {
      usersWithoutTelegram.forEach((user, i) => {
        console.log(`  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${i+1}:`);
        console.log(`    internal_id: ${user.id}`);
        console.log(`    telegram_id: ${user.telegram_id}`);
        console.log(`    username: ${user.username}`);
        console.log(`    UNI: ${user.balance_uni}`);
        console.log(`    TON: ${user.balance_ton}`);
        console.log(`    –°–æ–∑–¥–∞–Ω: ${user.created_at}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const checkTransactions = async (userId) => {
          const { data: txs } = await supabase
            .from('transactions')
            .select('id, type, amount_uni, amount_ton, created_at')
            .eq('user_id', userId)
            .limit(5);
          return txs || [];
        };
        
        checkTransactions(user.id).then(txs => {
          if (txs.length > 0) {
            console.log(`    üîç –£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å ${txs.length}+ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π!`);
            txs.forEach(tx => {
              console.log(`      - ${tx.type}: ${tx.amount_uni || tx.amount_ton} (${tx.created_at})`);
            });
          }
        });
        
        console.log('    ---');
      });
    }
    
    // 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ User 25
    console.log('\n=== 3. –ê–ù–ê–õ–ò–ó –¢–†–ê–ù–ó–ê–ö–¶–ò–ô USER 25 ===');
    
    const { data: user25Transactions } = await supabase
      .from('transactions')
      .select('user_id, type, amount_uni, amount_ton, currency, status, created_at')
      .eq('user_id', 25)
      .order('created_at', { ascending: false })
      .limit(10);
    
    console.log(`üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ user_id=25: ${user25Transactions?.length || 0}`);
    
    if (user25Transactions && user25Transactions.length > 0) {
      user25Transactions.forEach((tx, i) => {
        console.log(`  ${i+1}. ${tx.type} | ${tx.amount_uni || tx.amount_ton} ${tx.currency} | ${tx.status}`);
        console.log(`     –í—Ä–µ–º—è: ${tx.created_at}`);
      });
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ user_id=227
    console.log('\n=== 4. –ê–ù–ê–õ–ò–ó –¢–†–ê–ù–ó–ê–ö–¶–ò–ô USER_ID=227 ===');
    
    const { data: user227Transactions } = await supabase
      .from('transactions')
      .select('user_id, type, amount_uni, amount_ton, currency, status, created_at')
      .eq('user_id', 227)
      .order('created_at', { ascending: false })
      .limit(10);
    
    console.log(`üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ user_id=227: ${user227Transactions?.length || 0}`);
    
    if (user227Transactions && user227Transactions.length > 0) {
      user227Transactions.forEach((tx, i) => {
        console.log(`  ${i+1}. ${tx.type} | ${tx.amount_uni || tx.amount_ton} ${tx.currency} | ${tx.status}`);
        console.log(`     –í—Ä–µ–º—è: ${tx.created_at}`);
      });
    }
    
    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º BalanceManager —Å —Ä–∞–∑–Ω—ã–º–∏ ID
    console.log('\n=== 5. –¢–ï–°–¢ BALANCE MANAGER ===');
    
    try {
      const { BalanceManager } = await import('./core/BalanceManager.js');
      const balanceManager = BalanceManager.getInstance();
      
      // –¢–µ—Å—Ç —Å telegram_id=25
      console.log('üß™ –¢–µ—Å—Ç getUserBalance(25):');
      const result25 = await balanceManager.getUserBalance(25);
      if (result25.success) {
        console.log(`   ‚úÖ –£—Å–ø–µ—Ö: UNI=${result25.balance?.balance_uni}, TON=${result25.balance?.balance_ton}`);
      } else {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${result25.error}`);
      }
      
      // –¢–µ—Å—Ç —Å internal_id=227
      console.log('üß™ –¢–µ—Å—Ç getUserBalance(227):');
      const result227 = await balanceManager.getUserBalance(227);
      if (result227.success) {
        console.log(`   ‚úÖ –£—Å–ø–µ—Ö: UNI=${result227.balance?.balance_uni}, TON=${result227.balance?.balance_ton}`);
      } else {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${result227.error}`);
      }
      
    } catch (bmError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ BalanceManager:', bmError.message);
    }
    
    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–µ—Ç –¥–µ–ø–æ–∑–∏—Ç—ã
    console.log('\n=== 6. –ê–ù–ê–õ–ò–ó –°–û–ó–î–ê–ù–ò–Ø –î–ï–ü–û–ó–ò–¢–û–í ===');
    
    const { data: recentDeposits } = await supabase
      .from('transactions')
      .select('user_id, type, amount_uni, amount_ton, currency, created_at, description')
      .in('type', ['TON_DEPOSIT', 'FARMING_DEPOSIT'])
      .gte('created_at', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString())
      .order('created_at', { ascending: false })
      .limit(20);
    
    console.log(`üí∞ –î–µ–ø–æ–∑–∏—Ç—ã –∑–∞ 24 —á–∞—Å–∞: ${recentDeposits?.length || 0}`);
    
    if (recentDeposits && recentDeposits.length > 0) {
      const user25Deposits = recentDeposits.filter(d => d.user_id === 25);
      const user227Deposits = recentDeposits.filter(d => d.user_id === 227);
      
      console.log(`   User 25 –¥–µ–ø–æ–∑–∏—Ç—ã: ${user25Deposits.length}`);
      console.log(`   User 227 –¥–µ–ø–æ–∑–∏—Ç—ã: ${user227Deposits.length}`);
      
      [...user25Deposits, ...user227Deposits].forEach(dep => {
        console.log(`     User ${dep.user_id}: ${dep.type} ${dep.amount_uni || dep.amount_ton} ${dep.currency}`);
        console.log(`       –í—Ä–µ–º—è: ${dep.created_at}`);
        console.log(`       –û–ø–∏—Å–∞–Ω–∏–µ: ${dep.description}`);
      });
    }
    
    // –í–´–í–û–î–´
    console.log('\n=== üéØ –î–ò–ê–ì–ù–û–ó ===');
    
    const hasMultipleProfiles = user25Profiles && user25Profiles.length > 1;
    const has25Transactions = user25Transactions && user25Transactions.length > 0;
    const has227Transactions = user227Transactions && user227Transactions.length > 0;
    
    console.log(`üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê USER 25:`);
    console.log(`   –ü—Ä–æ—Ñ–∏–ª–µ–π: ${user25Profiles?.length || 0}`);
    console.log(`   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π user_id=25: ${user25Transactions?.length || 0}`);
    console.log(`   –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π user_id=227: ${user227Transactions?.length || 0}`);
    
    if (hasMultipleProfiles) {
      console.log('\n‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏');
    }
    
    if (has25Transactions && !has227Transactions) {
      console.log('\n‚úÖ –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–¥—É—Ç –Ω–∞ user_id=25 (telegram_id)');
    } else if (!has25Transactions && has227Transactions) {
      console.log('\n‚ö†Ô∏è –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–¥—É—Ç –Ω–∞ user_id=227 (internal_id)');
    } else if (has25Transactions && has227Transactions) {
      console.log('\n‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –º–µ–∂–¥—É user_id=25 –∏ user_id=227');
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error);
    console.error('Stack:', error.stack);
  }
}

analyzeRealUsers();