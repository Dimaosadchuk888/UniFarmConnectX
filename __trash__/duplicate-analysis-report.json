{
  "files": {
    "similarNames": [
      {
        "baseName": "DATABASE_STRUCTURE",
        "files": [
          "DATABASE_STRUCTURE.md",
          "docs/DATABASE_STRUCTURE.md"
        ]
      },
      {
        "baseName": "RIOTMAP",
        "files": [
          "RIOTMAP.md",
          "attached_assets/RIOTMAP.md"
        ]
      },
      {
        "baseName": "api-routes-checker",
        "files": [
          "api-routes-checker.js",
          "api-routes-checker.mjs"
        ]
      },
      {
        "baseName": "db-service-wrapper",
        "files": [
          "archive/db-backups/db-service-wrapper.ts",
          "server/db-service-wrapper.ts"
        ]
      },
      {
        "baseName": "setup-webhook",
        "files": [
          "archive/telegram-bot-scripts/setup-webhook.js",
          "setup-webhook.js"
        ]
      },
      {
        "baseName": "update-menu-button",
        "files": [
          "archive/telegram-bot-scripts/update-menu-button.js",
          "update-menu-button.js"
        ]
      },
      {
        "baseName": "index",
        "files": [
          "backup/index.ts",
          "client/index.html",
          "client/public/index.html",
          "client/src/components/missions/index.tsx",
          "client/src/index.css",
          "dist/index.js",
          "dist/public/index.html",
          "dist/public/index.html.bak",
          "index.cjs",
          "index.js",
          "server/api/admin/index.ts",
          "server/controllers/index.ts",
          "server/index.ts",
          "server/public/index.html",
          "server/services/index.ts",
          "server/utils/index.ts"
        ]
      },
      {
        "baseName": "routes-new",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "baseName": "routes",
        "files": [
          "backup/routes/routes.ts",
          "server/telegram/routes.ts"
        ]
      },
      {
        "baseName": "browser-access",
        "files": [
          "browser-access.cjs",
          "browser-access.js"
        ]
      },
      {
        "baseName": "check-deploy-exports",
        "files": [
          "check-deploy-exports.cjs",
          "check-deploy-exports.js"
        ]
      },
      {
        "baseName": "check-partition-status",
        "files": [
          "check-partition-status.cjs",
          "check-partition-status.js"
        ]
      },
      {
        "baseName": "check-production-url",
        "files": [
          "check-production-url.js",
          "check-production-url.mjs"
        ]
      },
      {
        "baseName": "check-replit-db",
        "files": [
          "check-replit-db.js",
          "check-replit-db.mjs"
        ]
      },
      {
        "baseName": "check-table-status",
        "files": [
          "check-table-status.cjs",
          "check-table-status.js"
        ]
      },
      {
        "baseName": "package",
        "files": [
          "client/package.json",
          "client/postcss/package.json",
          "package.json"
        ]
      },
      {
        "baseName": "container",
        "files": [
          "client/postcss/lib/container.js",
          "client/src/components/ui/container.tsx"
        ]
      },
      {
        "baseName": "input",
        "files": [
          "client/postcss/lib/input.js",
          "client/src/components/ui/input.tsx"
        ]
      },
      {
        "baseName": "postcss.d",
        "files": [
          "client/postcss/lib/postcss.d.mts",
          "client/postcss/lib/postcss.d.ts"
        ]
      },
      {
        "baseName": "postcss",
        "files": [
          "client/postcss/lib/postcss.js",
          "client/postcss/lib/postcss.mjs"
        ]
      },
      {
        "baseName": "postcss.config",
        "files": [
          "client/postcss.config.cjs",
          "postcss.config.js"
        ]
      },
      {
        "baseName": "redirect",
        "files": [
          "client/public/redirect.html",
          "dist/public/redirect.html"
        ]
      },
      {
        "baseName": "tonconnect-manifest",
        "files": [
          "client/public/tonconnect-manifest.json",
          "dist/public/tonconnect-manifest.json",
          "server/public/tonconnect-manifest.json"
        ]
      },
      {
        "baseName": "BoostPackagesCard",
        "files": [
          "client/src/components/farming/BoostPackagesCard.tsx",
          "client/src/components/ton-boost/BoostPackagesCard.tsx"
        ]
      },
      {
        "baseName": "global.d",
        "files": [
          "client/src/global.d.ts",
          "client/src/types/global.d.ts",
          "types/global.d.ts"
        ]
      },
      {
        "baseName": "main",
        "files": [
          "client/src/main.tsx",
          "main.js"
        ]
      },
      {
        "baseName": "Farming",
        "files": [
          "client/src/pages/Farming.tsx",
          "client/src_backup/Farming.tsx"
        ]
      },
      {
        "baseName": "referralService",
        "files": [
          "client/src/services/referralService.ts",
          "server/services/referralService.ts"
        ]
      },
      {
        "baseName": "telegramService",
        "files": [
          "client/src/services/telegramService.ts",
          "server/services/telegramService.ts"
        ]
      },
      {
        "baseName": "transactionService",
        "files": [
          "client/src/services/transactionService.ts",
          "server/services/transactionService.ts"
        ]
      },
      {
        "baseName": "userService",
        "files": [
          "client/src/services/userService.ts",
          "server/services/userService.ts"
        ]
      },
      {
        "baseName": "logger",
        "files": [
          "client/src/utils/logger.ts",
          "server/utils/logger.ts"
        ]
      },
      {
        "baseName": "create-test-referral",
        "files": [
          "create-test-referral.js",
          "create-test-referral.mjs"
        ]
      },
      {
        "baseName": "db-connection-test",
        "files": [
          "db-connection-test.js",
          "server/tests/db-connection-test.ts"
        ]
      },
      {
        "baseName": "db-status",
        "files": [
          "db-status.js",
          "server/api/admin/db-status.ts"
        ]
      },
      {
        "baseName": "debug-deposit-response",
        "files": [
          "debug-deposit-response.js",
          "debug-deposit-response.mjs"
        ]
      },
      {
        "baseName": "deploy-to-replit",
        "files": [
          "deploy-to-replit.cjs",
          "deploy-to-replit.js"
        ]
      },
      {
        "baseName": "deploy",
        "files": [
          "deploy.cjs",
          "deploy.js",
          "deploy.log"
        ]
      },
      {
        "baseName": "dev-production",
        "files": [
          "dev-production.cjs",
          "dev-production.js"
        ]
      },
      {
        "baseName": "direct-access",
        "files": [
          "direct-access.cjs",
          "direct-access.js"
        ]
      },
      {
        "baseName": "telegram-bot-setup",
        "files": [
          "docs/telegram-bot-setup.md",
          "telegram-bot-setup.js"
        ]
      },
      {
        "baseName": "fix-neon-partitions",
        "files": [
          "fix-neon-partitions.cjs",
          "fix-neon-partitions.js"
        ]
      },
      {
        "baseName": "fix-webhook",
        "files": [
          "fix-webhook.cjs",
          "fix-webhook.js"
        ]
      },
      {
        "baseName": "force-correct-db",
        "files": [
          "force-correct-db.js",
          "server/force-correct-db.ts"
        ]
      },
      {
        "baseName": "keep-alive",
        "files": [
          "keep-alive.cjs",
          "keep-alive.js",
          "keep-alive.log"
        ]
      },
      {
        "baseName": "webhook-test",
        "files": [
          "logs/webhook-test.log",
          "webhook-test.cjs",
          "webhook-test.js"
        ]
      },
      {
        "baseName": "migrate-replit-db",
        "files": [
          "migrate-replit-db.cjs",
          "migrate-replit-db.js",
          "migrate-replit-db.mjs"
        ]
      },
      {
        "baseName": "create_auto_partitioned_transactions",
        "files": [
          "migrations/create_auto_partitioned_transactions.ts",
          "server/migrations/create_auto_partitioned_transactions.ts"
        ]
      },
      {
        "baseName": "create_partition_logs",
        "files": [
          "migrations/create_partition_logs.ts",
          "server/migrations/create_partition_logs.ts"
        ]
      },
      {
        "baseName": "neon-server",
        "files": [
          "neon-server.log",
          "neon-server.pid"
        ]
      },
      {
        "baseName": "neon-start",
        "files": [
          "neon-start.js",
          "neon-start.sh"
        ]
      },
      {
        "baseName": "neon-workflow",
        "files": [
          "neon-workflow.cjs",
          "neon-workflow.js",
          "neon-workflow.mjs"
        ]
      },
      {
        "baseName": "no-exit",
        "files": [
          "no-exit.js",
          "no-exit.mjs"
        ]
      },
      {
        "baseName": "production-server",
        "files": [
          "production-server.js",
          "production-server.mjs"
        ]
      },
      {
        "baseName": "run-memory-mode",
        "files": [
          "run-memory-mode.js",
          "run-memory-mode.mjs"
        ]
      },
      {
        "baseName": "run-migration",
        "files": [
          "run-migration.cjs",
          "run-migration.js"
        ]
      },
      {
        "baseName": "run-with-neon",
        "files": [
          "run-with-neon.cjs",
          "run-with-neon.js"
        ]
      },
      {
        "baseName": "run",
        "files": [
          "run.cjs",
          "run.js"
        ]
      },
      {
        "baseName": "apply-referral-optimization",
        "files": [
          "scripts/apply-referral-optimization.ts",
          "server/api/admin/apply-referral-optimization.ts"
        ]
      },
      {
        "baseName": "webhook",
        "files": [
          "server/api/admin/webhook.ts",
          "server/telegram/webhook.ts"
        ]
      },
      {
        "baseName": "db-monitor",
        "files": [
          "server/api/db-monitor.ts",
          "server/public/db-monitor.html"
        ]
      },
      {
        "baseName": "health",
        "files": [
          "server/api/health.ts",
          "server/public/health.html"
        ]
      },
      {
        "baseName": "partition-controller",
        "files": [
          "server/controllers/partition-controller.js",
          "server/controllers/partition-controller.ts"
        ]
      },
      {
        "baseName": "setup-telegram",
        "files": [
          "server/middleware/setup-telegram.ts",
          "setup-telegram.js"
        ]
      },
      {
        "baseName": "clear_old_partitions",
        "files": [
          "server/scripts/clear_old_partitions.js",
          "server/scripts/clear_old_partitions.ts"
        ]
      },
      {
        "baseName": "cron_scheduler",
        "files": [
          "server/scripts/cron_scheduler.js",
          "server/scripts/cron_scheduler.ts"
        ]
      },
      {
        "baseName": "partition-service",
        "files": [
          "server/services/partition-service.js",
          "server/services/partition-service.ts"
        ]
      },
      {
        "baseName": "start-app-with-replit-db",
        "files": [
          "start-app-with-replit-db.cjs",
          "start-app-with-replit-db.js"
        ]
      },
      {
        "baseName": "start-app",
        "files": [
          "start-app.cjs",
          "start-app.js",
          "start-app.mjs"
        ]
      },
      {
        "baseName": "start-neon",
        "files": [
          "start-neon.cjs",
          "start-neon.sh"
        ]
      },
      {
        "baseName": "start-replit",
        "files": [
          "start-replit.cjs",
          "start-replit.js"
        ]
      },
      {
        "baseName": "start-unified",
        "files": [
          "start-unified.cjs",
          "start-unified.js"
        ]
      },
      {
        "baseName": "start-with-neon",
        "files": [
          "start-with-neon.cjs",
          "start-with-neon.sh"
        ]
      },
      {
        "baseName": "start-with-replit-db",
        "files": [
          "start-with-replit-db.js",
          "start-with-replit-db.mjs"
        ]
      },
      {
        "baseName": "start",
        "files": [
          "start.cjs",
          "start.js",
          "start.sh"
        ]
      },
      {
        "baseName": "test-db-connection",
        "files": [
          "test-db-connection.cjs",
          "test-db-connection.js",
          "test-db-connection.mjs"
        ]
      },
      {
        "baseName": "test-neon-connection",
        "files": [
          "test-neon-connection.cjs",
          "test-neon-connection.js"
        ]
      },
      {
        "baseName": "test-referral-system",
        "files": [
          "test-referral-system.cjs",
          "test-referral-system.js"
        ]
      },
      {
        "baseName": "test-ton-farming-api",
        "files": [
          "test-ton-farming-api.js",
          "test-ton-farming-api.mjs"
        ]
      },
      {
        "baseName": "test-webhook",
        "files": [
          "test-webhook.cjs",
          "test-webhook.js"
        ]
      },
      {
        "baseName": "workflow-auto-restart",
        "files": [
          "workflow-auto-restart.js",
          "workflow-auto-restart.mjs"
        ]
      }
    ],
    "backupFiles": [
      "dist/public/index.html.bak"
    ],
    "totalFiles": 1064
  },
  "functions": {
    "duplicateFunctions": [
      {
        "name": "handleStartCommand",
        "files": [
          "archive/telegram-bot-scripts/setup-bot-commands.js"
        ]
      },
      {
        "name": "handleAppCommand",
        "files": [
          "archive/telegram-bot-scripts/setup-bot-commands.js"
        ]
      },
      {
        "name": "handleWithdraw",
        "files": [
          "bug-fixes-proposal.js"
        ]
      },
      {
        "name": "harvestFarming",
        "files": [
          "bug-fixes-proposal.js"
        ]
      },
      {
        "name": "getDeposits",
        "files": [
          "bug-fixes-proposal.js"
        ]
      },
      {
        "name": "getReferralTree",
        "files": [
          "bug-fixes-proposal.js"
        ]
      },
      {
        "name": "postcss",
        "files": [
          "client/postcss/lib/postcss.d.ts"
        ]
      },
      {
        "name": "getYCoordinate",
        "files": [
          "client/src/components/dashboard/ChartCard.tsx"
        ]
      },
      {
        "name": "is",
        "files": [
          "client/src/services/tonConnectService.ts"
        ]
      },
      {
        "name": "n",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "r",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "t",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "s",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "S",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "j",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "P",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "k",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "T",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "F",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "B",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "i",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "o",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "a",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "c",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "u",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "d",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "h",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "f",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "g",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "m",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "v",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "b",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "D",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "p",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "R",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "w",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "y",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "C",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "E",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "L",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "V",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "ge",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "Z",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "M",
        "files": [
          "server/public/assets/index-_I1TwduP.js"
        ]
      },
      {
        "name": "logPartitionOperation",
        "files": [
          "server/scripts/partition_helper.ts"
        ]
      }
    ],
    "duplicateComponents": [],
    "totalFunctions": 2903,
    "totalComponents": 31
  },
  "apiRoutes": {
    "duplicateRoutes": [
      {
        "route": "GET content-type",
        "files": [
          "api-audit.js",
          "comprehensive-api-db-audit.js"
        ]
      },
      {
        "route": "GET /api/v2/...",
        "files": [
          "api-routes-checker.js"
        ]
      },
      {
        "route": "POST /api/v2/...\n  const routeRegex = /app\\.(get|post|put|delete)\\s*\\(\\s*[",
        "files": [
          "api-routes-checker.js"
        ]
      },
      {
        "route": "GET /health",
        "files": [
          "backup/routes/routes-fixed.ts",
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /UniFarm*",
        "files": [
          "backup/routes/routes-fixed.ts",
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/v2/session/restore",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/session/generate-guest-id",
        "files": [
          "backup/routes/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/users/:id",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/users/username/:username",
        "files": [
          "backup/routes/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/users/guest/:guestId",
        "files": [
          "backup/routes/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/users/ref-code/:refCode",
        "files": [
          "backup/routes/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/users",
        "files": [
          "backup/routes/routes-new.ts"
        ]
      },
      {
        "route": "PUT /api/v2/users/:id/ref-code",
        "files": [
          "backup/routes/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/users/:userId/transactions",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/users/:userId/deposit",
        "files": [
          "backup/routes/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/users/:userId/withdraw",
        "files": [
          "backup/routes/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/transactions",
        "files": [
          "backup/routes/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/missions/active",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/user-missions",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/missions/with-completion",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/missions/check/:userId/:missionId",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/missions/complete",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/referrals/tree",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/referrals/stats",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/referrals/apply",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/daily-bonus/status",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/daily-bonus/claim",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/daily-bonus/streak-info",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/wallet/balance",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/wallet/connect",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/wallet/disconnect",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/wallet/transactions",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/wallet/withdraw",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/ton-farming/boosts",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/ton-farming/active",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/ton-farming/purchase",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/ton-farming/confirm-payment",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/ton-farming/info",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/ton-farming/update",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/boosts",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/boosts/active",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/boosts/purchase",
        "files": [
          "backup/routes/routes-new.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/health",
        "files": [
          "backup/routes/routes.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/ping",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/db-monitor/status",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/db-monitor/reconnect",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/db-monitor/check",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/test-json",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/admin/db-status",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/db-selector/status",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/telegram-debug",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/auth/telegram",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/session/restore",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/register",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/auth/guest/register",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/security/validate-telegram",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/security/check-permission",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/security/sanitize",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/airdrop/register",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/system/status",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/log-launch",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/auth/test-referral",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/users/guest/:guest_id",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/users/:id",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/users/generate-refcode",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/wallet/balance",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/me",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/restore-session",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/database/check-connection",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/database/status",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/database/tables",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/database/tables/:tableName",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/database/backup-table/:tableName",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/database/check-integrity",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/database/execute-query",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/database/add-missing-columns",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/admin/migrate-farming-data",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/admin/check-farming-status/:userId",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /debug/me/raw",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/admin/users/list-with-telegram-id",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/admin/db/status",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/admin/db/tables",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/admin/db/tables/:tableName",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/admin/db/tables/:tableName/backup",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/admin/db/integrity",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/admin/db/query",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/system/partitions/list",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/system/partitions/logs",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/system/partitions/status",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/system/partitions/create-future",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/telegram/validate-init-data",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /webhook",
        "files": [
          "backup/routes/routes.ts",
          "server/telegram/routes.ts"
        ]
      },
      {
        "route": "POST /api/telegram/webhook",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/telegram/mini-app-info",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/telegram/register",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/test/referral/link",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/test/referral/user/:userId",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/test/referral/chain",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/admin/db-monitor",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/admin/migrate-ref-codes",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/admin/update-user-ref-code",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/admin/set-ref-code",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/telegram/set-webhook",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/telegram/delete-webhook",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/telegram/webhook-info",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/telegram/set-commands",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/telegram/send-test-message",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/telegram/notify-app-status",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/user/link-wallet",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/user/wallet-address",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/user/wallet-info",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/user/transactions",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/user/withdraw",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/transactions",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/transactions/:user_id",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/withdraw",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/transactions/create",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/missions/active",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/user_missions",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/missions/with-completion",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/missions/check/:userId/:missionId",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/missions/complete",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/farming-deposits",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/deposit",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/referrals",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/referrals/inviter/:id",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/referral/register-start-param",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/referrals/tree",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/referrals/stats",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/referrals/tree/optimized",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/referrals/structure",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/system/referrals/toggle-optimized",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/system/referrals/metrics",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/daily-bonus/status",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/daily-bonus/claim",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/uni-farming/info",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/uni-farming/status",
        "files": [
          "backup/routes/routes.ts",
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/uni-farming/deposit",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/uni-farming/deposits",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/uni-farming/harvest",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/uni-farming/simulate-reward",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/new-uni-farming/info",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/new-uni-farming/update-balance",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/new-uni-farming/deposit",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/new-uni-farming/deposits",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/boosts",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/boosts/active",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/boosts/purchase",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/ton-boosts",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/ton-boosts/active",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/ton-boosts/purchase",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/ton-boosts/confirm-payment",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/ton-boosts/process-incoming-transaction",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/ton-farming/info",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/ton-farming/update-balance",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/ton-farming/active",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/ton-farming/update",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/ton-farming/update-all",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/ton-farming/harvest",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "POST /api/db/query",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/farming/boosts/active",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/system/referrals/mode",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /dev-mode",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET */",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /api/websocket/status",
        "files": [
          "backup/routes/routes.ts"
        ]
      },
      {
        "route": "GET /status",
        "files": [
          "server/api/partition-routes.ts",
          "server/telegram/routes.ts"
        ]
      },
      {
        "route": "POST /create-future",
        "files": [
          "server/api/partition-routes.ts"
        ]
      },
      {
        "route": "POST /maintenance",
        "files": [
          "server/api/partition-routes.ts"
        ]
      },
      {
        "route": "POST /lifecycle",
        "files": [
          "server/api/partition-routes.ts"
        ]
      },
      {
        "route": "GET /logs",
        "files": [
          "server/api/partition-routes.ts"
        ]
      },
      {
        "route": "GET /api/missions",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/quick-db-test",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/debug/routes-status",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/register/telegram",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/db/reconnect",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/db/events",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/users/guest/:guest_id",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/me",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/missions/user-completed",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/referral/code",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/referral/generate-code",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/referral/tree",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/referral/stats",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/users/generate-refcode",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/v2/uni-farming/status",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/uni-farming/purchase",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/uni-farming/withdraw",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/v2/register/auto",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/register/guest",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/auth/validate-init-data",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "GET /api/metrics",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/metrics/reset",
        "files": [
          "server/routes-new.ts"
        ]
      },
      {
        "route": "POST /api/system/force-recovery",
        "files": [
          "server/routes-new.ts"
        ]
      }
    ],
    "totalRoutes": 200,
    "allRoutes": [
      "GET content-type",
      "GET /api/v2/...",
      "POST /api/v2/...\n  const routeRegex = /app\\.(get|post|put|delete)\\s*\\(\\s*[",
      "GET /health",
      "GET /UniFarm*",
      "POST /api/v2/session/restore",
      "GET /api/v2/session/generate-guest-id",
      "GET /api/v2/users/:id",
      "GET /api/v2/users/username/:username",
      "GET /api/v2/users/guest/:guestId",
      "GET /api/v2/users/ref-code/:refCode",
      "POST /api/v2/users",
      "PUT /api/v2/users/:id/ref-code",
      "GET /api/v2/users/:userId/transactions",
      "POST /api/v2/users/:userId/deposit",
      "POST /api/v2/users/:userId/withdraw",
      "POST /api/v2/transactions",
      "GET /api/v2/missions/active",
      "GET /api/v2/user-missions",
      "GET /api/v2/missions/with-completion",
      "GET /api/v2/missions/check/:userId/:missionId",
      "POST /api/v2/missions/complete",
      "GET /api/v2/referrals/tree",
      "GET /api/v2/referrals/stats",
      "POST /api/v2/referrals/apply",
      "GET /api/v2/daily-bonus/status",
      "POST /api/v2/daily-bonus/claim",
      "GET /api/v2/daily-bonus/streak-info",
      "GET /api/v2/wallet/balance",
      "POST /api/v2/wallet/connect",
      "POST /api/v2/wallet/disconnect",
      "GET /api/v2/wallet/transactions",
      "POST /api/v2/wallet/withdraw",
      "GET /api/v2/ton-farming/boosts",
      "GET /api/v2/ton-farming/active",
      "POST /api/v2/ton-farming/purchase",
      "POST /api/v2/ton-farming/confirm-payment",
      "GET /api/v2/ton-farming/info",
      "POST /api/v2/ton-farming/update",
      "GET /api/v2/boosts",
      "GET /api/v2/boosts/active",
      "POST /api/v2/boosts/purchase",
      "GET /",
      "GET /api/health",
      "GET /api/ping",
      "GET /api/db-monitor/status",
      "POST /api/db-monitor/reconnect",
      "POST /api/db-monitor/check",
      "GET /api/test-json",
      "GET /api/admin/db-status",
      "GET /api/db-selector/status",
      "GET /api/telegram-debug",
      "POST /api/auth/telegram",
      "POST /api/session/restore",
      "POST /api/register",
      "POST /api/auth/guest/register",
      "POST /api/security/validate-telegram",
      "POST /api/security/check-permission",
      "POST /api/security/sanitize",
      "POST /api/airdrop/register",
      "GET /api/system/status",
      "POST /api/log-launch",
      "POST /api/auth/test-referral",
      "GET /api/users/guest/:guest_id",
      "GET /api/users/:id",
      "POST /api/users/generate-refcode",
      "GET /api/wallet/balance",
      "GET /api/me",
      "GET /api/restore-session",
      "GET /api/database/check-connection",
      "GET /api/database/status",
      "GET /api/database/tables",
      "GET /api/database/tables/:tableName",
      "POST /api/database/backup-table/:tableName",
      "GET /api/database/check-integrity",
      "POST /api/database/execute-query",
      "POST /api/database/add-missing-columns",
      "POST /api/admin/migrate-farming-data",
      "GET /api/admin/check-farming-status/:userId",
      "GET /debug/me/raw",
      "GET /api/admin/users/list-with-telegram-id",
      "GET /api/admin/db/status",
      "GET /api/admin/db/tables",
      "GET /api/admin/db/tables/:tableName",
      "GET /api/admin/db/tables/:tableName/backup",
      "GET /api/admin/db/integrity",
      "POST /api/admin/db/query",
      "GET /api/system/partitions/list",
      "GET /api/system/partitions/logs",
      "GET /api/system/partitions/status",
      "POST /api/system/partitions/create-future",
      "POST /api/telegram/validate-init-data",
      "POST /webhook",
      "POST /api/telegram/webhook",
      "GET /api/telegram/mini-app-info",
      "POST /api/telegram/register",
      "POST /api/test/referral/link",
      "GET /api/test/referral/user/:userId",
      "POST /api/test/referral/chain",
      "GET /api/admin/db-monitor",
      "POST /api/admin/migrate-ref-codes",
      "POST /api/admin/update-user-ref-code",
      "POST /api/admin/set-ref-code",
      "POST /api/telegram/set-webhook",
      "POST /api/telegram/delete-webhook",
      "GET /api/telegram/webhook-info",
      "POST /api/telegram/set-commands",
      "POST /api/telegram/send-test-message",
      "POST /api/telegram/notify-app-status",
      "POST /api/user/link-wallet",
      "GET /api/user/wallet-address",
      "GET /api/user/wallet-info",
      "GET /api/user/transactions",
      "POST /api/user/withdraw",
      "GET /api/transactions",
      "GET /api/transactions/:user_id",
      "POST /api/withdraw",
      "POST /api/transactions/create",
      "GET /api/missions/active",
      "GET /api/user_missions",
      "GET /api/missions/with-completion",
      "GET /api/missions/check/:userId/:missionId",
      "POST /api/missions/complete",
      "GET /api/farming-deposits",
      "POST /api/deposit",
      "GET /api/referrals",
      "GET /api/referrals/inviter/:id",
      "POST /api/referral/register-start-param",
      "GET /api/referrals/tree",
      "GET /api/referrals/stats",
      "GET /api/referrals/tree/optimized",
      "GET /api/referrals/structure",
      "POST /api/system/referrals/toggle-optimized",
      "GET /api/system/referrals/metrics",
      "GET /api/daily-bonus/status",
      "POST /api/daily-bonus/claim",
      "GET /api/uni-farming/info",
      "GET /api/uni-farming/status",
      "POST /api/uni-farming/deposit",
      "GET /api/uni-farming/deposits",
      "POST /api/uni-farming/harvest",
      "POST /api/uni-farming/simulate-reward",
      "GET /api/new-uni-farming/info",
      "GET /api/new-uni-farming/update-balance",
      "POST /api/new-uni-farming/deposit",
      "GET /api/new-uni-farming/deposits",
      "GET /api/boosts",
      "GET /api/boosts/active",
      "POST /api/boosts/purchase",
      "GET /api/ton-boosts",
      "GET /api/ton-boosts/active",
      "POST /api/ton-boosts/purchase",
      "POST /api/ton-boosts/confirm-payment",
      "POST /api/ton-boosts/process-incoming-transaction",
      "GET /api/ton-farming/info",
      "GET /api/ton-farming/update-balance",
      "GET /api/ton-farming/active",
      "POST /api/ton-farming/update",
      "POST /api/ton-farming/update-all",
      "POST /api/ton-farming/harvest",
      "POST /api/db/query",
      "GET /api/farming/boosts/active",
      "GET /api/system/referrals/mode",
      "GET /dev-mode",
      "GET */",
      "GET /api/websocket/status",
      "GET user_id",
      "GET hash",
      "GET user",
      "GET /status",
      "POST /create-future",
      "POST /maintenance",
      "POST /lifecycle",
      "GET /logs",
      "GET /api/missions",
      "GET /api/quick-db-test",
      "GET /api/debug/routes-status",
      "POST /api/register/telegram",
      "POST /api/db/reconnect",
      "GET /api/db/events",
      "GET /api/v2/users/guest/:guest_id",
      "GET /api/v2/me",
      "GET /api/v2/missions/user-completed",
      "GET /api/v2/referral/code",
      "POST /api/v2/referral/generate-code",
      "GET /api/v2/referral/tree",
      "GET /api/v2/referral/stats",
      "POST /api/v2/users/generate-refcode",
      "GET /api/v2/uni-farming/status",
      "POST /api/v2/uni-farming/purchase",
      "POST /api/v2/uni-farming/withdraw",
      "POST /api/v2/register/auto",
      "POST /api/register/guest",
      "POST /api/auth/validate-init-data",
      "GET /api/metrics",
      "POST /api/metrics/reset",
      "POST /api/system/force-recovery",
      "POST /setup",
      "GET /setup-webhook",
      "GET /webhook-info"
    ]
  },
  "dbDuplicates": [],
  "configs": {
    "envVarsUsage": 86,
    "constantsUsage": 294,
    "mostUsedEnvVars": [
      [
        "DATABASE_URL",
        [
          "SQL_db_inspection.js",
          "adapter.js",
          "adapter.js",
          "add-test-balance-cli.js",
          "analyze-refcodes.js",
          "api-controller-db-audit.js",
          "app-integrator.js",
          "app-integrator.js",
          "archive/db-backups/db-neon.ts",
          "archive/db-backups/db-neon.ts",
          "archive/db-backups/db-standard.ts",
          "archive/db-backups/db-standard.ts",
          "backup/index.ts",
          "benchmark-referral-bonus.js",
          "check-db-connection.js",
          "check-db-connection.js",
          "check-db-details.js",
          "check-db-details.js",
          "check-db-details.js",
          "check-db-secure.js",
          "check-db-secure.js",
          "check-neon-components.js",
          "check-neon-components.js",
          "check-neon-connection.js",
          "check-neon-connection.js",
          "check-neon-connection.js",
          "check-neon-db-connection.js",
          "check-neon-direct.js",
          "check-neon-direct.js",
          "check-neon-settings.js",
          "check-neon-settings.js",
          "check-neon-settings.js",
          "check-neon-settings.js",
          "check-neon-ssl.js",
          "check-neon-ssl.js",
          "check-partitioning.js",
          "check-partitioning.js",
          "check-production-db.js",
          "check-production-db.js",
          "check-referral-levels.js",
          "check-status.js",
          "check-table-status.js",
          "check-table-status.js",
          "check-telegram-flow.js",
          "check-users.js",
          "comprehensive-system-audit.js",
          "cors-fix-diagnosis.js",
          "cors-fix-diagnosis.js",
          "create-multiple-users.js",
          "create-neon-partitions.js",
          "create-neon-partitions.js",
          "create-test-user.js",
          "db-connection-diagnosis.js",
          "db-connection-diagnosis.js",
          "db-connection-diagnosis.js",
          "db-connection-diagnosis.js",
          "db-connection-fix.js",
          "db-connection-fix.js",
          "db-connection-fix.js",
          "db-connection-test.js",
          "db-connection-test.js",
          "db-connection-test.js",
          "db-health-check.js",
          "db-health-check.js",
          "db-schema-diagnosis.js",
          "db-schema-diagnosis.js",
          "db-schema-diagnosis.js",
          "db-selector-debug.js",
          "db-selector-debug.js",
          "db-status.js",
          "deploy-config.js",
          "deploy-to-replit.js",
          "deploy-to-replit.js",
          "direct-neon-schema.js",
          "direct-neon-schema.js",
          "direct-neon-schema.js",
          "direct-neon-start.js",
          "direct-neon-start.js",
          "direct-neon-start.js",
          "display-env-vars.js",
          "display-env-vars.js",
          "display-env-vars.js",
          "drizzle.config.ts",
          "drizzle.config.ts",
          "execute-sql-direct.js",
          "fix-neon-partitions.js",
          "fix-neon-partitions.js",
          "fix-pghost.js",
          "fix-pghost.js",
          "force-correct-db.js",
          "force-correct-db.js",
          "force-correct-db.js",
          "force-db-connection.js",
          "force-db-connection.js",
          "force-db-redirect.js",
          "init-neon-db.js",
          "init-neon-db.js",
          "integration.js",
          "integration.js",
          "integration.js",
          "migrate-neon-db.js",
          "migrate-neon-db.js",
          "migrate-neon-db.js",
          "migrations/apply-migrations.js",
          "migrations/apply-migrations.js",
          "migrations/create_auto_partitioned_transactions.ts",
          "migrations/create_auto_partitioned_transactions.ts",
          "migrations/create_partition_logs.ts",
          "migrations/create_partition_logs.ts",
          "migrations/init.ts",
          "migrations/init.ts",
          "neon-connection-test.js",
          "neon-start.js",
          "neon-start.js",
          "neon-start.js",
          "parse-db-url.js",
          "prod-test.js",
          "replit-db-setup.js",
          "replit-db-setup.js",
          "replit-db-setup.js",
          "riotmap-system-audit.js",
          "routes-integrator.js",
          "routes-integrator.js",
          "run-database-sync.js",
          "run-with-neon.js",
          "run-with-neon.js",
          "run-with-neon.js",
          "scripts/create-test-missions.js",
          "server/api/db-monitor.ts",
          "server/api/db-selector-status.ts",
          "server/api/db-selector-status.ts",
          "server/db-interceptor.ts",
          "server/db-override.ts",
          "server/db-override.ts",
          "server/db-override.ts",
          "server/db-override.ts",
          "server/db-override.ts",
          "server/db-override.ts",
          "server/db-override.ts",
          "server/db-unified.ts",
          "server/force-correct-db.ts",
          "server/force-correct-db.ts",
          "server/force-correct-db.ts",
          "server/migrations/create_auto_partitioned_transactions.ts",
          "server/migrations/create_unified_partition_logs.ts",
          "server/scripts/clear_old_partitions.ts",
          "server/scripts/clear_old_partitions.ts",
          "server/single-db-connection.ts",
          "session-manager.js",
          "simple-db-check.js",
          "simple-test-db.js",
          "simple-test-db.js",
          "standardize-refcodes.js",
          "standardize-refcodes.js",
          "start-deployment.js",
          "start-unified.js",
          "start-with-neon-db.js",
          "start-with-neon-db.js",
          "start-with-neon-db.js",
          "start-with-replit-db.js",
          "start-with-replit-db.js",
          "start-with-replit-db.js",
          "start-with-replit-db.js",
          "test-bonus-processor.js",
          "test-db-connection.js",
          "test-neon-connection.js",
          "test-neon-connection.js",
          "test-neon-connection.js",
          "test-neon-integration.js",
          "test-neon-integration.js",
          "test-optimized-referrals.js",
          "test-performance-short.js",
          "test-performance.js",
          "test-referral-batch-performance.js",
          "test-referral-batch-performance.js",
          "test-referral-deep-levels.js",
          "test-referral-structure.js",
          "test-telegram-registration-diagnosis.js",
          "test-unifarm-system.js",
          "update-missing-refcodes.js",
          "update-missing-refcodes.js",
          "update-ton-balance.js"
        ]
      ],
      [
        "NODE_ENV",
        [
          "backup/index.ts",
          "backup/index.ts",
          "backup/index.ts",
          "backup/index.ts",
          "backup/index.ts",
          "backup/index.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "browser-access.js",
          "client/postcss/lib/lazy-result.js",
          "client/postcss/lib/lazy-result.js",
          "client/postcss/lib/no-work-result.js",
          "client/postcss/lib/parse.js",
          "client/postcss/lib/processor.js",
          "client/src/App.tsx",
          "client/src/components/common/QueryErrorBoundary.tsx",
          "client/src/components/common/QueryErrorBoundary.tsx",
          "client/src/components/ui/ErrorBoundary.tsx",
          "client/src/components/wallet/BalanceCard.tsx",
          "client/src/components/wallet/BalanceCard.tsx",
          "client/src/hooks/useWebSocket.ts",
          "client/src/hooks/useWebSocket.ts",
          "client/src/hooks/useWebSocket.ts",
          "client/src/lib/correctApiRequest.ts",
          "client/src/lib/queryClient.ts",
          "client/src/main-backup.tsx",
          "client/src/main.tsx",
          "client/src/services/sessionRestoreService.ts",
          "client/src/services/userService.ts",
          "client/src/utils/logger.ts",
          "cors-fix-diagnosis.js",
          "db-connection-test.js",
          "deploy-build.js",
          "deploy-fix.js",
          "deploy-server.js",
          "deploy-with-neon.js",
          "deploy.js",
          "deploy.js",
          "deploy.js",
          "dev-production.js",
          "direct-access.js",
          "direct-neon-start.js",
          "direct-neon-start.js",
          "display-env-vars.js",
          "in-memory-mode.js",
          "integration.js",
          "integration.js",
          "integration.js",
          "integration.js",
          "integration.js",
          "keep-running.js",
          "keep-running.js",
          "neon-app-start.js",
          "neon-app-start.js",
          "neon-direct.js",
          "neon-start.js",
          "neon-start.js",
          "neon-workflow.js",
          "neon-workflow.js",
          "no-exit.js",
          "prod-test.js",
          "prod-test.js",
          "production-server.js",
          "production-start.js",
          "production-start.js",
          "replit-production-fix.js",
          "replit-production-fix.js",
          "replit-production-fix.js",
          "routes-integrator.js",
          "routes-integrator.js",
          "routes-integrator.js",
          "routes-integrator.js",
          "routes-integrator.js",
          "routes-integrator.js",
          "run-with-neon-db.js",
          "run-with-neon-db.js",
          "run-with-neon.js",
          "run-with-neon.js",
          "run.js",
          "server/api/health.ts",
          "server/app-setup.ts",
          "server/controllers/authController.ts",
          "server/controllers/dailyBonusControllerConsolidated.ts",
          "server/controllers/partition-controller.js",
          "server/controllers/partition-controller.js",
          "server/controllers/partition-controller.js",
          "server/controllers/partition-controller.js",
          "server/controllers/partition-controller.js",
          "server/controllers/partition-controller.js",
          "server/controllers/securityController.ts",
          "server/controllers/userController.ts",
          "server/controllers/walletControllerConsolidated.ts",
          "server/index.ts",
          "server/index.ts",
          "server/index.ts",
          "server/index.ts",
          "server/middleware/errorHandler.ts",
          "server/middleware/errorHandler.ts",
          "server/routes-new.ts",
          "server/services/adminServiceInstance.ts",
          "server/services/authServiceInstance.ts",
          "server/telegram/middleware.ts",
          "server/telegram/routes.ts",
          "server/telegram/smartBot.ts",
          "server/telegramAdminBot.ts",
          "server/telegramAdminBot.v2.ts",
          "server/telegramAdminBotNew.ts",
          "server/utils/logger.ts",
          "server.js",
          "server.js",
          "session-manager.js",
          "session-manager.js",
          "setup-admin-bot.js",
          "start-deployment.js",
          "start-deployment.js",
          "start-dev.js",
          "start-dev.js",
          "start-mini-app.js",
          "start-neon-app.js",
          "start-neon-app.js",
          "start-neon-workflow.js",
          "start-neon-workflow.js",
          "start-replit.js",
          "start-unifarm.js",
          "start-unified.js",
          "start-unified.js",
          "start-with-check.js",
          "start.js",
          "telegram-app-workflow.js",
          "telegram-integration.js",
          "telegram-integration.js",
          "telegram-integration.js",
          "telegram-mini-app-server.js",
          "test-smart-bot.js",
          "unified-fix.js",
          "unified-fix.js",
          "unified-fix.js",
          "unified-fix.js",
          "vite.config.ts",
          "workflow-neon-rewrite.js"
        ]
      ],
      [
        "TELEGRAM_BOT_TOKEN",
        [
          "archive/telegram-bot-scripts/configure-webhook.js",
          "archive/telegram-bot-scripts/setup-bot-commands.js",
          "archive/telegram-bot-scripts/setup-telegram-mini-app.js",
          "archive/telegram-bot-scripts/setup-telegram-webhook.js",
          "archive/telegram-bot-scripts/setup-unifarm-bot.js",
          "archive/telegram-bot-scripts/setup-webhook.js",
          "archive/telegram-bot-scripts/update-commands.js",
          "archive/telegram-bot-scripts/update-menu-button.js",
          "archive/telegram-bot-scripts/update-menu-only.js",
          "auth-flow-diagnosis.js",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "check-bot-settings.js",
          "check-mini-app-url.js",
          "check-production-url.js",
          "check-status.js",
          "check-telegram-auth.js",
          "check-telegram-auth.js",
          "check-telegram-readiness.js",
          "check-telegram-webhook.js",
          "check-telegram-webhook.js",
          "create-new-miniapp.js",
          "debug-bot-commands.js",
          "deploy-to-replit.js",
          "display-env-vars.js",
          "final-bot-setup.js",
          "final-bot-test.js",
          "final-url-fix.js",
          "fix-mini-app-settings.js",
          "fix-telegram-miniapp-url.js",
          "fix-webhook-final.js",
          "fix-webhook-urgent.js",
          "fix-webhook.js",
          "force-cache-clear.js",
          "force-telegram-cache-clear.js",
          "integration.js",
          "integration.js",
          "routes-integrator.js",
          "routes-integrator.js",
          "server/app-setup.ts",
          "server/controllers/userController.ts",
          "server/index.ts",
          "server/middleware/setup-telegram.ts",
          "server/middleware/telegram-init-handler.ts",
          "server/middleware/telegram-init-handler.ts",
          "server/services/authServiceInstance.ts",
          "server/services/authServiceInstance.ts",
          "server/services/securityServiceInstance.ts",
          "server/services/telegramServiceInstance.ts",
          "server/services/telegramServiceInstance.ts",
          "server/telegram/bot.ts",
          "server/telegram/bot.ts",
          "server/telegram/bot.ts",
          "server/telegram/routes.ts",
          "server/telegram/setup-hook.ts",
          "server/telegram/setup-hook.ts",
          "server/telegram/setup-hook.ts",
          "server/telegram/setup-hook.ts",
          "server/telegram/smartBot.ts",
          "server/telegram/webhook.ts",
          "server/telegram/webhook.ts",
          "server/telegram/webhook.ts",
          "server/telegramAdminBotNew.ts",
          "server/telegramBot.ts",
          "setup-admin-bot.js",
          "setup-telegram-bot.js",
          "setup-telegram.js",
          "setup-webhook.js",
          "start-mini-app.js",
          "super-cache-clear.js",
          "telegram-auth-diagnosis.js",
          "telegram-auth-diagnosis.js",
          "telegram-auth-diagnosis.js",
          "telegram-auth-diagnosis.js",
          "telegram-auth-utils.js",
          "telegram-auth-utils.js",
          "telegram-bot-setup.js",
          "telegram-integration.js",
          "telegram-integration.js",
          "telegram-integration.js",
          "test-smart-bot.js",
          "test-telegram.js",
          "test-webhook.js",
          "ultimate-telegram-fix.js",
          "unified-fix.js",
          "unified-fix.js",
          "update-menu-button.js",
          "update-mini-app-url.js",
          "update-webhook.js",
          "verify-mini-app.js",
          "webhook-test.js"
        ]
      ],
      [
        "DATABASE_PROVIDER",
        [
          "adapter.js",
          "backup/index.ts",
          "check-neon-components.js",
          "check-neon-db-connection.js",
          "db-connect-fix.js",
          "db-connection-diagnosis.js",
          "db-connection-diagnosis.js",
          "db-connection-fix.js",
          "db-connection-fix.js",
          "db-schema-diagnosis.js",
          "db-selector-debug.js",
          "db-selector-debug.js",
          "db-selector-fix.js",
          "deploy-fix.js",
          "deploy-with-neon.js",
          "direct-access.js",
          "direct-access.js",
          "direct-neon-start.js",
          "direct-neon-start.js",
          "display-env-vars.js",
          "display-env-vars.js",
          "display-env-vars.js",
          "fix-partition-error.js",
          "in-memory-mode.js",
          "in-memory-mode.js",
          "keep-running.js",
          "keep-running.js",
          "migrate-neon-db.js",
          "neon-app-start.js",
          "neon-app-start.js",
          "neon-direct.js",
          "neon-start.js",
          "neon-start.js",
          "neon-workflow.js",
          "neon-workflow.js",
          "no-exit.js",
          "prod-test.js",
          "prod-test.js",
          "production-server.js",
          "production-start.js",
          "production-start.js",
          "run-with-neon-db.js",
          "run-with-neon-db.js",
          "run-with-neon.js",
          "run-with-neon.js",
          "server/api/admin/db-status.ts",
          "server/index.ts",
          "server.js",
          "server.js",
          "simple-test-db.js",
          "start-app-with-replit-db.js",
          "start-app.js",
          "start-app.js",
          "start-app.js",
          "start-deployment.js",
          "start-dev.js",
          "start-dev.js",
          "start-neon-app.js",
          "start-neon-app.js",
          "start-neon-workflow.js",
          "start-neon-workflow.js",
          "start-unifarm.js",
          "start-unified.js",
          "start-with-neon-db.js",
          "start-with-replit-db.js",
          "start-with-replit-db.js",
          "start-with-replit-db.js",
          "telegram-app-workflow.js",
          "telegram-mini-app-server.js"
        ]
      ],
      [
        "FORCE_NEON_DB",
        [
          "adapter.js",
          "archive/db-backups/db-selector-new.ts",
          "backup/index.ts",
          "backup/index.ts",
          "browser-access.js",
          "check-neon-db-connection.js",
          "db-connect-fix.js",
          "db-connection-diagnosis.js",
          "db-connection-diagnosis.js",
          "db-connection-fix.js",
          "db-schema-diagnosis.js",
          "db-selector-debug.js",
          "db-selector-debug.js",
          "db-selector-fix.js",
          "deploy-fix.js",
          "deploy-with-neon.js",
          "direct-access.js",
          "direct-access.js",
          "direct-neon-start.js",
          "direct-neon-start.js",
          "display-env-vars.js",
          "display-env-vars.js",
          "display-env-vars.js",
          "fix-partition-error.js",
          "keep-running.js",
          "keep-running.js",
          "migrate-neon-db.js",
          "neon-app-start.js",
          "neon-app-start.js",
          "neon-direct.js",
          "neon-start.js",
          "neon-start.js",
          "neon-workflow.js",
          "neon-workflow.js",
          "no-exit.js",
          "production-start.js",
          "production-start.js",
          "run-with-neon-db.js",
          "run-with-neon-db.js",
          "run-with-neon.js",
          "run-with-neon.js",
          "server/index.ts",
          "server.js",
          "server.js",
          "simple-test-db.js",
          "start-app.js",
          "start-deployment.js",
          "start-neon-app.js",
          "start-neon-app.js",
          "start-neon-workflow.js",
          "start-neon-workflow.js",
          "start-unified.js",
          "start-unified.js",
          "start-with-check.js",
          "start-with-neon-db.js"
        ]
      ],
      [
        "PORT",
        [
          "backup/index.ts",
          "backup/routes/routes-fixed.ts",
          "backup/routes/routes-fixed.ts",
          "backup/routes/routes.ts",
          "backup/routes/routes.ts",
          "browser-access.js",
          "deploy-fix.js",
          "deploy-fix.js",
          "deploy.js",
          "direct-access.js",
          "direct-access.js",
          "direct-access.js",
          "display-env-vars.js",
          "in-memory-mode.js",
          "in-memory-mode.js",
          "keep-running.js",
          "keep-running.js",
          "neon-app-start.js",
          "neon-app-start.js",
          "neon-start.js",
          "neon-workflow.js",
          "neon-workflow.js",
          "no-exit.js",
          "prod-test.js",
          "prod-test.js",
          "production-server.js",
          "production-server.js",
          "production-server.js",
          "replit-production-fix.js",
          "replit-production-fix.js",
          "replit-production-fix.js",
          "run.js",
          "server/index.ts",
          "server.js",
          "server.js",
          "start-deployment.js",
          "start-deployment.js",
          "start-dev.js",
          "start-dev.js",
          "start-mini-app.js",
          "start-neon-workflow.js",
          "start-neon-workflow.js",
          "start-unifarm.js",
          "start-unified.js",
          "start-unified.js",
          "start-unified.js",
          "start-unified.js",
          "start-with-check.js",
          "start.js",
          "telegram-app-workflow.js",
          "telegram-mini-app-server.js",
          "telegram-mini-app-server.js",
          "telegram-mini-app-server.js"
        ]
      ],
      [
        "OVERRIDE_DB_PROVIDER",
        [
          "backup/index.ts",
          "backup/index.ts",
          "browser-access.js",
          "check-neon-db-connection.js",
          "db-connect-fix.js",
          "db-connection-diagnosis.js",
          "db-connection-diagnosis.js",
          "db-connection-fix.js",
          "db-schema-diagnosis.js",
          "db-selector-debug.js",
          "db-selector-debug.js",
          "db-selector-fix.js",
          "deploy-fix.js",
          "deploy-with-neon.js",
          "direct-access.js",
          "direct-access.js",
          "direct-neon-start.js",
          "display-env-vars.js",
          "fix-partition-error.js",
          "keep-running.js",
          "keep-running.js",
          "migrate-neon-db.js",
          "neon-app-start.js",
          "neon-direct.js",
          "neon-start.js",
          "neon-workflow.js",
          "neon-workflow.js",
          "no-exit.js",
          "run-with-neon-db.js",
          "run-with-neon.js",
          "server/index.ts",
          "server.js",
          "server.js",
          "simple-test-db.js",
          "start-app.js",
          "start-app.js",
          "start-app.js",
          "start-deployment.js",
          "start-neon-app.js",
          "start-neon-workflow.js",
          "start-unified.js",
          "start-with-check.js"
        ]
      ],
      [
        "PGHOST",
        [
          "backup/index.ts",
          "check-db-details.js",
          "db-connect-fix.js",
          "db-connect-fix.js",
          "db-connection-diagnosis.js",
          "db-connection-diagnosis.js",
          "db-connection-fix.js",
          "db-connection-fix.js",
          "db-connection-fix.js",
          "db-connection-test.js",
          "db-connection-test.js",
          "db-connection-test.js",
          "db-fix.js",
          "db-fix.js",
          "db-fix.js",
          "db-health-check.js",
          "db-schema-diagnosis.js",
          "db-schema-diagnosis.js",
          "db-selector-debug.js",
          "db-selector-debug.js",
          "db-selector-fix.js",
          "db-selector-fix.js",
          "deploy-config.js",
          "display-env-vars.js",
          "fix-pghost.js",
          "fix-pghost.js",
          "force-db-connection.js",
          "force-db-connection.js",
          "force-db-redirect.js",
          "server/db-interceptor.ts",
          "server/force-correct-db.ts",
          "server/force-correct-db.ts",
          "server/force-correct-db.ts",
          "start-unified.js",
          "start-with-replit-db.js",
          "start-with-replit-db.js",
          "start-with-replit-db.js",
          "start-with-replit-db.js",
          "unified-fix.js",
          "unified-fix.js",
          "unified-fix.js",
          "unified-fix.js"
        ]
      ],
      [
        "DISABLE_REPLIT_DB",
        [
          "backup/index.ts",
          "backup/index.ts",
          "check-neon-db-connection.js",
          "db-connect-fix.js",
          "db-connection-diagnosis.js",
          "db-connection-diagnosis.js",
          "db-connection-fix.js",
          "db-schema-diagnosis.js",
          "db-selector-debug.js",
          "db-selector-debug.js",
          "db-selector-fix.js",
          "deploy-fix.js",
          "deploy-with-neon.js",
          "direct-neon-start.js",
          "display-env-vars.js",
          "fix-partition-error.js",
          "keep-running.js",
          "keep-running.js",
          "migrate-neon-db.js",
          "neon-app-start.js",
          "neon-app-start.js",
          "neon-direct.js",
          "neon-start.js",
          "neon-workflow.js",
          "neon-workflow.js",
          "no-exit.js",
          "run-with-neon-db.js",
          "run-with-neon.js",
          "server/index.ts",
          "simple-test-db.js",
          "start-deployment.js",
          "start-neon-app.js",
          "start-neon-app.js",
          "start-neon-workflow.js",
          "start-neon-workflow.js",
          "start-unified.js"
        ]
      ],
      [
        "APP_URL",
        [
          "server/app-setup.ts",
          "server/check-webhook.ts",
          "server/index.ts",
          "server/index.ts",
          "server/index.ts",
          "server/index.ts",
          "server/middleware/setup-telegram.ts",
          "server/routes/api/telegram-setup.ts",
          "server/routes-new.ts",
          "server/telegram/bot.ts",
          "server/telegram/bot.ts",
          "server/telegram/bot.ts",
          "server/telegram/routes.ts",
          "server/telegram/routes.ts",
          "server/telegram/routes.ts",
          "server/telegram/routes.ts",
          "server/telegram/smartBot.ts",
          "server/telegramBot.ts",
          "start-app.js",
          "start-app.js",
          "start-app.js",
          "start-app.js",
          "start-app.js",
          "start-app.js",
          "start-app.js",
          "start-mini-app.js",
          "telegram-bot-setup.js",
          "test-critical-apis.js",
          "test-webhook.js",
          "webhook-test.js"
        ]
      ]
    ],
    "mostUsedConstants": [
      [
        "D",
        [
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js"
        ]
      ],
      [
        "S",
        [
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js"
        ]
      ],
      [
        "BOT_TOKEN",
        [
          "archive/telegram-bot-scripts/configure-webhook.js",
          "archive/telegram-bot-scripts/setup-telegram-mini-app.js",
          "archive/telegram-bot-scripts/setup-telegram-webhook.js",
          "archive/telegram-bot-scripts/setup-unifarm-bot.js",
          "archive/telegram-bot-scripts/setup-webhook.js",
          "archive/telegram-bot-scripts/update-commands.js",
          "archive/telegram-bot-scripts/update-menu-button.js",
          "archive/telegram-bot-scripts/update-menu-only.js",
          "check-bot-settings.js",
          "check-status.js",
          "check-telegram-readiness.js",
          "create-new-miniapp.js",
          "debug-bot-commands.js",
          "final-bot-test.js",
          "final-url-fix.js",
          "fix-webhook-final.js",
          "fix-webhook.js",
          "force-cache-clear.js",
          "force-telegram-cache-clear.js",
          "server/telegram/smartBot.ts",
          "server/telegramBot.ts",
          "setup-telegram-bot.js",
          "setup-telegram.js",
          "setup-webhook.js",
          "super-cache-clear.js",
          "test-smart-bot.js",
          "test-telegram.js",
          "ultimate-telegram-fix.js",
          "update-mini-app-url.js",
          "webhook-test.js"
        ]
      ],
      [
        "P",
        [
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js"
        ]
      ],
      [
        "M",
        [
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js"
        ]
      ],
      [
        "C",
        [
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js"
        ]
      ],
      [
        "T",
        [
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js"
        ]
      ],
      [
        "R",
        [
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js"
        ]
      ],
      [
        "E",
        [
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js"
        ]
      ],
      [
        "I",
        [
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js",
          "server/public/assets/index-_I1TwduP.js"
        ]
      ]
    ]
  },
  "businessLogic": [],
  "styles": [],
  "summary": {
    "timestamp": "2025-05-31T05:10:21.397Z",
    "filesAnalyzed": 1064,
    "duplicateFilesFound": 81,
    "duplicateFunctionsFound": 45,
    "duplicateRoutesFound": 194,
    "backupFilesFound": 1
  }
}