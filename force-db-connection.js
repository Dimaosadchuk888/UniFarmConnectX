/**
 * –ü—Ä–∏–º—É—Å–æ–≤–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –≤–∞—à–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
 */

// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è –≤–∞—à–æ—ó production –±–∞–∑–∏
process.env.PGHOST = "ep-lucky-boat-a463bggt-pooler.us-east-1.aws.neon.tech";
process.env.PGUSER = "neondb_owner";
process.env.PGPASSWORD = "npg_SpgdNBV70WKl";
process.env.PGDATABASE = "neondb";
process.env.PGPORT = "5432";
process.env.DATABASE_URL = "postgresql://neondb_owner:npg_SpgdNBV70WKl@ep-lucky-boat-a463bggt-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require";

console.log("‚úÖ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è –≤–∞—à–æ—ó production –±–∞–∑–∏");
console.log("üéØ PGHOST:", process.env.PGHOST);

// –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
import pkg from 'pg';
const { Pool } = pkg;

async function testConnection() {
  console.log("üîÑ –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –≤–∞—à–æ—ó –±–∞–∑–∏...");
  
  const pool = new Pool({
    connectionString: process.env.DATABASE_URL,
    ssl: { rejectUnauthorized: false }
  });

  try {
    const result = await pool.query('SELECT COUNT(*) as users FROM public.users');
    const userCount = result.rows[0].users;
    
    console.log(`üéâ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ! –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –±–∞–∑—ñ: ${userCount}`);
    
    if (userCount == 4) {
      console.log("‚úÖ –í–Ü–î–ú–Ü–ù–ù–û! –¶–µ –≤–∞—à–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞ production –±–∞–∑–∞ –∑ 4 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏!");
    } else {
      console.log(`‚ö†Ô∏è –¶–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –±–∞–∑–∞. –û—á—ñ–∫—É–≤–∞–ª–æ—Å—è 4 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ, –∞ –∑–Ω–∞–π–¥–µ–Ω–æ ${userCount}`);
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    const users = await pool.query('SELECT id, telegram_id, username, created_at FROM public.users ORDER BY id DESC LIMIT 5');
    console.log("\nüìã –û—Å—Ç–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –≤ –±–∞–∑—ñ:");
    users.rows.forEach(user => {
      console.log(`ID: ${user.id}, Telegram ID: ${user.telegram_id}, Username: ${user.username}`);
    });
    
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:", error.message);
  } finally {
    await pool.end();
  }
}

testConnection();