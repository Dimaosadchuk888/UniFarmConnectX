import { supabase } from './core/supabase.js';

async function checkTonBoostAnomaly() {
  console.log('üîç –ì–õ–£–ë–û–ö–ò–ô –ê–ù–ê–õ–ò–ó –ê–ù–û–ú–ê–õ–ò–ò TON BOOST - USER 74\n');
  
  const userId = 74;
  
  // 1. –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ TON
  console.log('üìä –ê–ù–ê–õ–ò–ó –ò–°–¢–û–†–ò–ò –ë–ê–õ–ê–ù–°–ê:\n');
  
  const { data: allTransactions } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', userId)
    .not('amount_ton', 'is', null)
    .order('created_at', { ascending: false })
    .limit(20);
    
  if (allTransactions) {
    let currentBalance = 841.296275; // –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∞—É–¥–∏—Ç–∞
    console.log(`–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${currentBalance.toFixed(6)} TON\n`);
    
    console.log('–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20):');
    console.log('-'.repeat(80));
    
    allTransactions.forEach(tx => {
      const amount = parseFloat(tx.amount_ton || '0');
      const date = new Date(tx.created_at).toLocaleString();
      const sign = amount >= 0 ? '+' : '';
      
      // –¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è —Ç–∏–ø–∞
      let typeInfo = tx.type;
      if (tx.metadata?.original_type) {
        typeInfo += ` (${tx.metadata.original_type})`;
      }
      
      console.log(`${date} | ${typeInfo.padEnd(30)} | ${sign}${amount.toFixed(6)} TON`);
    });
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ç–∞–∫–∏–º –∂–µ –±–∞–ª–∞–Ω—Å–æ–º
  console.log('\n\nüîé –ü–†–û–í–ï–†–ö–ê –ü–û–•–û–ñ–ò–• –ë–ê–õ–ê–ù–°–û–í:\n');
  
  const { data: tonBoostPackages } = await supabase
    .from('ton_farming_data')
    .select('*')
    .eq('boost_active', true)
    .eq('boost_package_id', 2); // –¢–æ—Ç –∂–µ –ø–∞–∫–µ—Ç —á—Ç–æ —É user 74
    
  if (tonBoostPackages) {
    console.log(`–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞–∫–µ—Ç–æ–º ID 2: ${tonBoostPackages.length}\n`);
    
    // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å—ã —ç—Ç–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for (const pkg of tonBoostPackages.slice(0, 5)) { // –ü–µ—Ä–≤—ã–µ 5 –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
      const { data: otherUser } = await supabase
        .from('users')
        .select('id, balance_ton')
        .eq('id', parseInt(pkg.user_id))
        .single();
        
      if (otherUser) {
        const balance = parseFloat(otherUser.balance_ton || '0');
        const expectedIncome = balance * 0.01 / 288;
        
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ
        const { data: lastReward } = await supabase
          .from('transactions')
          .select('amount_ton, created_at')
          .eq('user_id', otherUser.id)
          .eq('type', 'FARMING_REWARD')
          .not('metadata->>original_type', 'is', null)
          .order('created_at', { ascending: false })
          .limit(1)
          .single();
          
        if (lastReward) {
          const actualIncome = parseFloat(lastReward.amount_ton || '0');
          const diff = ((actualIncome - expectedIncome) / expectedIncome * 100).toFixed(1);
          
          console.log(`User ${otherUser.id}:`);
          console.log(`  –ë–∞–ª–∞–Ω—Å: ${balance.toFixed(2)} TON`);
          console.log(`  –û–∂–∏–¥–∞–µ–º–æ–µ: ${expectedIncome.toFixed(6)} TON`);
          console.log(`  –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ: ${actualIncome.toFixed(6)} TON`);
          console.log(`  –†–∞–∑–Ω–∏—Ü–∞: ${diff}%`);
          console.log('');
        }
      }
    }
  }
  
  // 3. –ê–Ω–∞–ª–∏–∑ boost –ø–∞–∫–µ—Ç–æ–≤
  console.log('\nüì¶ –ê–ù–ê–õ–ò–ó BOOST –ü–ê–ö–ï–¢–û–í:\n');
  
  // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
  const boostPackages = {
    1: { name: '–ë–∞–∑–æ–≤—ã–π', multiplier: 1.0 },
    2: { name: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π', multiplier: 1.5 },
    3: { name: '–ü—Ä–µ–º–∏—É–º', multiplier: 2.0 }
  };
  
  console.log('–í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –∞–Ω–æ–º–∞–ª–∏–∏:');
  console.log(`User 74 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–∞–∫–µ—Ç ID: 2`);
  
  if (boostPackages[2]) {
    const baseIncome = 841.296275 * 0.01 / 288;
    const boostedIncome = baseIncome * boostPackages[2].multiplier;
    
    console.log(`\n–†–∞—Å—á–µ—Ç —Å —É—á–µ—Ç–æ–º –º–Ω–æ–∂–∏—Ç–µ–ª—è –ø–∞–∫–µ—Ç–∞:`);
    console.log(`- –ë–∞–∑–æ–≤—ã–π –¥–æ—Ö–æ–¥: ${baseIncome.toFixed(6)} TON`);
    console.log(`- –ú–Ω–æ–∂–∏—Ç–µ–ª—å –ø–∞–∫–µ—Ç–∞ ${boostPackages[2].name}: x${boostPackages[2].multiplier}`);
    console.log(`- –î–æ—Ö–æ–¥ —Å –±—É—Å—Ç–æ–º: ${boostedIncome.toFixed(6)} TON`);
    console.log(`- –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –¥–æ—Ö–æ–¥: 0.043294 TON`);
    
    const accuracy = (0.043294 / boostedIncome * 100).toFixed(1);
    console.log(`\n‚úÖ –¢–æ—á–Ω–æ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è: ${accuracy}%`);
    
    if (Math.abs(100 - parseFloat(accuracy)) < 5) {
      console.log('\nüéØ –í–´–í–û–î: –ù–∞—á–∏—Å–ª–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã —Å —É—á–µ—Ç–æ–º –º–Ω–æ–∂–∏—Ç–µ–ª—è boost –ø–∞–∫–µ—Ç–∞!');
    }
  }
  
  // 4. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('\n\nüìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê USER 74:\n');
  
  const { data: allTonBoostRewards } = await supabase
    .from('transactions')
    .select('amount_ton')
    .eq('user_id', userId)
    .eq('type', 'FARMING_REWARD')
    .not('metadata->>original_type', 'is', null);
    
  if (allTonBoostRewards) {
    const totalEarned = allTonBoostRewards.reduce((sum, tx) => 
      sum + parseFloat(tx.amount_ton || '0'), 0
    );
    
    console.log(`- –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π TON Boost: ${allTonBoostRewards.length}`);
    console.log(`- –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞—Ä–∞–±–æ—Ç–∫–∞: ${totalEarned.toFixed(6)} TON`);
    console.log(`- –°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ –∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é: ${(totalEarned / allTonBoostRewards.length).toFixed(6)} TON`);
  }
}

checkTonBoostAnomaly();