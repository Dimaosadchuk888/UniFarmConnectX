import { supabase } from './core/supabase';

async function checkTonFarmingTable() {
  console.log('=== –ü–†–û–í–ï–†–ö–ê –¢–ê–ë–õ–ò–¶–´ ton_farming_data ===\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
  const { data: tables } = await supabase
    .from('information_schema.tables')
    .select('table_name')
    .eq('table_schema', 'public')
    .eq('table_name', 'ton_farming_data');
    
  if (!tables || tables.length === 0) {
    console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ ton_farming_data –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢!');
    console.log('–°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç fallback –Ω–∞ —Ç–∞–±–ª–∏—Ü—É users');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è TON –≤ —Ç–∞–±–ª–∏—Ü–µ users
    const { data: userData } = await supabase
      .from('users')
      .select('ton_boost_package, ton_boost_active, ton_farming_deposit, ton_farming_balance, ton_farming_rate')
      .eq('id', 74)
      .single();
      
    console.log('\nüìä TON –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ users:');
    console.log('- ton_boost_package:', userData?.ton_boost_package);
    console.log('- ton_boost_active:', userData?.ton_boost_active);
    console.log('- ton_farming_deposit:', userData?.ton_farming_deposit);
    console.log('- ton_farming_balance:', userData?.ton_farming_balance);
    console.log('- ton_farming_rate:', userData?.ton_farming_rate);
  } else {
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ ton_farming_data —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74
    const { data, error } = await supabase
      .from('ton_farming_data')
      .select('*')
      .eq('user_id', 74)
      .single();
      
    if (error && error.code === 'PGRST116') {
      console.log('–ù–µ—Ç –∑–∞–ø–∏—Å–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74 –≤ ton_farming_data');
    } else if (data) {
      console.log('\nüìä –î–∞–Ω–Ω—ã–µ –≤ ton_farming_data:');
      console.log('- package_id:', data.boost_package_id);
      console.log('- is_active:', data.boost_active);
      console.log('- farming_balance:', data.farming_balance);
      console.log('- farming_rate:', data.farming_rate);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users –Ω–∞ –Ω–∞–ª–∏—á–∏–µ TON –ø–æ–ª–µ–π
  const { data: columns } = await supabase
    .rpc('get_column_names', { table_name: 'users' })
    .select('column_name')
    .ilike('column_name', 'ton_%');
    
  console.log('\nüìã TON-related –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users:', columns?.map(c => c.column_name).join(', ') || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
}

checkTonFarmingTable().catch(console.error);