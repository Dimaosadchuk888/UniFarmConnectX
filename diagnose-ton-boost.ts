import { supabase } from './core/supabase.js';

async function diagnoseTonBoost() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã TON Boost\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  console.log('1. –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ TON Boost:');
  const { data: activeUsers } = await supabase
    .from('ton_farming_data')
    .select('*')
    .not('boost_package_id', 'is', null)
    .gt('farming_balance', 0);
    
  if (activeUsers && activeUsers.length > 0) {
    console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${activeUsers.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    
    let totalBalance = 0;
    activeUsers.forEach(user => {
      totalBalance += Number(user.farming_balance);
      console.log(`   - User ${user.user_id}: ${user.farming_balance} TON (Package ${user.boost_package_id})`);
    });
    
    const dailyIncome = totalBalance * 0.01;
    const fiveMinIncome = dailyIncome / 288;
    console.log(`   üí∞ –û–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥: ${fiveMinIncome.toFixed(6)} TON –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç`);
  } else {
    console.log('   ‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  console.log('\n2. –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ TON –¥–æ—Ö–æ–¥–æ–≤:');
  const { data: lastTransactions } = await supabase
    .from('transactions')
    .select('*')
    .eq('type', 'FARMING_REWARD')
    .eq('currency', 'TON')
    .gt('amount_ton', 0)
    .order('created_at', { ascending: false })
    .limit(3);
    
  if (lastTransactions && lastTransactions.length > 0) {
    lastTransactions.forEach(tx => {
      const time = new Date(tx.created_at);
      console.log(`   - ${time.toLocaleTimeString()}: User ${tx.user_id} +${tx.amount_ton} TON`);
      if (tx.metadata?.original_type) {
        console.log(`     ‚ú® Metadata: ${JSON.stringify(tx.metadata)}`);
      }
    });
    
    const lastTime = new Date(lastTransactions[0].created_at);
    const timeSinceLastTx = (Date.now() - lastTime.getTime()) / 1000 / 60;
    console.log(`\n   ‚è±Ô∏è –í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${timeSinceLastTx.toFixed(1)} –º–∏–Ω—É—Ç`);
    
    if (timeSinceLastTx > 10) {
      console.log('   ‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ - —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –±–æ–ª–µ–µ 10 –º–∏–Ω—É—Ç');
    }
  } else {
    console.log('   ‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –Ω–æ–≤—ã–º —Ç–∏–ø–æ–º
  console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º:');
  const tenMinutesAgo = new Date(Date.now() - 10 * 60 * 1000).toISOString();
  const { data: newTransactions } = await supabase
    .from('transactions')
    .select('metadata')
    .eq('type', 'FARMING_REWARD')
    .eq('currency', 'TON')
    .gte('created_at', tenMinutesAgo)
    .not('metadata', 'is', null);
    
  if (newTransactions && newTransactions.length > 0) {
    const withOriginalType = newTransactions.filter(tx => tx.metadata?.original_type === 'TON_BOOST_INCOME');
    if (withOriginalType.length > 0) {
      console.log(`   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢! –ù–∞–π–¥–µ–Ω–æ ${withOriginalType.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å metadata`);
    } else {
      console.log('   ‚ö†Ô∏è –ù–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –±–µ–∑ original_type –≤ metadata');
    }
  } else {
    console.log('   ‚ùå –ù–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å metadata –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
  
  console.log('\n4. –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:');
  console.log(`   –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${new Date().toLocaleTimeString()}`);
  console.log('   –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
  console.log('   –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑:', (5 - (new Date().getMinutes() % 5)), '–º–∏–Ω—É—Ç');
}

diagnoseTonBoost().catch(console.error);