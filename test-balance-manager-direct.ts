/**
 * –¢–ï–°–¢ BALANCEMANAGER –ù–ê–ü–†–Ø–ú–£–Æ
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ BalanceManager –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π 255 –∏ 251
 */

import { supabase } from './core/supabase.js';

async function testBalanceManagerDirect() {
  console.log('üîç –¢–ï–°–¢ BALANCEMANAGER –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô 255 –ò 251');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ users
    console.log('\nüë• –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–ò–°–ï–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:');
    
    const { data: user255, error: error255 } = await supabase
      .from('users')
      .select('*')
      .eq('telegram_id', 255)
      .single();
      
    const { data: user251, error: error251 } = await supabase
      .from('users')
      .select('*')
      .eq('telegram_id', 251)
      .single();
    
    if (error255) {
      console.log('‚ùå User 255 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ users:', error255.message);
    } else {
      console.log('‚úÖ User 255 –Ω–∞–π–¥–µ–Ω:');
      console.log(`   ID: ${user255.id}`);
      console.log(`   Telegram ID: ${user255.telegram_id}`);
      console.log(`   UNI Balance: ${user255.balance_uni}`);
      console.log(`   TON Balance: ${user255.balance_ton}`);
      console.log(`   Created: ${user255.created_at}`);
      console.log(`   Updated: ${user255.updated_at || 'NULL'}`);
    }
    
    if (error251) {
      console.log('‚ùå User 251 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ users:', error251.message);
    } else {
      console.log('‚úÖ User 251 –Ω–∞–π–¥–µ–Ω:');
      console.log(`   ID: ${user251.id}`);
      console.log(`   Telegram ID: ${user251.telegram_id}`);
      console.log(`   UNI Balance: ${user251.balance_uni}`);
      console.log(`   TON Balance: ${user251.balance_ton}`);
      console.log(`   Created: ${user251.created_at}`);
      console.log(`   Updated: ${user251.updated_at || 'NULL'}`);
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ BalanceManager
    console.log('\nüîç –°–ò–ú–£–õ–Ø–¶–ò–Ø –í–´–ó–û–í–ê BALANCEMANAGER:');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å BalanceManager
    try {
      const { BalanceManager } = await import('./core/BalanceManager.js');
      const balanceManager = BalanceManager.getInstance();
      console.log('‚úÖ BalanceManager —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω');
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º getUserBalance –¥–ª—è –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      if (user255) {
        console.log(`\nüß™ –¢–µ—Å—Ç getUserBalance –¥–ª—è User 255 (ID: ${user255.id}):`);
        try {
          const result255 = await balanceManager.getUserBalance(user255.id);
          console.log('‚úÖ getUserBalance —É—Å–ø–µ—à–Ω–æ:', result255);
        } catch (error) {
          console.log('‚ùå getUserBalance –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:', error.message);
        }
      }
      
      if (user251) {
        console.log(`\nüß™ –¢–µ—Å—Ç getUserBalance –¥–ª—è User 251 (ID: ${user251.id}):`);
        try {
          const result251 = await balanceManager.getUserBalance(user251.id);
          console.log('‚úÖ getUserBalance —É—Å–ø–µ—à–Ω–æ:', result251);
        } catch (error) {
          console.log('‚ùå getUserBalance –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:', error.message);
        }
      }
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ BalanceManager:', error.message);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é –º–µ–∂–¥—É ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏
    console.log('\nüîç –ö–û–†–†–ï–õ–Ø–¶–ò–Ø USER_ID –í –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø–•:');
    
    const { data: transactions255 } = await supabase
      .from('transactions')
      .select('id, user_id, type, amount, currency, created_at')
      .eq('user_id', 255)
      .limit(3);
      
    const { data: transactions251 } = await supabase
      .from('transactions')
      .select('id, user_id, type, amount, currency, created_at')
      .eq('user_id', 251)
      .limit(3);
    
    if (transactions255 && transactions255.length > 0) {
      console.log(`‚úÖ User 255 –∏–º–µ–µ—Ç ${transactions255.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å user_id = 255`);
      console.log('   –ü–µ—Ä–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:', transactions255[0]);
    } else {
      console.log('‚ùå User 255 –Ω–µ –∏–º–µ–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å user_id = 255');
    }
    
    if (transactions251 && transactions251.length > 0) {
      console.log(`‚úÖ User 251 –∏–º–µ–µ—Ç ${transactions251.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å user_id = 251`);
      console.log('   –ü–µ—Ä–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:', transactions251[0]);
    } else {
      console.log('‚ùå User 251 –Ω–µ –∏–º–µ–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å user_id = 251');
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏
    console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –°–í–Ø–ó–ò USERS <-> TRANSACTIONS:');
    
    if (user255) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å user_id = internal ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: txByInternalId255 } = await supabase
        .from('transactions')
        .select('count')
        .eq('user_id', user255.id)
        .single();
        
      console.log(`User 255: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ internal ID (${user255.id}): ${txByInternalId255?.count || 0}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å user_id = telegram_id
      const { data: txByTelegramId255 } = await supabase
        .from('transactions')
        .select('count')
        .eq('user_id', user255.telegram_id)
        .single();
        
      console.log(`User 255: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ telegram_id (${user255.telegram_id}): ${txByTelegramId255?.count || 0}`);
    }
    
    if (user251) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å user_id = internal ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: txByInternalId251 } = await supabase
        .from('transactions')
        .select('count')
        .eq('user_id', user251.id)
        .single();
        
      console.log(`User 251: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ internal ID (${user251.id}): ${txByInternalId251?.count || 0}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å user_id = telegram_id
      const { data: txByTelegramId251 } = await supabase
        .from('transactions')
        .select('count')
        .eq('user_id', user251.telegram_id)
        .single();
        
      console.log(`User 251: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ telegram_id (${user251.telegram_id}): ${txByTelegramId251?.count || 0}`);
    }
    
    // 5. –ü–æ–∏—Å–∫ –ª—é–±—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º
    console.log('\nüö® –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú:');
    
    const problems = [];
    
    if (user255 && user255.balance_uni === 0 && user255.balance_ton === 0) {
      problems.push('User 255: –ë–∞–ª–∞–Ω—Å—ã —Ä–∞–≤–Ω—ã 0 –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    }
    
    if (user251 && user251.balance_uni === 0 && user251.balance_ton === 0) {
      problems.push('User 251: –ë–∞–ª–∞–Ω—Å—ã —Ä–∞–≤–Ω—ã 0 –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    }
    
    if (user255 && !user255.updated_at) {
      problems.push('User 255: –ü–æ–ª–µ updated_at = NULL - BalanceManager –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª –∑–∞–ø–∏—Å—å');
    }
    
    if (user251 && !user251.updated_at) {
      problems.push('User 251: –ü–æ–ª–µ updated_at = NULL - BalanceManager –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª –∑–∞–ø–∏—Å—å');
    }
    
    if (problems.length > 0) {
      problems.forEach((problem, index) => {
        console.log(`${index + 1}. ${problem}`);
      });
    } else {
      console.log('‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ');
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

testBalanceManagerDirect();