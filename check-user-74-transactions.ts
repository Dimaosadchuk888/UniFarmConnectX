/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫–∏–µ —Ç–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –æ–Ω–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è
 */

import { supabase } from './core/supabase';

async function checkUser74Transactions() {
  console.log('=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74 ===\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const { data: transactions, error: txError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 74)
      .order('created_at', { ascending: false })
      .limit(20);

    if (txError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError);
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactions?.length || 0}\n`);

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º
    const transactionsByType: Record<string, any[]> = {};
    
    if (transactions) {
      for (const tx of transactions) {
        if (!transactionsByType[tx.type]) {
          transactionsByType[tx.type] = [];
        }
        transactionsByType[tx.type].push(tx);
      }
    }

    // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–∏–ø–∞–º
    console.log('üìä –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ —Ç–∏–ø–∞–º:');
    for (const [type, txs] of Object.entries(transactionsByType)) {
      console.log(`\n${type}: ${txs.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
      const lastTx = txs[0];
      console.log(`  –ü–æ—Å–ª–µ–¥–Ω—è—è: ${new Date(lastTx.created_at).toLocaleString()}`);
      console.log(`  –°—É–º–º–∞: ${lastTx.amount_uni || 0} UNI / ${lastTx.amount_ton || 0} TON`);
      console.log(`  –û–ø–∏—Å–∞–Ω–∏–µ: ${lastTx.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ FARMING_DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    console.log('\nüîç –ü–æ–∏—Å–∫ FARMING_DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:');
    const farmingDeposits = transactions?.filter(tx => 
      tx.type === 'FARMING_DEPOSIT' || 
      tx.type === 'farming_deposit' ||
      tx.description?.toLowerCase().includes('deposit')
    );

    if (farmingDeposits && farmingDeposits.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${farmingDeposits.length} –¥–µ–ø–æ–∑–∏—Ç–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      for (const deposit of farmingDeposits) {
        console.log(`\n  ID: ${deposit.id}`);
        console.log(`  –¢–∏–ø: ${deposit.type}`);
        console.log(`  –°—É–º–º–∞: ${deposit.amount_uni} UNI`);
        console.log(`  –î–∞—Ç–∞: ${new Date(deposit.created_at).toLocaleString()}`);
      }
    } else {
      console.log('‚ùå FARMING_DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74:');
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('id', 74)
      .single();

    if (user) {
      console.log(`  –ë–∞–ª–∞–Ω—Å UNI: ${user.balance_uni}`);
      console.log(`  –ë–∞–ª–∞–Ω—Å TON: ${user.balance_ton}`);
      console.log(`  –î–µ–ø–æ–∑–∏—Ç –≤ —Ñ–∞—Ä–º–∏–Ω–≥–µ: ${user.uni_deposit_amount} UNI`);
      console.log(`  –§–∞—Ä–º–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω: ${user.uni_farming_active ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`  –°—Ç–∞–≤–∫–∞: ${user.uni_farming_rate} (${(parseFloat(user.uni_farming_rate) * 100).toFixed(0)}% –≤ –¥–µ–Ω—å)`);
      console.log(`  –ù–∞—á–∞–ª–æ —Ñ–∞—Ä–º–∏–Ω–≥–∞: ${user.uni_farming_start_timestamp ? new Date(user.uni_farming_start_timestamp).toLocaleString() : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
    }

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }

  process.exit(0);
}

checkUser74Transactions();