import { supabase } from './core/supabaseClient';
import { TonFarmingRepository } from './modules/boost/TonFarmingRepository';

async function testBoostFixesFinal() {
  const userId = '184';
  console.log('=== –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô TON BOOST ===\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  console.log('1. –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
  const { data: userBefore } = await supabase
    .from('users')
    .select('balance_ton, ton_farming_balance, ton_boost_package')
    .eq('id', userId)
    .single();
    
  console.log(`‚îú‚îÄ‚îÄ balance_ton: ${userBefore?.balance_ton || 0} TON`);
  console.log(`‚îú‚îÄ‚îÄ ton_farming_balance: ${userBefore?.ton_farming_balance || 0} TON`);
  console.log(`‚îî‚îÄ‚îÄ ton_boost_package: ${userBefore?.ton_boost_package || 0}\n`);
  
  // 2. –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º BOOST_PURCHASE —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ –ø–æ–ª—è amount
  console.log('2. –ü–û–î–°–ß–ï–¢ BOOST_PURCHASE –∏–∑ –ø–æ–ª—è amount:');
  const { data: boostPurchases } = await supabase
    .from('transactions')
    .select('amount, created_at, type, description')
    .eq('user_id', userId)
    .eq('type', 'BOOST_PURCHASE')
    .order('created_at', { ascending: false });
    
  let totalBoostPurchases = 0;
  if (boostPurchases && boostPurchases.length > 0) {
    boostPurchases.forEach(tx => {
      const amount = Math.abs(parseFloat(tx.amount));
      totalBoostPurchases += amount;
      console.log(`‚îú‚îÄ‚îÄ ${tx.created_at}: ${amount} TON (–∏–∑ amount: ${tx.amount})`);
    });
    console.log(`‚îî‚îÄ‚îÄ –í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫ boost: ${totalBoostPurchases} TON\n`);
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π calculateUserTonDeposits
  console.log('3. –¢–ï–°–¢ –ù–û–í–û–ì–û –†–ê–°–ß–ï–¢–ê –î–ï–ü–û–ó–ò–¢–û–í:');
  const tonRepo = new TonFarmingRepository();
  
  // –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞
  const calculateMethod = (tonRepo as any).calculateUserTonDeposits.bind(tonRepo);
  const calculatedDeposits = await calculateMethod(parseInt(userId));
  
  console.log(`‚îú‚îÄ‚îÄ –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è —Å—É–º–º–∞ –≤—Å–µ—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${calculatedDeposits.toFixed(3)} TON`);
  console.log(`‚îú‚îÄ‚îÄ –í —Ç–æ–º —á–∏—Å–ª–µ BOOST_PURCHASE: ${totalBoostPurchases} TON`);
  console.log(`‚îî‚îÄ‚îÄ –û–∂–∏–¥–∞–µ–º—ã–π ton_farming_balance: ~${(115 + totalBoostPurchases).toFixed(3)} TON\n`);
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
  console.log('4. –ü–†–û–í–ï–†–ö–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò:');
  const { data: tonFarmingData } = await supabase
    .from('ton_farming_data')
    .select('farming_balance, boost_active, boost_package_id')
    .eq('user_id', userId)
    .single();
    
  console.log(`‚îú‚îÄ‚îÄ ton_farming_data.farming_balance: ${tonFarmingData?.farming_balance || 'null'} TON`);
  console.log(`‚îú‚îÄ‚îÄ users.ton_farming_balance: ${userBefore?.ton_farming_balance || 0} TON`);
  console.log(`‚îî‚îÄ‚îÄ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: ${tonFarmingData?.farming_balance == userBefore?.ton_farming_balance ? '‚úÖ' : '‚ùå'}\n`);
  
  // 5. –ò—Ç–æ–≥–∏
  console.log('üìä –ò–¢–û–ì–ò:');
  console.log(`‚îú‚îÄ‚îÄ –ü–æ—Ç–µ—Ä—è–Ω–æ TON –≤ boost –ø–æ–∫—É–ø–∫–∞—Ö: ${totalBoostPurchases} TON`);
  console.log(`‚îú‚îÄ‚îÄ –¢–µ–∫—É—â–∏–π ton_farming_balance: ${userBefore?.ton_farming_balance || 0} TON`);
  console.log(`‚îú‚îÄ‚îÄ –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${(parseFloat(userBefore?.ton_farming_balance || '0') + totalBoostPurchases).toFixed(3)} TON`);
  console.log(`‚îî‚îÄ‚îÄ –ù–µ–¥–æ—Å—Ç–∞–µ—Ç: ${totalBoostPurchases} TON\n`);
  
  console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´:');
  console.log('1. calculateUserTonDeposits —Ç–µ–ø–µ—Ä—å —á–∏—Ç–∞–µ—Ç amount –¥–ª—è BOOST_PURCHASE');
  console.log('2. –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ton_farming_balance –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏');
  console.log('3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö user_id');
  console.log('4. –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–∫—É–ø–∫–µ boost –±–∞–ª–∞–Ω—Å –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–∏—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
  
  console.log('\nüîß –î–õ–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –ü–û–¢–ï–†–Ø–ù–ù–´–• –°–†–ï–î–°–¢–í:');
  console.log('–í–∞—Ä–∏–∞–Ω—Ç 1 - –ü—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î:');
  console.log(`UPDATE users SET ton_farming_balance = ton_farming_balance + ${totalBoostPurchases} WHERE id = ${userId};`);
  console.log(`UPDATE ton_farming_data SET farming_balance = farming_balance + ${totalBoostPurchases} WHERE user_id = ${userId};`);
  
  console.log('\n–í–∞—Ä–∏–∞–Ω—Ç 2 - –ß–µ—Ä–µ–∑ –ø–æ–∫—É–ø–∫—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ boost (–∑–∞–ø—É—Å—Ç–∏—Ç –ø–µ—Ä–µ—Å—á–µ—Ç):');
  console.log('–ö—É–ø–∏—Ç–µ Starter Boost –∑–∞ 1 TON - —Å–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–µ—Ç –≤—Å–µ –¥–µ–ø–æ–∑–∏—Ç—ã');
}

testBoostFixesFinal();