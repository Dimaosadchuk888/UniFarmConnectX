const express = require('express');
const path = require('path');

const app = express();
const port = process.env.PORT || 3000;

// API endpoints
app.use(express.json());

app.get('/api/v2/status', (req, res) => {
  res.json({
    success: true,
    timestamp: new Date().toISOString(),
    data: {
      status: 'operational',
      version: '2.0-simple',
      database: 'connected'
    }
  });
});

app.get('/api/v2/missions', (req, res) => {
  res.json({
    success: true,
    data: []
  });
});

app.get('/api/v2/wallet', (req, res) => {
  res.json({
    success: true,
    data: { balance: 0 }
  });
});

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static(path.join(__dirname, 'client/public')));

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –ø—Ä–æ—Å—Ç–æ–π HTML
app.get('/', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>UniFarm</title>
        <style>
            body { 
                margin: 0; 
                padding: 20px; 
                font-family: Arial, sans-serif; 
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                min-height: 100vh;
            }
            .container { 
                max-width: 400px; 
                margin: 0 auto; 
                text-align: center; 
                padding: 40px 20px;
            }
            .logo { 
                font-size: 2.5em; 
                margin-bottom: 20px; 
                font-weight: bold;
            }
            .status { 
                background: rgba(255,255,255,0.1); 
                padding: 20px; 
                border-radius: 10px; 
                margin: 20px 0;
            }
            .loading { 
                margin: 20px 0; 
                font-size: 1.1em;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="logo">üåæ UniFarm</div>
            <div class="status">
                <h3>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</h3>
                <p>–°–µ—Ä–≤–µ—Ä: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç</p>
                <p>API: ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω</p>
                <p>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∞</p>
            </div>
            <div class="loading">
                –ó–∞–≥—Ä—É–∑–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
            </div>
        </div>
        
        <script>
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ API
            fetch('/api/v2/status')
                .then(res => res.json())
                .then(data => {
                    console.log('API —Ä–∞–±–æ—Ç–∞–µ—Ç:', data);
                    document.querySelector('.loading').innerHTML = '‚úÖ API –ø–æ–¥–∫–ª—é—á–µ–Ω. –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...';
                })
                .catch(err => {
                    console.error('–û—à–∏–±–∫–∞ API:', err);
                    document.querySelector('.loading').innerHTML = '‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API';
                });
        </script>
    </body>
    </html>
  `);
});

app.listen(port, '0.0.0.0', () => {
  console.log(`üöÄ –ü—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${port}`);
  console.log(`üì° API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:${port}/api/v2/`);
});