/**
 * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ TON –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 48
 * –î–æ–±–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫
 */

import { createClient } from '@supabase/supabase-js';

async function restoreTonBalance() {
  const supabaseUrl = process.env.SUPABASE_URL;
  const supabaseKey = process.env.SUPABASE_KEY;
  
  const supabase = createClient(supabaseUrl, supabaseKey);
  
  console.log('üí∞ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï TON –ë–ê–õ–ê–ù–°–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø 48');
  console.log('='.repeat(50));
  
  const userId = 48;
  const targetBalance = 1000; // –î–æ–±–∞–≤–ª—è–µ–º 1000 TON –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
    const { data: currentUser, error: getUserError } = await supabase
      .from('users')
      .select('balance_ton, username')
      .eq('id', userId)
      .single();
    
    if (getUserError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', getUserError.message);
      return;
    }
    
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${currentUser.username}`);
    console.log(`üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${currentUser.balance_ton} TON`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    const { data: updatedUser, error: updateError } = await supabase
      .from('users')
      .update({ balance_ton: targetBalance.toString() })
      .eq('id', userId)
      .select()
      .single();
    
    if (updateError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', updateError.message);
      return;
    }
    
    console.log(`‚úÖ –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω: ${currentUser.balance_ton} ‚Üí ${updatedUser.balance_ton} TON`);
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
    const { data: transaction, error: txError } = await supabase
      .from('transactions')
      .insert([{
        user_id: userId,
        type: 'FARMING_REWARD',
        amount_ton: (targetBalance - parseFloat(currentUser.balance_ton)).toString(),
        description: `üí≥ TON Deposit –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –¥–æ ${targetBalance} TON`,
        status: 'completed'
      }])
      .select()
      .single();
    
    if (txError) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', txError.message);
    } else {
      console.log(`üìä –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: ID ${transaction.id}`);
      console.log(`üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${transaction.description}`);
    }
    
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log(`   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é`);
    console.log(`   ‚Ä¢ –ë–∞–ª–∞–Ω—Å: ${targetBalance} TON`);
    console.log(`   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏: ${Math.floor(targetBalance / 10)} –ø–∞–∫–µ—Ç–æ–≤ –ø–æ 10 TON`);
    console.log(`   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏: ${Math.floor(targetBalance / 50)} –ø–∞–∫–µ—Ç–æ–≤ –ø–æ 50 TON`);
    
  } catch (error) {
    console.log('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
  
  console.log('\n' + '='.repeat(50));
  console.log('üí∞ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û');
}

restoreTonBalance();