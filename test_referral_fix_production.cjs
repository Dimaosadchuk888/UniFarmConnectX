/**
 * –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 */

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

// –°–∏–º—É–ª—è—Ü–∏—è Telegram initData –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const createTestInitData = (telegramId, username, refCode) => {
  const userData = {
    id: telegramId,
    username: username,
    first_name: username,
    language_code: 'en',
    start_param: refCode
  };
  
  // –ü—Ä–æ—Å—Ç–∞—è —Å–∏–º—É–ª—è—Ü–∏—è initData (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HMAC)
  const initData = `user=${encodeURIComponent(JSON.stringify(userData))}&start_param=${refCode}`;
  return initData;
};

async function testReferralFixProduction() {
  console.log('=== –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´ ===\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
    console.log('üîç 1. –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ï–†–í–ï–†–ê');
    
    try {
      const healthResponse = await fetch('http://localhost:3000/health');
      const healthData = await healthResponse.json();
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç:', healthData.status);
    } catch (error) {
      console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç:', error.message);
      return;
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    console.log('\nüìä 2. –ü–†–û–í–ï–†–ö–ê –ò–°–•–û–î–ù–û–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø');
    
    const referrerCode = 'REF_1750079004411_nddfp2';
    const { data: referrer, error: referrerError } = await supabase
      .from('users')
      .select('*')
      .eq('ref_code', referrerCode)
      .single();
    
    if (referrerError) {
      console.log('‚ùå –†–µ—Ñ–µ—Ä–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω:', referrerError.message);
      return;
    }
    
    console.log('‚úÖ –†–µ—Ñ–µ—Ä–µ—Ä –Ω–∞–π–¥–µ–Ω:');
    console.log(`   ID: ${referrer.id}`);
    console.log(`   Username: ${referrer.username}`);
    console.log(`   –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: ${referrer.ref_code}`);
    
    // 3. –°—á–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã
    const { data: currentReferrals, error: currentReferralsError } = await supabase
      .from('referrals')
      .select('*')
      .eq('referrer_id', referrer.id);
    
    if (currentReferralsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', currentReferralsError.message);
      return;
    }
    
    console.log(`üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${currentReferrals.length}`);
    
    // 4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    console.log('\nüß™ 4. –¢–ï–°–¢ –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò –° –†–ï–§–ï–†–ê–õ–¨–ù–´–ú –ö–û–î–û–ú');
    
    const testTelegramId = 999999224; // –¢–µ—Å—Ç–æ–≤—ã–π ID
    const testUsername = 'TestReferralUser';
    const testInitData = createTestInitData(testTelegramId, testUsername, referrerCode);
    
    console.log('–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:');
    console.log(`   Telegram ID: ${testTelegramId}`);
    console.log(`   Username: ${testUsername}`);
    console.log(`   Ref Code: ${referrerCode}`);
    
    // 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    try {
      const authResponse = await fetch('http://localhost:3000/api/v2/auth/telegram', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          initData: testInitData,
          ref_by: referrerCode
        })
      });
      
      const authData = await authResponse.json();
      console.log('\nüîç 5. –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò:');
      console.log('–°—Ç–∞—Ç—É—Å:', authResponse.status);
      console.log('–û—Ç–≤–µ—Ç:', JSON.stringify(authData, null, 2));
      
      if (authData.success && authData.user) {
        const newUserId = authData.user.id;
        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å ID: ${newUserId}`);
        
        // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–ª–∞—Å—å –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å
        console.log('\nüîç 6. –ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–í–Ø–ó–ò');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–µ referred_by
        const { data: createdUser, error: createdUserError } = await supabase
          .from('users')
          .select('*')
          .eq('id', newUserId)
          .single();
        
        if (createdUserError) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', createdUserError.message);
        } else {
          console.log('–î–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
          console.log(`   ID: ${createdUser.id}`);
          console.log(`   Telegram ID: ${createdUser.telegram_id}`);
          console.log(`   Username: ${createdUser.username}`);
          console.log(`   Referred by: ${createdUser.referred_by || '–ù–ï–¢'}`);
          
          if (createdUser.referred_by == referrer.id) {
            console.log('‚úÖ –ü–æ–ª–µ referred_by –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ö–û–†–†–ï–ö–¢–ù–û');
          } else {
            console.log('‚ùå –ü–æ–ª–µ referred_by –ù–ï –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ');
          }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å—å –≤ referrals
        const { data: referralRecord, error: referralRecordError } = await supabase
          .from('referrals')
          .select('*')
          .eq('user_id', newUserId)
          .single();
        
        if (referralRecordError) {
          console.log('‚ùå –ó–∞–ø–∏—Å—å –≤ referrals –ù–ï –ù–ê–ô–î–ï–ù–ê:', referralRecordError.message);
        } else {
          console.log('‚úÖ –ó–∞–ø–∏—Å—å –≤ referrals –Ω–∞–π–¥–µ–Ω–∞:');
          console.log(`   User ID: ${referralRecord.user_id}`);
          console.log(`   Referrer ID: ${referralRecord.referrer_id}`);
          console.log(`   –°–æ–∑–¥–∞–Ω–∞: ${new Date(referralRecord.created_at).toLocaleString('ru-RU')}`);
        }
        
        // 7. –°—á–∏—Ç–∞–µ–º –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        const { data: newReferrals, error: newReferralsError } = await supabase
          .from('referrals')
          .select('*')
          .eq('referrer_id', referrer.id);
        
        if (newReferralsError) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', newReferralsError.message);
        } else {
          console.log(`üìä –ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${newReferrals.length}`);
          console.log(`üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ: +${newReferrals.length - currentReferrals.length}`);
        }
        
        // 8. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
        console.log('\nüéØ 8. –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –¢–ï–°–¢–ê');
        
        const referralWorking = createdUser?.referred_by == referrer.id && referralRecord;
        
        if (referralWorking) {
          console.log('‚úÖ –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û!');
          console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ');
          console.log('‚úÖ JWT –æ—à–∏–±–∫–∏ –±–æ–ª—å—à–µ –Ω–µ –±–ª–æ–∫–∏—Ä—É—é—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Å–≤—è–∑–µ–π');
        } else {
          console.log('‚ùå –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ù–ï –†–ê–ë–û–¢–ê–ï–¢');
          console.log('‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
        }
        
        // 9. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        console.log('\nüßπ 9. –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•');
        
        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await supabase
          .from('users')
          .delete()
          .eq('id', newUserId);
        
        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–≤—è–∑—å
        if (referralRecord) {
          await supabase
            .from('referrals')
            .delete()
            .eq('user_id', newUserId);
        }
        
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
        
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', authData.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      }
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error.message);
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  }
}

testReferralFixProduction();