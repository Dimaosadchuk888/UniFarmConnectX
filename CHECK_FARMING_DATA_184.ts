import { supabase } from './server/supabase';

async function checkFarmingData() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê TON_FARMING_DATA –î–õ–Ø USER 184');
  console.log('='.repeat(60));

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º ton_farming_data
  const { data: farmingData, error: farmingError } = await supabase
    .from('ton_farming_data')
    .select('*')
    .eq('user_id', '184')
    .single();

  if (farmingError && farmingError.code !== 'PGRST116') {
    console.error('‚ùå –û—à–∏–±–∫–∞ ton_farming_data:', farmingError);
  } else if (farmingData) {
    console.log('\nüì¶ TON_FARMING_DATA:');
    console.log('‚îú‚îÄ user_id:', farmingData.user_id);
    console.log('‚îú‚îÄ farming_balance:', farmingData.farming_balance);
    console.log('‚îú‚îÄ farming_rate:', farmingData.farming_rate);
    console.log('‚îú‚îÄ boost_active:', farmingData.boost_active);
    console.log('‚îú‚îÄ last_calculation_time:', farmingData.last_calculation_time);
    console.log('‚îî‚îÄ boost_package_id:', farmingData.boost_package_id);
    
    const farmingBalance = parseFloat(farmingData.farming_balance || '0');
    console.log('\nüßÆ –°–£–ú–ú–ê –° BASE BALANCE:');
    console.log(`‚îî‚îÄ 0.01 (balance_ton) + ${farmingBalance} (farming_balance) = ${(0.01 + farmingBalance).toFixed(6)}`);
  } else {
    console.log('\n‚ùå –ù–µ—Ç –∑–∞–ø–∏—Å–∏ –≤ ton_farming_data –¥–ª—è user 184');
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ TON Boost
  const { data: transactions, error: txError } = await supabase
    .from('transactions')
    .select('amount, type, created_at')
    .eq('user_id', 184)
    .or('type.eq.BOOST_PURCHASE,type.eq.TON_DEPOSIT')
    .order('created_at', { ascending: false })
    .limit(10);

  if (!txError && transactions) {
    console.log('\nüìã –ü–û–°–õ–ï–î–ù–ò–ï TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:');
    transactions.forEach(tx => {
      console.log(`‚îú‚îÄ ${tx.type}: ${tx.amount} TON (${new Date(tx.created_at).toLocaleString()})`);
    });
  }

  console.log('\nüéØ –¶–ï–õ–¨: –ù–∞–π—Ç–∏ –æ—Ç–∫—É–¥–∞ –±–µ—Ä–µ—Ç—Å—è 3.121989 TON');
}

checkFarmingData();
