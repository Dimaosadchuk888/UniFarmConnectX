#!/usr/bin/env tsx
/**
 * üéØ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô WITHDRAWAL ERROR HANDLING
 * 
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —Ç–µ–ø–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
 * –≤–º–µ—Å—Ç–æ –ø–æ–∫–∞–∑–∞ "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞" –¥–ª—è –≤—Å–µ—Ö —Å–ª—É—á–∞–µ–≤
 * 
 * Date: 2025-07-29
 */

console.log('üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô WITHDRAWAL ERROR HANDLING\n');

// –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
const testCases = [
  {
    name: 'JWT Authentication Error (401)',
    error: {
      status: 401,
      need_jwt_token: true,
      error: 'Invalid JWT token'
    },
    expectedMessage: '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ',
    expectedType: 'authentication_required'
  },
  {
    name: 'Insufficient Funds (400 business logic)',
    error: {
      status: 400,
      message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –î–æ—Å—Ç—É–ø–Ω–æ: 39.56 TON'
    },
    expectedMessage: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –î–æ—Å—Ç—É–ø–Ω–æ: 39.56 TON',
    expectedType: 'business_logic_error'
  },
  {
    name: 'Validation Error (400 validation)',
    error: {
      status: 400,
      error: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ ‚Äî 1 TON'
    },
    expectedMessage: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ ‚Äî 1 TON',
    expectedType: 'validation_error'
  },
  {
    name: 'Server Error (500)',
    error: {
      status: 500,
      error: 'Internal server error'
    },
    expectedMessage: '–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
    expectedType: 'server_error'
  },
  {
    name: 'Real Network Error (TypeError fetch)',
    error: new TypeError('Failed to fetch'),
    expectedMessage: '–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É',
    expectedType: 'network_error'
  }
];

// –°–∏–º—É–ª—è—Ü–∏—è –ª–æ–≥–∏–∫–∏ –∏–∑ withdrawalService.ts (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø)
function classifyError(error: any) {
  const errorObj = error as any;
  
  // –û—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (401)
  if (errorObj.status === 401 || (errorObj.need_jwt_token || errorObj.need_new_token)) {
    return {
      message: '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ',
      error_type: 'authentication_required'
    };
  }
  
  // –û—à–∏–±–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ (5xx)
  if (errorObj.status >= 500) {
    return {
      message: '–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
      error_type: 'server_error'
    };
  }
  
  // –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –æ—à–∏–±–∫–∏ (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –∏ —Ç.–¥.) - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ü–ï–†–ï–î –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
  if (errorObj.message && typeof errorObj.message === 'string' && !errorObj.message.includes('fetch')) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è business logic –æ—à–∏–±–æ–∫
    const businessLogicKeywords = ['–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', '–¥–æ—Å—Ç—É–ø–Ω–æ:', 'insufficient funds', 'balance'];
    const isBusinessLogic = businessLogicKeywords.some(keyword => 
      errorObj.message.toLowerCase().includes(keyword.toLowerCase())
    );
    
    if (isBusinessLogic) {
      return {
        message: errorObj.message,
        error_type: 'business_logic_error'
      };
    }
  }
  
  // –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö (400) - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ü–û–°–õ–ï business logic
  if (errorObj.status === 400) {
    return {
      message: errorObj.message || errorObj.error || '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞',
      error_type: 'validation_error'
    };
  }
  
  // –¢–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ network error
  if (error instanceof Error && (error.name === 'TypeError' || error.message.includes('fetch'))) {
    return {
      message: '–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É',
      error_type: 'network_error'
    };
  }
  
  // Fallback –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫
  return {
    message: errorObj.message || errorObj.error || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞',
    error_type: 'unknown_error'
  };
}

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —Å–ª—É—á–∞—è
let passedTests = 0;
let totalTests = testCases.length;

console.log('üìã –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ò –û–®–ò–ë–û–ö:\n');

testCases.forEach((testCase, index) => {
  console.log(`${index + 1}. ${testCase.name}`);
  
  const result = classifyError(testCase.error);
  
  const messageMatch = result.message === testCase.expectedMessage;
  const typeMatch = result.error_type === testCase.expectedType;
  
  if (messageMatch && typeMatch) {
    console.log(`   ‚úÖ PASSED`);
    console.log(`   üìù Message: "${result.message}"`);
    console.log(`   üè∑Ô∏è  Type: ${result.error_type}`);
    passedTests++;
  } else {
    console.log(`   ‚ùå FAILED`);
    console.log(`   Expected: "${testCase.expectedMessage}" (${testCase.expectedType})`);
    console.log(`   Got:      "${result.message}" (${result.error_type})`);
  }
  console.log('');
});

// –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${passedTests}/${totalTests} —Ç–µ—Å—Ç–æ–≤`);
console.log(`üìà –£—Å–ø–µ—Ö: ${Math.round((passedTests/totalTests) * 100)}%`);

if (passedTests === totalTests) {
  console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
  console.log('');
  console.log('üîß –ò–¢–û–ì–ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:');
  console.log('- ‚úÖ Auth errors (401): "–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"');
  console.log('- ‚úÖ Business logic errors: –¢–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç API');
  console.log('- ‚úÖ Validation errors: –ß–µ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏');
  console.log('- ‚úÖ Server errors (5xx): "–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º"');
  console.log('- ‚úÖ Network errors: "–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é" (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö network failures)');
  console.log('');
  console.log('‚ùå –ë–û–õ–¨–®–ï –ù–ï –ü–û–ö–ê–ó–´–í–ê–ï–ú: "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"');
} else {
  console.log('\n‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´. –¢—Ä–µ–±—É—é—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.');
}

console.log('\nüéØ –°–ò–°–¢–ï–ú–ê WITHDRAWAL –ò–°–ü–†–ê–í–õ–ï–ù–ê –ò –ì–û–¢–û–í–ê –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!');