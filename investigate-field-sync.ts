import { supabase } from './core/supabaseClient';

async function investigateFieldSync() {
  console.log('=== –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ü–û–õ–ï–ô –ò –¢–†–ò–ì–ì–ï–†–û–í ===\n');
  
  const userId = '184';
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å–∞
    console.log('1. –ò–°–¢–û–†–ò–Ø –ò–ó–ú–ï–ù–ï–ù–ò–ô –ë–ê–õ–ê–ù–°–ê (–¥–æ –∏ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏):');
    console.log('=' * 60);
    
    // –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ 2 –∞–≤–≥—É—Å—Ç–∞
    const { data: allTransactions } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', parseInt(userId))
      .gte('created_at', '2025-08-02T00:00:00')
      .lte('created_at', '2025-08-02T23:59:59')
      .order('created_at');
      
    console.log(`\n–í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ 2 –∞–≤–≥—É—Å—Ç–∞ (${allTransactions?.length || 0} —à—Ç):\n`);
    
    let runningBalanceTon = 100.36; // –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
    console.log(`–ù–∞—á–∞–ª—å–Ω—ã–π balance_ton: ${runningBalanceTon} TON\n`);
    
    allTransactions?.forEach((tx, i) => {
      const time = new Date(tx.created_at).toLocaleTimeString();
      console.log(`${i+1}. ${time} - ${tx.type}`);
      
      if (tx.currency === 'TON') {
        const amount = parseFloat(tx.amount_ton || tx.amount || '0');
        console.log(`   –°—É–º–º–∞: ${amount > 0 ? '+' : ''}${amount} TON`);
        
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
        if (tx.type === 'FARMING_REWARD' && amount > 0) {
          runningBalanceTon += amount;
          console.log(`   ‚Üí balance_ton –ø–æ—Å–ª–µ: ${runningBalanceTon.toFixed(6)} TON`);
        } else if (tx.type === 'BOOST_PURCHASE' && amount < 0) {
          runningBalanceTon += amount;
          console.log(`   ‚Üí balance_ton –ø–æ—Å–ª–µ: ${runningBalanceTon.toFixed(6)} TON (—Å–ø–∏—Å–∞–Ω–∏–µ)`);
        }
      }
      
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${tx.description}`);
      if (tx.metadata) {
        console.log(`   –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: ${JSON.stringify(tx.metadata)}`);
      }
      console.log('');
    });
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª–µ–π
    console.log('\n\n2. –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –ü–û–õ–ï–ô –í –ë–î:');
    console.log('=' * 60);
    
    const { data: currentUser } = await supabase
      .from('users')
      .select(`
        balance_ton,
        ton_farming_balance,
        ton_boost_active,
        ton_boost_package,
        ton_boost_rate,
        ton_farming_start_timestamp,
        ton_farming_last_update
      `)
      .eq('id', userId)
      .single();
      
    console.log('–¢–∞–±–ª–∏—Ü–∞ users:');
    console.log(`‚îú‚îÄ‚îÄ balance_ton: ${currentUser.balance_ton}`);
    console.log(`‚îú‚îÄ‚îÄ ton_farming_balance: ${currentUser.ton_farming_balance}`);
    console.log(`‚îú‚îÄ‚îÄ ton_boost_active: ${currentUser.ton_boost_active}`);
    console.log(`‚îú‚îÄ‚îÄ ton_boost_package: ${currentUser.ton_boost_package}`);
    console.log(`‚îî‚îÄ‚îÄ ton_boost_rate: ${currentUser.ton_boost_rate}`);
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º ton_farming_data
    const { data: farmingData } = await supabase
      .from('ton_farming_data')
      .select('*')
      .eq('user_id', userId)
      .single();
      
    if (farmingData) {
      console.log('\n–¢–∞–±–ª–∏—Ü–∞ ton_farming_data:');
      console.log(`‚îú‚îÄ‚îÄ farming_balance: ${farmingData.farming_balance}`);
      console.log(`‚îú‚îÄ‚îÄ boost_active: ${farmingData.boost_active}`);
      console.log(`‚îú‚îÄ‚îÄ boost_package_id: ${farmingData.boost_package_id}`);
      console.log(`‚îî‚îÄ‚îÄ updated_at: ${farmingData.updated_at}`);
    }
    
    // 4. –ê–Ω–∞–ª–∏–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    console.log('\n\n3. –ê–ù–ê–õ–ò–ó –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò:');
    console.log('=' * 60);
    
    console.log('\nüîç –ì–ò–ü–û–¢–ï–ó–ê: –¢—Ä–∏–≥–≥–µ—Ä –∏–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤ –ë–î');
    console.log('–ü—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ ton_farming_data –º–æ–∂–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä,');
    console.log('–∫–æ—Ç–æ—Ä—ã–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç ton_farming_balance —Å users —Ç–∞–±–ª–∏—Ü–µ–π');
    console.log('–∏ –ø—Ä–∏ —ç—Ç–æ–º –æ–±–Ω—É–ª—è–µ—Ç balance_ton');
    
    console.log('\nüîç –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê: Race condition');
    console.log('–ù–µ—Å–∫–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–π –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ:');
    console.log('1. –°–ø–∏—Å–∞–Ω–∏–µ 1 TON –∑–∞ boost');
    console.log('2. –ê–∫—Ç–∏–≤–∞—Ü–∏—è boost —Å –¥–µ–ø–æ–∑–∏—Ç–æ–º');
    console.log('3. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–ª–µ–π –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏');
    console.log('4. –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ farming rewards');
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏–π
    console.log('\n\n4. –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ú–û–ú–ï–ù–¢ (10:26):');
    console.log('=' * 60);
    
    const criticalMoment = allTransactions?.filter(tx => {
      const time = new Date(tx.created_at);
      return time.getHours() === 10 && time.getMinutes() === 26;
    });
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${criticalMoment?.length || 0} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ 10:26:`);
    criticalMoment?.forEach(tx => {
      console.log(`- ${tx.type}: ${tx.description}`);
    });
    
    console.log('\n\n=== –í–´–í–û–î–´ ===');
    console.log('1. –í —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö –Ω–µ—Ç –∑–∞–ø–∏—Å–∏ –æ –ø–µ—Ä–µ–Ω–æ—Å–µ 100 TON');
    console.log('2. ton_farming_balance = 115 (–±—ã–ª–æ 15 + —Å—Ç–∞–ª–æ 100)');
    console.log('3. balance_ton = 0.007986 (—Ç–æ–ª—å–∫–æ farming rewards)');
    console.log('\n‚ùì –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('- –¢—Ä–∏–≥–≥–µ—Ä –≤ –ë–î –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª–µ–π');
    console.log('- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π');
    console.log('- –°—Ç–∞—Ä—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–Ω–æ—Å–∏–ª –≤–µ—Å—å –±–∞–ª–∞–Ω—Å');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

investigateFieldSync();