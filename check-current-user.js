/**
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—é –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (ID 1) —É –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π –±–∞–∑—ñ
 */

import { Pool } from 'pg';

const correctDbConfig = {
  connectionString: 'postgresql://neondb_owner:npg_SpgdNBV70WKl@ep-lucky-boat-a463bggt-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require'
};

async function checkCurrentUser() {
  console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID 1 —É –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π Neon DB...');
  
  const pool = new Pool(correctDbConfig);
  
  try {
    // –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID 1
    const userInfo = await pool.query(`
      SELECT id, username, telegram_id, ref_code, created_at 
      FROM users 
      WHERE id = 1
    `);
    
    if (userInfo.rows.length > 0) {
      const user = userInfo.rows[0];
      console.log('‚úÖ –ö–û–†–ò–°–¢–£–í–ê–ß –ó–ù–ê–ô–î–ï–ù–ò–ô –£ –ü–†–ê–í–ò–õ–¨–ù–Ü–ô –ë–ê–ó–Ü:');
      console.log(`   ID: ${user.id}`);
      console.log(`   Username: ${user.username}`);
      console.log(`   Telegram ID: ${user.telegram_id}`);
      console.log(`   –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –∫–æ–¥: ${user.ref_code}`);
      console.log(`   –°—Ç–≤–æ—Ä–µ–Ω–∏–π: ${user.created_at}`);
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ
      const additionalInfo = await pool.query(`
        SELECT 
          (SELECT COUNT(*) FROM transactions WHERE user_id = 1) as transaction_count,
          (SELECT COUNT(*) FROM farming_deposits WHERE user_id = 1) as farming_count
      `);
      
      if (additionalInfo.rows.length > 0) {
        const info = additionalInfo.rows[0];
        console.log(`   –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π: ${info.transaction_count}`);
        console.log(`   –§–∞—Ä–º–∏–Ω–≥ –¥–µ–ø–æ–∑–∏—Ç—ñ–≤: ${info.farming_count}`);
      }
      
    } else {
      console.log('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID 1 –ù–ï –ó–ù–ê–ô–î–ï–ù–ò–ô');
    }
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
  } finally {
    await pool.end();
  }
}

checkCurrentUser();