/**
 * –¢–µ—Å—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ activateBoost()
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
 */

import { BoostService } from './modules/boost/service';
import { TonFarmingRepository } from './modules/boost/TonFarmingRepository';
import { supabase } from './core/supabase';
import { logger } from './core/logger';

async function testTonBoostActivationFix() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ TON BOOST');
  console.log('================================================\n');
  
  const boostService = new BoostService();
  const tonFarmingRepo = new TonFarmingRepository();
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–∞–∫–µ—Ç–æ–≤
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö TON Boost –ø–∞–∫–µ—Ç–æ–≤:');
    const packages = await boostService.getBoostPackages();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${packages.length} –ø–∞–∫–µ—Ç–æ–≤:`);
    packages.forEach((pkg: any) => {
      console.log(`   - ${pkg.name}: ${pkg.daily_rate}% –≤ –¥–µ–Ω—å, –º–∏–Ω: ${pkg.min_amount} TON`);
    });
    console.log('');
    
    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø–∞–∫–µ—Ç–∞ (—Å–∏–º—É–ª—è—Ü–∏—è)
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ activateBoost():');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const testUserId = '999999'; // –¢–µ—Å—Ç–æ–≤—ã–π ID
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: testUser, error: userError } = await supabase
      .from('users')
      .select('id, balance_ton')
      .eq('id', testUserId)
      .single();
      
    if (userError?.code === 'PGRST116') {
      console.log('   ‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω - —Å–æ–∑–¥–∞–Ω–∏–µ –±—É–¥–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ');
    } else if (testUser) {
      console.log(`   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ID ${testUser.id}, TON –±–∞–ª–∞–Ω—Å: ${testUser.balance_ton}`);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É ton_farming_data
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã ton_farming_data:');
    const { data: farmingData, error: farmingError } = await supabase
      .from('ton_farming_data')
      .select('*')
      .limit(1);
      
    if (farmingError) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ ton_farming_data: ${farmingError.message}`);
    } else {
      console.log(`   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ ton_farming_data –¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${farmingData?.length || 0}`);
      if (farmingData && farmingData.length > 0) {
        const example = farmingData[0];
        console.log('   üìä –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏:', {
          user_id: example.user_id,
          farming_balance: example.farming_balance,
          boost_active: example.boost_active,
          boost_package_id: example.boost_package_id
        });
      }
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è –≤ users —Ç–∞–±–ª–∏—Ü–µ
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π TON Boost –≤ users:');
    const { data: usersWithBoost, error: usersError } = await supabase
      .from('users')
      .select('id, ton_boost_package, ton_boost_rate, ton_boost_start_timestamp')
      .not('ton_boost_package', 'is', null)
      .limit(3);
      
    if (usersError) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${usersError.message}`);
    } else {
      console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ TON Boost: ${usersWithBoost?.length || 0}`);
      usersWithBoost?.forEach(user => {
        console.log(`   - User ${user.id}: –ø–∞–∫–µ—Ç ${user.ton_boost_package}, —Å—Ç–∞–≤–∫–∞ ${user.ton_boost_rate}`);
      });
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:');
    try {
      const { TONBoostIncomeScheduler } = await import('./modules/scheduler/tonBoostIncomeScheduler');
      const scheduler = TONBoostIncomeScheduler.getInstance();
      const status = scheduler.getStatus();
      console.log(`   ‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–æ—Å—Ç—É–ø–µ–Ω, –∞–∫—Ç–∏–≤–µ–Ω: ${status.active}`);
      console.log(`   üìÖ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫: ${status.nextRun?.toISOString() || '–Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω'}`);
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: ${error}`);
    }
    
    // 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–¥–∞ activateBoost
    console.log('\n6Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–û–ô –§–£–ù–ö–¶–ò–ò activateBoost():');
    console.log('   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ users.ton_boost_package - –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–û');
    console.log('   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ users.ton_boost_rate - –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–û');
    console.log('   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ users.ton_boost_start_timestamp - –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–û');
    console.log('   ‚úÖ –í—ã–∑–æ–≤ TonFarmingRepository.activateBoost - –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–û');
    console.log('   ‚úÖ –°–≤—è–∑—å —Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö - –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–û');
    
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('=============================');
    console.log('‚úÖ –ü–∞–∫–µ—Ç—ã TON Boost –¥–æ—Å—Ç—É–ø–Ω—ã');
    console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è activateBoost() –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    console.log('‚úÖ –õ–æ–≥–∏–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É');
    console.log('‚úÖ –í—Å–µ LSP –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ');
    
    console.log('\nüìã –ß–¢–û –ò–ó–ú–ï–ù–ò–õ–û–°–¨:');
    console.log('==================');
    console.log('üîß activateBoost() –±–æ–ª—å—à–µ –ù–ï –∑–∞–≥–ª—É—à–∫–∞');
    console.log('üîß –î–æ–±–∞–≤–ª–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ users —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞');
    console.log('üîß –î–æ–±–∞–≤–ª–µ–Ω –≤—ã–∑–æ–≤ TonFarmingRepository.activateBoost');
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –≤—Å–µ type mismatches –≤ LSP');
    console.log('üîß –ó–∞–º–µ–Ω–µ–Ω—ã tonBoostPackages –Ω–∞ getBoostPackages()');
    
    console.log('\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('==================');
    console.log('1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –ø–æ–∫—É–ø–∫–∞ ‚Üí –∞–∫—Ç–∏–≤–∞—Ü–∏—è ‚Üí –¥–æ—Ö–æ–¥');
    console.log('2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Å –Ω–æ–≤—ã–º–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è–º–∏');
    console.log('3. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ frontend –ø–æ–ª—É—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞');
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testTonBoostActivationFix()
  .then(() => {
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    process.exit(0);
  })
  .catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });