import { supabase } from './core/supabaseClient';

async function analyzeNewAccountsGuarantee() {
  console.log('üî¨ –°–í–ï–†–•–¢–û–ß–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ù–û–í–´–• –ê–ö–ö–ê–£–ù–¢–û–í - 100% –ì–ê–†–ê–ù–¢–ò–Ø');
  console.log('='.repeat(80));

  try {
    // 1. –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–ù–ò–• 10 –°–û–ó–î–ê–ù–ù–´–• –ê–ö–ö–ê–£–ù–¢–û–í
    console.log('\n1Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–ù–ò–• 10 –ù–û–í–´–• –ê–ö–ö–ê–£–ù–¢–û–í:');
    
    const { data: latestUsers, error: latestError } = await supabase
      .from('users')
      .select('id, balance_ton, ton_boost_active, created_at, updated_at')
      .order('id', { ascending: false })
      .limit(10);

    if (!latestError && latestUsers) {
      console.log(`üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ ${latestUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:`);
      
      for (const user of latestUsers) {
        console.log(`\n   User ${user.id}:`);
        console.log(`     –°–æ–∑–¥–∞–Ω: ${user.created_at}`);
        console.log(`     TON Balance: ${user.balance_ton}`);
        console.log(`     TON Boost Active: ${user.ton_boost_active}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const { data: userTransactions, error: txError } = await supabase
          .from('transactions')
          .select('type, amount_ton, currency, created_at')
          .eq('user_id', user.id)
          .order('created_at', { ascending: false });

        if (!txError) {
          console.log(`     –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${userTransactions?.length || 0}`);
          if (userTransactions && userTransactions.length > 0) {
            userTransactions.slice(0, 3).forEach((tx, idx) => {
              console.log(`       ${idx + 1}. ${tx.type}: ${tx.amount_ton} ${tx.currency} [${tx.created_at.split('T')[0]}]`);
            });
          }
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º ton_farming_data
        const { data: farmingData, error: farmingError } = await supabase
          .from('ton_farming_data')
          .select('farming_balance, boost_active, boost_package_id')
          .eq('user_id', user.id);

        if (!farmingError) {
          if (farmingData && farmingData.length > 0) {
            console.log(`     Farming Data: balance=${farmingData[0].farming_balance}, active=${farmingData[0].boost_active}, package=${farmingData[0].boost_package_id || '–ù–ï–¢'}`);
          } else {
            console.log(`     Farming Data: ‚ùå –ù–ï–¢`);
          }
        }
      }
    }

    // 2. –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –ù–û–í–û–ì–û –ê–ö–ö–ê–£–ù–¢–ê (–≠–ú–£–õ–Ø–¶–ò–Ø)
    console.log('\n2Ô∏è‚É£ –≠–ú–£–õ–Ø–¶–ò–Ø –°–û–ó–î–ê–ù–ò–Ø –ù–û–í–û–ì–û –ê–ö–ö–ê–£–ù–¢–ê:');
    
    // –ù–∞–π–¥–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ID –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏
    const { data: maxUser, error: maxError } = await supabase
      .from('users')
      .select('id')
      .order('id', { ascending: false })
      .limit(1);

    if (!maxError && maxUser && maxUser.length > 0) {
      const nextUserId = maxUser[0].id + 1;
      console.log(`üìã –≠–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ User ${nextUserId}:`);
      
      // –ù–ï –°–û–ó–î–ê–ï–ú —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–æ–ª—å–∫–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç
      console.log(`   1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ Telegram`);
      console.log(`   2. –°–æ–∑–¥–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å –≤ users —Å balance_ton=0, ton_boost_active=false`);
      console.log(`   3. –ù–ï–¢ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–ø–æ–∫–∞ –Ω–µ –≤–Ω–µ—Å–µ—Ç –¥–µ–ø–æ–∑–∏—Ç)`);
      console.log(`   4. –ù–ï–¢ ton_farming_data (–ø–æ–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç TON Boost)`);
      console.log(`   ‚úÖ –°–û–°–¢–û–Ø–ù–ò–ï: –ß–∏—Å—Ç—ã–π –∞–∫–∫–∞—É–Ω—Ç –±–µ–∑ –ø—Ä–æ–±–ª–µ–º`);
    }

    // 3. –≠–ú–£–õ–Ø–¶–ò–Ø –ü–ï–†–í–û–ì–û TON –î–ï–ü–û–ó–ò–¢–ê
    console.log('\n3Ô∏è‚É£ –≠–ú–£–õ–Ø–¶–ò–Ø –ü–ï–†–í–û–ì–û TON –î–ï–ü–û–ó–ò–¢–ê:');
    
    console.log(`üìã –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –¥–µ–ø–æ–∑–∏—Ç–µ 1 TON:`);
    console.log(`   1. Frontend –≤—ã–∑—ã–≤–∞–µ—Ç API /api/v2/wallet/ton-deposit`);
    console.log(`   2. API –≤—ã–∑—ã–≤–∞–µ—Ç WalletService.processTonDeposit()`);
    console.log(`   3. processTonDeposit() –≤—ã–∑—ã–≤–∞–µ—Ç UnifiedTransactionService.createTransaction()`);
    console.log(`   4. UnifiedTransactionService:`);
    console.log(`      - –°–æ–∑–¥–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é TON_DEPOSIT`);
    console.log(`      - –û–±–Ω–æ–≤–ª—è–µ—Ç balance_ton —á–µ—Ä–µ–∑ BalanceManager`);
    console.log(`      - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ`);
    console.log(`   5. –†–µ–∑—É–ª—å—Ç–∞—Ç: balance_ton=1, —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞`);

    // 4. –≠–ú–£–õ–Ø–¶–ò–Ø –ü–û–ö–£–ü–ö–ò TON BOOST
    console.log('\n4Ô∏è‚É£ –≠–ú–£–õ–Ø–¶–ò–Ø –ü–û–ö–£–ü–ö–ò TON BOOST:');
    
    console.log(`üìã –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ TON Boost –ø–∞–∫–µ—Ç–∞ 1:`);
    console.log(`   1. Frontend –≤—ã–∑—ã–≤–∞–µ—Ç API /api/v2/boost/purchase-with-ton`);
    console.log(`   2. API –≤—ã–∑—ã–≤–∞–µ—Ç BoostService.purchaseWithExternalTon()`);
    console.log(`   3. BoostService:`);
    console.log(`      - –°–ø–∏—Å—ã–≤–∞–µ—Ç 1 TON —á–µ—Ä–µ–∑ processWithdrawal()`);
    console.log(`      - –°–æ–∑–¥–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é BOOST_PURCHASE`);
    console.log(`      - –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç TON Boost —á–µ—Ä–µ–∑ TonFarmingRepository`);
    console.log(`      - –°–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å—å –≤ ton_farming_data`);
    console.log(`      - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ton_boost_active=true`);
    console.log(`   4. –†–µ–∑—É–ª—å—Ç–∞—Ç: balance_ton=0, boost –∞–∫—Ç–∏–≤–µ–Ω, farming_data —Å–æ–∑–¥–∞–Ω–∞`);

    // 5. –ü–†–û–í–ï–†–ö–ê –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• API –≠–ù–î–ü–û–ò–ù–¢–û–í
    console.log('\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• API –≠–ù–î–ü–û–ò–ù–¢–û–í:');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω—ã
    const criticalEndpoints = [
      '/api/v2/wallet/ton-deposit',
      '/api/v2/boost/purchase-with-ton',
      '/api/v2/transactions',
      '/api/v2/farming/status'
    ];
    
    console.log(`üîó –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:`);
    criticalEndpoints.forEach(endpoint => {
      console.log(`   ${endpoint}: –î–û–õ–ñ–ï–ù –°–£–©–ï–°–¢–í–û–í–ê–¢–¨`);
    });

    // 6. –ê–ù–ê–õ–ò–ó –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–• –ü–†–û–ë–õ–ï–ú –î–õ–Ø –ù–û–í–´–• –ê–ö–ö–ê–£–ù–¢–û–í
    console.log('\n6Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–• –ü–†–û–ë–õ–ï–ú:');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç—ã
    const { data: recentDeposits, error: depositError } = await supabase
      .from('transactions')
      .select('user_id, type, amount_ton, created_at')
      .in('type', ['TON_DEPOSIT', 'BOOST_PURCHASE'])
      .gte('created_at', new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()) // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è
      .order('created_at', { ascending: false })
      .limit(20);

    if (!depositError && recentDeposits) {
      console.log(`üí∞ –î–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è: ${recentDeposits.length}`);
      
      const tonDeposits = recentDeposits.filter(tx => tx.type === 'TON_DEPOSIT');
      const boostPurchases = recentDeposits.filter(tx => tx.type === 'BOOST_PURCHASE');
      
      console.log(`   TON_DEPOSIT: ${tonDeposits.length}`);
      console.log(`   BOOST_PURCHASE: ${boostPurchases.length}`);
      
      if (tonDeposits.length === 0) {
        console.log(`   üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ù–ò –û–î–ù–û–ì–û TON_DEPOSIT –∑–∞ 3 –¥–Ω—è!`);
        console.log(`   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ processTonDeposit() –ù–ï –í–´–ó–´–í–ê–ï–¢–°–Ø!`);
      } else {
        console.log(`   ‚úÖ TON –¥–µ–ø–æ–∑–∏—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
      }
      
      if (boostPurchases.length > 0) {
        console.log(`   ‚úÖ BOOST –ø–æ–∫—É–ø–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
      }

      // –ò–¢–û–ì–û–í–ê–Ø –ì–ê–†–ê–ù–¢–ò–Ø –ù–ê –û–°–ù–û–í–ï –ê–ù–ê–õ–ò–ó–ê
      console.log(`\nüéØ –ò–¢–û–ì–û–í–ê–Ø –ì–ê–†–ê–ù–¢–ò–Ø –î–õ–Ø –ù–û–í–´–• –ê–ö–ö–ê–£–ù–¢–û–í:`);
      
      if (tonDeposits.length === 0) {
        console.log(`   ‚ùå –ì–ê–†–ê–ù–¢–ò–Ø: 0-20%`);
        console.log(`   –ü–†–û–ë–õ–ï–ú–ê: TON –¥–µ–ø–æ–∑–∏—Ç—ã –ù–ï —Å–æ–∑–¥–∞—é—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏`);
        console.log(`   –ü–†–ò–ß–ò–ù–ê: processTonDeposit() –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç`);
        console.log(`   –ü–û–°–õ–ï–î–°–¢–í–ò–ï: –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±—É–¥—É—Ç –∏–º–µ—Ç—å —Ç–µ –∂–µ –ø—Ä–æ–±–ª–µ–º—ã`);
      } else if (recentUsersWithIssues > 0) {
        console.log(`   ‚ö†Ô∏è –ì–ê–†–ê–ù–¢–ò–Ø: 60-80%`);
        console.log(`   –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –ø—Ä–æ–±–ª–µ–º—ã`);
        console.log(`   –ü–†–ò–ß–ò–ù–ê: –ù–µ–ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ API`);
      } else {
        console.log(`   ‚úÖ –ì–ê–†–ê–ù–¢–ò–Ø: 90-100%`);
        console.log(`   –°–û–°–¢–û–Ø–ù–ò–ï: –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
      }

      console.log(`\nüìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:`);
      if (tonDeposits.length === 0) {
        console.log(`   1. –ù–ï –ò–ì–ù–û–†–ò–†–û–í–ê–¢–¨ —Å—Ç–∞—Ä—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã - –ø—Ä–æ–±–ª–µ–º–∞ –ü–†–û–î–û–õ–ñ–ê–ï–¢–°–Ø`);
        console.log(`   2. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏—Å–ø—Ä–∞–≤–∏—Ç—å processTonDeposit()`);
        console.log(`   3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç`);
      } else {
        console.log(`   1. –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ`);
        console.log(`   2. –°—Ç–∞—Ä—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å`);
        console.log(`   3. –î–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤`);
      }
    }

    // 7. FINAL VERDICT - 100% –ì–ê–†–ê–ù–¢–ò–Ø
    console.log('\n7Ô∏è‚É£ –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê - 100% –ì–ê–†–ê–ù–¢–ò–Ø:');
    
    console.log(`\nüîç –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –§–ê–ö–¢–´:`);
    
    // –§–∞–∫—Ç 1: –ï—Å—Ç—å –ª–∏ TON_DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤–æ–æ–±—â–µ
    const { data: anyTonDeposits, error: anyDepositError } = await supabase
      .from('transactions')
      .select('COUNT(*)')
      .eq('type', 'TON_DEPOSIT')
      .single();

    if (!anyDepositError && anyTonDeposits) {
      const count = anyTonDeposits.count || 0;
      console.log(`   –í—Å–µ–≥–æ TON_DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ: ${count}`);
      
      if (count === 0) {
        console.log(`   üö® –ö–†–ò–¢–ò–ß–ù–û: –ù–ò –û–î–ù–û–ô TON_DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏!`);
        console.log(`   ‚ùå –ì–ê–†–ê–ù–¢–ò–Ø: 0% - –∫–æ–¥ processTonDeposit() –ù–ï –†–ê–ë–û–¢–ê–ï–¢`);
      } else {
        console.log(`   ‚úÖ TON_DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è`);
      }
    }

    // –§–∞–∫—Ç 2: –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const recentUsersWithIssues = latestUsers?.filter(u => 
      u.balance_ton > 0 && !u.ton_boost_active
    ).length || 0;

    console.log(`   –ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏: ${recentUsersWithIssues}/${latestUsers?.length || 0}`);

  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:', error);
  }
}

analyzeNewAccountsGuarantee().catch(console.error);