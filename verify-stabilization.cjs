const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.DATABASE_URL;
const supabaseKey = process.env.SUPABASE_ANON_KEY;

const supabase = createClient(supabaseUrl, supabaseKey);

async function verifyStabilization() {
  console.log('üéâ –ü–†–û–í–ï–†–ö–ê –°–¢–ê–ë–ò–õ–ò–ó–ê–¶–ò–ò –°–ò–°–¢–ï–ú–´');
  console.log('=' + '='.repeat(40));
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const { data: transactions } = await supabase
      .from('transactions')
      .select('created_at, amount, user_id, type, currency')
      .order('created_at', { ascending: false })
      .limit(10);

    if (!transactions) return;

    // –ê–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
    const intervals = [];
    for (let i = 1; i < Math.min(transactions.length, 8); i++) {
      const prev = new Date(transactions[i-1].created_at);
      const curr = new Date(transactions[i].created_at);
      const diffMs = prev.getTime() - curr.getTime();
      const diffMin = diffMs / (1000 * 60);
      intervals.push(diffMin);
    }

    console.log('‚è±Ô∏è –ü–û–°–õ–ï–î–ù–ò–ï –ò–ù–¢–ï–†–í–ê–õ–´:');
    intervals.forEach((interval, i) => {
      const status = interval >= 4.5 && interval <= 5.5 ? '‚úÖ' : 
                    interval >= 3 ? 'üü°' : 'üî¥';
      console.log(`   ${status} ${interval.toFixed(2)} –º–∏–Ω—É—Ç`);
    });

    const avgInterval = intervals.reduce((a, b) => a + b, 0) / intervals.length;
    const stableCount = intervals.filter(i => i >= 4.5 && i <= 5.5).length;
    const stabilityPercent = (stableCount / intervals.length) * 100;

    console.log(`\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–¢–ê–ë–ò–õ–ò–ó–ê–¶–ò–ò:`);
    console.log(`   –°—Ä–µ–¥–Ω–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: ${avgInterval.toFixed(2)} –º–∏–Ω—É—Ç`);
    console.log(`   –°—Ç–∞–±–∏–ª—å–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤: ${stableCount}/${intervals.length} (${stabilityPercent.toFixed(0)}%)`);

    if (stabilityPercent >= 80 && avgInterval >= 4.5) {
      console.log('\nüéØ –°–¢–ê–ë–ò–õ–ò–ó–ê–¶–ò–Ø –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê!');
      console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ');
      console.log('‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º (5 –º–∏–Ω—É—Ç)');
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º User 184
      const { data: user184 } = await supabase
        .from('users')
        .select('balance_uni')
        .eq('id', 184)
        .single();
        
      if (user184) {
        console.log(`\nüë§ User 184 –±–∞–ª–∞–Ω—Å: ${parseFloat(user184.balance_uni).toFixed(6)} UNI`);
      }
      
    } else {
      console.log('\n‚è≥ –°–¢–ê–ë–ò–õ–ò–ó–ê–¶–ò–Ø –í –ü–†–û–¶–ï–°–°–ï...');
      console.log(`   –ù—É–∂–Ω–æ ${80 - stabilityPercent.toFixed(0)}% –±–æ–ª—å—à–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤`);
    }

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message);
  }
}

verifyStabilization();