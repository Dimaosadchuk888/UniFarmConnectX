/**
 * –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –ü–û –î–ò–ê–ì–ù–û–°–¢–ò–ö–ï TON BOOST –°–ò–°–¢–ï–ú–´
 * –ü–æ–ª–Ω–∞—è —Å–≤–æ–¥–∫–∞ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∑–∞–¥–∞–Ω–∏—é
 */

import { createClient } from '@supabase/supabase-js';

async function generateFinalReport() {
  const supabaseUrl = process.env.SUPABASE_URL;
  const supabaseKey = process.env.SUPABASE_KEY;
  
  const supabase = createClient(supabaseUrl, supabaseKey);
  
  console.log('üìã –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢: –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ TON BOOST');
  console.log('='.repeat(70));
  console.log('–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ' + new Date().toLocaleString('ru-RU'));
  console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: demo_user (ID: 48, Telegram ID: 88888888)');
  
  const userId = 48;
  
  // –ë–õ–û–ö 1: –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –°–ò–°–¢–ï–ú–´
  console.log('\n' + '='.repeat(70));
  console.log('1Ô∏è‚É£  –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –°–ò–°–¢–ï–ú–´');
  console.log('='.repeat(70));
  
  const { data: user, error: userError } = await supabase
    .from('users')
    .select('*')
    .eq('id', userId)
    .single();
  
  if (userError) {
    console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  console.log('üîπ –û–°–ù–û–í–ù–´–ï –î–ê–ù–ù–´–ï:');
  console.log(`   –ë–∞–ª–∞–Ω—Å TON: ${user.balance_ton}`);
  console.log(`   –ë–∞–ª–∞–Ω—Å UNI: ${user.balance_uni}`);
  console.log(`   TON Boost –ø–∞–∫–µ—Ç: ${user.ton_boost_package || '–ù–ï –ê–ö–¢–ò–í–ò–†–û–í–ê–ù'}`);
  console.log(`   TON Boost —Å—Ç–∞–≤–∫–∞: ${user.ton_boost_rate ? (user.ton_boost_rate * 100).toFixed(1) + '%' : '–ù–ï–¢'}`);
  console.log(`   –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${user.ton_boost_active || false}`);
  
  // –ë–õ–û–ö 2: –ê–ù–ê–õ–ò–ó –ü–û–ö–£–ü–û–ö BOOST –ü–ê–ö–ï–¢–û–í
  console.log('\n' + '='.repeat(70));
  console.log('2Ô∏è‚É£  –ê–ù–ê–õ–ò–ó –ü–û–ö–£–ü–û–ö BOOST –ü–ê–ö–ï–¢–û–í');
  console.log('='.repeat(70));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É boost_purchases
  const { data: boostPurchases, error: boostError } = await supabase
    .from('boost_purchases')
    .select('*')
    .eq('user_id', userId)
    .order('created_at', { ascending: false });
  
  console.log('üîπ –ó–ê–ü–ò–°–ò –í –¢–ê–ë–õ–ò–¶–ï BOOST_PURCHASES:');
  if (boostError) {
    console.log(`   ‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: ${boostError.message}`);
    console.log('   üìå –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ users.ton_boost_package');
  } else {
    console.log(`   üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${boostPurchases?.length || 0}`);
    if (boostPurchases?.length > 0) {
      boostPurchases.forEach((purchase, idx) => {
        const time = new Date(purchase.created_at).toLocaleString('ru-RU');
        console.log(`     ${idx + 1}. ID: ${purchase.id} | –ü–∞–∫–µ—Ç: ${purchase.package_id} | –°—Ç–∞—Ç—É—Å: ${purchase.status} | ${time}`);
      });
    } else {
      console.log('   üìù –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –ø–æ–∫—É–ø–æ–∫ –≤ boost_purchases');
    }
  }
  
  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–∫—É–ø–æ–∫
  const { data: allTransactions, error: txError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', userId)
    .not('amount_ton', 'is', null)
    .neq('amount_ton', '0')
    .order('created_at', { ascending: false });
  
  if (!txError && allTransactions?.length > 0) {
    const purchaseTransactions = allTransactions.filter(tx => 
      tx.description && (
        tx.description.toLowerCase().includes('–ø–æ–∫—É–ø–∫–∞') ||
        tx.description.toLowerCase().includes('purchase') ||
        tx.description.toLowerCase().includes('—Å–ø–∏—Å–∞–Ω–∏–µ')
      )
    );
    
    console.log('\nüîπ –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –ü–û–ö–£–ü–û–ö:');
    console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–∫—É–ø–æ–∫: ${purchaseTransactions.length}`);
    
    if (purchaseTransactions.length > 0) {
      purchaseTransactions.forEach((tx, idx) => {
        const time = new Date(tx.created_at).toLocaleString('ru-RU');
        console.log(`     ${idx + 1}. ${tx.amount_ton} TON | ${time} | ${tx.description}`);
      });
    }
  }
  
  // –ë–õ–û–ö 3: –ê–ù–ê–õ–ò–ó –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –ù–ê–ß–ò–°–õ–ï–ù–ò–ô
  console.log('\n' + '='.repeat(70));
  console.log('3Ô∏è‚É£  –ê–ù–ê–õ–ò–ó –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –ù–ê–ß–ò–°–õ–ï–ù–ò–ô');
  console.log('='.repeat(70));
  
  if (!txError && allTransactions?.length > 0) {
    const boostIncomeTransactions = allTransactions.filter(tx => 
      tx.description && (
        tx.description.toLowerCase().includes('boost') &&
        (tx.description.toLowerCase().includes('–¥–æ—Ö–æ–¥') || tx.description.toLowerCase().includes('income'))
      )
    );
    
    console.log('üîπ –ù–ê–ß–ò–°–õ–ï–ù–ò–Ø OT TON BOOST:');
    console.log(`   üìä –í—Å–µ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π: ${boostIncomeTransactions.length}`);
    
    if (boostIncomeTransactions.length > 0) {
      const totalIncome = boostIncomeTransactions.reduce((sum, tx) => sum + parseFloat(tx.amount_ton), 0);
      console.log(`   üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π: ${totalIncome.toFixed(8)} TON`);
      
      // –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π
      console.log('\nüîπ –ü–û–°–õ–ï–î–ù–ò–ï 10 –ù–ê–ß–ò–°–õ–ï–ù–ò–ô:');
      boostIncomeTransactions.slice(0, 10).forEach((tx, idx) => {
        const time = new Date(tx.created_at).toLocaleString('ru-RU');
        const minutesAgo = ((new Date() - new Date(tx.created_at)) / (1000 * 60)).toFixed(1);
        console.log(`     ${idx + 1}. ${tx.amount_ton} TON | ${time} (${minutesAgo} –º–∏–Ω –Ω–∞–∑–∞–¥)`);
      });
      
      // –ê–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
      if (boostIncomeTransactions.length >= 2) {
        console.log('\nüîπ –ê–ù–ê–õ–ò–ó –ò–ù–¢–ï–†–í–ê–õ–û–í –ù–ê–ß–ò–°–õ–ï–ù–ò–ô:');
        const intervals = [];
        for (let i = 0; i < Math.min(5, boostIncomeTransactions.length - 1); i++) {
          const current = new Date(boostIncomeTransactions[i].created_at);
          const next = new Date(boostIncomeTransactions[i + 1].created_at);
          const intervalMinutes = (current - next) / (1000 * 60);
          intervals.push(intervalMinutes);
        }
        
        const avgInterval = intervals.reduce((sum, int) => sum + int, 0) / intervals.length;
        console.log(`   ‚è±Ô∏è  –°—Ä–µ–¥–Ω–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: ${avgInterval.toFixed(1)} –º–∏–Ω—É—Ç`);
        console.log(`   üìã –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã: [${intervals.map(i => i.toFixed(1)).join(', ')}] –º–∏–Ω—É—Ç`);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è 5-–º–∏–Ω—É—Ç–Ω–æ–º—É —Ü–∏–∫–ª—É
        const expectedInterval = 5;
        const deviationPercent = Math.abs(avgInterval - expectedInterval) / expectedInterval * 100;
        
        if (deviationPercent <= 20) {
          console.log(`   ‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ ${deviationPercent.toFixed(1)}%)`);
        } else {
          console.log(`   ‚ö†Ô∏è  –ë–æ–ª—å—à–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç 5-–º–∏–Ω—É—Ç–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ (${deviationPercent.toFixed(1)}%)`);
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –º–∏–Ω—É—Ç
      const recentTransactions = boostIncomeTransactions.filter(tx => {
        const txTime = new Date(tx.created_at);
        const minutesAgo = (new Date() - txTime) / (1000 * 60);
        return minutesAgo <= 30;
      });
      
      console.log('\nüîπ –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 30 –ú–ò–ù–£–¢:');
      console.log(`   üìä –ù–∞—á–∏—Å–ª–µ–Ω–∏–π: ${recentTransactions.length}`);
      
      if (recentTransactions.length > 0) {
        const lastTx = recentTransactions[0];
        const minutesAgo = (new Date() - new Date(lastTx.created_at)) / (1000 * 60);
        console.log(`   üïí –ü–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ: ${minutesAgo.toFixed(1)} –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥`);
        
        if (minutesAgo <= 6) {
          console.log('   üü¢ –°–¢–ê–¢–£–°: –ü–õ–ê–ù–ò–†–û–í–©–ò–ö –ê–ö–¢–ò–í–ï–ù');
        } else if (minutesAgo <= 15) {
          console.log('   üü° –°–¢–ê–¢–£–°: –ù–ï–ë–û–õ–¨–®–ê–Ø –ó–ê–î–ï–†–ñ–ö–ê');
        } else {
          console.log('   üî¥ –°–¢–ê–¢–£–°: –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–û–ë–õ–ï–ú–´');
        }
      } else {
        console.log('   üî¥ –°–¢–ê–¢–£–°: –ù–ï–¢ –ê–ö–¢–ò–í–ù–û–°–¢–ò');
      }
    } else {
      console.log('   ‚ùå –ù–∞—á–∏—Å–ª–µ–Ω–∏—è TON Boost –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
  }
  
  // –ë–õ–û–ö 4: –†–ê–°–ß–ï–¢–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –î–û–•–û–î–ù–û–°–¢–ò
  console.log('\n' + '='.repeat(70));
  console.log('4Ô∏è‚É£  –†–ê–°–ß–ï–¢–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –î–û–•–û–î–ù–û–°–¢–ò');
  console.log('='.repeat(70));
  
  if (user.ton_boost_package && user.ton_boost_rate && user.balance_ton) {
    const currentBalance = parseFloat(user.balance_ton);
    const deposit = Math.max(0, currentBalance - 10);
    const dailyRate = user.ton_boost_rate;
    const dailyIncome = deposit * dailyRate;
    const fiveMinIncome = dailyIncome / 288;
    const hourlyIncome = dailyIncome / 24;
    
    console.log('üîπ –¢–ï–û–†–ï–¢–ò–ß–ï–°–ö–ò–ï –†–ê–°–ß–ï–¢–´:');
    console.log(`   üéØ –ê–∫—Ç–∏–≤–Ω—ã–π –ø–∞–∫–µ—Ç: ${user.ton_boost_package}`);
    console.log(`   üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${currentBalance} TON`);
    console.log(`   üìà –î–µ–ø–æ–∑–∏—Ç –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞: ${deposit.toFixed(6)} TON (–±–∞–ª–∞–Ω—Å - 10 —Ä–µ–∑–µ—Ä–≤)`);
    console.log(`   üìä –î–Ω–µ–≤–Ω–∞—è —Å—Ç–∞–≤–∫–∞: ${(dailyRate * 100).toFixed(1)}%`);
    console.log(`   üíµ –û–∂–∏–¥–∞–µ–º—ã–π –¥–Ω–µ–≤–Ω–æ–π –¥–æ—Ö–æ–¥: ${dailyIncome.toFixed(6)} TON`);
    console.log(`   ‚è∞ –û–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥ –∑–∞ 5 –º–∏–Ω—É—Ç: ${fiveMinIncome.toFixed(8)} TON`);
    console.log(`   üïê –û–∂–∏–¥–∞–µ–º—ã–π —á–∞—Å–æ–≤–æ–π –¥–æ—Ö–æ–¥: ${hourlyIncome.toFixed(6)} TON`);
    
    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    if (!txError && allTransactions?.length > 0) {
      const boostIncomes = allTransactions.filter(tx => 
        tx.description && tx.description.toLowerCase().includes('boost') &&
        tx.description.toLowerCase().includes('–¥–æ—Ö–æ–¥')
      );
      
      if (boostIncomes.length > 0) {
        console.log('\nüîπ –°–†–ê–í–ù–ï–ù–ò–ï –° –§–ê–ö–¢–ò–ß–ï–°–ö–ò–ú–ò –î–ê–ù–ù–´–ú–ò:');
        const lastIncome = boostIncomes[0];
        const actualAmount = parseFloat(lastIncome.amount_ton);
        const deviation = Math.abs(actualAmount - fiveMinIncome) / fiveMinIncome * 100;
        
        console.log(`   üí° –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ: ${actualAmount} TON`);
        console.log(`   üìê –û–∂–∏–¥–∞–µ–º–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ: ${fiveMinIncome.toFixed(8)} TON`);
        console.log(`   üìä –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: ${deviation.toFixed(1)}%`);
        
        if (deviation <= 5) {
          console.log('   ‚úÖ –†–ê–°–ß–ï–¢–´ –ö–û–†–†–ï–ö–¢–ù–´ (–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ)');
        } else if (deviation <= 15) {
          console.log('   üü° –ù–ï–ë–û–õ–¨–®–û–ï –†–ê–°–•–û–ñ–î–ï–ù–ò–ï –≤ —Ä–∞—Å—á–µ—Ç–∞—Ö');
        } else {
          console.log('   ‚ö†Ô∏è  –ó–ù–ê–ß–ò–¢–ï–õ–¨–ù–û–ï –†–ê–°–•–û–ñ–î–ï–ù–ò–ï –≤ —Ä–∞—Å—á–µ—Ç–∞—Ö');
        }
      }
    }
  } else {
    console.log('‚ùå –ü–ê–ö–ï–¢ –ù–ï –ê–ö–¢–ò–í–ò–†–û–í–ê–ù - —Ä–∞—Å—á–µ—Ç—ã –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã');
  }
  
  // –ë–õ–û–ö 5: –£–°–¢–û–ô–ß–ò–í–û–°–¢–¨ –ò –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø
  console.log('\n' + '='.repeat(70));
  console.log('5Ô∏è‚É£  –£–°–¢–û–ô–ß–ò–í–û–°–¢–¨ –ò –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´');
  console.log('='.repeat(70));
  
  console.log('üîπ –ü–†–û–í–ï–†–ö–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –î–ê–ù–ù–´–•:');
  
  // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö Supabase vs API
  const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));
  
  try {
    const apiResponse = await fetch('https://9e8e72ca-ad0e-4d1b-b689-b91a4832fe73-00-7a29dnah0ryx.spock.replit.dev/api/v2/users/profile', {
      headers: {
        'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjQ4LCJ0ZWxlZ3JhbV9pZCI6NDgsInVzZXJuYW1lIjoiZGVtb191c2VyIiwicmVmX2NvZGUiOiJSRUZfMTc1MDk1MjU3NjYxNF90OTM4dnMiLCJpYXQiOjE3NTE2MTMzMDAsImV4cCI6MTc1MjIxODEwMH0.itCnOpcM4WQEksdm8M7L7tj1dGKuALNVFY0HQdIIk2I`,
        'Content-Type': 'application/json'
      }
    });
    
    const apiData = await apiResponse.json();
    const apiBalance = apiData.data?.user?.balance_ton || apiData.data?.balance_ton || '0';
    
    console.log(`   üóÑÔ∏è  –î–∞–Ω–Ω—ã–µ Supabase: ${user.balance_ton} TON`);
    console.log(`   üåê –î–∞–Ω–Ω—ã–µ API: ${apiBalance} TON`);
    
    const supabaseBalance = parseFloat(user.balance_ton);
    const apiBalanceNum = parseFloat(apiBalance);
    
    if (Math.abs(supabaseBalance - apiBalanceNum) < 0.000001) {
      console.log('   ‚úÖ –î–ê–ù–ù–´–ï –°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù–´');
    } else {
      console.log('   ‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–û –†–ê–°–•–û–ñ–î–ï–ù–ò–ï –≤ –±–∞–ª–∞–Ω—Å–∞—Ö');
      console.log('   üí° –í–æ–∑–º–æ–∂–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º API');
    }
    
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ API: ${error.message}`);
  }
  
  // –ë–õ–û–ö 6: –ò–¢–û–ì–û–í–´–ï –í–´–í–û–î–´
  console.log('\n' + '='.repeat(70));
  console.log('6Ô∏è‚É£  –ò–¢–û–ì–û–í–´–ï –í–´–í–û–î–´ –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò');
  console.log('='.repeat(70));
  
  let systemScore = 0;
  const checks = [];
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞
  if (user.ton_boost_package && user.ton_boost_rate > 0) {
    checks.push('‚úÖ TON Boost –ø–∞–∫–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
    systemScore += 25;
  } else {
    checks.push('‚ùå TON Boost –ø–∞–∫–µ—Ç –ù–ï –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ù–∞–ª–∏—á–∏–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π
  if (!txError && allTransactions?.length > 0) {
    const boostIncomes = allTransactions.filter(tx => 
      tx.description && tx.description.toLowerCase().includes('boost') &&
      tx.description.toLowerCase().includes('–¥–æ—Ö–æ–¥')
    );
    
    if (boostIncomes.length > 0) {
      checks.push('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–æ–∑–¥–∞–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è');
      systemScore += 25;
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
      const recentIncomes = boostIncomes.filter(tx => {
        const minutesAgo = (new Date() - new Date(tx.created_at)) / (1000 * 60);
        return minutesAgo <= 15;
      });
      
      if (recentIncomes.length > 0) {
        checks.push('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–∫—Ç–∏–≤–µ–Ω (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 15 –º–∏–Ω)');
        systemScore += 25;
      } else {
        checks.push('‚ö†Ô∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω (–Ω–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π 15+ –º–∏–Ω)');
        systemScore += 10;
      }
    } else {
      checks.push('‚ùå –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ù–ï —Å–æ–∑–¥–∞–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è');
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–æ–≤
  if (user.ton_boost_package && user.ton_boost_rate && allTransactions?.length > 0) {
    const boostIncomes = allTransactions.filter(tx => 
      tx.description && tx.description.toLowerCase().includes('boost') &&
      tx.description.toLowerCase().includes('–¥–æ—Ö–æ–¥')
    );
    
    if (boostIncomes.length > 0) {
      const expectedIncome = ((parseFloat(user.balance_ton) - 10) * user.ton_boost_rate) / 288;
      const actualIncome = parseFloat(boostIncomes[0].amount_ton);
      const deviation = Math.abs(actualIncome - expectedIncome) / expectedIncome * 100;
      
      if (deviation <= 10) {
        checks.push('‚úÖ –†–∞—Å—á–µ—Ç—ã –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
        systemScore += 25;
      } else {
        checks.push('‚ö†Ô∏è –ï—Å—Ç—å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –≤ —Ä–∞—Å—á–µ—Ç–∞—Ö –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏');
        systemScore += 15;
      }
    }
  }
  
  console.log('üîπ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–û–ö:');
  checks.forEach(check => console.log(`   ${check}`));
  
  console.log('\nüîπ –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –°–ò–°–¢–ï–ú–´:');
  console.log(`   üìä –û—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: ${systemScore}/100 –±–∞–ª–ª–æ–≤`);
  
  if (systemScore >= 80) {
    console.log('   üü¢ –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –û–¢–õ–ò–ß–ù–û');
  } else if (systemScore >= 60) {
    console.log('   üü° –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –° –ù–ï–ë–û–õ–¨–®–ò–ú–ò –ü–†–û–ë–õ–ï–ú–ê–ú–ò');
  } else if (systemScore >= 40) {
    console.log('   üü† –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –° –°–ï–†–¨–ï–ó–ù–´–ú–ò –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø–ú–ò');
  } else {
    console.log('   üî¥ –°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –°–ï–†–¨–ï–ó–ù–û–ô –î–û–†–ê–ë–û–¢–ö–ò');
  }
  
  console.log('\nüîπ –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  console.log(`   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.username} (ID: ${user.id})`);
  console.log(`   üí∞ –ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–∞–Ω—Å TON: ${user.balance_ton}`);
  console.log(`   üéØ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤: ${user.ton_boost_package ? 1 : 0}`);
  if (!txError && allTransactions?.length > 0) {
    const boostTxs = allTransactions.filter(tx => 
      tx.description && tx.description.toLowerCase().includes('boost')
    );
    console.log(`   üìä –í—Å–µ–≥–æ TON Boost —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${boostTxs.length}`);
    console.log(`   üí∏ –í—Å–µ–≥–æ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${allTransactions.length}`);
  }
  
  console.log('\n' + '='.repeat(70));
  console.log('üìã –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
  console.log('–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ' + new Date().toLocaleString('ru-RU'));
  console.log('='.repeat(70));
}

generateFinalReport().catch(console.error);