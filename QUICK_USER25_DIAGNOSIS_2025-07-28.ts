#!/usr/bin/env tsx

/**
 * –ë–´–°–¢–†–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ò—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ 3 TON —É User ID 25
 * 28.07.2025, 14:04 - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø–æ–ª–Ω–∏–ª 3 TON, —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏—Å—á–µ–∑–ª–∏
 */

import express from 'express';
import cors from 'cors';

console.log('üö® –°–†–û–ß–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ò—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ 3 TON —É User ID 25');
console.log('üìÖ –í—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è: 28.07.2025, 14:04');
console.log('üîó TX Hash: te6cckECAgEAAKoAAeGIAMtaj5JhEoDmTGdtuWKu2Ndd7Q45BQhTz1ozLYdEVqaK...');
console.log('='.repeat(80));

async function quickDiagnosis() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å API –¥–ª—è User ID 25...');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ API
    const balanceResponse = await fetch('http://localhost:3000/api/v2/wallet/balance?user_id=25', {
      method: 'GET',
      headers: { 'Content-Type': 'application/json' }
    });
    
    if (balanceResponse.ok) {
      const balanceData = await balanceResponse.json();
      console.log('üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å User 25:', balanceData);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', balanceResponse.status);
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
    const transactionsResponse = await fetch('http://localhost:3000/api/v2/transactions/user/25?limit=10', {
      method: 'GET',
      headers: { 'Content-Type': 'application/json' }
    });
    
    if (transactionsResponse.ok) {
      const transactionsData = await transactionsResponse.json();
      console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ User 25:');
      
      if (transactionsData.success && transactionsData.data) {
        transactionsData.data.forEach((tx: any, index: number) => {
          console.log(`${index + 1}. [${tx.created_at}] ${tx.type} | ${tx.amount} | Status: ${tx.status}`);
          if (tx.metadata && tx.metadata.tx_hash) {
            console.log(`   TX Hash: ${tx.metadata.tx_hash.substring(0, 30)}...`);
          }
        });
      } else {
        console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö');
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', transactionsResponse.status);
    }
    
    // –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ hash
    console.log('\nüîç –ü–æ–∏—Å–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º hash...');
    const targetHash = 'te6cckECAgEAAKoAAeGIAMtaj5JhEoDmTGdtuWKu2Ndd7Q45BQhTz1ozLYdEVqaK';
    
    const searchResponse = await fetch(`http://localhost:3000/api/v2/transactions/search?user_id=25&tx_hash=${encodeURIComponent(targetHash)}`, {
      method: 'GET',
      headers: { 'Content-Type': 'application/json' }
    });
    
    if (searchResponse.ok) {
      const searchData = await searchResponse.json();
      console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –ø–æ hash:', searchData);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ hash:', searchResponse.status);
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
async function checkServerStatus() {
  try {
    const healthResponse = await fetch('http://localhost:3000/health');
    if (healthResponse.ok) {
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
      return true;
    } else {
      console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', healthResponse.status);
      return false;
    }
  } catch (error) {
    console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç:', error);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  const serverAvailable = await checkServerStatus();
  
  if (serverAvailable) {
    await quickDiagnosis();
  } else {
    console.log('‚ö†Ô∏è –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É - —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä: tsx server/index.ts');
    console.log('2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.log('3. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –ø–æ—Ä—Ç 3000 —Å–≤–æ–±–æ–¥–µ–Ω');
  }
  
  console.log('\n='.repeat(80));
  console.log('üìã –ö–†–ê–¢–ö–ò–ï –í–´–í–û–î–´:');
  console.log('- User ID 25 –ø–æ–ø–æ–ª–Ω–∏–ª 3 TON –≤ 14:04');
  console.log('- –°—Ä–µ–¥—Å—Ç–≤–∞ –æ—Ç–æ–±—Ä–∞–∑–∏–ª–∏—Å—å, –∑–∞—Ç–µ–º –∏—Å—á–µ–∑–ª–∏');
  console.log('- –ü–æ–∫—É–ø–∫–∏ –Ω–µ —Å–æ–≤–µ—Ä—à–∞–ª–∏—Å—å');
  console.log('- –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
  console.log('='.repeat(80));
}

main().catch(console.error);