/**
 * NETWORK 401 ERRORS HUNTER
 * 
 * –¶–µ–ª—å: –ù–∞–π—Ç–∏ –∫–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ API endpoints –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç 401 –æ—à–∏–±–∫–∏
 * –ú–µ—Ç–æ–¥: –ê–Ω–∞–ª–∏–∑ Network tab patterns
 */

console.log('üïµÔ∏è NETWORK 401 ERRORS HUNTER');
console.log('============================');

console.log('\nüéØ HUNTING TARGET: 401 UNAUTHORIZED RESPONSES');

console.log('\nüìã API ENDPOINTS TO MONITOR:');

console.log('\nüîç HIGH-RISK ENDPOINTS (likely to return 401):');
console.log('/api/v2/wallet/balance?user_id=X');
console.log('/api/v2/uni-farming/status?user_id=X'); 
console.log('/api/v2/transactions?user_id=X');
console.log('/api/v2/wallet/ton-deposit');
console.log('/api/v2/wallet/withdrawal');
console.log('/api/v2/boost/packages');
console.log('/api/v2/boost/purchase');

console.log('\nüîç MEDIUM-RISK ENDPOINTS:');
console.log('/api/v2/users/profile');
console.log('/api/v2/users/referrals');
console.log('/api/v2/auth/refresh');
console.log('/api/v2/missions/daily');

console.log('\nüîç LOW-RISK ENDPOINTS (should work without JWT):');
console.log('/api/v2/auth/telegram');
console.log('/api/health');
console.log('/api/v2/telegram/webhook');

console.log('\nüö® DETECTION STRATEGY:');

console.log('\nSTEP 1: BASELINE MEASUREMENT');
console.log('–°—Ä–∞–∑—É –ø–æ—Å–ª–µ server restart:');
console.log('- –í—Å–µ API calls –¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 200 OK');
console.log('- JWT —Ç–æ–∫–µ–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ Authorization headers');
console.log('- –ù–µ—Ç 401 –æ—à–∏–±–æ–∫ –≤ Network tab');

console.log('\nSTEP 2: DEGRADATION DETECTION');
console.log('–ü–æ –º–µ—Ä–µ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã:');
console.log('- –ü–æ—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö 401 –æ—à–∏–±–æ–∫');
console.log('- –ö–∞–∫–æ–π endpoint –ø–µ—Ä–≤—ã–º –Ω–∞—á–∏–Ω–∞–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å 401?');
console.log('- Timing: —á–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ restart?');

console.log('\nSTEP 3: CASCADE ANALYSIS');
console.log('–ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π 401 –æ—à–∏–±–∫–∏:');
console.log('- Spread pattern: –∫–∞–∫–∏–µ –µ—â–µ endpoints –Ω–∞—á–∏–Ω–∞—é—Ç –æ—Ç–≤–µ—á–∞—Ç—å 401?');
console.log('- Token refresh attempts: POST /api/v2/auth/telegram');
console.log('- Recovery success rate: –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ª–∏ –¥–æ—Å—Ç—É–ø?');

console.log('\nüìä EXPECTED 401 ERROR PATTERNS:');

console.log('\nPATTERN A: JWT EXPIRATION CASCADE');
console.log('1. All endpoints start returning 401 simultaneously');
console.log('2. Token is truly expired (7 days passed)');
console.log('3. Token refresh successfully restores access');
console.log('‚Üí DIAGNOSIS: Natural JWT expiration (unlikely given 7-day lifespan)');

console.log('\nPATTERN B: PROGRESSIVE ENDPOINT FAILURE');
console.log('1. One endpoint starts returning 401');
console.log('2. Other endpoints gradually follow');
console.log('3. Token still present in localStorage');
console.log('‚Üí DIAGNOSIS: Backend JWT validation issues');

console.log('\nPATTERN C: SPORADIC 401 ERRORS');
console.log('1. Random endpoints occasionally return 401');
console.log('2. Same endpoint works again after retry');
console.log('3. No clear pattern or timing');
console.log('‚Üí DIAGNOSIS: Race conditions or server load issues');

console.log('\nPATTERN D: IMMEDIATE POST-ACTION 401s');
console.log('1. Specific endpoints return 401 only after certain actions');
console.log('2. (e.g. balance endpoint fails after deposit)');
console.log('3. Token disappears from localStorage shortly after');
console.log('‚Üí DIAGNOSIS: Action-triggered token invalidation');

console.log('\nüîç CRITICAL QUESTIONS TO ANSWER:');

console.log('\nQUESTION 1: FIRST FAILURE ENDPOINT');
console.log('–ö–∞–∫–æ–π API endpoint –ø–µ—Ä–≤—ã–º –Ω–∞—á–∏–Ω–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 401?');
console.log('- –ï—Å–ª–∏ /api/v2/wallet/balance ‚Üí –ø—Ä–æ–±–ª–µ–º–∞ —Å balance authorization');
console.log('- –ï—Å–ª–∏ /api/v2/uni-farming/status ‚Üí –ø—Ä–æ–±–ª–µ–º–∞ —Å farming authorization');
console.log('- –ï—Å–ª–∏ –≤—Å–µ —Å—Ä–∞–∑—É ‚Üí –æ–±—â–∞—è JWT validation failure');

console.log('\nQUESTION 2: TIMING CORRELATION');
console.log('–ï—Å—Ç—å –ª–∏ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É 401 errors –∏:');
console.log('- –í—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ (–∫–∞–∂–¥—ã–µ X –º–∏–Ω—É—Ç)?');
console.log('- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ (–¥–µ–ø–æ–∑–∏—Ç/–≤—ã–≤–æ–¥)?');
console.log('- –°–∏—Å—Ç–µ–º–Ω—ã–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ (WebSocket reconnects)?');

console.log('\nQUESTION 3: AUTHORIZATION HEADER ANALYSIS');
console.log('–í –º–æ–º–µ–Ω—Ç 401 –æ—à–∏–±–∫–∏:');
console.log('- –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ Authorization header –≤ request?');
console.log('- –ö–æ—Ä—Ä–µ–∫—Ç–µ–Ω –ª–∏ format: "Bearer <token>"?');
console.log('- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–æ–∫–µ–Ω –≤ header —Ç–æ–∫–µ–Ω—É –≤ localStorage?');

console.log('\nQUESTION 4: RESPONSE BODY ANALYSIS');
console.log('–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç backend –≤ 401 response:');
console.log('- "Invalid or expired JWT token"?');
console.log('- "Authentication required"?');
console.log('- "need_new_token": true?');
console.log('- Specific error details?');

console.log('\nüìã MONITORING CHECKLIST:');

console.log('\n‚è∞ REAL-TIME MONITORING:');
console.log('[ ] Open Browser DevTools ‚Üí Network tab');
console.log('[ ] Filter by "XHR" or "Fetch" requests');
console.log('[ ] Sort by Status Code to spot 401 errors');
console.log('[ ] Monitor for first appearance of red (4xx) responses');

console.log('\nüîç DATA COLLECTION FOR EACH 401:');
console.log('[ ] Endpoint URL');
console.log('[ ] Request method (GET/POST/PUT/DELETE)');
console.log('[ ] Request headers (especially Authorization)');
console.log('[ ] Response status and body');
console.log('[ ] Timestamp');
console.log('[ ] User action context');

console.log('\nüìä PATTERN ANALYSIS:');
console.log('[ ] First 401 error: endpoint + timing');
console.log('[ ] Subsequent 401s: spread pattern');
console.log('[ ] Token refresh attempts: frequency + success rate');
console.log('[ ] Recovery pattern: how access is restored');

console.log('\n‚ö° HUNTER STATUS: READY');
console.log('–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Network tab –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –ø–µ—Ä–≤—ã—Ö 401 –æ—à–∏–±–æ–∫...');
console.log('–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∞–Ω–∞–ª–∏–∑—É JWT validation failures.');