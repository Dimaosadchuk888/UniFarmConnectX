/**
 * –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï TON FARMING - 25 –∏—é–ª—è 2025
 * –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø–æ–ª–µ–π (–ë–ï–ó daily_income)
 */

import { config } from 'dotenv';
import { createClient } from '@supabase/supabase-js';
import { v4 as uuidv4 } from 'uuid';

config();

const supabaseUrl = process.env.SUPABASE_URL!;
const supabaseAnonKey = process.env.SUPABASE_KEY!;
const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function fixedTonFarmingRestoration() {
    console.log('\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï TON FARMING');
    console.log('=' .repeat(60));
    
    try {
        // –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –∞–Ω–∞–ª–∏–∑–∞
        const missingUsers = [
            { id: 220, ton_boost_package: 1, ton_boost_rate: 0.01 },
            { id: 246, ton_boost_package: 1, ton_boost_rate: 0.01 },
            { id: 250, ton_boost_package: 1, ton_boost_rate: 0.01 }
        ];

        console.log(`üö® –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ${missingUsers.length} –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);

        let successCount = 0;
        let errorCount = 0;

        for (const user of missingUsers) {
            console.log(`\nüîÑ –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –¥–ª—è User ${user.id}:`);
            
            // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π (User 184)
            const currentTime = new Date().toISOString();
            const expireTime = new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString(); // +1 –≥–æ–¥

            const recordData = {
                id: uuidv4(), // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º UUID –∫–∞–∫ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å—è—Ö
                user_id: user.id.toString(), // STRING —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                boost_active: true,
                boost_package_id: user.ton_boost_package, // 1
                boost_expires_at: expireTime, // +1 –≥–æ–¥ –∫–∞–∫ —É –¥—Ä—É–≥–∏—Ö
                farming_balance: 1, // 1 TON –∫–∞–∫ —É User 184
                total_earned: 0,
                last_claim_at: currentTime,
                created_at: currentTime,
                updated_at: currentTime,
                farming_rate: user.ton_boost_rate, // 0.01 –∏–∑ users —Ç–∞–±–ª–∏—Ü—ã
                farming_start_timestamp: currentTime,
                farming_last_update: currentTime
            };

            console.log(`   üì¶ Package ID: ${recordData.boost_package_id}`);
            console.log(`   üí∞ Farming Balance: ${recordData.farming_balance} TON`);
            console.log(`   ‚ö° Farming Rate: ${recordData.farming_rate} TON/—Å–µ–∫`);
            console.log(`   üìÖ Expires: ${new Date(expireTime).toLocaleDateString('ru-RU')}`);

            try {
                const { data, error } = await supabase
                    .from('ton_farming_data')
                    .insert(recordData);

                if (error) {
                    console.error(`   ‚ùå –û–®–ò–ë–ö–ê:`, error.message);
                    errorCount++;
                } else {
                    console.log(`   ‚úÖ –£–°–ü–ï–®–ù–û —Å–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å`);
                    successCount++;
                }
            } catch (err) {
                console.error(`   ‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï:`, err);
                errorCount++;
            }

            // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            await new Promise(resolve => setTimeout(resolve, 300));
        }

        // –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
        console.log('\n' + '=' .repeat(60));
        console.log('üìà –†–ï–ó–£–õ–¨–¢–ê–¢–´ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:');
        console.log('=' .repeat(60));
        console.log(`üë• –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${missingUsers.length}`);
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ: ${successCount}`);
        console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
        console.log(`üìä –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${((successCount / missingUsers.length) * 100).toFixed(1)}%`);

        // –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê
        if (successCount > 0) {
            console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê:');
            const { data: newRecords, error: checkError } = await supabase
                .from('ton_farming_data')
                .select('user_id, farming_balance, farming_rate')
                .in('user_id', missingUsers.map(u => u.id.toString()));

            if (!checkError && newRecords) {
                console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${newRecords.length} –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π:`);
                newRecords.forEach(record => {
                    console.log(`   User ${record.user_id}: ${record.farming_balance} TON, rate ${record.farming_rate}`);
                });

                if (newRecords.length === missingUsers.length) {
                    console.log('\nüéâ –í–°–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –£–°–ü–ï–®–ù–û –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–´!');
                    console.log('‚ö° –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ–±–Ω–∞—Ä—É–∂–∏—Ç –∏—Ö –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ü–∏–∫–ª–µ (2-5 –º–∏–Ω—É—Ç)');
                    console.log('üí∞ –û–Ω–∏ –Ω–∞—á–Ω—É—Ç –ø–æ–ª—É—á–∞—Ç—å TON –¥–æ—Ö–æ–¥—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
                }
            }
        }

        if (successCount === 0) {
            console.log('\n‚ùå –ù–ò –û–î–ù–û–ô –ó–ê–ü–ò–°–ò –ù–ï –°–û–ó–î–ê–ù–û - —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
        }

    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    }

    console.log('\n' + '=' .repeat(60));
    console.log('üéØ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û');
    console.log('=' .repeat(60));
}

// –ó–∞–ø—É—Å–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
fixedTonFarmingRestoration().then(() => {
    console.log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω');
    process.exit(0);
}).catch((error) => {
    console.error('‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
});