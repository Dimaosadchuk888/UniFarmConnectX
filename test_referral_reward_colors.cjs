#!/usr/bin/env node
/**
 * –¢–ï–°–¢ –¶–í–ï–¢–û–í –†–ï–§–ï–†–ê–õ–¨–ù–´–• –ù–ê–ì–†–ê–î
 * –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–ª–∏—á–µ–Ω–∏—è UNI/TON
 */

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY
);

async function createTestReferralRewards() {
  console.log('üé® –¢–ï–°–¢ –¶–í–ï–¢–û–í –†–ï–§–ï–†–ê–õ–¨–ù–´–• –ù–ê–ì–†–ê–î');
  
  try {
    // –ù–∞—Ö–æ–¥–∏–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: testUser } = await supabase
      .from('users')
      .select('id')
      .limit(1)
      .single();

    if (!testUser) {
      console.error('‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    const userId = testUser.id;
    console.log(`‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: ${userId}`);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã
    const testTransactions = [
      {
        user_id: userId,
        type: 'REFERRAL_REWARD',
        amount: '100',
        currency: 'UNI',
        status: 'completed',
        description: 'TEST: UNI referral reward (should be PURPLE)'
      },
      {
        user_id: userId,
        type: 'REFERRAL_REWARD', 
        amount: '0.05',
        currency: 'TON',
        status: 'completed',
        description: 'TEST: TON referral reward (should be BLUE)'
      }
    ];

    console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
    
    const { data: results, error } = await supabase
      .from('transactions')
      .insert(testTransactions)
      .select();

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤:', error.message);
      return;
    }

    console.log('‚úÖ –¢–ï–°–¢–û–í–´–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –°–û–ó–î–ê–ù–´:');
    results.forEach((tx, index) => {
      const expectedColor = tx.currency === 'UNI' ? 'PURPLE' : 'BLUE';
      console.log(`   ${index + 1}. ID ${tx.id}: ${tx.currency} referral ‚Üí ${expectedColor}`);
    });

    console.log('\nüéØ –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò UI:');
    console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    console.log('   2. –ù–∞–π–¥–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å "TEST:" –≤ –æ–ø–∏—Å–∞–Ω–∏–∏');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–≤–µ—Ç–∞:');
    console.log('      - UNI referral –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –§–ò–û–õ–ï–¢–û–í–û–ô');
    console.log('      - TON referral –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –°–ò–ù–ï–ô');

    console.log('\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏...');
    
    setTimeout(async () => {
      console.log('\nüßπ –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•...');
      
      const testIds = results.map(tx => tx.id);
      await supabase
        .from('transactions')
        .delete()
        .in('id', testIds);
      
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã');
      console.log('üéâ –¢–µ—Å—Ç —Ü–≤–µ—Ç–æ–≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥ –∑–∞–≤–µ—Ä—à–µ–Ω');
      
    }, 30000);

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  }
}

createTestReferralRewards();