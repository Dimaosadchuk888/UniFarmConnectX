import React from "react";
import { createRoot } from "react-dom/client";
import "./index.css";
import App from "./App";
import { ReplitErrorBoundaryContext } from "./contexts/ReplitErrorBoundaryContext";
import frontendLogger from "./utils/frontendLogger";

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram WebApp —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
frontendLogger.debug('=== TELEGRAM WEBAPP DEBUG START ===');
frontendLogger.debug('Current URL:', window.location.href);
frontendLogger.debug('User Agent:', navigator.userAgent);
frontendLogger.debug('Referrer:', document.referrer);
frontendLogger.debug('Is iframe:', window !== window.parent);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram WebApp —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
function checkTelegramWebApp(attempt = 1, maxAttempts = 10) {
  frontendLogger.debug(`[Attempt ${attempt}/${maxAttempts}] Checking Telegram WebApp...`);
  
  if (typeof window.Telegram !== 'undefined' && window.Telegram?.WebApp) {
    const tg = window.Telegram.WebApp;
    frontendLogger.info('‚úÖ Telegram WebApp –Ω–∞–π–¥–µ–Ω!');
    frontendLogger.debug('Platform:', tg.platform);
    frontendLogger.debug('Version:', tg.version);
    frontendLogger.debug('initData –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç:', !!tg.initData);
    frontendLogger.debug('initData –¥–ª–∏–Ω–∞:', tg.initData?.length || 0);
    frontendLogger.debug('Is expanded:', tg.isExpanded);
    frontendLogger.debug('Viewport height:', tg.viewportHeight);
    
    // –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ initData
    if (tg.initData && tg.initData.length > 0) {
      frontendLogger.info('‚úÖ initData –ø–æ–ª—É—á–µ–Ω:', tg.initData.substring(0, 100) + '...');
      frontendLogger.info('initDataUnsafe:', JSON.stringify(tg.initDataUnsafe, null, 2));
      
      if (tg.initDataUnsafe?.user) {
        frontendLogger.info('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:');
        frontendLogger.info('- User ID:', tg.initDataUnsafe.user.id);
        frontendLogger.info('- Username:', tg.initDataUnsafe.user.username);
        frontendLogger.info('- First name:', tg.initDataUnsafe.user.first_name);
        frontendLogger.info('- Language:', tg.initDataUnsafe.user.language_code);
      } else {
        frontendLogger.info('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ initDataUnsafe');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º start_param –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
      if (tg.initDataUnsafe?.start_param) {
        frontendLogger.info('‚úÖ Start param –Ω–∞–π–¥–µ–Ω:', tg.initDataUnsafe.start_param);
      }
    } else {
      frontendLogger.info('‚ùå initData –ø—É—Å—Ç–æ–π - –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      frontendLogger.info('1. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ –Ω–µ –∏–∑ Telegram (–ø—Ä—è–º–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ)');
      frontendLogger.info('2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω Web App URL –≤ BotFather');
      frontendLogger.info('3. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ—à–ª–æ –≤–∞–ª–∏–¥–∞—Ü–∏—é Telegram');
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
      frontendLogger.info('Window location:', {
        protocol: window.location.protocol,
        host: window.location.host,
        pathname: window.location.pathname,
        search: window.location.search
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏ Telegram —Å—Ä–µ–¥—ã
      const isTelegramEnv = !!(
        (window as any).TelegramWebviewProxy ||
        navigator.userAgent.includes('Telegram') ||
        window.parent !== window
      );
      frontendLogger.info('–ü—Ä–∏–∑–Ω–∞–∫–∏ Telegram —Å—Ä–µ–¥—ã:', isTelegramEnv);
    }
    
    // –í—ã–∑—ã–≤–∞–µ–º ready() –∏ expand()
    try {
      tg.ready();
      tg.expand();
      frontendLogger.info('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (ready + expand)');
    } catch (error) {
      frontendLogger.info('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', error);
    }
    
    return true;
  } else {
    frontendLogger.info(`‚ùå Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ–ø—ã—Ç–∫–∞ ${attempt})`);
    frontendLogger.info('window.Telegram:', typeof window.Telegram);
    frontendLogger.info('window.Telegram?.WebApp:', typeof window.Telegram?.WebApp);
    
    if (attempt < maxAttempts) {
      // –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 500–º—Å
      setTimeout(() => checkTelegramWebApp(attempt + 1, maxAttempts), 500);
      return false;
    } else {
      frontendLogger.info('üö® –ö–†–ò–¢–ò–ß–ù–û: Telegram WebApp —Ç–∞–∫ –∏ –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω');
      frontendLogger.info('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      frontendLogger.info('1. –°–∫—Ä–∏–ø—Ç telegram-web-app.js –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è');
      frontendLogger.info('2. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ –≤–Ω–µ Telegram');
      frontendLogger.info('3. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
      return false;
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkTelegramWebApp();

frontendLogger.info('=== TELEGRAM WEBAPP DEBUG END ===');

// –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏ DOM// Create a minimal ErrorBoundaryContext implementation for @replit/vite-plugin-runtime-error-modal
const createErrorBoundaryContext = () => {
  const context = React.createContext({
    error: null,
    setError: () => {},
    clearError: () => {},
    hasError: false,
    reportError: () => {}
  });
  return context;
};

// Make ErrorBoundaryContext globally available
if (typeof window !== 'undefined') {
  (window as any).React = React;
  (window as any).ErrorBoundaryContext = createErrorBoundaryContext();
}

const rootElement = document.getElementById("root");
if (rootElement) {
  const root = createRoot(rootElement);
  root.render(<App />);} else {}