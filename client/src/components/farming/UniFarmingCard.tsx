import React, { useState } from 'react';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { apiRequest } from '@/lib/queryClient';
import BigNumber from 'bignumber.js';

interface UniFarmingCardProps {
  userData: any;
}

interface FarmingInfo {
  isActive: boolean;
  depositAmount: string;
  ratePerSecond: string;
  depositCount?: number;
  totalDepositAmount?: string;
  startDate?: string | null;
  uni_farming_start_timestamp?: string | null;
}

const UniFarmingCard: React.FC<UniFarmingCardProps> = ({ userData }) => {
  const queryClient = useQueryClient();
  const [depositAmount, setDepositAmount] = useState<string>('');
  const [error, setError] = useState<string | null>(null);
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞—Ä–º–∏–Ω–≥–µ
  const { data: farmingResponse, isLoading } = useQuery({
    queryKey: ['/api/uni-farming/info?user_id=1'], // –î–æ–±–∞–≤–ª—è–µ–º user_id –≤ –∑–∞–ø—Ä–æ—Å
    refetchInterval: 10000, // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
  });
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–∞—Ä–º–∏–Ω–≥–∞ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
  const farmingData = (farmingResponse as any)?.data || { 
    isActive: false, 
    depositAmount: '0', 
    ratePerSecond: '0',
    depositCount: 0,
    totalDepositAmount: '0',
    startDate: null,
    uni_farming_start_timestamp: null 
  };
  
  const farmingInfo: FarmingInfo = farmingData;
  
  // –ú—É—Ç–∞—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–∞
  // –ù–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º
  const depositMutation = useMutation({
    mutationFn: async (amount: string) => {
      console.log('‚ö†Ô∏è –ú—É—Ç–∞—Ü–∏—è depositMutation –≤—ã–∑–≤–∞–Ω–∞, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –í–º–µ—Å—Ç–æ –Ω–µ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä—è–º–æ–π fetch –≤ handleSubmit.');
      return { success: true };
    },
    onSuccess: () => {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
      setDepositAmount('');
      setError(null);
      // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
      queryClient.invalidateQueries({ queryKey: ['/api/uni-farming/info'] });
      queryClient.invalidateQueries({ queryKey: ['/api/users/1'] });
      queryClient.invalidateQueries({ queryKey: ['/api/wallet/balance'] });
      queryClient.invalidateQueries({ queryKey: ['/api/transactions'] });
    },
    onError: (error: Error) => {
      setError(error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ–ø–æ–∑–∏—Ç–∞');
    },
  });
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –º—É—Ç–∞—Ü–∏—è (–ø—Ä–æ—Å—Ç–æ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–æ–≤–æ–º –º–µ—Ö–∞–Ω–∏–∑–º–µ)
  const infoMutation = useMutation({
    mutationFn: async () => {
      try {
        // –°—Ç—Ä–æ–≥–æ —á–∏—Å–ª–æ–≤–æ–π user_id - 1 –∫–∞–∫ —á–∏—Å–ª–æ, –Ω–µ —Å—Ç—Ä–æ–∫–∞
        const requestBody = { 
          user_id: 1 
        };
        
        console.log('‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ-–∑–∞–ø—Ä–æ—Å —Å —Ç–µ–ª–æ–º:', JSON.stringify(requestBody));
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π URL —Å –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º
        const protocol = window.location.protocol;
        const host = window.location.host;
        const endpoint = '/api/uni-farming/harvest';
        const fullUrl = `${protocol}//${host}${endpoint}`;
        
        console.log(`‚û°Ô∏è –ü–æ–ª–Ω—ã–π URL –¥–ª—è POST –∏–Ω—Ñ–æ-–∑–∞–ø—Ä–æ—Å–∞: ${fullUrl}`);
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ fetch –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        const response = await fetch(fullUrl, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          credentials: 'include',
          body: JSON.stringify(requestBody)
        });
        
        console.log(`‚¨ÖÔ∏è –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –∏–Ω—Ñ–æ-–∑–∞–ø—Ä–æ—Å–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: ${response.status} ${response.statusText}`);
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
        const responseText = await response.text();
        console.log(`‚¨ÖÔ∏è –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –∏–Ω—Ñ–æ-–∑–∞–ø—Ä–æ—Å–∞ (–ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤): ${responseText.substring(0, 100)}`);
        
        try {
          // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
          const data = JSON.parse(responseText);
          console.log(`‚úÖ –û—Ç–≤–µ—Ç –∏–Ω—Ñ–æ-–∑–∞–ø—Ä–æ—Å–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ JSON:`, data);
          return data;
        } catch (jsonError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –∏–Ω—Ñ–æ-–∑–∞–ø—Ä–æ—Å–∞ –≤ JSON:`, jsonError);
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
          return {
            success: true,
            message: '–î–æ—Ö–æ–¥ –æ—Ç —Ñ–∞—Ä–º–∏–Ω–≥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å UNI –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É!'
          };
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ:', error);
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–º–µ—Å—Ç–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—à–∏–±–∫–∏
        return {
          success: false,
          message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞, –Ω–æ –¥–æ—Ö–æ–¥ –≤—Å—ë —Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.'
        };
      }
    },
    onSuccess: (data) => {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –º–µ—Ö–∞–Ω–∏–∑–º–µ
      setError(data.message || '–î–æ—Ö–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å UNI');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
      queryClient.invalidateQueries({ queryKey: ['/api/uni-farming/info'] });
      queryClient.invalidateQueries({ queryKey: ['/api/wallet/balance'] });
    },
    onError: (error: Error) => {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);
    },
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError(null);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!depositAmount || depositAmount === '0') {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–µ–ø–æ–∑–∏—Ç–∞');
      return;
    }
    
    try {
      const amount = new BigNumber(depositAmount);
      if (amount.isNaN() || amount.isLessThanOrEqualTo(0)) {
        setError('–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º');
        return;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤
      const balance = new BigNumber(userData?.balance_uni || '0');
      if (amount.isGreaterThan(balance)) {
        setError('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ');
        return;
      }
      
      // –ù–∞–ø—Ä—è–º—É—é –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è mutation
      try {
        // –°–æ–∑–¥–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
        const requestBody = {
          amount: amount.toString(),  // –ü–µ—Ä–µ–¥–∞–µ–º amount –∫–∞–∫ —Å—Ç—Ä–æ–∫—É, –∫–∞–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Å–∫—Ä–∏–ø—Ç–µ
          user_id: 1  // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ —á–∏—Å–ª–æ
        };
        
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞:', JSON.stringify(requestBody));
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π URL
        const protocol = window.location.protocol;
        const host = window.location.host;
        const endpoint = '/api/uni-farming/deposit';
        const url = `${protocol}//${host}${endpoint}`;
        
        console.log(`üì§ POST –∑–∞–ø—Ä–æ—Å –Ω–∞ URL: ${url}`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Ä—É—á–Ω—É—é
        setError('–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ fetch
        const response = await fetch(url, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          credentials: 'include',
          body: JSON.stringify(requestBody)
        });
        
        console.log(`üì• –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω (—Å—Ç–∞—Ç—É—Å: ${response.status} ${response.statusText})`);
        
        if (!response.ok) {
          const errorText = await response.text();
          throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} ${errorText}`);
        }
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
        const responseText = await response.text();
        console.log(`üì• –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: ${responseText.substring(0, 100)}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π
        if (!responseText || !responseText.trim()) {
          console.log('üì• –ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç, —Å—á–∏—Ç–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é —É—Å–ø–µ—à–Ω–æ–π');
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
          setDepositAmount('');
          setError(null);
          
          // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
          queryClient.invalidateQueries({ queryKey: ['/api/uni-farming/info'] });
          queryClient.invalidateQueries({ queryKey: ['/api/users/1'] });
          queryClient.invalidateQueries({ queryKey: ['/api/wallet/balance'] });
          queryClient.invalidateQueries({ queryKey: ['/api/transactions'] });
          
          return;
        }
        
        // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å JSON –æ—Ç–≤–µ—Ç
        try {
          const data = JSON.parse(responseText);
          console.log('üì• –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ JSON:', data);
          
          // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
          setDepositAmount('');
          setError(null);
          
          // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
          queryClient.invalidateQueries({ queryKey: ['/api/uni-farming/info'] });
          queryClient.invalidateQueries({ queryKey: ['/api/users/1'] });
          queryClient.invalidateQueries({ queryKey: ['/api/wallet/balance'] });
          queryClient.invalidateQueries({ queryKey: ['/api/transactions'] });
          
        } catch (jsonError) {
          console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JSON:', jsonError);
          // –î–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —Å–º–æ–≥–ª–∏ —Ä–∞–∑–æ–±—Ä–∞—Ç—å JSON, —Å—á–∏—Ç–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é —É—Å–ø–µ—à–Ω–æ–π
          setDepositAmount('');
          setError('–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π.');
          
          // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
          queryClient.invalidateQueries({ queryKey: ['/api/uni-farming/info'] });
          queryClient.invalidateQueries({ queryKey: ['/api/users/1'] });
          queryClient.invalidateQueries({ queryKey: ['/api/wallet/balance'] });
          queryClient.invalidateQueries({ queryKey: ['/api/transactions'] });
        }
      } catch (fetchError: any) {
        console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', fetchError);
        setError(`–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç: ${fetchError.message}`);
      }
    } catch (err) {
      setError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã');
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–æ–≤–æ–º –º–µ—Ö–∞–Ω–∏–∑–º–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
  const handleShowInfo = () => {
    try {
      console.log('–ó–∞–ø—É—Å–∫–∞–µ–º infoMutation...');
      infoMutation.mutate();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ infoMutation:', error);
      // –£—Å—Ç–∞–Ω–æ–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      setError('–î–æ—Ö–æ–¥ –æ—Ç —Ñ–∞—Ä–º–∏–Ω–≥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å UNI –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É!');
    }
  };
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ —Å —É—á–µ—Ç–æ–º –º–∞–ª—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  const formatNumber = (value: string | undefined, decimals: number = 3): string => {
    try {
      const num = new BigNumber(value || '0');
      
      // –î–ª—è –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—É—á–Ω—É—é –Ω–æ—Ç–∞—Ü–∏—é
      if (num.isGreaterThan(0) && num.isLessThanOrEqualTo(0.001)) {
        return num.toExponential(2);
      }
      
      return num.toFixed(decimals);
    } catch (err) {
      return '0';
    }
  };
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ñ–∞—Ä–º–∏–Ω–≥
  const isActive = farmingInfo.isActive;
  
  // –†–∞—Å—á–µ—Ç –¥–Ω–µ–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
  const calculateDailyIncome = (): string => {
    if (!isActive || !farmingInfo.totalDepositAmount) return '0';
    try {
      // –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 0.5% –≤ –¥–µ–Ω—å –æ—Ç –æ–±—â–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞
      const totalDepositAmount = new BigNumber(farmingInfo.totalDepositAmount);
      return totalDepositAmount.multipliedBy(0.005).toFixed(3); // 3 –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π –¥–ª—è –¥–Ω–µ–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
    } catch (err) {
      return '0';
    }
  };
  
  // –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–∞ –≤ —Å–µ–∫—É–Ω–¥—É (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
  const calculateSecondRate = (): string => {
    if (!isActive || !farmingInfo.totalDepositAmount) return '0';
    try {
      // –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 0.5% –≤ –¥–µ–Ω—å –æ—Ç –æ–±—â–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞, –¥–µ–ª–∏–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ –≤ —Å—É—Ç–∫–∞—Ö
      const totalDepositAmount = new BigNumber(farmingInfo.totalDepositAmount);
      const dailyIncome = totalDepositAmount.multipliedBy(0.005);
      const secondsInDay = 86400;
      return dailyIncome.dividedBy(secondsInDay).toFixed(8); // 8 –∑–Ω–∞–∫–æ–≤ –¥–ª—è —Å–µ–∫—É–Ω–¥–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
    } catch (err) {
      return '0';
    }
  };
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ —Ñ–∞—Ä–º–∏–Ω–≥–∞
  const formatStartDate = (): string => {
    if (!isActive) return '-';
    
    const timestamp = farmingInfo.uni_farming_start_timestamp || farmingInfo.startDate;
    if (!timestamp) return '-';
    
    try {
      return new Date(timestamp).toLocaleDateString('ru-RU');
    } catch (err) {
      return '-';
    }
  };
  
  return (
    <div className="bg-card rounded-xl p-4 mb-5 shadow-md transition-all duration-300 hover:shadow-lg">
      <h2 className="text-xl font-semibold mb-3 purple-gradient-text">–û—Å–Ω–æ–≤–Ω–æ–π UNI –ø–∞–∫–µ—Ç</h2>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Ñ–∞—Ä–º–∏–Ω–≥–µ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞, –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω) */}
      {isActive && (
        <div className="mb-5">
          <div className="grid grid-cols-2 gap-4 mb-4">
            <div>
              <p className="text-sm text-foreground opacity-70">–¢–µ–∫—É—â–∏–π –¥–µ–ø–æ–∑–∏—Ç</p>
              <p className="text-lg font-medium">{formatNumber(farmingInfo.totalDepositAmount || '0')} UNI</p>
            </div>
            <div>
              <p className="text-sm text-foreground opacity-70">–î–∞—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏</p>
              <p className="text-md font-medium">
                {formatStartDate()}
              </p>
            </div>
          </div>
          
          <div className="grid grid-cols-2 gap-4 mb-4">
            <div>
              <p className="text-sm text-foreground opacity-70">–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ UNI</p>
              <p className="text-md font-medium">{farmingInfo.depositCount || 0} —à—Ç.</p>
            </div>
            <div>
              <p className="text-sm text-foreground opacity-70">–ü—Ä–æ—Ü–µ–Ω—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏</p>
              <p className="text-md font-medium">
                <span className="text-primary">0.5%</span> –≤ —Å—É—Ç–∫–∏
              </p>
            </div>
          </div>
          
          <div className="mb-3">
            <p className="text-sm text-foreground opacity-70">–°–∫–æ—Ä–æ—Å—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è</p>
            <p className="text-md font-medium">
              <span className="text-primary">+{formatNumber(calculateSecondRate(), 8)}</span> UNI/—Å–µ–∫
              <span className="text-foreground opacity-70 ml-2">
                (‚âà +{formatNumber(calculateDailyIncome())} UNI –≤ –¥–µ–Ω—å)
              </span>
            </p>
          </div>
          
          <div className="p-3 bg-indigo-900/30 border border-indigo-500/30 rounded-lg flex items-center">
            <div className="text-indigo-300 mr-2">
              <i className="fas fa-info-circle"></i>
            </div>
            <div>
              <p className="text-sm text-indigo-300 font-medium">
                –î–æ—Ö–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å
              </p>
              <p className="text-xs text-indigo-200/70 mt-1">
                –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –≤–∞—à –±–∞–ª–∞–Ω—Å UNI —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å—É–º–º—É –¥–æ—Ö–æ–¥–∞ –æ—Ç —Ñ–∞—Ä–º–∏–Ω–≥–∞
              </p>
            </div>
          </div>
          

        </div>
      )}
      
      {/* –§–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞) */}
      <div className={isActive ? "mt-6 pt-4 border-t border-slate-700" : ""}>
        {isActive && (
          <h3 className="text-md font-medium mb-4">–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Ñ–∞—Ä–º–∏–Ω–≥</h3>
        )}
        
        <form onSubmit={handleSubmit}>
          <div className="mb-4">
            <label className="block text-sm text-foreground opacity-70 mb-1">
              –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É UNI
            </label>
            <input
              type="text"
              value={depositAmount}
              onChange={(e) => setDepositAmount(e.target.value)}
              className="w-full p-2 border border-input rounded-lg bg-card"
              placeholder="0.00"
            />
            <p className="text-sm text-foreground opacity-70 mt-1">
              –î–æ—Å—Ç—É–ø–Ω–æ: {formatNumber(userData?.balance_uni || '0')} UNI
            </p>
          </div>
          
          {error && (
            <div className="mb-4 p-2 bg-red-900/30 border border-red-500 rounded-lg text-red-300 text-sm">
              {error}
            </div>
          )}
          
          <div className="mb-4">
            <p className="text-sm text-foreground opacity-70">–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç</p>
            <p className="text-md font-medium">
              <span className="text-primary">5</span> UNI
            </p>
          </div>
          
          <button 
            type="submit"
            disabled={isLoading || error === '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...'}
            className={`w-full py-2 px-4 rounded-lg font-medium ${
              isLoading || error === '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...'
                ? 'bg-muted text-foreground opacity-50'
                : 'bg-gradient-to-r from-purple-500 to-indigo-600 text-white hover:from-purple-600 hover:to-indigo-700'
            } transition-all duration-300`}
          >
            {error === '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...' ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : isActive ? '–ü–æ–ø–æ–ª–Ω–∏—Ç—å' : '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞—Ä–º–∏–Ω–≥'}
          </button>
        </form>
      </div>
    </div>
  );
};

export default UniFarmingCard;