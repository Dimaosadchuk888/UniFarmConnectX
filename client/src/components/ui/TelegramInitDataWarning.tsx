import React, { useEffect, useState } from 'react';
import { isTelegramWebApp } from '@/services/telegramService';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, –∫–æ–≥–¥–∞ Telegram WebApp –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
 * –∏–ª–∏ –∫–æ–≥–¥–∞ initData –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç/–ø—É—Å—Ç–æ–π
 */

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∏–ø—ã –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ App.tsx
// –ù–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º Window.Telegram, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Ç–∏–ø–æ–≤
const TelegramInitDataWarning: React.FC = () => {
  const [showWarning, setShowWarning] = useState(false);
  const [initDataLength, setInitDataLength] = useState(0);
  const [hasTelegram, setHasTelegram] = useState(true);
  const [usingCachedData, setUsingCachedData] = useState(false);
  const [isDevMode, setIsDevMode] = useState(false);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–∏–∑ localStorage –∏–ª–∏ –∏–∑ process.env)
    const checkDevMode = () => {
      if (typeof window !== 'undefined' && window.localStorage) {
        const devMode = localStorage.getItem('dev_mode') === 'true';
        const envDevMode = process.env.NODE_ENV === 'development';
        setIsDevMode(devMode || envDevMode);
        return devMode || envDevMode;
      }
      return process.env.NODE_ENV === 'development';
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Telegram WebApp
    const checkTelegramWebAppState = () => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API
      const hasTelegramObj = typeof window !== 'undefined' && !!window.Telegram;
      const hasWebAppObj = hasTelegramObj && !!window.Telegram?.WebApp;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º initData - —Å–Ω–∞—á–∞–ª–∞ –≤ –æ–±—ä–µ–∫—Ç–µ Telegram, –∑–∞—Ç–µ–º –≤ localStorage
      let initData = hasWebAppObj && window.Telegram?.WebApp?.initData 
                     ? window.Telegram.WebApp.initData : '';
                     
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      const isDev = checkDevMode();
                     
      // –ï—Å–ª–∏ Telegram initData –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º localStorage (—Å–æ–≥–ª–∞—Å–Ω–æ –ø.1.2 –¢–ó)
      let usingCachedData = false;
      
      // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∫—ç—à–∏—Ä—É–µ–º Telegram Launch –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ Mini App
      if (isDev && !hasTelegramObj && localStorage.getItem('telegram_launch') === 'true') {
        usingCachedData = true;
        console.log('[DEV] Using cached telegram_launch flag for development');
      }
      
      if ((!initData || initData.trim() === '') && typeof window !== 'undefined') {
        try {
          // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º sessionStorage (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
          const sessionInitData = sessionStorage.getItem('telegramInitData');
          if (sessionInitData && sessionInitData.trim() !== '') {
            initData = sessionInitData;
            usingCachedData = true;
            console.log('[TelegramInitDataWarning] Using cached initData from sessionStorage');
          }
          
          // –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º localStorage (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
          if ((!initData || initData.trim() === '') && window.localStorage) {
            const savedInitData = localStorage.getItem('telegramInitData');
            if (savedInitData && savedInitData.trim() !== '') {
              initData = savedInitData;
              usingCachedData = true;
              console.log('[TelegramInitDataWarning] Using cached initData from localStorage');
            }
            
            // –î–ª—è —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if (isDev && localStorage.getItem('telegram_user_data')) {
              usingCachedData = true;
              console.log('[DEV] Using cached Telegram user data for development');
            }
          }
        } catch (e) {
          console.error('[TelegramInitDataWarning] Error reading from storage:', e);
        }
      }
      
      const initDataLen = typeof initData === 'string' ? initData.length : 0;
      
      setHasTelegram(hasTelegramObj && hasWebAppObj);
      setInitDataLength(initDataLen);
      setUsingCachedData(usingCachedData);
      
      // –ü–æ –¢–ó: –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: ¬´–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ Telegram¬ª.
      // –ù–æ —Ç–µ–ø–µ—Ä—å —É—á–∏—Ç—ã–≤–∞–µ–º –∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage –∏ —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      const hasValidData = initDataLen > 0 || usingCachedData;
      const shouldShowWarning = !isDev && !hasValidData;
      
      setShowWarning(shouldShowWarning);
      
      console.log('[AUDIT] TelegramInitDataWarning check:', {
        hasTelegramObj,
        hasWebAppObj,
        initDataLen,
        usingCachedData,
        shouldShowWarning,
        env: process.env.NODE_ENV,
        isDev
      });
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    checkTelegramWebAppState();
    
    // –ò –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏
    // –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    const timeoutId = setTimeout(checkTelegramWebAppState, 3000);
    
    return () => clearTimeout(timeoutId);
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  const enableDevMode = () => {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testUserData = {
      id: 1,
      username: 'dev_user',
      first_name: 'Test',
      last_name: 'User'
    };
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π initData –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const mockInitData = 'dev_mode=true&user=%7B%22id%22%3A1%2C%22first_name%22%3A%22Test%22%7D&auth_date=1619631535';
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage (–¥–ª—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è)
    localStorage.setItem('dev_mode', 'true');
    localStorage.setItem('telegram_launch', 'true');
    localStorage.setItem('telegram_user_data', JSON.stringify(testUserData));
    localStorage.setItem('telegramInitData', mockInitData);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–∞–∫–∂–µ –≤ sessionStorage (–¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏)
    try {
      sessionStorage.setItem('telegramInitData', mockInitData);
      console.log('[DEV] Saved mock initData to sessionStorage');
    } catch (e) {
      console.error('[DEV] Error saving to sessionStorage:', e);
    }
    
    alert('üõ†Ô∏è –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–∫–ª—é—á–µ–Ω! –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
    window.location.reload();
  };

  if (!showWarning) {
    return null;
  }

  return (
    <div className={`${usingCachedData ? 'bg-blue-500/90' : 'bg-amber-500/90'} text-black p-3 rounded-lg shadow-lg max-w-md mx-auto mb-4 mt-3`}>
      <div className="flex items-start">
        <div className="flex-shrink-0">
          <svg xmlns="http://www.w3.org/2000/svg" className={`h-6 w-6 ${usingCachedData ? 'text-blue-800' : 'text-amber-800'}`} viewBox="0 0 20 20" fill="currentColor">
            <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
          </svg>
        </div>
        <div className="ml-3">
          <h3 className={`text-sm font-medium ${usingCachedData ? 'text-blue-900' : 'text-amber-900'}`}>
            {usingCachedData ? '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Telegram-—Å–µ—Å—Å–∏–∏' : '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –¥–æ—Å—Ç—É–ø–µ –∫ Telegram'}
          </h3>
          <div className={`mt-2 text-xs ${usingCachedData ? 'text-blue-800' : 'text-amber-800'}`}>
            {usingCachedData ? (
              <>
                <p>
                  <strong>–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–µ—Å—Å–∏–∏.</strong>
                </p>
                <p className="mt-1">
                  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (—Å–æ–≥–ª–∞—Å–Ω–æ –ø.1.2 –¢–ó).
                  {initDataLength > 0 && ` –î–ª–∏–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: ${initDataLength}.`}
                </p>
              </>
            ) : (
              <>
                <p>
                  <strong>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ Telegram.</strong>
                </p>
                <p className="mt-1">
                  {!hasTelegram 
                    ? "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ Telegram API. –û—Ç–∫—Ä–æ–π—Ç–µ —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Telegram."
                    : `Telegram initData –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–¥–ª–∏–Ω–∞: ${initDataLength}). –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram.`
                  }
                </p>
                <p className="mt-2">
                  <button 
                    onClick={enableDevMode}
                    className="px-3 py-1 text-xs bg-gray-800 text-white rounded-full hover:bg-gray-700 transition-colors"
                  >
                    –í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
                  </button>
                </p>
              </>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default TelegramInitDataWarning;