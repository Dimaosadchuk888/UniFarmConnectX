import React, { useState, useEffect } from 'react';
import { useQuery } from '@tanstack/react-query';
import userService from '@/services/userService';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø User –∏–∑ userService
import { User } from '@/services/userService';

/**
 * –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
 * –í–ê–ñ–ù–û: –ü–æ –¢–ó –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Å—ã–ª–∫—É —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –Ω–∞–ª–∏—á–∏—è ref_code,
 * –∏–≥–Ω–æ—Ä–∏—Ä—É—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ Telegram WebApp –∏ –¥—Ä—É–≥–∏–µ —É—Å–ª–æ–≤–∏—è.
 */
const SimpleReferralLink: React.FC = () => {
  const [isCopied, setIsCopied] = useState(false);

  // –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  const { data, isLoading } = useQuery({
    queryKey: ['/api/me'],
    queryFn: () => userService.getCurrentUser(),
    staleTime: 0, // –ë–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
  });

  // –ü–æ–ª—É—á–∞–µ–º ref_code –∏–∑ –¥–∞–Ω–Ω—ã—Ö API
  const user = data as User | undefined;
  const refCode = user?.ref_code;
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
  const referralLink = refCode 
    ? `https://t.me/UniFarming_Bot/UniFarm?startapp=ref_${refCode}`
    : '';

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
  const copyToClipboard = () => {
    if (!referralLink) return;
    
    try {
      navigator.clipboard.writeText(referralLink);
      setIsCopied(true);
      
      setTimeout(() => {
        setIsCopied(false);
      }, 2000);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
    }
  };

  // –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  useEffect(() => {
    console.log('[SimpleReferralLink] Received data:', {
      success: !!data,
      userData: user,
      refCode,
      link: referralLink
    });
  }, [data, user, refCode, referralLink]);

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
  useEffect(() => {
    // –í–∞–∂–Ω–æ–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –≤—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å
    if (refCode) {
      console.log('‚úÖ [–û–¢–õ–ê–î–ö–ê] –†–ï–§ –ö–û–î –ù–ê–ô–î–ï–ù:', refCode);
      console.log('üìã [–û–¢–õ–ê–î–ö–ê] –°–°–´–õ–ö–ê –î–õ–Ø –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø:', referralLink);
    } else if (!isLoading) {
      console.log('‚ùå [–û–¢–õ–ê–î–ö–ê] –†–ï–§ –ö–û–î –û–¢–°–£–¢–°–¢–í–£–ï–¢', { userData: user });
    }
  }, [refCode, referralLink, isLoading, user]);

  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏–π
  // –í–ê–ñ–ù–û: –õ–æ–≥–∏–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–∞—è:
  // 1. –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
  // 2. –ï—Å–ª–∏ –µ—Å—Ç—å ref_code - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É
  // 3. –ï—Å–ª–∏ –Ω–µ—Ç ref_code (–ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏) - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  return (
    <div className="bg-gradient-to-br from-black/40 to-purple-900/20 p-4 rounded-lg shadow-lg">
      <div className="flex items-center justify-between mb-4">
        <h3 className="text-white font-medium flex items-center">
          <i className="fas fa-link text-primary mr-2"></i>
          –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞
        </h3>
        {refCode && (
          <div className="bg-primary/20 text-primary text-xs px-2 py-1 rounded-full">
            –ö–æ–¥: {refCode}
          </div>
        )}
      </div>
      
      {/* –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è: –ª–æ–∞–¥–µ—Ä –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
      {isLoading ? (
        <div className="flex items-center justify-center py-4">
          <div className="w-5 h-5 border-2 border-primary border-t-transparent rounded-full animate-spin mr-2"></div>
          <span className="text-gray-300 text-sm">–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏...</span>
        </div>
      ) : (
        <>
          {/* –ï—Å–ª–∏ refCode —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É */}
          {refCode ? (
            <div className="space-y-3">
              <div className="bg-black/60 p-3 rounded-lg shadow-inner overflow-x-auto">
                <pre className="text-green-400 text-sm whitespace-pre-wrap break-all font-mono">
                  {referralLink}
                </pre>
              </div>
              <div className="flex justify-between items-center">
                <div className="text-xs text-gray-400">
                  –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏
                </div>
                <button
                  onClick={copyToClipboard}
                  className={`
                    text-sm px-4 py-1.5 rounded-lg flex items-center
                    ${isCopied 
                      ? 'bg-green-600 hover:bg-green-700' 
                      : 'bg-primary hover:bg-primary/90'
                    } 
                    text-white transition-colors shadow-md
                  `}
                >
                  <i className={`fas ${isCopied ? 'fa-check' : 'fa-copy'} mr-1.5`}></i>
                  {isCopied ? '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!' : '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å'}
                </button>
              </div>
            </div>
          ) : (
            // –ï—Å–ª–∏ refCode –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            <div className="bg-red-900/20 p-3 rounded-lg flex flex-col items-center">
              <i className="fas fa-exclamation-triangle text-amber-500 text-lg mb-2"></i>
              <p className="text-amber-400 text-sm text-center mb-1">
                –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ API
              </p>
              <p className="text-xs text-gray-400 text-center">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
              </p>
            </div>
          )}
          
          {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å–≤–µ—Ä–Ω—É—Ç–æ–º –≤–∏–¥–µ */}
          <details className="mt-4 text-xs">
            <summary className="text-blue-400 cursor-pointer mb-1">
              –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–∫–ª–∏–∫–Ω–∏—Ç–µ —á—Ç–æ–±—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å)
            </summary>
            <div className="bg-black/40 p-2 rounded-lg">
              <p className="text-white/80 font-mono whitespace-pre-wrap">
                <strong>API Response:</strong> {JSON.stringify({
                  id: user?.id,
                  telegram_id: user?.telegram_id,
                  username: user?.username,
                  ref_code: user?.ref_code || '[–û–¢–°–£–¢–°–¢–í–£–ï–¢]'
                }, null, 2)}
              </p>
            </div>
          </details>
        </>
      )}
    </div>
  );
};

export default SimpleReferralLink;