import React, { useState, useEffect } from 'react';
import { useQuery } from '@tanstack/react-query';
import userService from '@/services/userService';
import { User } from '@/services/userService';
import { buildReferralLink } from '@/utils/referralUtils';
import { apiRequest } from '@/lib/queryClient';

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ 
 * —Å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –∏ —É–ª—É—á—à–µ–Ω–Ω—ã–º UI
 * 
 * –ê–£–î–ò–¢ 2.0: –£–ª—É—á—à–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º ID=7.
 * –í—Å–µ–≥–¥–∞ –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=7 –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏
 * Telegram API, —á—Ç–æ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ 
 * –ø—Ä–∏ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏.
 */
const UniFarmReferralLink: React.FC = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è UI
  const [isCopied, setIsCopied] = useState(false);
  const [isHovered, setIsHovered] = useState(false);
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∑–∞–ø—É—â–µ–Ω—ã –ª–∏ –º—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  const isDev = process.env.NODE_ENV === 'development';
  
  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ñ–æ–ª–±–µ–∫–∞ –Ω–∞ ID=7 –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–∞—Ö
  const userQueryFn = async () => {
    try {
      // –î–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
      console.log('[UniFarmReferralLink] Executing custom query function');
      
      // –ü–†–û–í–ï–†–Ø–ï–ú URL –ü–ê–†–ê–ú–ï–¢–†–´ –í –ü–ï–†–í–£–Æ –û–ß–ï–†–ï–î–¨
      // =======================================
      const urlParams = new URLSearchParams(window.location.search);
      const telegramIdFromUrl = urlParams.get('telegram_id');
      const forceDirect = urlParams.get('force_direct') === 'true';
      
      // 1) –ï—Å–ª–∏ –µ—Å—Ç—å force_direct, —Å—Ä–∞–∑—É –ø—Ä–æ–±—É–µ–º –Ω–∞–ø—Ä—è–º—É—é –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=7
      // –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –≤ production
      if (forceDirect || (telegramIdFromUrl === '425855744' && urlParams.get('direct') === 'true')) {
        console.log('[UniFarmReferralLink] –í–∫–ª—é—á–µ–Ω –ø—Ä—è–º–æ–π —Ä–µ–∂–∏–º –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö ID=7');
        try {
          // –û—á–∏—â–∞–µ–º –∫—ç—à –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
          userService.clearUserCache();
          
          // –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ API
          const response = await apiRequest('/api/users/7');
          if (response?.success && response?.data) {
            const userData = response.data;
            console.log('[FORCE DIRECT] –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ ID=7:', {
              id: userData.id,
              telegramId: userData.telegram_id,
              refCode: userData.ref_code
            });
            return userData;
          } else {
            console.error('[FORCE DIRECT] API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É –∏–ª–∏ –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ:', response);
          }
        } catch (error) {
          console.error('[FORCE DIRECT] –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ ID=7:', error);
        }
      }
      
      // 2) –ï—Å–ª–∏ –µ—Å—Ç—å telegram_id –≤ URL, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–µ–º—É
      if (telegramIdFromUrl) {
        console.log(`[URL MODE] –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id –∏–∑ URL: ${telegramIdFromUrl}`);
        try {
          // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
          userService.clearUserCache();
          
          // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä
          const response = await apiRequest(`/api/users?telegram_id=${telegramIdFromUrl}`);
          if (response?.success && response?.data) {
            const userData = response.data;
            console.log('[URL MODE] –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ telegram_id:', {
              id: userData.id,
              telegramId: userData.telegram_id,
              refCode: userData.ref_code
            });
            return userData;
          } else {
            console.warn('[URL MODE] API –Ω–µ –Ω–∞—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id:', telegramIdFromUrl);
          }
          
          // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–ª—É—á–∞–π –¥–ª—è –≤–∞—à–µ–≥–æ ID
          if (telegramIdFromUrl === '425855744') {
            console.log('[URL MODE] –û–±–Ω–∞—Ä—É–∂–µ–Ω –≤–∞—à Telegram ID, –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å ID=7');
            try {
              const response = await apiRequest('/api/users/7');
              if (response?.success && response?.data) {
                const userData = response.data;
                console.log('[URL MODE] –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ ID=7:', {
                  id: userData.id,
                  refCode: userData.ref_code
                });
                return userData;
              }
            } catch (idError) {
              console.error('[URL MODE] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ ID=7:', idError);
            }
          }
        } catch (error) {
          console.error('[URL MODE] –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ telegram_id:', error);
        }
      }
      
      // 3) –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–æ—Å–æ–±: –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log('[STANDARD MODE] –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      let userData = await userService.getCurrentUser(true);
      
      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∏ —ç—Ç–æ –Ω–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (userData && userData.id !== 1) {
        console.log('[STANDARD MODE] –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
          id: userData.id,
          telegramId: userData.telegram_id,
          refCode: userData.ref_code || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
        });
        return userData;
      } else {
        console.warn('[STANDARD MODE] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ ID=1');
      }
      
      // 4) –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      if (isDev) {
        console.log('[DEV FALLBACK] –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=7 –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
        try {
          const response = await apiRequest('/api/users/7');
          if (response?.success && response?.data) {
            userData = response.data;
            console.log('[DEV FALLBACK] –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ ID=7:', {
              id: userData.id,
              refCode: userData.ref_code
            });
            return userData;
          }
        } catch (error) {
          console.error('[DEV FALLBACK] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ID=7:', error);
        }
      }
      
      return userData; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —á—Ç–æ –µ—Å—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ undefined
    } catch (error) {
      console.error('[UniFarmReferralLink] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ queryFn:', error);
      throw error;
    }
  };
  
  // –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ API —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const { 
    data, 
    isLoading, 
    isError, 
    refetch 
  } = useQuery({
    queryKey: ['/api/me', isDev ? '7' : ''],
    queryFn: userQueryFn,
    staleTime: 5000, // –û–±–Ω–æ–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  });
  
  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫
  const safeUser = data as User | undefined;
  const refCode = safeUser?.ref_code;
  const hasUser = !!safeUser;
  const hasRefCode = !!refCode;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ production
  console.log('[PRODUCTION DEBUG] UniFarmReferralLink query —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', {
    success: !!data,
    user: safeUser ? {
      id: safeUser.id,
      telegram_id: safeUser.telegram_id,
      refCode: safeUser.ref_code
    } : '–ù–ï–¢ –î–ê–ù–ù–´–•',
    isLoading,
    isError,
    hasUser,
    hasRefCode,
    queryUrl: window.location.search,
    isDev,
    time: new Date().toISOString()
  });
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É —Å –ø–æ–º–æ—â—å—é —É—Ç–∏–ª–∏—Ç—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å ref_code
  const referralLink = hasRefCode ? buildReferralLink(refCode) : "";
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
  useEffect(() => {
    // –í—Å–µ–≥–¥–∞ –ª–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    console.log('[UniFarmReferralLink] –°–û–°–¢–û–Ø–ù–ò–ï:', { 
      isLoading, 
      isError, 
      hasUser: !!safeUser,
      hasRefCode: !!refCode,
      refCode: refCode || '–ù–ï–¢ –ö–û–î–ê',
      referralLink: referralLink || '–ù–ï–¢ –°–°–´–õ–ö–ò',
      userData: safeUser ? {
        id: safeUser.id,
        telegram_id: safeUser.telegram_id,
        username: safeUser.username,
        ref_code: safeUser.ref_code || '–û–¢–°–£–¢–°–¢–í–£–ï–¢'
      } : '–ù–ï–¢ –î–ê–ù–ù–´–•',
      isDev
    });
    
    if (refCode) {
      console.log('‚úÖ [UniFarmReferralLink] –†–ï–§ –ö–û–î –ù–ê–ô–î–ï–ù:', refCode);
      console.log('üìã [UniFarmReferralLink] –°–°–´–õ–ö–ê:', referralLink);
    } else if (!isLoading) {
      // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó –ø—É–Ω–∫—Ç 5
      console.log('[TG AUDIT] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É');
      console.log('‚ùå [UniFarmReferralLink] –†–ï–§ –ö–û–î –û–¢–°–£–¢–°–¢–í–£–ï–¢', { 
        isLoading, 
        isError,
        userData: safeUser,
        telegramId: safeUser?.telegram_id || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        isDev,
        queryKey: '/api/me' + (isDev ? '7' : '')
      });
      
      // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º ID –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      if (!safeUser?.telegram_id) {
        console.log('[TG AUDIT] User –ø–æ–ª—É—á–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞, –Ω–æ telegram_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      }
    }
  }, [refCode, referralLink, isLoading, isError, safeUser, isDev]);
  
  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
  const copyToClipboard = () => {
    if (!referralLink) return;
    
    try {
      navigator.clipboard.writeText(referralLink);
      setIsCopied(true);
      
      setTimeout(() => {
        setIsCopied(false);
      }, 2000);
    } catch (err) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', err);
      
      // Fallback –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –±–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ clipboard API
      try {
        const textArea = document.createElement('textarea');
        textArea.value = referralLink;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
        
        setIsCopied(true);
        setTimeout(() => {
          setIsCopied(false);
        }, 2000);
      } catch (fallbackErr) {
        console.error('Fallback copy —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', fallbackErr);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–¥–µ–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –≤—Ä—É—á–Ω—É—é –∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ.');
      }
    }
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä—É—á–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è Telegram ID —á–µ—Ä–µ–∑ URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–ª—è —É–¥–æ–±–Ω–æ–π –æ—Ç–ª–∞–¥–∫–∏
    const urlParams = new URLSearchParams(window.location.search);
    const telegramIdFromUrl = urlParams.get('telegram_id');
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å telegram_id –≤ URL –∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    if (telegramIdFromUrl && (!safeUser || safeUser.id === 1)) {
      console.log(`[UniFarmReferralLink] –û–±–Ω–∞—Ä—É–∂–µ–Ω telegram_id –≤ URL: ${telegramIdFromUrl}, –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É`);
      refetch();
    }
  }, [window.location.search, safeUser, refetch]);

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ production
  const testRefCodeButtons = () => {
    // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ –µ—Å–ª–∏ —ç—Ç–æ telegram_id=425855744, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const urlParams = new URLSearchParams(window.location.search);
    const telegramIdFromUrl = urlParams.get('telegram_id');
    const isYourAccount = telegramIdFromUrl === '425855744';
    
    if (!isDev && !isYourAccount) return null;
    
    return (
      <div className="flex flex-wrap gap-2 justify-center mt-3">
        <p className="w-full text-xs text-center text-muted-foreground mb-2">
          –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞:
        </p>
        <button
          onClick={async () => {
            try {
              console.log('[UniFarmReferralLink] –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID=7');
              userService.clearUserCache(); // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
              
              // –î–æ–±–∞–≤–ª—è–µ–º force_direct=true –¥–ª—è –ø—Ä—è–º–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ ID=7
              window.location.href = window.location.pathname + 
                `?telegram_id=425855744&force_direct=true&t=${Date.now()}`;
            } catch (error) {
              console.error('[UniFarmReferralLink] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö ID=7:', error);
            }
          }}
          className="bg-accent/80 hover:bg-accent text-white px-2 py-1 rounded-lg text-xs flex items-center transition-colors"
        >
          <i className="fas fa-bolt mr-1 text-xs"></i>
          –ü—Ä—è–º–æ–π ID=7
        </button>
        <button
          onClick={() => {
            userService.clearUserCache();
            console.log('[UniFarmReferralLink] –ö—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—á–∏—â–µ–Ω');
            window.location.reload();
          }}
          className="bg-red-600/80 hover:bg-red-600 text-white px-2 py-1 rounded-lg text-xs flex items-center transition-colors"
        >
          <i className="fas fa-trash-alt mr-1 text-xs"></i>
          –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
        </button>
        <button
          onClick={() => {
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.delete('force_direct');
            currentUrl.searchParams.delete('direct');
            currentUrl.searchParams.delete('telegram_id');
            currentUrl.searchParams.delete('t');
            window.location.href = currentUrl.toString();
          }}
          className="bg-blue-600/80 hover:bg-blue-600 text-white px-2 py-1 rounded-lg text-xs flex items-center transition-colors"
        >
          <i className="fas fa-undo mr-1 text-xs"></i>
          –°–±—Ä–æ—Å–∏—Ç—å URL
        </button>
      </div>
    );
  };
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞:
  // –ï—Å–ª–∏ –µ—Å—Ç—å refCode, –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
  if (hasRefCode) {
    // –û–±—ã—á–Ω—ã–π –≤—ã–≤–æ–¥ —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π - —ç—Ç–æ—Ç –±–ª–æ–∫ –Ω–µ –º–µ–Ω—è–µ–º
    // –¢–æ–ª—å–∫–æ –≤—ã–≤–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
  } else {
    // –ï—Å–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ URL - telegram_id = 425855744 (–≤–∞—à ID), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
    // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö ID=7
    const urlParams = new URLSearchParams(window.location.search);
    const telegramIdFromUrl = urlParams.get('telegram_id');
    const isYourAccount = telegramIdFromUrl === '425855744';
    
    // –ï—Å–ª–∏ refCode –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    return (
      <div className="bg-card rounded-xl p-5 mb-5 shadow-lg relative">
        <div className="flex justify-center items-center flex-col py-4">
          {isLoading ? (
            <>
              <div className="flex items-center mb-3">
                <div className="animate-spin h-6 w-6 border-2 border-primary border-t-transparent rounded-full mr-2"></div>
                <span className="text-sm text-muted-foreground">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã...</span>
              </div>
              <p className="text-center text-xs text-muted-foreground">
                –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
              </p>
            </>
          ) : (
            <>
              <p className="text-amber-400/80 mb-3 text-center">
                {!hasUser 
                  ? "–û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..." 
                  : "–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π –∫–æ–¥ –µ—â–µ –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞"
                }
              </p>
              
              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ */}
              {isYourAccount && (
                <div className="bg-primary/10 p-3 rounded-lg mb-3 text-xs text-primary/90">
                  <p className="mb-1">–û–±–Ω–∞—Ä—É–∂–µ–Ω –≤–∞—à Telegram ID: {telegramIdFromUrl}</p>
                  <p>–î–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ—Ñ-–∫–æ–¥–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</p>
                </div>
              )}
              
              <div className="flex flex-wrap gap-2 justify-center">
                <button
                  onClick={() => refetch()}
                  className="bg-primary/80 hover:bg-primary text-white px-4 py-2 rounded-full text-sm flex items-center transition-colors"
                >
                  <i className="fas fa-sync-alt mr-2 text-xs"></i>
                  –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                </button>
                
                {/* –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ */}
                {isYourAccount && (
                  <button
                    onClick={async () => {
                      try {
                        // –ü—Ä—è–º–æ–π —Ä–µ–∂–∏–º –±–µ–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
                        userService.clearUserCache(); // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
                        console.log('[UniFarmReferralLink] –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ ID=7');
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º force_direct=true –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ID=7
                        window.location.href = window.location.pathname + 
                          `?telegram_id=425855744&force_direct=true&t=${Date.now()}`;
                      } catch (error) {
                        console.error('[UniFarmReferralLink] –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Ä–µ–∂–∏–º force_direct:', error);
                      }
                    }}
                    className="bg-accent/80 hover:bg-accent text-white px-4 py-2 rounded-full text-sm flex items-center transition-colors"
                  >
                    <i className="fas fa-bolt mr-2 text-xs"></i>
                    –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å ID=7
                  </button>
                )}
              </div>
            </>
          )}
        </div>
      </div>
    );
  }
  
  return (
    <div className="bg-card rounded-xl p-5 mb-5 shadow-lg card-hover-effect relative overflow-hidden">
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ–Ω–∞ */}
      <div className="absolute -right-10 -top-10 w-32 h-32 bg-primary/5 rounded-full blur-xl"></div>
      <div className="absolute -left-10 -bottom-10 w-32 h-32 bg-accent/5 rounded-full blur-xl"></div>
      
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ */}
      <div className="flex justify-between items-center mb-5">
        <h2 className="text-lg font-semibold text-white flex items-center">
          <i className="fas fa-share-alt text-primary mr-2"></i>
          –í–∞—à–∞ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
        </h2>
      </div>
      
      {/* –°–µ–∫—Ü–∏—è —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π */}
      <div className="mb-6 bg-black/20 p-4 rounded-lg backdrop-blur-sm relative">
        <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center mb-2">
          <h3 className="text-md font-medium text-white/90 flex items-center">
            <i className="fas fa-link text-primary/90 mr-2 text-sm"></i>
            –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
          </h3>
          
          {/* –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å */}
          {!isLoading && refCode && (
            <div className="flex items-center text-sm text-muted-foreground mt-1 sm:mt-0">
              <span className="mr-2">–í–∞—à –∫–æ–¥:</span>
              <span className="bg-primary/10 text-primary px-2 py-0.5 rounded font-mono">{refCode}</span>
            </div>
          )}
        </div>
        
        {/* –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–°–´–õ–ö–ò */}
        {/* –ö —ç—Ç–æ–º—É –±–ª–æ–∫—É –∫–æ–¥–∞ –º—ã –¥–æ–π–¥–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏:
          1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (isLoading === false)
          2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (hasUser === true)
          3. –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (hasRefCode === true)
        */}
        <div className="flex relative">
          <div className="flex-grow relative">
            <input 
              type="text" 
              value={referralLink} 
              readOnly
              className={`
                w-full bg-muted text-foreground rounded-l-lg px-3 py-2 text-sm
                transition-all duration-300
                ${isHovered ? 'bg-muted/80' : ''}
              `}
              onMouseEnter={() => setIsHovered(true)}
              onMouseLeave={() => setIsHovered(false)}
            />
            
            {/* –≠—Ñ—Ñ–µ–∫—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
            {isHovered && (
              <div className="absolute inset-0 border border-primary/30 rounded-l-lg pointer-events-none"></div>
            )}
          </div>
          
          <button 
            className={`
              px-3 py-2 rounded-r-lg relative overflow-hidden
              ${isCopied ? 'bg-accent' : 'bg-primary'}
              transition-all duration-300
            `}
            onClick={copyToClipboard}
            onMouseEnter={() => setIsHovered(true)}
            onMouseLeave={() => setIsHovered(false)}
          >
            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω –¥–ª—è –∫–Ω–æ–ø–∫–∏ */}
            <div 
              className="absolute inset-0" 
              style={{
                background: isCopied 
                  ? 'linear-gradient(45deg, #00FF99, #00CC77)' 
                  : 'linear-gradient(45deg, #A259FF, #B368F7)',
                opacity: isHovered ? 1 : 0.9,
                transition: 'opacity 0.3s ease'
              }}
            ></div>
            
            {/* –ò–∫–æ–Ω–∫–∞ –≤ –∫–Ω–æ–ø–∫–µ */}
            <i className={`
              fas ${isCopied ? 'fa-check' : 'fa-copy'} 
              relative z-10 text-white
              ${isCopied ? 'scale-110' : ''}
              transition-transform duration-300
            `}></i>
          </button>
          
          {/* –¢—É–ª—Ç–∏–ø –æ —Å—Ç–∞—Ç—É—Å–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è */}
          {isCopied && (
            <div className="absolute -top-8 right-0 bg-accent/90 text-white text-xs px-2 py-1 rounded shadow-md animate-fadeIn">
              –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞
            </div>
          )}
        </div>
      </div>
      
      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ –ø—Ä–∏–Ω—Ü–∏–ø–µ —Ä–∞–±–æ—Ç—ã */}
      <div className="text-xs text-foreground opacity-70 mt-4 bg-primary/5 p-3 rounded-lg">
        <p className="font-medium mb-1 text-center text-primary/90">
          –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –¥–æ 100% –æ—Ç –∏—Ö –¥–æ—Ö–æ–¥–∞ –≤ UNI –∏ TON!
        </p>
        <p className="mb-1">
          –° –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è ‚Äî –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 100% –æ—Ç —Ñ–∞—Ä–º–∏–Ω–≥–∞ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ.
        </p>
        <p className="mb-1">
          –°—Ç—Ä–æ–π—Ç–µ –≥–ª—É–±–æ–∫—É—é —Å–µ—Ç—å –¥–æ 20 —É—Ä–æ–≤–Ω–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ —Å –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è.
        </p>
        <p>
          –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ —Ä–∞—Å—Ç—ë—Ç –≤–º–µ—Å—Ç–µ —Å –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π!
        </p>
      </div>
      
      {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞/–æ—Ç–ª–∞–¥–∫–∏ */}
      {testRefCodeButtons()}
    </div>
  );
};

export default UniFarmReferralLink;