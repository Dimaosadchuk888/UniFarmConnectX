/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UniFarm
 * 
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 * –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –±–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
 */

import React from 'react';
import { Button } from "@/components/ui/button";

interface ForceRefreshButtonProps {
  variant?: 'default' | 'outline' | 'ghost' | 'secondary';
  size?: 'sm' | 'default' | 'lg';
  className?: string;
  showIcon?: boolean;
}

const ForceRefreshButton: React.FC<ForceRefreshButtonProps> = ({
  variant = 'outline',
  size = 'default',
  className = '',
  showIcon = true
}) => {
  
  const handleForceRefresh = () => {
    try {// –û—á–∏—â–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫—ç—à–∏
      if ('caches' in window) {
        caches.keys().then(cacheNames => {
          cacheNames.forEach(cacheName => {
            caches.delete(cacheName);});
        });
      }
      
      // –°–æ–∑–¥–∞–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      const url = new URL(window.location.href);
      url.searchParams.set('force', Date.now().toString());
      url.searchParams.set('nocache', Math.random().toString(36).substring(7));// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
      window.location.href = url.toString();
      
    } catch (error) {// Fallback - –ø—Ä–æ—Å—Ç–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
      window.location.reload();
    }
  };

  return (
    <Button
      onClick={handleForceRefresh}
      variant={variant}
      size={size}
      className={className}
    >
      {showIcon && <span className="mr-2">üîÑ</span>}
      –û–±–Ω–æ–≤–∏—Ç—å UniFarm
    </Button>
  );
};

export default ForceRefreshButton;