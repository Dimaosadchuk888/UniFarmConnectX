import { correctApiRequest } from '@/lib/correctApiRequest';
import { cacheService } from './cacheService';

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export interface Balance {
  uniBalance: number;
  tonBalance: number;
  uniFarmingActive: boolean;
  uniDepositAmount: number;
  uniFarmingBalance: number;
}

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
const CACHE_CONFIG = {
  BALANCE_KEY: (userId: number) => `balance:${userId}`,
  BALANCE_TTL: 15000, // 15 —Å–µ–∫—É–Ω–¥ (—Å–æ–∫—Ä–∞—â–µ–Ω–æ —Å 30 –¥–ª—è –±–æ–ª–µ–µ —á–∞—Å—Ç—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π)
  FALLBACK_MAX_AGE: 60000 // 60 —Å–µ–∫—É–Ω–¥ - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –¥–ª—è fallback –∫–µ—à–∞
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param userId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param forceRefresh –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É—è –∫—ç—à
 * @returns –ü—Ä–æ–º–∏—Å —Å –¥–∞–Ω–Ω—ã–º–∏ –±–∞–ª–∞–Ω—Å–∞
 */
export async function fetchBalance(userId: number, forceRefresh: boolean = false): Promise<Balance> {
  // –ü–æ–ª—É—á–∞–µ–º user_id –∏–∑ JWT —Ç–æ–∫–µ–Ω–∞ –≤ localStorage
  const jwtToken = localStorage.getItem('unifarm_jwt_token');
  let targetUserId = userId;
  
  // –ï—Å–ª–∏ userId –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –ø–æ–ª—É—á–∞–µ–º –∏–∑ JWT
  if (!targetUserId && jwtToken) {
    try {
      const payload = JSON.parse(atob(jwtToken.split('.')[1]));
      targetUserId = payload.userId || payload.user_id;
      console.log('[balanceService] User ID –ø–æ–ª—É—á–µ–Ω –∏–∑ JWT:', targetUserId);
    } catch (error) {
      console.error('[balanceService] –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JWT:', error);
      targetUserId = userId || 1; // fallback
    }
  }
  
  console.log('[balanceService] –ó–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è userId:', targetUserId, 'forceRefresh:', forceRefresh);
  
  // –ö–ª—é—á –∫–µ—à–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const cacheKey = CACHE_CONFIG.BALANCE_KEY(targetUserId);
  
  try {
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à, –µ—Å–ª–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    if (!forceRefresh) {
      const cachedBalance = cacheService.get<Balance>(cacheKey);
      if (cachedBalance) {
        return cachedBalance;
      }
    } else {
      // –ï—Å–ª–∏ forceRefresh=true, –æ—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
      console.log('[balanceService] –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –±–∞–ª–∞–Ω—Å–∞');
      cacheService.invalidate(cacheKey);
    }
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
    console.log('[balanceService] –ó–∞–ø—Ä–æ—Å –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –±–∞–ª–∞–Ω—Å–∞ –∏–∑ API');
    const response = await correctApiRequest(`/api/v2/wallet/balance?user_id=${targetUserId}`, 'GET');
    
    if (!response.success || !response.data) {
      console.error('[balanceService] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', response.error || 'Unknown error');
      
      // –£–ú–ù–´–ô FALLBACK: –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –∫–µ—à–∞ –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const cachedItem = cacheService.cacheMap?.get(cacheKey);
      if (cachedItem) {
        const cacheAge = Date.now() - cachedItem.timestamp;
        const isStale = cacheAge > CACHE_CONFIG.FALLBACK_MAX_AGE;
        
        console.log(`[balanceService] FALLBACK –ê–ù–ê–õ–ò–ó:`, {
          cacheAge: `${Math.round(cacheAge / 1000)}—Å`,
          maxAge: `${CACHE_CONFIG.FALLBACK_MAX_AGE / 1000}—Å`,
          isStale,
          userId: targetUserId,
          reason: response.error || 'API_FAIL'
        });
        
        if (!isStale) {
          console.log('[balanceService] ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –°–í–ï–ñ–ò–ô –∫—ç—à –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ API');
          cacheService.recordFallbackUsed();
          return cachedItem.data;
        } else {
          console.warn('[balanceService] üö® –ö–ï–® –£–°–¢–ê–†–ï–õ, –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ', {
            cacheAgeMinutes: Math.round(cacheAge / 60000),
            action: 'throw_error_instead'
          });
          cacheService.recordStaleFallbackRejected();
        }
      }
      
      throw new Error(response.error || 'Failed to fetch balance');
    }
    
    const data = response.data;
    console.log('[balanceService] –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å–∞:', data);
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞ API –æ—Ç–≤–µ—Ç–æ–≤)
    const balance = {
      uniBalance: parseFloat(data.uniBalance || data.uni_balance) || 0,
      tonBalance: parseFloat(data.tonBalance || data.ton_balance) || 0,
      uniFarmingActive: !!(data.uniFarmingActive || data.uni_farming_active),
      uniDepositAmount: parseFloat(data.uniDepositAmount || data.uni_deposit_amount) || 0,
      uniFarmingBalance: parseFloat(data.uniFarmingBalance || data.uni_farming_balance) || 0
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–µ—à —Å –º–µ—Ç–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
    console.log('[balanceService] üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –∫–µ—à', {
      userId: targetUserId,
      ttl: `${CACHE_CONFIG.BALANCE_TTL / 1000}—Å`,
      uniBalance: balance.uniBalance,
      tonBalance: balance.tonBalance
    });
    cacheService.set(cacheKey, balance, CACHE_CONFIG.BALANCE_TTL);
    
    return balance;
  } catch (error) {
    console.error('[balanceService] –û—à–∏–±–∫–∞ –≤ fetchBalance:', error);
    
    // –£–ú–ù–´–ô FALLBACK: –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const cachedErrorItem = cacheService.cacheMap?.get(cacheKey);
    if (cachedErrorItem) {
      const cacheAge = Date.now() - cachedErrorItem.timestamp;
      const isStale = cacheAge > CACHE_CONFIG.FALLBACK_MAX_AGE;
      
      console.log(`[balanceService] EXCEPTION FALLBACK –ê–ù–ê–õ–ò–ó:`, {
        cacheAge: `${Math.round(cacheAge / 1000)}—Å`,
        maxAge: `${CACHE_CONFIG.FALLBACK_MAX_AGE / 1000}—Å`,
        isStale,
        userId: targetUserId,
        error: error instanceof Error ? error.message : String(error)
      });
      
      if (!isStale) {
        console.log('[balanceService] ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –°–í–ï–ñ–ò–ô –∫—ç—à –ø–æ—Å–ª–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è');
        cacheService.recordFallbackUsed();
        return cachedErrorItem.data;
      } else {
        console.warn('[balanceService] üö® –ö–ï–® –£–°–¢–ê–†–ï–õ –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –±–∞–ª–∞–Ω—Å');
        cacheService.recordStaleFallbackRejected();
      }
    }
    
    console.log('[balanceService] üìä FALLBACK –°–¢–ê–¢–ò–°–¢–ò–ö–ê:', cacheService.getStats());
    
    // –ï—Å–ª–∏ –∫—ç—à–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç –±–∞–ª–∞–Ω—Å–∞
    return {
      uniBalance: 0,
      tonBalance: 0,
      uniFarmingActive: false,
      uniDepositAmount: 0,
      uniFarmingBalance: 0
    };
  }
}

/**
 * –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
 * @param userId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param amount –°—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
 * @param address –ê–¥—Ä–µ—Å TON –∫–æ—à–µ–ª—å–∫–∞
 * @returns –ü—Ä–æ–º–∏—Å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
export async function requestWithdrawal(userId: number, amount: string, address: string) {
  try {
    if (!userId || !amount || !address) {
      throw new Error('userId, amount –∏ address –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—ã–≤–æ–¥');
    }
    
    const response = await correctApiRequest('/api/v2/wallet/withdraw', 'POST', {
      user_id: userId,
      amount,
      wallet_address: address
    });
    
    if (!response.success) {
      throw new Error(response.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤');
    }
    
    return response.data;
  } catch (error) {
    console.error('[balanceService] –û—à–∏–±–∫–∞ –≤ requestWithdrawal:', error);
    throw error;
  }
}