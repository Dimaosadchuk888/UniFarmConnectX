/**
 * simpleTonTransaction.ts
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–ª—É–∂–±–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Buffer
 */

import {
  TonConnectUI,
  UserRejectsError,
  WalletNotConnectedError
} from '@tonconnect/ui-react';

import { 
  createSimpleBase64Payload,
  createSimpleTextCellPayload
} from './simplePayloadService';

// –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç BigNumber –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Å—É–º–º TON
import BigNumber from 'bignumber.js';

// –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
const DEBUG_ENABLED = true;
function debugLog(...args: any[]) {
  if (DEBUG_ENABLED) {
    console.log('[TON_CONNECT_DEBUG]', ...args);
  }
}

// –ê–¥—Ä–µ—Å TON –∫–æ—à–µ–ª—å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
export const TON_PROJECT_ADDRESS = 'UQBlrUfJMIlAcyYzttyxV2xrrvaHHIKEKeetGZbDoitTRWT8';

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç TON –∫–æ—à–µ–ª–µ–∫
 * @param tonConnectUI –≠–∫–∑–µ–º–ø–ª—è—Ä TonConnectUI –∏–∑ useTonConnectUI —Ö—É–∫–∞
 */
export function isTonWalletConnected(tonConnectUI: TonConnectUI): boolean {
  if (!tonConnectUI) {
    console.error('TonConnectUI is not provided to isTonWalletConnected');
    return false;
  }
  return tonConnectUI.connected;
}

/**
 * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç TON –∫–æ—à–µ–ª–µ–∫, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω
 * @param tonConnectUI –≠–∫–∑–µ–º–ø–ª—è—Ä TonConnectUI –∏–∑ useTonConnectUI —Ö—É–∫–∞
 */
export async function connectTonWallet(tonConnectUI: TonConnectUI): Promise<boolean> {
  try {
    debugLog('connectTonWallet called with', { tonConnectUI: !!tonConnectUI });
    
    if (!tonConnectUI) {
      console.error('Error: tonConnectUI is undefined in connectTonWallet');
      return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –º–µ—Ç–æ–¥ connectWallet
    if (typeof tonConnectUI.connectWallet !== 'function') {
      console.error('Error: tonConnectUI.connectWallet is not a function');
      return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    debugLog('Current connection state:', { connected: tonConnectUI.connected });
    
    if (!tonConnectUI.connected) {
      debugLog('Attempting to connect wallet...');
      // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∫–æ—à–µ–ª—å–∫–æ–º
      await tonConnectUI.connectWallet();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      debugLog('Connection result:', { connected: tonConnectUI.connected, wallet: tonConnectUI.wallet });
      
      return tonConnectUI.connected;
    }
    
    debugLog('Wallet already connected');
    return true;
  } catch (error) {
    console.error('Error connecting TON wallet:', error);
    return false;
  }
}

/**
 * –û—Ç–∫–ª—é—á–∞–µ—Ç TON –∫–æ—à–µ–ª–µ–∫
 * @param tonConnectUI –≠–∫–∑–µ–º–ø–ª—è—Ä TonConnectUI –∏–∑ useTonConnectUI —Ö—É–∫–∞
 */
export async function disconnectTonWallet(tonConnectUI: TonConnectUI): Promise<void> {
  if (tonConnectUI && tonConnectUI.connected) {
    await tonConnectUI.disconnect();
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∞–¥—Ä–µ—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ TON –∫–æ—à–µ–ª—å–∫–∞
 * @param tonConnectUI –≠–∫–∑–µ–º–ø–ª—è—Ä TonConnectUI –∏–∑ useTonConnectUI —Ö—É–∫–∞
 */
export function getTonWalletAddress(tonConnectUI: TonConnectUI): string | null {
  if (tonConnectUI && tonConnectUI.connected && tonConnectUI.account) {
    return tonConnectUI.account.address;
  }
  
  return null;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ UniFarmBoost:userId:boostId
 */
export function createTonTransactionComment(userId: number, boostId: number): string {
  return `UniFarmBoost:${userId}:${boostId}`;
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Buffer
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Telegram Mini App
 * 
 * @param tonConnectUI –≠–∫–∑–µ–º–ø–ª—è—Ä TonConnectUI –∏–∑ useTonConnectUI —Ö—É–∫–∞
 * @param amount –°—É–º–º–∞ TON (–≤ –±–∞–∑–æ–≤—ã—Ö –µ–¥–∏–Ω–∏—Ü–∞—Ö, 1 TON = 10^9 nanoTON)
 * @param comment –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–ª–∏ null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
 */
export async function sendTonTransaction(
  tonConnectUI: TonConnectUI,
  amount: string,
  comment: string
): Promise<{txHash: string; status: 'success' | 'error'} | null> {
  try {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º userId –∏ boostId –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (–ø—Ä–∏–º–µ–º —á—Ç–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ UniFarmBoost:userId:boostId)
    const parts = comment.split(':');
    const userId = parts.length > 1 ? parts[1] : '1';
    const boostId = parts.length > 2 ? parts[2] : '1';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∑–∞–º–µ—Ç–Ω—ã–π –ª–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log("===============================================================");
    console.log("üî¥ –í–´–ó–û–í sendTonTransaction –ü–û –ù–û–í–û–ú–£ –¢–ó");
    console.log("üî¥ –°–£–ú–ú–ê:", amount, "TON");
    console.log("üî¥ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô:", comment);
    console.log("üî¥ tonConnectUI:", tonConnectUI ? "–ü–†–ò–°–£–¢–°–¢–í–£–ï–¢" : "–û–¢–°–£–¢–°–¢–í–£–ï–¢");
    console.log("üî¥ –ü–û–î–ö–õ–Æ–ß–ï–ù:", tonConnectUI?.connected ? "–î–ê" : "–ù–ï–¢");
    console.log("üî¥ –ê–î–†–ï–° –ö–û–®–ï–õ–¨–ö–ê:", tonConnectUI?.account?.address || "–ù–ï–¢ –ê–î–†–ï–°–ê");
    console.log("üî¥ –§–£–ù–ö–¶–ò–Ø sendTransaction:", typeof tonConnectUI?.sendTransaction === 'function' ? "–î–û–°–¢–£–ü–ù–ê" : "–ù–ï–î–û–°–¢–£–ü–ù–ê");
    console.log("===============================================================");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ tonConnectUI
    if (!tonConnectUI) {
      console.error('[ERROR] tonConnectUI is null or undefined');
      throw new Error('TonConnectUI is not initialized');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
    if (!tonConnectUI.connected) {
      console.log('[INFO] –ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å...');
      await connectTonWallet(tonConnectUI);
      
      if (!tonConnectUI.connected) {
        console.error('[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫');
        throw new WalletNotConnectedError();
      }
    }
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û –¢–ó: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º TON –≤ nanoTON
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ amount —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º —á–∏—Å–ª–æ–º
    const tonAmount = parseFloat(amount);
    if (isNaN(tonAmount)) {
      console.error('[ERROR] –ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å—É–º–º–∞ TON:', amount);
      throw new Error('–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å—É–º–º–∞ TON');
    }
    
    // –ü–û –¢–ó: –£–º–Ω–æ–∂–∞–µ–º –Ω–∞ 1e9 –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ BigInt –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
    const nanoTonAmount = (BigInt(tonAmount * 1e9)).toString();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –¢–ó
    console.log("[TON] –°—É–º–º–∞ –≤ TON:", amount);
    console.log("[TON] –°—É–º–º–∞ –≤ nanoTON:", nanoTonAmount);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±–µ–∑ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    // –§–æ—Ä–º–∞: UniFarmBoost:userId:boostId
    const commentText = `UniFarmBoost:${userId}:${boostId}`;
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è payload
    // –í —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ–º –∞–¥—Ä–µ—Å –∏ —Å—É–º–º—É, –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è,
    // —á—Ç–æ–±—ã –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å Buffer
    const transaction = {
      validUntil: Math.floor(Date.now() / 1000) + 600, // 10 –º–∏–Ω—É—Ç
      messages: [
        {
          address: TON_PROJECT_ADDRESS, // UQBlrUfJMIlAcyYzttyxV2xrrvaHHIKEKeetGZbDoitTRWT8
          amount: nanoTonAmount, // –ü–û –¢–ó: –ò—Å–ø–æ–ª—å–∑—É–µ–º nanoTonAmount –≤–º–µ—Å—Ç–æ tonAmount
          // –£–±–∏—Ä–∞–µ–º payload –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        }
      ]
    };
    
    // –ü–û –¢–ó: –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ª–æ–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è amount –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    console.log("[TON] –°—É–º–º–∞ –≤ nanoTON –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π:", nanoTonAmount);
    
    console.log("[DEBUG] Sending simplified transaction without payload:", transaction);
    
    try {
      // –î–≤–æ–π–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
      if (!tonConnectUI.connected) {
        console.log('[INFO] –ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å...');
        await connectTonWallet(tonConnectUI);
        
        if (!tonConnectUI.connected) {
          console.error('[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
          throw new WalletNotConnectedError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª—ë–∫ –ø–µ—Ä–µ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π');
        }
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –±–µ–∑ payload
      console.log("[TON] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —á–µ—Ä–µ–∑ TonConnect...");
      
      const result = await tonConnectUI.sendTransaction(transaction);
      debugLog('*** –†–ï–ó–£–õ–¨–¢–ê–¢ sendTransaction ***', result);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      console.log("‚úÖ Transaction result:", result);
      
      return {
        txHash: result.boc || '',
        status: 'success'
      };
    } catch (error) {
      const txError = error as Error; // –¢–∏–ø–∏–∑–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∫–∞–∫ Error –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º
      
      console.error('–û–®–ò–ë–ö–ê –ø—Ä–∏ –≤—ã–∑–æ–≤–µ sendTransaction:', { 
        errorType: typeof error,
        errorName: txError.name,
        errorMessage: txError.message,
        errorStack: txError.stack?.substring(0, 100) // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ —Å—Ç–µ–∫–∞
      });
      
      // –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
      if (error instanceof UserRejectsError) {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –∫–æ—à–µ–ª—å–∫–µ');
      }
      else if (error instanceof WalletNotConnectedError) {
        console.log('–û—à–∏–±–∫–∞: –∫–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
      }
      else {
        console.log('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏', {
          errorToString: String(error),
          errorJSON: JSON.stringify(error)
        });
      }
      
      throw error;  // Re-throw to be caught by the outer try-catch
    }
  } catch (error) {
    console.error('Error sending TON transaction:', error);
    
    if (error instanceof UserRejectsError) {
      return {
        txHash: '',
        status: 'error'
      };
    }
    
    return null;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—Å–µ –ª–∏ –≥–æ—Ç–æ–≤–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
 * @param tonConnectUI –≠–∫–∑–µ–º–ø–ª—è—Ä TonConnectUI –∏–∑ useTonConnectUI —Ö—É–∫–∞
 * @returns true –µ—Å–ª–∏ TonConnect –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
 */
export function isTonPaymentReady(tonConnectUI: TonConnectUI): boolean {
  // –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  const hasConnectUI = !!tonConnectUI;
  const hasSendTransaction = hasConnectUI && typeof tonConnectUI.sendTransaction === 'function';
  const isConnected = hasConnectUI && !!tonConnectUI.connected;
  const hasWallet = hasConnectUI && !!tonConnectUI.wallet;
  const hasAccount = hasConnectUI && !!tonConnectUI.account;
  const hasAddress = hasAccount && !!tonConnectUI.account?.address;
  
  // –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —Ç—Ä–µ–±—É–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –∏ –∞–∫–∫–∞—É–Ω—Ç–∞
  const isReady = hasConnectUI && hasSendTransaction && isConnected && hasWallet && hasAccount && hasAddress;
  
  // –ü–æ –¢–ó –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true
  // –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –≤—ã–∑–æ–≤–æ–º sendTransaction
  console.log('[DEBUG] ‚ö†Ô∏è –ü–†–û–í–ï–†–ö–ê isTonPaymentReady –û–¢–ö–õ–Æ–ß–ï–ù–ê –ü–û –¢–ó, –í–û–ó–í–†–ê–©–ê–ï–ú TRUE –î–õ–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò');
  return true; // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è sendTransaction
}

// –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
export const isWalletConnected = isTonWalletConnected;
export const getWalletAddress = getTonWalletAddress;
export const connectWallet = connectTonWallet;
export const disconnectWallet = disconnectTonWallet;