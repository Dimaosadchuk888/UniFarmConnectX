/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram WebApp
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å Telegram API –≤ Mini App
 */

// –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–ª—è Telegram WebApp API
declare global {
  interface Window {
    Telegram?: {
      WebApp?: {
        expand: () => void;
        ready: () => void;
        initData: string;
        initDataUnsafe: {
          user?: {
            id: number;
            username?: string;
            first_name?: string;
            last_name?: string;
            photo_url?: string;
          };
          auth_date?: string;
          hash?: string;
          platform?: string;
        };
        platform?: string;
        colorScheme?: string;
        startParam?: string; // –ü–∞—Ä–∞–º–µ—Ç—Ä start= –∏–∑ —Å—Å—ã–ª–∫–∏ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
        version?: string;    // –í–µ—Ä—Å–∏—è API
        themeParams?: Record<string, string>; // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–º—ã
        
        // –ú–µ—Ç–æ–¥—ã –∏–∑ –ø–æ–ª–Ω–æ–≥–æ API
        MainButton?: {
          show: () => void;
          hide: () => void;
          setText: (text: string) => void;
          onClick: (callback: Function) => void;
        };
        sendData?: (data: string) => void;
        openLink?: (url: string) => void;
      };
    };
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ñ–∏–∫—Å–∞—Ü–∏–∏ Telegram ID –≤ localStorage
    localStorage?: Storage;
  }
}

// –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
const TELEGRAM_USER_ID_KEY = 'telegram_user_id';
// –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è telegram_id
const TELEGRAM_ID_TIMESTAMP_KEY = 'telegram_id_timestamp';
// –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö initData
const TELEGRAM_INIT_DATA_KEY = 'telegramInitData';
// –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
const TELEGRAM_USER_DATA_KEY = 'telegram_user_data';
// –ö–ª—é—á –¥–ª—è —Ä–µ–∂–∏–º–∞ –æ—Ç–ª–∞–¥–∫–∏
const TELEGRAM_DEBUG_MODE_KEY = 'telegram_debug_mode';
// –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const TELEGRAM_REGISTERED_KEY = 'telegram_user_registered';

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram WebApp –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ API
 * @returns {boolean} true –µ—Å–ª–∏ Telegram WebApp API –¥–æ—Å—Ç—É–ø–µ–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ Telegram Mini App
 * –í–∫–ª—é—á–∞–µ—Ç —Å—Ç—Ä–æ–≥—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 * 
 * @returns {boolean} true —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç–æ—á–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –≤ Telegram Mini App
 */
export function isRunningInTelegram(): boolean {
  console.log('[TG INIT] Checking if running in Telegram...');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—ä–µ–∫—Ç–∞ Telegram –∏ WebApp
  const hasTelegramObject = !!window.Telegram;
  const hasWebAppObject = !!window.Telegram?.WebApp;
  
  // –î–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  let reason = '';
  let hasValidInitData = false;
  let initDataLength = 0;
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ –¥–ª–∏–Ω—É initData
  if (hasWebAppObject && window.Telegram && window.Telegram.WebApp && 
      typeof window.Telegram.WebApp.initData === 'string') {
    initDataLength = window.Telegram.WebApp.initData.length;
    hasValidInitData = initDataLength > 10; // –¢—Ä–µ–±—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É 10 —Å–∏–º–≤–æ–ª–æ–≤
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—Å–∫ –≤ iframe (–∫–∞–∫ –æ–±—ã—á–Ω–æ –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è Mini Apps)
  const isInIframe = window !== window.parent;
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º User-Agent –Ω–∞ –ø—Ä–∏–∑–Ω–∞–∫–∏ Telegram
  const userAgent = navigator.userAgent.toLowerCase();
  const isTelegramUA = userAgent.includes('telegram') || 
                       userAgent.includes('tgweb');
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º referrer –Ω–∞ –Ω–∞–ª–∏—á–∏–µ telegram
  const hasTelegramReferrer = document.referrer.toLowerCase().includes('telegram');
  
  // –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∑–∞–ø—É—Å–∫—É –≤ Telegram Mini App
  // (–∫—Ä–æ–º–µ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
  
  // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º —ç–º—É–ª—è—Ü–∏—é —á–µ—Ä–µ–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  if (process.env.NODE_ENV === 'development') {
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä URL –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ Telegram –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    const urlParams = new URLSearchParams(window.location.search);
    const emulateTelegram = urlParams.get('telegram_mode') === 'true';
    
    // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, —ç–º—É–ª–∏—Ä—É–µ–º Telegram
    if (emulateTelegram) {
      console.log('[TG INIT] ‚ö†Ô∏è Telegram environment emulated via URL param (dev mode)');
      return true;
    }
    
    // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –≤ localStorage
    try {
      const debugMode = localStorage.getItem('telegram_debug_mode') === 'true';
      if (debugMode) {
        console.log('[TG INIT] ‚ö†Ô∏è Telegram debug mode active via localStorage (dev mode)');
        return true;
      }
    } catch (e) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ localStorage
    }
  }
  
  // –°–¢–†–û–ì–ê–Ø –ü–†–û–í–ï–†–ö–ê: –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—Å–ª–æ–≤–∏—è
  const isFullTelegramEnvironment = hasTelegramObject && 
                                   hasWebAppObject && 
                                   hasValidInitData &&
                                   (isInIframe || isTelegramUA || hasTelegramReferrer);
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞ –¥–ª—è –ª–æ–≥–æ–≤
  if (!hasTelegramObject) {
    reason = 'window.Telegram –æ–±—ä–µ–∫—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
  } else if (!hasWebAppObject) {
    reason = 'window.Telegram.WebApp –æ–±—ä–µ–∫—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
  } else if (!hasValidInitData) {
    reason = `initData –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–¥–ª–∏–Ω–∞: ${initDataLength})`;
  } else if (!(isInIframe || isTelegramUA || hasTelegramReferrer)) {
    reason = '–û–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ Telegram (–Ω–µ iframe, –Ω–µ—Ç Telegram –≤ User-Agent –∏–ª–∏ referrer)';
  }
  
  // –ü–æ–ª–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log('[TG INIT] Telegram environment check:', {
    hasTelegramObject,
    hasWebAppObject,
    initDataLength,
    hasValidInitData,
    isInIframe,
    isTelegramUA,
    hasTelegramReferrer,
    result: isFullTelegramEnvironment,
    reason: isFullTelegramEnvironment ? 'OK' : reason,
    userAgent,
    referrer: document.referrer || 'none'
  });
  
  console.log(`[TG CHECK] Telegram –¥–æ—Å—Ç—É–ø–µ–Ω: ${isFullTelegramEnvironment}`);
  
  if (!isFullTelegramEnvironment) {
    console.log(`[TG CHECK] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞: ${reason}`);
  }
  
  return isFullTelegramEnvironment;
}

/**
 * –û—á–∏—â–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ Telegram –∏–∑ localStorage, –≤–∫–ª—é—á–∞—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ initData –∏ ID
 * –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ –ø—Ä–∏ —Å–º–µ–Ω–µ –±–æ—Ç–∞ –∏–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
 * @returns {boolean} true –µ—Å–ª–∏ –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
 */
export function clearTelegramCache(): boolean {
  console.log('[telegramService] üßπ Clearing all Telegram cached data...');
  
  try {
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å Telegram
    localStorage.removeItem(TELEGRAM_INIT_DATA_KEY);
    localStorage.removeItem(TELEGRAM_USER_DATA_KEY);
    localStorage.removeItem(TELEGRAM_USER_ID_KEY);
    localStorage.removeItem(TELEGRAM_ID_TIMESTAMP_KEY);
    localStorage.removeItem(TELEGRAM_DEBUG_MODE_KEY);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∏—â–µ–º –∏ —É–¥–∞–ª—è–µ–º –ª—é–±—ã–µ –∫–ª—é—á–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    const keysToCheck = ['telegram', 'tg_', 'webApp', 'initData', 'botId'];
    
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (key) {
        const keyLower = key.toLowerCase();
        // –ï—Å–ª–∏ –∫–ª—é—á —Å–æ–¥–µ—Ä–∂–∏—Ç –ª—é–±–æ–µ –∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ - —É–¥–∞–ª—è–µ–º
        if (keysToCheck.some(keyword => keyLower.includes(keyword))) {
          localStorage.removeItem(key);
          console.log(`[telegramService] Removed additional key: ${key}`);
        }
      }
    }
    
    console.log('[telegramService] ‚úÖ All Telegram cache cleared successfully');
    return true;
  } catch (error) {
    console.error('[telegramService] ‚ùå Failed to clear Telegram cache:', error);
    return false;
  }
}

export function isTelegramWebApp(): boolean {
  // –ê–£–î–ò–¢: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp
  // –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Telegram –æ–±—ä–µ–∫—Ç–∞, –≤–∫–ª—é—á–∞—è initData –∏ startParam
  console.log("[–ê–£–î–ò–¢] [DIAG] Telegram WebApp State:", {
    isTelegramAvailable: !!window.Telegram,
    isWebAppAvailable: !!window.Telegram?.WebApp,
    initData: window.Telegram?.WebApp?.initData,
    initDataLength: window.Telegram?.WebApp?.initData?.length || 0,
    hasInitDataUnsafe: !!window.Telegram?.WebApp?.initDataUnsafe,
    hasUser: !!window.Telegram?.WebApp?.initDataUnsafe?.user,
    userId: window.Telegram?.WebApp?.initDataUnsafe?.user?.id || 'not available',
    username: window.Telegram?.WebApp?.initDataUnsafe?.user?.username || 'not available',
    firstName: window.Telegram?.WebApp?.initDataUnsafe?.user?.first_name || 'not available',
    startParam: window.Telegram?.WebApp?.startParam || 'not available',
    authDate: window.Telegram?.WebApp?.initDataUnsafe?.auth_date || 'not available',
    platform: window.Telegram?.WebApp?.platform || 'not available',
    version: window.Telegram?.WebApp?.version || 'not available',
    hash: window.Telegram?.WebApp?.initDataUnsafe?.hash ? 'present' : 'absent',
    fullInitData: window.Telegram?.WebApp?.initData || 'empty',
    documentURL: typeof document !== 'undefined' ? document.URL : 'not available',
    isIframe: typeof window !== 'undefined' ? window !== window.parent : false,
    userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'not available',
    time: new Date().toISOString()
  });

  // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ window
  if (typeof window === 'undefined') {
    console.error('[telegramService] isTelegramWebApp check: window object not available');
    return false;
  }
  
  // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞ Telegram
  if (!window.Telegram) {
    console.error('[telegramService] isTelegramWebApp check: Telegram object not available');
    return false;
  }
  
  // –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞ WebApp
  if (!window.Telegram.WebApp) {
    console.error('[telegramService] isTelegramWebApp check: WebApp object not available');
    return false;
  }
  
  // –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ initData –∏ –µ–≥–æ –Ω–µ–ø—É—Å—Ç–æ—Ç—ã
  const hasValidInitData = typeof window.Telegram.WebApp.initData === 'string' && 
                         window.Telegram.WebApp.initData.trim() !== '';
  
  if (!hasValidInitData) {
    console.error('[telegramService] isTelegramWebApp check: initData is missing or empty');
    console.log('[telegramService] initData value:', window.Telegram.WebApp.initData);
  }
  
  // –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–±—ä–µ–∫—Ç–∞ initDataUnsafe
  const hasInitDataUnsafe = !!window.Telegram.WebApp.initDataUnsafe;
  
  if (!hasInitDataUnsafe) {
    console.error('[telegramService] isTelegramWebApp check: initDataUnsafe is missing');
  } else {
    console.log('[telegramService] initDataUnsafe content:', JSON.stringify(window.Telegram.WebApp.initDataUnsafe));
  }
  
  // –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–±—ä–µ–∫—Ç–∞ user –≤ initDataUnsafe
  const hasUser = !!window.Telegram.WebApp.initDataUnsafe?.user;
  
  if (!hasUser && hasInitDataUnsafe) {
    console.error('[telegramService] isTelegramWebApp check: user object is missing in initDataUnsafe');
  } else if (hasUser) {
    console.log('[telegramService] user object found:', JSON.stringify(window.Telegram.WebApp.initDataUnsafe.user));
  }
  
  // –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const hasUserId = typeof window.Telegram.WebApp.initDataUnsafe?.user?.id === 'number';
  
  if (!hasUserId && hasUser) {
    console.error('[telegramService] isTelegramWebApp check: user.id is missing or not a number');
  } else if (hasUserId) {
    console.log('[telegramService] user.id found:', window.Telegram.WebApp.initDataUnsafe?.user?.id);
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è startParam –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
  if (window.Telegram.WebApp.startParam) {
    console.log('[telegramService] startParam detected:', window.Telegram.WebApp.startParam);
  } else {
    console.warn('[telegramService] No startParam available in Telegram WebApp');
  }
  
  // –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç –Ω–∞–ª–∏—á–∏—è –∫–∞–∫ initData, —Ç–∞–∫ –∏ initDataUnsafe
  const hasTelegram = hasValidInitData && hasInitDataUnsafe;
  
  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Å –ø–æ–ª–Ω–æ–π —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–µ–π
  console.log('[telegramService] isTelegramWebApp debug info:', {
    windowDefined: typeof window !== 'undefined',
    hasTelegramObject: !!window.Telegram,
    hasWebAppObject: !!window.Telegram.WebApp,
    hasInitData: typeof window.Telegram.WebApp.initData === 'string',
    initDataLength: (window.Telegram.WebApp.initData || '').length,
    initDataPreview: hasValidInitData ? 
                     `${window.Telegram.WebApp.initData.substring(0, 20)}...` : 
                     'empty or missing',
    hasInitDataUnsafe: hasInitDataUnsafe,
    hasUser: hasUser,
    hasUserId: hasUserId,
    userId: hasUserId && window.Telegram.WebApp.initDataUnsafe?.user ? window.Telegram.WebApp.initDataUnsafe.user.id : 'N/A',
    // @ts-ignore - –ü–æ–ª—è –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ç–∏–ø–µ, –Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º API
    startParam: window.Telegram?.WebApp?.startParam || 'not available',
    // @ts-ignore
    appVersion: window.Telegram?.WebApp?.version || 'not available',
    platform: window.Telegram?.WebApp?.platform || 'not available', 
    result: hasTelegram,
    isSSR: typeof navigator === 'undefined',
    isIframe: window !== window.parent,
    userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'undefined',
    locationHref: typeof window.location !== 'undefined' ? window.location.href : 'undefined',
    locationOrigin: typeof window.location !== 'undefined' ? window.location.origin : 'undefined',
    currentTimeUTC: new Date().toISOString()
  });
  
  // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –º—ã —Ç—Ä–µ–±—É–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–∂–Ω–æ —Å–º—è–≥—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è
  if (process.env.NODE_ENV === 'development') {
    // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ —Ç—Ä–µ–±—É–µ–º –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç Telegram
    return true;
  }
  
  return hasTelegram;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç Telegram WebApp —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –æ—à–∏–±–æ–∫
 * @returns {boolean} true –µ—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
 */
/**
 * –ê–∫—Ç–∏–≤–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É Telegram WebApp
 * –ü–æ–ª–µ–∑–Ω–æ –≤ —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
 * @returns {Promise<boolean>} true –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
 */
export async function requestInitData(): Promise<boolean> {
  console.log('[telegramService] Actively requesting initData from Telegram WebApp...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –±–∞–∑–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Telegram.WebApp
  if (!window?.Telegram?.WebApp) {
    console.error('[telegramService] üî¥ Cannot request initData: Telegram.WebApp is not available');
    
    // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏: –≤—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ window.Telegram –æ–±—ä–µ–∫—Ç–µ
    console.log('[telegramService] DIAG: Telegram object state:', {
      telegramExists: !!window.Telegram,
      telegramType: typeof window.Telegram,
      telegramKeys: window.Telegram ? Object.keys(window.Telegram) : [],
      fullObj: window.Telegram
    });
    
    return false;
  }
  
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Telegram WebApp
    window.Telegram.WebApp.ready();
    
    // –†–∞—Å—à–∏—Ä—è–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
    window.Telegram.WebApp.expand();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—è–≤–∏–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const initData = window.Telegram.WebApp.initData;
    const initDataLength = initData ? initData.length : 0;
    
    // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    console.log('[telegramService] üìä After reinitialization:', {
      initDataAvailable: !!initData,
      initDataLength: initDataLength,
      initDataSample: initData && initDataLength > 0 ? 
                    `${initData.substring(0, Math.min(20, initDataLength))}...` : 'empty',
      initDataUnsafeAvailable: !!window.Telegram.WebApp.initDataUnsafe,
      userAvailable: !!window.Telegram.WebApp.initDataUnsafe?.user,
      userId: window.Telegram.WebApp.initDataUnsafe?.user?.id || 'not available'
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—è–≤–∏–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    if (window.Telegram.WebApp.initDataUnsafe?.user?.id) {
      console.log('[telegramService] ‚úÖ Successfully obtained user data after reinitialization!');
      
      // –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      const event = new CustomEvent('telegram-webapp-initialized', { 
        detail: { 
          userId: window.Telegram.WebApp.initDataUnsafe.user.id,
          // @ts-ignore
          startParam: window.Telegram.WebApp.startParam,
          initDataLength: initDataLength,
          wasReinitialized: true
        } 
      });
      window.dispatchEvent(event);
      
      return true;
    }
    
    console.warn('[telegramService] ‚ö†Ô∏è Reinitialization did not provide user data');
    return false;
  } catch (error) {
    console.error('[telegramService] üî¥ Error during initData request:', error);
    return false;
  }
}

export function initTelegramWebApp(): boolean {
  console.log('[telegramService] Initializing Telegram WebApp...');
  
  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º –≤ production
  console.log('[telegramService] üì± DEBUG: Current Telegram object state:', {
    telegramObjectExists: !!window.Telegram,
    webAppObjectExists: !!window.Telegram?.WebApp,
    initDataExists: !!window.Telegram?.WebApp?.initData,
    initDataLength: window.Telegram?.WebApp?.initData?.length || 0,
    initDataUnsafeExists: !!window.Telegram?.WebApp?.initDataUnsafe,
    userIdAvailable: !!window.Telegram?.WebApp?.initDataUnsafe?.user?.id,
    runningInIframe: window !== window.parent,
    documentReferrer: document.referrer || 'none',
    locationHref: window.location.href,
    inIframe: window !== window.parent,
    userAgent: navigator.userAgent,
  });
  
  // –°—Ä–∞–∑—É —Å–æ—Ö—Ä–∞–Ω—è–µ–º initData –≤ localStorage, –µ—Å–ª–∏ –æ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ (—Å–æ–≥–ª–∞—Å–Ω–æ –ø.1.2 –¢–ó)
  if (window.Telegram?.WebApp?.initData && window.Telegram.WebApp.initData.trim() !== '') {
    try {
      // –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ sessionStorage (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Å–ø–æ—Å–æ–±)
      sessionStorage.setItem('telegramInitData', window.Telegram.WebApp.initData);
      // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
      localStorage.setItem('telegramInitData', window.Telegram.WebApp.initData);
      
      console.log('[telegramService] Successfully saved Telegram initData to sessionStorage and localStorage with length:', 
        window.Telegram.WebApp.initData.length);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const unsafe = window.Telegram.WebApp.initDataUnsafe;
      if (unsafe) {
        sessionStorage.setItem('telegram_user_data', JSON.stringify(unsafe));
        if (unsafe.user?.id) {
          sessionStorage.setItem('telegram_user_id', unsafe.user.id.toString());
        }
      }
      
      console.log('[telegramService] initData —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ sessionStorage');
    } catch (e) {
      console.error('[telegramService] Error saving Telegram initData to storage:', e);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API
  if (!window?.Telegram?.WebApp) {
    console.error('[telegramService] Failed to initialize - WebApp API not available');
    
    // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
    if (process.env.NODE_ENV === 'development') {
      console.warn('[telegramService] ‚ö†Ô∏è Running in development mode without Telegram WebApp API');
      
      // –í–æ–∑–º–æ–∂–Ω–∞—è —ç–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã)
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ Telegram ID –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        const cachedTelegramData = localStorage.getItem('telegram_user_data');
        if (cachedTelegramData) {
          console.log('[telegramService] Using cached Telegram data from localStorage for development');
          
          // –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å cached –¥–∞–Ω–Ω—ã–º–∏
          try {
            const cachedData = JSON.parse(cachedTelegramData);
            if (cachedData.id) {
              const event = new CustomEvent('telegram-webapp-initialized', { 
                detail: { 
                  userId: parseInt(cachedData.id),
                  startParam: null,
                  fromCache: true
                } 
              });
              window.dispatchEvent(event);
              
              console.log('[telegramService] Published cached ID event:', parseInt(cachedData.id));
            }
          } catch (e) {
            console.error('[telegramService] Failed to parse cached telegram data:', e);
          }
        }
      } catch (storageError) {
        console.warn('[telegramService] Error accessing localStorage:', storageError);
      }
      
      return false;
    }
    
    console.error('[telegramService] ‚ùå Running in production without Telegram WebApp API!');
    return false;
  }
  
  try {
    // –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –æ—à–∏–±–∫–∏
    // –°–Ω–∞—á–∞–ª–∞ –≤—ã–∑—ã–≤–∞–µ–º ready(), —á—Ç–æ–±—ã —Å–æ–æ–±—â–∏—Ç—å Telegram, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ
    window.Telegram.WebApp.ready();
    
    // –ó–∞—Ç–µ–º —Ä–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
    window.Telegram.WebApp.expand();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const hasUserData = !!window.Telegram.WebApp.initDataUnsafe?.user?.id;
    
    // –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è API –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const apiState = isTelegramWebApp();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º initData –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
    const initData = window.Telegram.WebApp.initData;
    const initDataLength = initData ? initData.length : 0;
    console.log(`[telegramService] Init data received (length: ${initDataLength})`);
    
    // –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã initData
    if (initData && initData.length > 0) {
      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ query param, –ª–æ–≥–∏—Ä—É–µ–º –∫–ª—é—á–∏
      if (initData.includes('=') && initData.includes('&')) {
        try {
          const params = new URLSearchParams(initData);
          const keys = Array.from(params.keys());
          console.log('[telegramService] initData keys:', keys);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
          const hasUser = params.has('user');
          const hasAuthDate = params.has('auth_date');
          const hasHash = params.has('hash');
          
          if (!hasUser || !hasAuthDate || !hasHash) {
            console.warn('[telegramService] Missing critical parameters in initData:', 
                         {hasUser, hasAuthDate, hasHash});
          }
        } catch (parseError) {
          console.error('[telegramService] Error parsing initData as URLSearchParams:', parseError);
        }
      } 
      // –ï—Å–ª–∏ –≤ –¥—Ä—É–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
      else {
        try {
          const initDataObj = JSON.parse(initData);
          console.log('[telegramService] initData parsed as JSON with keys:', Object.keys(initDataObj));
        } catch (jsonError) {
          console.warn('[telegramService] initData is not valid JSON, assuming custom format');
        }
      }
    }
    
    if (apiState) {
      console.log('[telegramService] ‚úÖ Telegram WebApp initialized successfully');
      
      // –ü–æ–ª—É—á–∞–µ–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º userId
      const userId = window.Telegram.WebApp.initDataUnsafe?.user?.id;
      console.log('[telegramService] User ID detected:', userId || 'none');
      
      if (userId) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤ localStorage –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ fallback
        try {
          localStorage.setItem('telegram_user_data', JSON.stringify({
            id: String(userId),
            timestamp: Date.now(),
            username: window.Telegram.WebApp.initDataUnsafe?.user?.username || ''
          }));
        } catch (e) {
          console.warn('[telegramService] Failed to cache telegram userId in localStorage:', e);
        }
      }
                  
      // –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      const event = new CustomEvent('telegram-webapp-initialized', { 
        detail: { 
          userId: userId || null,
          // @ts-ignore
          startParam: window.Telegram.WebApp.startParam,
          initDataLength: initDataLength
        } 
      });
      window.dispatchEvent(event);
      
      return true;
    } else {
      console.error('[telegramService] API initialized but validation failed');
      
      // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
      console.warn('[telegramService] Detailed initData diagnostics:', {
        hasData: !!initData,
        dataLength: initDataLength,
        initDataPreview: initData && initData.length > 20 ? 
                         `${initData.substring(0, 10)}...${initData.substring(initData.length - 10)}` :
                         'too short or empty',
        hasInitDataUnsafe: !!window.Telegram.WebApp.initDataUnsafe,
        hasUser: !!window.Telegram.WebApp.initDataUnsafe?.user,
        hasValidUserId: typeof window.Telegram.WebApp.initDataUnsafe?.user?.id === 'number',
        userId: window.Telegram.WebApp.initDataUnsafe?.user?.id || 'invalid/missing'
      });
      
      // –ï—Å–ª–∏ –ø–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ –¥–∞–ª–∞ –Ω—É–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–±—É–µ–º 
      // –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
      if (!window.Telegram.WebApp.initData || window.Telegram.WebApp.initData.trim() === '') {
        console.error('[telegramService] No initData available after initialization');
      }
      
      if (!window.Telegram.WebApp.initDataUnsafe) {
        console.error('[telegramService] No initDataUnsafe available after initialization');
      } else if (!window.Telegram.WebApp.initDataUnsafe?.user) {
        console.error('[telegramService] No user data available after initialization');
      }
      
      return false;
    }
  } catch (error) {
    console.error('[telegramService] Exception during Telegram WebApp initialization:', error);
    return false;
  }
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
interface TelegramUserData {
  userId: number;
  username?: string;
  firstName?: string;
  lastName?: string;
  photoUrl?: string;
  authData: string;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp
 * @returns {TelegramUserData | null} –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
 */
export function getTelegramUserData(): TelegramUserData | null {
  console.log('[telegramService] getTelegramUserData called');
  
  // –®–∞–≥ 1: –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
  console.log('[telegramService] Telegram WebApp state diagnostic:', {
    windowDefined: typeof window !== 'undefined',
    telegramAvailable: !!window?.Telegram,
    webAppAvailable: !!window?.Telegram?.WebApp,
    initDataAvailable: !!window?.Telegram?.WebApp?.initData,
    initDataLength: typeof window?.Telegram?.WebApp?.initData === 'string' ? window.Telegram.WebApp.initData.length : 0,
    initDataUnsafeAvailable: !!window?.Telegram?.WebApp?.initDataUnsafe,
    userAvailable: !!window?.Telegram?.WebApp?.initDataUnsafe?.user,
    userIdAvailable: typeof window?.Telegram?.WebApp?.initDataUnsafe?.user?.id === 'number',
    // @ts-ignore - startParam –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–∏–ø–µ, –Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–µ–∞–ª—å–Ω–æ–º API
    startParamAvailable: !!window?.Telegram?.WebApp?.startParam,
    // @ts-ignore - startParam –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–∏–ø–µ, –Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–µ–∞–ª—å–Ω–æ–º API
    startParamValue: window?.Telegram?.WebApp?.startParam || 'none',
    platform: window?.Telegram?.WebApp?.platform || 'unknown'
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏ initData —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–¥–∞–Ω–∏—è 1.2 –¢–ó
  if (window?.Telegram?.WebApp?.initData) {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, —á—Ç–æ–±—ã –≤—Å–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –∏–º–µ–ª–∏ –Ω—É–∂–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
      if (typeof window !== 'undefined' && window.localStorage) {
        localStorage.setItem('telegramInitData', window.Telegram.WebApp.initData);
        console.log('[telegramService] –°–æ—Ö—Ä–∞–Ω–µ–Ω initData –≤ localStorage –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö');
      }
    } catch (e) {
      console.error('[telegramService] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ initData:', e);
    }
  }
  
  // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
  if (!isTelegramWebApp()) {
    console.warn('[telegramService] Telegram WebApp API not available');
    
    // –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ Telegram –æ–±—ä–µ–∫—Ç –µ—Å—Ç—å, –Ω–æ –Ω–µ –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫–∏
    if (window?.Telegram?.WebApp) {
      try {
        console.log('[telegramService] Attempting to reinitialize Telegram WebApp');
        window.Telegram.WebApp.ready();
        window.Telegram.WebApp.expand();
        
        // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        if (isTelegramWebApp()) {
          console.log('[telegramService] Successfully reinitialized Telegram WebApp');
        } else {
          console.warn('[telegramService] Failed to reinitialize Telegram WebApp');
          return null;
        }
      } catch (error) {
        console.error('[telegramService] Error during WebApp reinitialization:', error);
        return null;
      }
    } else {
      return null;
    }
  }
  
  // –®–∞–≥ 3: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ initDataUnsafe
  if (!window.Telegram?.WebApp?.initDataUnsafe) {
    console.warn('[telegramService] initDataUnsafe not available, trying alternative methods');
    
    // –ï—Å–ª–∏ initData –µ—Å—Ç—å, –Ω–æ initDataUnsafe –Ω–µ—Ç, –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å 
    // –ø—Ä–æ–≤–µ—Ä–∏—Ç—å startParam –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    // @ts-ignore - startParam –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–∏–ø–µ, –Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–µ–∞–ª—å–Ω–æ–º API
    if (window.Telegram?.WebApp?.startParam) {
      // @ts-ignore - startParam –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–∏–ø–µ, –Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–µ–∞–ª—å–Ω–æ–º API
      console.log('[telegramService] No initDataUnsafe, but startParam available:', 
                  window.Telegram.WebApp.startParam);
    }
    
    return null;
  }

  try {
    // –®–∞–≥ 4: –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    const initDataUnsafe = { ...window.Telegram.WebApp.initDataUnsafe };
    const user = initDataUnsafe.user;
    
    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('[telegramService] Full Telegram WebApp diagnostic:', { 
      hasUser: !!user,
      userId: typeof user?.id === 'number' ? user.id : 'invalid',
      username: user?.username || 'not available',
      firstName: user?.first_name || 'not available',
      lastName: user?.last_name || 'not available',
      initDataKeys: Object.keys(initDataUnsafe),
      // @ts-ignore - startParam –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–∏–ø–µ, –Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–µ–∞–ª—å–Ω–æ–º API
      startParam: window.Telegram?.WebApp?.startParam || 'not available',
      platform: window.Telegram?.WebApp?.platform || 'not available',
      // @ts-ignore - version –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–∏–ø–µ, –Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–µ–∞–ª—å–Ω–æ–º API
      version: window.Telegram?.WebApp?.version || 'not available',
      initDataLength: window.Telegram?.WebApp?.initData?.length || 0,
      // @ts-ignore - themeParams –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–∏–ø–µ, –Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–µ–∞–ª—å–Ω–æ–º API
      themeParams: window.Telegram?.WebApp?.themeParams ? 'available' : 'not available'
    });
    
    // –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–±—ä–µ–∫—Ç–∞ user –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
    if (!user || typeof user.id !== 'number' || user.id <= 0) {
      console.warn('[telegramService] User data not available or invalid in Telegram WebApp');
      return null;
    }

    // –®–∞–≥ 5: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userData: TelegramUserData = {
      userId: user.id,
      username: user.username,
      firstName: user.first_name,
      lastName: user.last_name,
      photoUrl: user.photo_url,
      authData: window.Telegram.WebApp.initData  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    };
    
    // –®–∞–≥ 6: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage —Å –º–µ—Ç–∫–∞–º–∏ –≤—Ä–µ–º–µ–Ω–∏
    try {
      if (userData.userId > 0) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º id —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ –±—É–¥—É—â–µ–º
        const cacheData = {
          id: String(userData.userId),
          timestamp: Date.now(),
          username: userData.username || '',
          firstName: userData.firstName || ''
        };
        
        localStorage.setItem('telegram_user_data', JSON.stringify(cacheData));
        console.log('[telegramService] Cached user data in localStorage:', userData.userId);
      }
    } catch (err) {
      console.warn('[telegramService] Failed to cache user data in localStorage:', err);
    }
    
    console.log('[telegramService] Successfully extracted user data:', {
      userId: userData.userId,
      username: userData.username || 'not set',
      firstName: userData.firstName || 'not set'
    });
    
    return userData;
  } catch (error) {
    console.error('[telegramService] Error extracting user data from Telegram WebApp:', error);
    return null;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Telegram –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API
 * @returns {Record<string, string>} –û–±—ä–µ–∫—Ç —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏–ª–∏ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
 */
export function getTelegramAuthHeaders(): Record<string, string> {
  console.log('[telegramService] Getting Telegram auth headers');
  
  // –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ –¥–æ–±–∞–≤–∏–º –ø–æ–¥–¥–µ—Ä–∂–∫—É dev-mode
  const headers: Record<string, string> = {};
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–µ, —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞—é—Ç—Å—è
    const timestampStr = localStorage.getItem(TELEGRAM_ID_TIMESTAMP_KEY);
    if (timestampStr) {
      const timestamp = parseInt(timestampStr, 10);
      const now = Date.now();
      const ageHours = (now - timestamp) / (1000 * 60 * 60);
      
      if (ageHours > 24) {
        console.warn(`[telegramService] ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ Telegram (–≤–æ–∑—Ä–∞—Å—Ç: ${ageHours.toFixed(1)} —á–∞—Å–æ–≤), –æ—á–∏—â–∞–µ–º –∫—ç—à...`);
        clearTelegramCache();
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é API –∏ –±–æ—Ç–∞ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    const cachedInitData = localStorage.getItem(TELEGRAM_INIT_DATA_KEY);
    if (cachedInitData) {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ö–µ—à—É –∏–ª–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –æ—Ç –∫–∞–∫–æ–≥–æ –±–æ—Ç–∞ –¥–∞–Ω–Ω—ã–µ
      if (cachedInitData.includes('old_bot_marker') || 
          (cachedInitData.includes('auth_date') && !cachedInitData.includes('7980427501'))) {
        console.warn('[telegramService] ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å—Ç–∞—Ä–æ–≥–æ –±–æ—Ç–∞, –æ—á–∏—â–∞–µ–º –∫—ç—à...');
        clearTelegramCache();
      }
    }
  } catch (e) {
    console.error('[telegramService] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö:', e);
  }
  
  // –ü–æ–ª—É—á–∞–µ–º initData –∏–∑ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
  let initData: string | null = null;
  
  // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:
  // 1. –ù–∞–ø—Ä—è–º—É—é –∏–∑ Telegram API (—Ç–µ–∫—É—â–∏–π —Å–µ–∞–Ω—Å)
  // 2. –ò–∑ sessionStorage (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å —Ç–µ–∫—É—â–µ–≥–æ —Å–µ–∞–Ω—Å–∞)
  // 3. –ò–∑ localStorage (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å –ø—Ä–æ—à–ª—ã—Ö —Å–µ–∞–Ω—Å–æ–≤)
  
  // 1. –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ Telegram API
  try {
    if (window?.Telegram?.WebApp?.initData) {
      initData = window.Telegram.WebApp.initData;
      console.log('[telegramService] –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram WebApp API (–¥–ª–∏–Ω–∞:', initData.length, ')');
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ–±–æ–∏—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â–∞—Ö –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
      try {
        localStorage.setItem('telegramInitData', initData);
        sessionStorage.setItem('telegramInitData', initData);
        console.log('[telegramService] –°–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –æ–±–æ–∏—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â–∞—Ö');
      } catch (e) {
        console.error('[telegramService] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:', e);
      }
    }
  } catch (e) {
    console.error('[telegramService] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Telegram WebApp:', e);
  }
  
  // 2. –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é, –ø—Ä–æ–±—É–µ–º –∏–∑ sessionStorage
  if (!initData) {
    try {
      const sessionData = sessionStorage.getItem('telegramInitData');
      if (sessionData) {
        initData = sessionData;
        console.log('[telegramService] –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ sessionStorage (–¥–ª–∏–Ω–∞:', initData.length, ')');
      }
    } catch (e) {
      console.error('[telegramService] –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ sessionStorage:', e);
    }
  }
  
  // 3. –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–±—É–µ–º –∏–∑ localStorage
  if (!initData) {
    try {
      const localData = localStorage.getItem('telegramInitData');
      if (localData) {
        initData = localData;
        console.log('[telegramService] –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage (–¥–ª–∏–Ω–∞:', initData.length, ')');
      }
    } catch (e) {
      console.error('[telegramService] –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage:', e);
    }
  }
  
  // 4. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∫–ª—é—á–∏ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞—Ö
  if (!initData) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∫–ª—é—á–∏
      const alternativeKeys = ['telegram_data', 'tg_init_data', 'tgInitData'];
      for (const key of alternativeKeys) {
        const data = localStorage.getItem(key) || sessionStorage.getItem(key);
        if (data) {
          initData = data;
          console.log(`[telegramService] –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –∫–ª—é—á–∞ ${key} (–¥–ª–∏–Ω–∞:`, initData.length, ')');
          break;
        }
      }
    } catch (e) {
      console.error('[telegramService] –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∫–ª—é—á–µ–π:', e);
    }
  }
  
  // –ï—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å initData (—Ç–µ–∫—É—â–∏–π –∏–ª–∏ –∏–∑ localStorage), –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏
  if (initData && initData.trim() !== '') {
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (—Å–æ–≥–ª–∞—Å–Ω–æ –ø.1.2 –¢–ó)
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    const headerVariants = [
      'telegram-init-data', 'Telegram-Init-Data', 'x-telegram-init-data', 'X-Telegram-Init-Data',
      'telegramInitData', 'telegram-data', 'x-telegram-data'
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    headerVariants.forEach(headerName => {
      headers[headerName] = initData;
    });
    
    console.log('[telegramService] ‚úÖ Added Telegram initData to headers (length:', initData.length + ')');
    
    // –î–ª—è –∞—É–¥–∏—Ç–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ–±—Ä–∞–∑–µ—Ü –¥–∞–Ω–Ω—ã—Ö
    const sampleStart = initData.substring(0, 20);
    const sampleEnd = initData.substring(initData.length - 20);
    console.log(`[telegramService] InitData sample: ${sampleStart}...${sampleEnd}`);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –±—ã–ª –ª–∏ initData –ø–æ–ª—É—á–µ–Ω –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –∏–∑ Telegram API
    // –∏–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ localStorage (–¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö)
    const source = window.Telegram?.WebApp?.initData ? 'telegram-api' : 'localStorage';
    headers['X-Telegram-Data-Source'] = source;
    console.log(`[telegramService] Data source: ${source}`);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    try {
      if (initData.includes('=') && initData.includes('&')) {
        const params = new URLSearchParams(initData);
        if (params.has('user')) {
          const user = JSON.parse(params.get('user') || '{}');
          if (user.id) {
            headers['X-Telegram-User-Id'] = String(user.id);
            console.log(`[telegramService] Added user.id from initData: ${user.id}`);
          }
        }
        
        if (params.has('auth_date')) {
          const authDate = params.get('auth_date');
          if (authDate) {
            headers['X-Telegram-Auth-Date'] = authDate;
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–µ–∂–µ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
            const authDateNum = parseInt(authDate);
            const nowSeconds = Math.floor(Date.now() / 1000);
            const ageHours = (nowSeconds - authDateNum) / 3600;
            console.log(`[telegramService] Auth data age: ${ageHours.toFixed(2)} hours`);
            
            // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤, –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            if (ageHours > 24) {
              console.warn(`[telegramService] ‚ö†Ô∏è WARNING: Telegram initData is ${ageHours.toFixed(1)} hours old!`);
            }
          }
        }
      }
    } catch (err) {
      console.error('[telegramService] Error extracting additional data from initData:', err);
    }
  } else {
    console.warn('[telegramService] ‚ö†Ô∏è No Telegram initData available to add to headers');
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
  if (!isTelegramWebApp()) {
    console.warn('[telegramService] Telegram WebApp API not available');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    const diagData = {
      isTelegramAvailable: false,
      isWebAppAvailable: false, 
      initDataLength: 0,
      hasInitDataUnsafe: false,
      hasUser: false,
      userId: "not available",
      username: "not available",
      firstName: "not available",
      startParam: "not available",
      authDate: "not available",
      platform: "not available",
      version: "not available",
      hash: "absent",
      fullInitData: "empty",
      documentURL: document?.URL || "unknown",
      isIframe: window !== window.parent,
      userAgent: navigator.userAgent,
      time: new Date().toISOString()
    };
    
    console.log('===[Telegram User ID Check]=== API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–µ—Ç ID –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏');
    console.log('[–ê–£–î–ò–¢] [DIAG] Telegram WebApp State:', diagData);
    
    // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π ID
    if (process.env.NODE_ENV === 'development') {
      try {
        // –ü—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ localStorage, –µ—Å–ª–∏ —Ç–∞–º –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const cachedDataStr = localStorage.getItem('telegram_user_data');
        if (cachedDataStr) {
          try {
            const cachedData = JSON.parse(cachedDataStr);
            if (cachedData && cachedData.id) {
              headers['X-Development-User-Id'] = cachedData.id;
              headers['X-Telegram-User-Id'] = cachedData.id;
              console.log('[telegramService] [DEV] Using cached Telegram user ID:', cachedData.id);
            }
          } catch (e) {
            console.warn('[telegramService] [DEV] Error parsing cached data:', e);
          }
        }
        
        // –ï—Å–ª–∏ –≤ localStorage –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π ID –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        if (!headers['X-Telegram-User-Id']) {
          headers['X-Development-User-Id'] = '1';  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ID = 1 –∫–∞–∫ fallback
          headers['X-Telegram-User-Id'] = '1';
          console.log('[telegramService] [DEV] Using default test user ID: 1');
        }
      } catch (e) {
        console.warn('[telegramService] [DEV] Error accessing localStorage:', e);
        // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º ID –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        headers['X-Development-User-Id'] = '1';
        headers['X-Telegram-User-Id'] = '1';
      }
      
      // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —É–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
      headers['X-Development-Mode'] = 'true';
      return headers;
    }
    
    // –í production –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏, –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    return headers;
  }
  
  // –®–∞–≥ 2: –ï—Å–ª–∏ API –¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ initData
  if (typeof window.Telegram?.WebApp?.initData !== 'string' || window.Telegram.WebApp.initData.trim() === '') {
    console.error('[telegramService] CRITICAL! initData is not available or empty');
    
    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    console.error('[telegramService] initData diagnostic:', {
      isTelegramAvailable: !!window.Telegram,
      isWebAppAvailable: !!window.Telegram?.WebApp,
      initDataType: typeof window.Telegram?.WebApp?.initData,
      initDataEmpty: window.Telegram?.WebApp?.initData === '',
      initDataWhitespaceOnly: window.Telegram?.WebApp?.initData?.trim() === '',
      // @ts-ignore
      appVersion: window.Telegram?.WebApp?.version,
      platform: window.Telegram?.WebApp?.platform
    });
    
    // –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    try {
      console.log('[telegramService] Attempting to reinitialize Telegram WebApp for initData');
      
      // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ Telegram WebApp –¥–æ—Å—Ç—É–ø–µ–Ω –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º –º–µ—Ç–æ–¥–æ–≤
      if (window?.Telegram?.WebApp) {
        window.Telegram.WebApp.ready();
        window.Telegram.WebApp.expand();
        
        // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        if (window.Telegram.WebApp.initData && window.Telegram.WebApp.initData.trim() !== '') {
          console.log('[telegramService] Successfully re-acquired initData');
        } else {
          console.error('[telegramService] Failed to re-acquire initData after reinitialization');
          
          // –ü—Ä–æ–≤–µ—Ä–∏–º, –º–æ–∂–µ—Ç —Ö–æ—Ç—è –±—ã userId –¥–æ—Å—Ç—É–ø–µ–Ω
          const userId = window.Telegram?.WebApp?.initDataUnsafe?.user?.id;
          if (userId) {
            headers['X-Telegram-User-Id'] = String(userId);
            console.log('[telegramService] No initData, but got userId:', userId);
          }
          
          return headers; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–≤–æ–∑–º–æ–∂–Ω–æ —Å userId)
        }
      } else {
        console.error('[telegramService] Telegram WebApp is not available for reinitialization');
        return headers; // –í—ã—Ö–æ–¥ —Å –ø—É—Å—Ç—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
      }
    } catch (reinitError) {
      console.error('[telegramService] Error during reinitialization:', reinitError);
      return headers; // –í—ã—Ö–æ–¥ —Å –ø—É—Å—Ç—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    }
  }
  
  try {
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
    if (!window?.Telegram?.WebApp?.initData) {
      console.error('[telegramService] initData still not available after reinit attempt');
      return headers;
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä start, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ WebApp
    // @ts-ignore
    const startParam = window.Telegram.WebApp.startParam;
    if (startParam) {
      console.log('[telegramService] Detected startParam from Telegram WebApp:', startParam);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏
      headers['X-Telegram-Start-Param'] = startParam;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      try {
        fetch('/api/referral/register-start-param', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'x-start-param': startParam
          },
          body: JSON.stringify({ startParam })
        }).catch(err => console.error('[telegramService] Error sending startParam to server:', err));
      } catch (sendError) {
        console.warn('[telegramService] Failed to send startParam to server:', sendError);
      }
    }
    
    const initData = window.Telegram.WebApp.initData;
    
    // –®–∞–≥ 3: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –¥–∞–Ω–Ω—ã—Ö)
    const dataPreview = initData.length > 20 
      ? `${initData.substring(0, 10)}...${initData.substring(initData.length - 10)}`
      : 'too short';
    console.log('[telegramService] initData preview (length ' + initData.length + '):', dataPreview);
    
    // –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö (–±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)
    const hasAuthDate = initData.includes('auth_date=');
    const hasHash = initData.includes('hash=');
    const hasUser = initData.includes('user=');
    
    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ
    const validationInfo = {
      hasAuthDate,
      hasHash, 
      hasUser,
      length: initData.length,
      isQuery: initData.includes('&') && initData.includes('='),
      containsQueryTerms: [
        'auth_date=', 'hash=', 'user=', 'query_id=', 'start_param=', 'platform='
      ].filter(term => initData.includes(term))
    };
    
    console.log('[telegramService] initData validation details:', validationInfo);
    
    if (!hasAuthDate || !hasHash) {
      console.warn('[telegramService] initData missing critical fields (auth_date or hash)');
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –ø–æ–ª–Ω—ã–µ, —Å–µ—Ä–≤–µ—Ä –≤—ã–ø–æ–ª–Ω–∏—Ç –ø–æ–ª–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é
    }
    
    // –®–∞–≥ 5: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    // –í–∞–∂–Ω–æ! –ü–µ—Ä–µ–¥–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ initData, –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π
    headers['Telegram-Data'] = initData;
    // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    headers['X-Telegram-Data'] = initData;
    headers['X-Telegram-Init-Data'] = initData;
    // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫—É, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Telegram –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
    headers['X-Telegram-Auth'] = 'true';
    
    // –®–∞–≥ 6: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ userId –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    const userId = window.Telegram?.WebApp?.initDataUnsafe?.user?.id;
    if (userId) {
      headers['X-Telegram-User-Id'] = String(userId);
      console.log('===[Telegram User ID Check]===', userId);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤ localStorage –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ dev-mode
      try {
        const dataToStore = {
          id: String(userId),
          timestamp: Date.now(),
          // @ts-ignore
          platform: window.Telegram?.WebApp?.platform || 'unknown',
          username: window.Telegram?.WebApp?.initDataUnsafe?.user?.username || ''
        };
        localStorage.setItem('telegram_user_data', JSON.stringify(dataToStore));
      } catch (e) {
        console.warn('[telegramService] Error saving userId to localStorage:', e);
      }
    } else {
      console.log('===[Telegram User ID Check]=== ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ initDataUnsafe');
    }
    
    // –®–∞–≥ 7: –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
    // @ts-ignore - platform –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–∏–ø–µ 
    const platform = window.Telegram?.WebApp?.platform;
    if (platform) {
      headers['X-Telegram-Platform'] = platform;
    }
    
    console.log('[telegramService] Auth headers prepared successfully:', Object.keys(headers));
    return headers;
  } catch (error) {
    console.error('[telegramService] Error getting Telegram auth headers:', error);
    
    // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Ö–æ—Ç—è –±—ã ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    try {
      const userId = window.Telegram?.WebApp?.initDataUnsafe?.user?.id;
      if (userId) {
        headers['X-Telegram-User-Id'] = String(userId);
      }
    } catch (e) {
      console.error('[telegramService] Error getting userId as fallback:', e);
    }
    
    return headers;
  }
}

// –ü–æ–ª—É—á–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
/**
 * –ü–æ–ª—É—á–∞–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp –∏–ª–∏ –∫—ç—à–∞ –≤ localStorage
 * @param {boolean} [forceRevalidate=false] - –ï—Å–ª–∏ true, –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram WebApp
 * @returns {string | null} ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ null, –µ—Å–ª–∏ ID –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω
 */
export function getCachedTelegramUserId(forceRevalidate: boolean = false): string | null {
  console.log('[telegramService] Getting telegram user ID, forceRevalidate:', forceRevalidate);
  
  // –ê–£–î–ò–¢: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–∞–º—è—Ç–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Telegram WebApp
  console.log('[–ê–£–î–ò–¢] [telegramService] Telegram WebApp state before getting ID:', {
    windowDefined: typeof window !== 'undefined',
    telegramAvailable: !!window?.Telegram,
    webAppAvailable: !!window?.Telegram?.WebApp,
    initDataAvailable: !!window?.Telegram?.WebApp?.initData,
    initDataLength: typeof window?.Telegram?.WebApp?.initData === 'string' ? window.Telegram.WebApp.initData.length : 0,
    userAvailable: !!window?.Telegram?.WebApp?.initDataUnsafe?.user,
    hasLocalStorage: typeof localStorage !== 'undefined',
    hasCachedData: typeof localStorage !== 'undefined' ? 
                  !!localStorage.getItem('telegram_user_data') : false,
    hasLegacyCache: typeof localStorage !== 'undefined' ?
                   !!localStorage.getItem('telegram_user_id') : false
  });
  
  // –®–∞–≥ 1: –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø—Ä—è–º–æ –∏–∑ Telegram WebApp
  if (forceRevalidate || !localStorage.getItem('telegram_user_data')) {
    console.log('[–ê–£–î–ò–¢] [telegramService] Trying to get fresh user data from Telegram WebApp');
    const telegramData = getTelegramUserData();
    if (telegramData?.userId) {
      console.log('[telegramService] Returning fresh user ID from Telegram WebApp:', telegramData.userId);
      return String(telegramData.userId);
    } else {
      console.warn('[–ê–£–î–ò–¢] [telegramService] Failed to get fresh user data from Telegram WebApp');
    }
  }
  
  // –®–∞–≥ 2: –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∫—ç—à–∞ (telegram_user_data)
  try {
    const cachedDataStr = localStorage.getItem('telegram_user_data');
    if (cachedDataStr) {
      try {
        const cachedData = JSON.parse(cachedDataStr);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –∏ –Ω–µ —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤
        const isValid = 
          cachedData && 
          typeof cachedData.id === 'string' && 
          cachedData.id.trim() !== '' &&
          cachedData.timestamp && 
          (Date.now() - cachedData.timestamp < 24 * 60 * 60 * 1000);
        
        if (isValid) {
          console.log('[telegramService] Returning valid cached user ID:', cachedData.id);
          return cachedData.id;
        } else {
          console.warn('[telegramService] Cached user data is invalid or expired');
        }
      } catch (parseErr) {
        console.error('[telegramService] Error parsing cached user data:', parseErr);
      }
    }
    
    // –®–∞–≥ 3: –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∫—ç—à–∞ (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    const legacyCachedId = localStorage.getItem('telegram_user_id');
    if (legacyCachedId && legacyCachedId.trim() !== '') {
      console.log('[telegramService] Returning legacy cached user ID:', legacyCachedId);
      
      // –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
      try {
        const cacheData = {
          id: legacyCachedId,
          timestamp: Date.now(),
          username: '',
          firstName: ''
        };
        localStorage.setItem('telegram_user_data', JSON.stringify(cacheData));
        console.log('[telegramService] Migrated legacy user ID to new format');
      } catch (migrationErr) {
        console.warn('[telegramService] Failed to migrate legacy user ID:', migrationErr);
      }
      
      return legacyCachedId;
    }
  } catch (err) {
    console.warn('[telegramService] Error accessing localStorage:', err);
  }
  
  console.log('[telegramService] No valid user ID available');
  return null;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp
 * @returns {string} –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export function getTelegramUserDisplayName(): string {
  // –®–∞–≥ 1: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ Telegram WebApp
  const userData = getTelegramUserData();
  
  if (userData) {
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –ò–º—è (first_name)
    if (userData.firstName && userData.firstName.trim() !== '') {
      return userData.firstName;
    }
    
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (username)
    if (userData.username && userData.username.trim() !== '') {
      return userData.username;
    }
    
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (userData.userId) {
      return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.userId}`;
    }
  }
  
  // –®–∞–≥ 2: –ï—Å–ª–∏ –ø—Ä—è–º–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –ø—Ä–æ–±—É–µ–º –∏–∑ –∫—ç—à–∞
  try {
    // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∫—ç—à–∞
    const cachedDataStr = localStorage.getItem('telegram_user_data');
    if (cachedDataStr) {
      try {
        const cachedData = JSON.parse(cachedDataStr);
        
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –ò–º—è –∏–∑ –∫—ç—à–∞
        if (cachedData.firstName && cachedData.firstName.trim() !== '') {
          return cachedData.firstName;
        }
        
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫—ç—à–∞
        if (cachedData.username && cachedData.username.trim() !== '') {
          return cachedData.username;
        }
        
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3: ID –∏–∑ –∫—ç—à–∞
        if (cachedData.id && cachedData.id.trim() !== '') {
          return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${cachedData.id}`;
        }
      } catch (parseErr) {
        console.warn('[telegramService] Error parsing cached user data for display name:', parseErr);
      }
    }
    
    // –®–∞–≥ 3: –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –∫—ç—à–∞ (—Ç–æ–ª—å–∫–æ ID)
    const cachedId = localStorage.getItem('telegram_user_id');
    if (cachedId && cachedId.trim() !== '') {
      return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${cachedId}`;
    }
  } catch (err) {
    console.warn('[telegramService] Error accessing localStorage for display name:', err);
  }
  
  // –®–∞–≥ 4: –ï—Å–ª–∏ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—â–µ–µ –∏–º—è
  return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
}

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Telegram API
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ initData –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * 
 * @param {string} refCode - –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
 * @returns {Promise<{success: boolean, user_id?: number, message?: string}>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
 */
/**
 * –õ–æ–≥–∏—Ä—É–µ—Ç –∑–∞–ø—É—Å–∫ Mini App –≤ —Å–∏—Å—Ç–µ–º–µ (–≠—Ç–∞–ø 5.1 –¢–ó)
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API
 * 
 * @returns {Promise<boolean>} true –µ—Å–ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
 */
export async function logAppLaunch(): Promise<boolean> {
  console.log('[telegramService] Logging Mini App launch...');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ Telegram WebApp
    const userData = getTelegramUserData();
    if (!userData || !userData.userId) {
      console.warn('[telegramService] Cannot log launch: missing user data');
      return false;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—É—Å–∫–∞ (–º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥)
    const startParam = window.Telegram?.WebApp?.startParam || '';
    
    // –ü–æ–ª—É—á–∞–µ–º initData –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
    const initData = window.Telegram?.WebApp?.initData || '';
    const truncatedInitData = initData.length > 1000 ? 
      initData.substring(0, 1000) + '...[truncated]' : 
      initData;
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
    const platform = window.Telegram?.WebApp?.platform || 
                    (typeof navigator !== 'undefined' ? navigator.platform : 'unknown');
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    const launchData = {
      telegram_user_id: userData.userId,
      ref_code: startParam,
      platform,
      timestamp: new Date().toISOString(),
      user_agent: typeof navigator !== 'undefined' ? navigator.userAgent : 'unknown',
      init_data: truncatedInitData
    };
    
    console.log('[telegramService] Sending launch log data:', {
      telegram_user_id: launchData.telegram_user_id,
      platform: launchData.platform,
      ref_code: launchData.ref_code || 'none'
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const response = await fetch('/api/log-launch', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        ...getTelegramAuthHeaders()
      },
      body: JSON.stringify(launchData)
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
    if (response.ok) {
      const result = await response.json();
      console.log('[telegramService] Launch logged successfully:', result);
      return true;
    } else {
      // –ï—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, —Ç–∏—Ö–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
      if (response.status === 429) {
        console.warn('[telegramService] Rate limit exceeded for launch logging');
        return false;
      }
      
      console.error('[telegramService] Failed to log launch:', await response.text());
      return false;
    }
  } catch (error) {
    console.error('[telegramService] Error logging app launch:', error);
    return false;
  }
}

export async function registerUserWithTelegram(refCode?: string): Promise<{
  success: boolean;
  user_id?: number;
  message?: string;
}> {
  console.log('[telegramService] Registering user with Telegram...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω—ã –ª–∏ –º—ã –≤ —Å—Ä–µ–¥–µ Telegram
    if (!isRunningInTelegram()) {
      console.error('[telegramService] Cannot register user: not running in Telegram environment');
      return {
        success: false,
        message: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–∞ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Telegram Mini App'
      };
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
    const userData = getTelegramUserData();
    if (!userData) {
      console.error('[telegramService] Cannot register user: failed to get Telegram user data');
      return {
        success: false,
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram'
      };
    }
    
    // –ü–æ–ª—É—á–∞–µ–º initData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const initData = window.Telegram?.WebApp?.initData;
    if (!initData || initData.trim() === '') {
      console.error('[telegramService] Cannot register user: initData is empty');
      return {
        success: false,
        message: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram'
      };
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
    const requestBody = {
      telegram_user_id: userData.userId,
      username: userData.username || '',
      first_name: userData.firstName || '',
      last_name: userData.lastName || '',
      photo_url: userData.photoUrl || '',
      ref_code: refCode || window.Telegram?.WebApp?.startParam || '',
      init_data: initData
    };
    
    console.log('[telegramService] Sending registration request with data:', {
      telegram_user_id: requestBody.telegram_user_id,
      username: requestBody.username,
      ref_code: requestBody.ref_code
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const response = await fetch('/api/register', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        ...getTelegramAuthHeaders()
      },
      body: JSON.stringify(requestBody)
    });
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
    const result = await response.json();
    
    if (response.ok && result.success) {
      console.log('[telegramService] User successfully registered:', result);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ localStorage
      try {
        localStorage.setItem(TELEGRAM_REGISTERED_KEY, 'true');
        if (result.user_id) {
          localStorage.setItem(TELEGRAM_USER_ID_KEY, result.user_id.toString());
        }
      } catch (e) {
        console.warn('[telegramService] Failed to save registration status:', e);
      }
      
      return {
        success: true,
        user_id: result.user_id,
        message: result.message || '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞'
      };
    } else {
      console.error('[telegramService] Failed to register user:', result);
      return {
        success: false,
        message: result.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
      };
    }
  } catch (error) {
    console.error('[telegramService] Registration error:', error);
    return {
      success: false,
      message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
    };
  }
}