import { tokenRecoveryService } from '../services/tokenRecoveryService';

/**
 * Critical Operation Guard
 * 
 * –ó–∞—â–∏—â–∞–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–¥–µ–ø–æ–∑–∏—Ç—ã, –≤—ã–≤–æ–¥—ã) –æ—Ç JWT token timeout
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–∫–µ–Ω—ã –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –æ–ø–µ—Ä–∞—Ü–∏–π
 */
class CriticalOperationGuard {
  private readonly CRITICAL_AGE_THRESHOLD = 25 * 60 * 1000; // 25 –º–∏–Ω—É—Ç
  private readonly OPERATION_TIMEOUT = 30000; // 30 —Å–µ–∫—É–Ω–¥

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∑–∞—â–∏—Ç—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
   */
  async guardCriticalOperation<T>(
    operation: () => Promise<T>,
    operationName: string
  ): Promise<T> {
    console.log(`[CriticalGuard] –ù–∞—á–∏–Ω–∞–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é: ${operationName}`);

    try {
      // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞
      await this.ensureValidToken(operationName);

      // –®–∞–≥ 2: –í—ã–ø–æ–ª–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é —Å timeout protection
      const result = await this.executeWithTimeout(operation, operationName);

      console.log(`[CriticalGuard] ‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è ${operationName} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
      return result;

    } catch (error) {
      console.error(`[CriticalGuard] ‚ùå –û—à–∏–±–∫–∞ –≤ –æ–ø–µ—Ä–∞—Ü–∏–∏ ${operationName}:`, error);
      throw error;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å JWT —Ç–æ–∫–µ–Ω–∞
   */
  private async ensureValidToken(operationName: string): Promise<void> {
    const currentToken = localStorage.getItem('unifarm_jwt_token');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    if (!currentToken) {
      console.warn(`[CriticalGuard] üö® JWT —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–¥ –æ–ø–µ—Ä–∞—Ü–∏–µ–π ${operationName}`);
      
      const recovered = await tokenRecoveryService.recoverJwtToken();
      if (!recovered) {
        throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å JWT —Ç–æ–∫–µ–Ω –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ ${operationName}`);
      }
      
      console.log(`[CriticalGuard] ‚úÖ JWT —Ç–æ–∫–µ–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ ${operationName}`);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –¢–æ–∫–µ–Ω —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–π
    const tokenAge = tokenRecoveryService.getTokenAge(currentToken);
    if (tokenAge > this.CRITICAL_AGE_THRESHOLD) {
      const ageMinutes = Math.round(tokenAge / 60000);
      console.warn(`[CriticalGuard] ‚ö†Ô∏è JWT —Ç–æ–∫–µ–Ω —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–π (${ageMinutes} –º–∏–Ω) –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ ${operationName}`);
      
      const refreshed = await tokenRecoveryService.proactiveTokenRefresh();
      if (!refreshed) {
        console.warn(`[CriticalGuard] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Ç–µ–∫—É—â–∏–º`);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ
    if (tokenRecoveryService.isInCriticalWindow(currentToken)) {
      const ageMinutes = Math.round(tokenAge / 60000);
      console.warn(`[CriticalGuard] üö® –û–ø–µ—Ä–∞—Ü–∏—è ${operationName} –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º –æ–∫–Ω–µ (${ageMinutes} –º–∏–Ω)!`);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–∫–Ω–∞—Ö
      await tokenRecoveryService.proactiveTokenRefresh();
    }

    console.log(`[CriticalGuard] ‚úÖ JWT —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ ${operationName}`);
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é —Å timeout protection
   */
  private async executeWithTimeout<T>(
    operation: () => Promise<T>,
    operationName: string
  ): Promise<T> {
    return new Promise<T>((resolve, reject) => {
      // Timeout protection
      const timeoutId = setTimeout(() => {
        reject(new Error(`–û–ø–µ—Ä–∞—Ü–∏—è ${operationName} –ø—Ä–µ–≤—ã—Å–∏–ª–∞ timeout ${this.OPERATION_TIMEOUT}ms`));
      }, this.OPERATION_TIMEOUT);

      // –í—ã–ø–æ–ª–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
      operation()
        .then(result => {
          clearTimeout(timeoutId);
          resolve(result);
        })
        .catch(error => {
          clearTimeout(timeoutId);
          reject(error);
        });
    });
  }

  /**
   * –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –¥–ª—è TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤
   */
  async guardTonDeposit<T>(depositOperation: () => Promise<T>): Promise<T> {
    console.log('[CriticalGuard] üîí –ó–∞—â–∏—Ç–∞ TON –¥–µ–ø–æ–∑–∏—Ç–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è TON –æ–ø–µ—Ä–∞—Ü–∏–π
    const currentToken = localStorage.getItem('unifarm_jwt_token');
    if (currentToken) {
      const tokenAge = tokenRecoveryService.getTokenAge(currentToken);
      const ageMinutes = Math.round(tokenAge / 60000);
      
      console.log(`[CriticalGuard] TON –¥–µ–ø–æ–∑–∏—Ç - –≤–æ–∑—Ä–∞—Å—Ç —Ç–æ–∫–µ–Ω–∞: ${ageMinutes} –º–∏–Ω—É—Ç`);
      
      // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω —Å—Ç–∞—Ä—à–µ 20 –º–∏–Ω—É—Ç - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º
      if (tokenAge > 20 * 60 * 1000) {
        console.log('[CriticalGuard] –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –ø–µ—Ä–µ–¥ TON –¥–µ–ø–æ–∑–∏—Ç–æ–º');
        await tokenRecoveryService.proactiveTokenRefresh();
      }
    }

    return this.guardCriticalOperation(depositOperation, 'TON_DEPOSIT');
  }

  /**
   * –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–æ–≤ —Å—Ä–µ–¥—Å—Ç–≤
   */
  async guardWithdrawal<T>(withdrawalOperation: () => Promise<T>): Promise<T> {
    console.log('[CriticalGuard] üîí –ó–∞—â–∏—Ç–∞ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
    
    return this.guardCriticalOperation(withdrawalOperation, 'WITHDRAWAL');
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º –æ–ø–µ—Ä–∞—Ü–∏—è–º
   */
  async checkOperationReadiness(): Promise<{
    ready: boolean;
    tokenAge: number;
    inCriticalWindow: boolean;
    recommendation: string;
  }> {
    const currentToken = localStorage.getItem('unifarm_jwt_token');
    
    if (!currentToken) {
      return {
        ready: false,
        tokenAge: Infinity,
        inCriticalWindow: false,
        recommendation: 'JWT —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ.'
      };
    }

    const tokenAge = tokenRecoveryService.getTokenAge(currentToken);
    const ageMinutes = Math.round(tokenAge / 60000);
    const inCriticalWindow = tokenRecoveryService.isInCriticalWindow(currentToken);

    let recommendation = '–ì–æ—Ç–æ–≤ –∫ –æ–ø–µ—Ä–∞—Ü–∏—è–º';
    let ready = true;

    if (tokenAge > this.CRITICAL_AGE_THRESHOLD) {
      recommendation = `–¢–æ–∫–µ–Ω —Å—Ç–∞—Ä—ã–π (${ageMinutes} –º–∏–Ω). –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.`;
      ready = false;
    }

    if (inCriticalWindow) {
      recommendation = `–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ (${ageMinutes} –º–∏–Ω). –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω.`;
      ready = false;
    }

    return {
      ready,
      tokenAge,
      inCriticalWindow,
      recommendation
    };
  }
}

export const criticalOperationGuard = new CriticalOperationGuard();