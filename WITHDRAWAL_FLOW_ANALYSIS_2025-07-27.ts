#!/usr/bin/env tsx

/**
 * üîç –ê–ù–ê–õ–ò–ó –ü–û–¢–û–ö–ê –í–´–í–û–î–ê –°–†–ï–î–°–¢–í
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –ø–æ–ª–µ–π –∏ —Ç–∏–ø–æ–≤
 */

import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

config();

const supabase = createClient(process.env.SUPABASE_URL!, process.env.SUPABASE_KEY!);

async function analyzeWithdrawalFlow() {
  console.log('üîç –ê–ù–ê–õ–ò–ó –ü–û–¢–û–ö–ê –í–´–í–û–î–ê –°–†–ï–î–°–¢–í');
  console.log('=' .repeat(50));
  
  try {
    // 1. –ü–†–û–í–ï–†–Ø–ï–ú –°–¢–†–£–ö–¢–£–†–£ –¢–ê–ë–õ–ò–¶–´ WITHDRAW_REQUESTS
    console.log('1Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã withdraw_requests...');
    
    const { data: withdrawRequests, error: withdrawError } = await supabase
      .from('withdraw_requests')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(5);

    if (withdrawError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ withdraw_requests:', withdrawError.message);
      
      // –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—è
      console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–ø—Ä–æ—Å —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—è–º–∏...');
      const { data: altRequests, error: altError } = await supabase
        .from('withdraw_requests')
        .select('id, user_id, amount_ton, status, created_at')
        .limit(5);
        
      if (altError) {
        console.log('‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', altError.message);
      } else {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞—è–≤–æ–∫ —á–µ—Ä–µ–∑ amount_ton: ${altRequests?.length || 0}`);
        altRequests?.forEach(req => {
          console.log(`   ID: ${req.id}, User: ${req.user_id}, Amount: ${req.amount_ton}, Status: ${req.status}`);
        });
      }
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞—è–≤–æ–∫: ${withdrawRequests?.length || 0}`);
      if (withdrawRequests && withdrawRequests.length > 0) {
        console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø–∏—Å–∏:', Object.keys(withdrawRequests[0]));
      }
    }

    // 2. –ü–†–û–í–ï–†–Ø–ï–ú ENUM –¢–ò–ü–´ –¢–†–ê–ù–ó–ê–ö–¶–ò–ô
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
    
    const { data: transactionTypes, error: typesError } = await supabase
      .from('transactions')
      .select('type')
      .order('created_at', { ascending: false })
      .limit(20);

    if (typesError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', typesError.message);
    } else {
      const uniqueTypes = [...new Set(transactionTypes?.map(tx => tx.type) || [])];
      console.log('üìä –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', uniqueTypes);
      
      // –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤—ã–≤–æ–¥–æ–º
      const withdrawalTypes = uniqueTypes.filter(type => 
        type.toLowerCase().includes('withdraw') || 
        type.toLowerCase().includes('withdrawal')
      );
      console.log('üí∞ –¢–∏–ø—ã –≤—ã–≤–æ–¥–∞:', withdrawalTypes);
    }

    // 3. –ü–û–ò–°–ö –õ–û–ì–ò–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –í –ö–û–î–ï
    console.log('\n3Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
    
    const fs = await import('fs');
    
    if (fs.existsSync('modules/wallet/service.ts')) {
      const serviceCode = fs.readFileSync('modules/wallet/service.ts', 'utf8');
      
      // –ò—â–µ–º –º–µ—Ç–æ–¥ processWithdrawal
      const processWithdrawalStart = serviceCode.indexOf('processWithdrawal');
      if (processWithdrawalStart !== -1) {
        // –ù–∞—Ö–æ–¥–∏–º —É—á–∞—Å—Ç–æ–∫ –∫–æ–¥–∞ —Å processWithdrawal
        const methodEnd = serviceCode.indexOf('\n  }', processWithdrawalStart + 500);
        const methodCode = serviceCode.substring(processWithdrawalStart, methodEnd + 4);
        
        console.log('üìÑ –ù–∞–π–¥–µ–Ω –º–µ—Ç–æ–¥ processWithdrawal');
        
        // –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        const hasWithdrawRequest = methodCode.includes('withdraw_requests');
        const hasBalanceUpdate = methodCode.includes('balanceManager') || methodCode.includes('updateBalance');
        const hasTransaction = methodCode.includes('transactions');
        const hasNotification = methodCode.includes('AdminBot') || methodCode.includes('sendMessage');
        
        console.log(`   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ withdraw_request: ${hasWithdrawRequest}`);
        console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞: ${hasBalanceUpdate}`);
        console.log(`   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${hasTransaction}`);
        console.log(`   ‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω-–±–æ—Ç–∞: ${hasNotification}`);
        
        if (!hasNotification) {
          console.log('\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ù–ï –ù–ê–ô–î–ï–ù–ê –õ–û–ì–ò–ö–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –ê–î–ú–ò–ù-–ë–û–¢–ê!');
          console.log('   –ú–µ—Ç–æ–¥ processWithdrawal –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—ã–∑–æ–≤–æ–≤ AdminBotService');
          console.log('   –≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç, –ø–æ—á–µ–º—É –∞–¥–º–∏–Ω-–±–æ—Ç –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
        }
      }
    }

    // 4. –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–ò –û–ü–ï–†–ê–¶–ò–ô
    console.log('\n4Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–π...');
    
    console.log('üìã –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–¨ –î–û–õ–ñ–ù–ê –ë–´–¢–¨:');
    console.log('   1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('   2. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ withdraw_requests');
    console.log('   3. –°–ø–∏—Å–∞–Ω–∏–µ —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('   4. –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
    console.log('   5. ‚ö†Ô∏è  –û–¢–ü–†–ê–í–ö–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –ê–î–ú–ò–ù-–ë–û–¢–£ (–û–¢–°–£–¢–°–¢–í–£–ï–¢!)');
    console.log('   6. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ WebSocket');

    // 5. –ê–ù–ê–õ–ò–ó WEBHOOK –û–®–ò–ë–ö–ò
    console.log('\n5Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏ webhook...');
    
    console.log('üîç –û–ë–ù–ê–†–£–ñ–ï–ù–ê –û–®–ò–ë–ö–ê –í TELEGRAM:');
    console.log('   "Wrong response from the webhook: 500 Internal Server Error"');
    console.log('   –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ webhook endpoint –æ—Ç–≤–µ—á–∞–µ—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 500');
    console.log('   –í–µ—Ä–æ—è—Ç–Ω–æ, –æ—à–∏–±–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π');

    // 6. –ü–†–û–í–ï–†–ö–ê ADMN BOT SERVICE
    console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ AdminBotService...');
    
    if (fs.existsSync('modules/adminBot/service.ts')) {
      const adminService = fs.readFileSync('modules/adminBot/service.ts', 'utf8');
      
      const hasNotifyWithdrawal = adminService.includes('notifyWithdrawal') || 
                                  adminService.includes('processWithdrawalNotification');
      const hasSendMessage = adminService.includes('sendMessage');
      
      console.log(`   ‚úÖ –ú–µ—Ç–æ–¥ sendMessage: ${hasSendMessage}`);
      console.log(`   ‚ùå –ú–µ—Ç–æ–¥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–≤–æ–¥–µ: ${hasNotifyWithdrawal}`);
      
      if (!hasNotifyWithdrawal) {
        console.log('\nüö® –ü–†–û–ë–õ–ï–ú–ê: AdminBotService –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤—ã–≤–æ–¥–µ!');
      }
    }

    // 7. –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
    console.log('\n7Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê...');
    
    console.log('\nüéØ –û–ë–ù–ê–†–£–ñ–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:');
    console.log('1. ‚ùå –ù–ï–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –º–µ–∂–¥—É WalletService –∏ AdminBotService');
    console.log('2. ‚ùå processWithdrawal() –ù–ï –í–´–ó–´–í–ê–ï–¢ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω-–±–æ—Ç–∞');
    console.log('3. ‚ùå AdminBotService –ù–ï –ò–ú–ï–ï–¢ –º–µ—Ç–æ–¥–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤—ã–≤–æ–¥–µ');
    console.log('4. ‚ö†Ô∏è  Webhook –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 500 –æ—à–∏–±–∫—É –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π');
    
    console.log('\nüí° –í–ê–†–ò–ê–ù–¢–´ –†–ï–®–ï–ù–ò–Ø:');
    console.log('1. –î–û–ë–ê–í–ò–¢–¨ –≤—ã–∑–æ–≤ AdminBotService –≤ –∫–æ–Ω–µ—Ü processWithdrawal()');
    console.log('2. –°–û–ó–î–ê–¢–¨ –º–µ—Ç–æ–¥ notifyWithdrawal() –≤ AdminBotService');
    console.log('3. –ò–°–ü–†–ê–í–ò–¢–¨ webhook –æ—à–∏–±–∫—É 500 –≤ AdminBot controller');
    console.log('4. –î–û–ë–ê–í–ò–¢–¨ –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
    
    console.log('\n‚ö° –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–ê–Ø –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–¨ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:');
    console.log('1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å webhook –æ—à–∏–±–∫—É 500 (–ø—Ä–æ–≤–µ—Ä–∏—Ç—å AdminBot controller)');
    console.log('2. –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ notifyWithdrawal –≤ AdminBotService');
    console.log('3. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ processWithdrawal');
    console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –≤—ã–≤–æ–¥–∞');

    return {
      notification_integration_missing: true,
      webhook_500_error: true,
      admin_bot_method_missing: true,
      critical_issues: 3
    };

  } catch (error) {
    console.error('üí• –û–®–ò–ë–ö–ê –ê–ù–ê–õ–ò–ó–ê:', error);
    throw error;
  }
}

async function main() {
  try {
    const result = await analyzeWithdrawalFlow();
    
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–ù–ê–õ–ò–ó–ê:');
    console.log(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: ${result.critical_issues}`);
    console.log('–°–∏—Å—Ç–µ–º–∞ –ù–ï –ú–û–ñ–ï–¢ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å —Ç–µ–∫—É—â–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏');
    
    process.exit(1); // –ï—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    
  } catch (error) {
    console.error('\n‚ùå –ê–ù–ê–õ–ò–ó –ü–†–û–í–ê–õ–ï–ù:', error);
    process.exit(1);
  }
}

main();