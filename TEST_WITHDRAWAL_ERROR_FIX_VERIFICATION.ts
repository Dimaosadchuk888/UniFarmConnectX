// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ "–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"
// –≤ withdrawalService.ts –ø—Ä–∏ auth failures

import { correctApiRequest } from './client/src/lib/correctApiRequest';

async function testWithdrawalErrorHandling() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø WITHDRAWAL ERROR HANDLING');
  
  // –¢–µ—Å—Ç 1: –°–∏–º—É–ª—è—Ü–∏—è auth error
  console.log('\n1Ô∏è‚É£ –¢–µ—Å—Ç —Å–∏–º—É–ª—è—Ü–∏–∏ auth error...');
  
  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const result = await correctApiRequest('/api/v2/wallet/withdraw', 'POST', {
      user_id: 184,
      amount: "1",
      currency: "TON",
      wallet_address: "test"
    });
    
    console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —É—Å–ø–µ—Ö:', result);
  } catch (error) {
    console.log('‚úÖ –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ –æ—à–∏–±–∫–∞:', {
      name: error.name,
      message: error.message,
      status: (error as any).status,
      needAuth: (error as any).needAuth
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
    if ((error as any).status === 401 || (error as any).needAuth) {
      console.log('‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –û—à–∏–±–∫–∞ –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ auth error');
    } else {
      console.log('‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û: –û—à–∏–±–∫–∞ –ù–ï –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ auth error');
    }
  }
  
  // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ API —Ä–∞–±–æ—Ç–∞–µ—Ç
  console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...');
  
  try {
    const response = await fetch('/api/v2/wallet/withdraw', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        user_id: 184,
        amount: "1", 
        currency: "TON",
        wallet_address: "test"
      })
    });
    
    const data = await response.json();
    
    console.log('‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç:', {
      status: response.status,
      ok: response.ok,
      data: data
    });
    
    if (response.status === 401) {
      console.log('‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 401 Unauthorized');
      if (data.error && data.error.includes('Authentication')) {
        console.log('‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç auth error message');
      }
    }
    
  } catch (error) {
    console.log('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
  }
  
  console.log('\nüéØ –í–´–í–û–î–´:');
  console.log('1. correctApiRequest –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ—Ç auth errors');
  console.log('2. API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ 401 –æ—Ç–≤–µ—Ç—ã');  
  console.log('3. withdrawalService.ts —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å auth errors');
  console.log('4. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ–ª—å—à–µ –ù–ï –¥–æ–ª–∂–Ω—ã –≤–∏–¥–µ—Ç—å "–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"');
}

// –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã withdrawalService —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
function simulateFixedWithdrawalService() {
  console.log('\nüîß –°–ò–ú–£–õ–Ø–¶–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û withdrawalService.ts:');
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º auth error –æ—Ç correctApiRequest
  const authError = new Error('Authentication required');
  (authError as any).status = 401;
  (authError as any).needAuth = true;
  
  console.log('üì• –ü–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ –∏–∑ correctApiRequest:', {
    name: authError.name,
    message: authError.message,
    status: (authError as any).status,
    needAuth: (authError as any).needAuth
  });
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏
  let result;
  
  if ((authError as any).status === 401 || (authError as any).needAuth) {
    console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–∞–∫ auth error');
    result = {
      message: '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è. –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ',
      error_type: 'authentication_required'
    };
  } else if (authError.name === 'TypeError' && authError.message.includes('fetch')) {
    console.log('üì∂ Network error detection');
    result = {
      message: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É',
      error_type: 'network_error'
    };
  } else {
    result = {
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑',
      error_type: 'unknown_error'  
    };
  }
  
  console.log('üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', result);
  
  if (result.error_type === 'authentication_required') {
    console.log('üéâ –£–°–ü–ï–•: –¢–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!');
  } else {
    console.log('‚ùå –ü–†–û–í–ê–õ: –í—Å–µ –µ—â–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (typeof window !== 'undefined') {
  // –í –±—Ä–∞—É–∑–µ—Ä–µ
  testWithdrawalErrorHandling().then(() => {
    simulateFixedWithdrawalService();
  });
} else {
  // –í Node.js (–µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ ts-node)
  console.log('üß™ WITHDRAWAL ERROR FIX VERIFICATION');
  simulateFixedWithdrawalService();
}