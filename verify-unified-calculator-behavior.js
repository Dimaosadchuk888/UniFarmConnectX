#!/usr/bin/env node

/**
 * –ü–†–û–í–ï–†–ö–ê –ü–û–í–ï–î–ï–ù–ò–Ø UNIFIEDFARMINGCALCULATOR
 * –ê–Ω–∞–ª–∏–∑ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ª–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
 */

import fs from 'fs';

console.log('üîç –ü–†–û–í–ï–†–ö–ê –ü–û–í–ï–î–ï–ù–ò–Ø UNIFIEDFARMINGCALCULATOR');
console.log('='.repeat(80));

const startTime = new Date();
console.log(`‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞—Ç–∞: ${startTime.toLocaleTimeString()}`);

// 1. –ê–ù–ê–õ–ò–ó –ö–û–î–ê UNIFIEDFARMINGCALCULATOR
console.log('\nüìã 1. –ê–ù–ê–õ–ò–ó –ö–û–î–ê UNIFIEDFARMINGCALCULATOR:');

try {
  const calculatorPath = 'core/farming/UnifiedFarmingCalculator.ts';
  const calculatorContent = fs.readFileSync(calculatorPath, 'utf8');
  
  console.log(`  üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${(calculatorContent.length / 1024).toFixed(1)} KB`);
  
  // –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞
  const lines = calculatorContent.split('\n');
  
  // –ü–æ–∏—Å–∫ —á—Ç–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const envLines = lines.filter(line => line.includes('UNI_FARMING_INTERVAL_MODE'));
  console.log(`\n  üîç –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–û–ô –û–ö–†–£–ñ–ï–ù–ò–Ø:`);
  console.log(`    ‚îú‚îÄ‚îÄ –ù–∞–π–¥–µ–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π: ${envLines.length}`);
  
  envLines.forEach((line, index) => {
    const lineNum = lines.indexOf(line) + 1;
    console.log(`    ${index + 1}. –°—Ç—Ä–æ–∫–∞ ${lineNum}: ${line.trim()}`);
  });
  
  // –ü–æ–∏—Å–∫ –ª–æ–≥–∏–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  const intervalLines = lines.filter(line => 
    line.includes('useIntervalMode') || 
    line.includes('effectivePeriods') ||
    (line.includes('1') && line.includes('Math.min'))
  );
  
  console.log(`\n  üîç –õ–û–ì–ò–ö–ê –ò–ù–¢–ï–†–í–ê–õ–¨–ù–û–ì–û –†–ï–ñ–ò–ú–ê:`);
  console.log(`    ‚îú‚îÄ‚îÄ –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫ –ª–æ–≥–∏–∫–∏: ${intervalLines.length}`);
  
  intervalLines.slice(0, 5).forEach((line, index) => {
    const lineNum = lines.indexOf(line) + 1;
    console.log(`    ${index + 1}. –°—Ç—Ä–æ–∫–∞ ${lineNum}: ${line.trim()}`);
  });
  
  // –ò—â–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  const logLines = lines.filter(line => 
    line.includes('logger') && 
    (line.includes('interval') || line.includes('periods') || line.includes('mode'))
  );
  
  console.log(`\n  üîç –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–†–í–ê–õ–¨–ù–û–ì–û –†–ï–ñ–ò–ú–ê:`);
  console.log(`    ‚îú‚îÄ‚îÄ –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: ${logLines.length}`);
  
  if (logLines.length > 0) {
    logLines.forEach((line, index) => {
      const lineNum = lines.indexOf(line) + 1;
      console.log(`    ${index + 1}. –°—Ç—Ä–æ–∫–∞ ${lineNum}: ${line.trim()}`);
    });
  } else {
    console.log(`    ‚îî‚îÄ‚îÄ ‚ö†Ô∏è  –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ù–ï –ù–ê–ô–î–ï–ù–û`);
  }
  
} catch (error) {
  console.log(`  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è UnifiedFarmingCalculator: ${error.message}`);
}

// 2. –ê–ù–ê–õ–ò–ó FARMINGSCHEDULER
console.log('\nüìã 2. –ê–ù–ê–õ–ò–ó FARMINGSCHEDULER:');

try {
  const schedulerPath = 'core/scheduler/farmingScheduler.ts';
  const schedulerContent = fs.readFileSync(schedulerPath, 'utf8');
  
  console.log(`  üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${(schedulerContent.length / 1024).toFixed(1)} KB`);
  
  const lines = schedulerContent.split('\n');
  
  // –ò—â–µ–º –∏–º–ø–æ—Ä—Ç UnifiedFarmingCalculator
  const importLines = lines.filter(line => line.includes('UnifiedFarmingCalculator'));
  console.log(`\n  üîç –ò–ú–ü–û–†–¢ UNIFIEDFARMINGCALCULATOR:`);
  console.log(`    ‚îú‚îÄ‚îÄ –ù–∞–π–¥–µ–Ω–æ –∏–º–ø–æ—Ä—Ç–æ–≤: ${importLines.length}`);
  
  importLines.forEach((line, index) => {
    const lineNum = lines.indexOf(line) + 1;
    console.log(`    ${index + 1}. –°—Ç—Ä–æ–∫–∞ ${lineNum}: ${line.trim()}`);
  });
  
  // –ò—â–µ–º –≤—ã–∑–æ–≤—ã calculateIncome
  const calculateLines = lines.filter(line => line.includes('calculateIncome'));
  console.log(`\n  üîç –í–´–ó–û–í–´ CALCULATEINCOME:`);
  console.log(`    ‚îú‚îÄ‚îÄ –ù–∞–π–¥–µ–Ω–æ –≤—ã–∑–æ–≤–æ–≤: ${calculateLines.length}`);
  
  calculateLines.forEach((line, index) => {
    const lineNum = lines.indexOf(line) + 1;
    console.log(`    ${index + 1}. –°—Ç—Ä–æ–∫–∞ ${lineNum}: ${line.trim()}`);
  });
  
  // –ò—â–µ–º —Å—Ç–∞—Ä—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å)
  const oldCalcLines = lines.filter(line => 
    (line.includes('Math.min') && line.includes('288')) ||
    line.includes('periods') && line.includes('*')
  );
  
  console.log(`\n  üîç –°–¢–ê–†–´–ï –í–´–ß–ò–°–õ–ï–ù–ò–Ø (Math.min —Å 288):`);
  console.log(`    ‚îú‚îÄ‚îÄ –ù–∞–π–¥–µ–Ω–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫: ${oldCalcLines.length}`);
  
  if (oldCalcLines.length > 0) {
    console.log(`    ‚ö†Ô∏è  –í–û–ó–ú–û–ñ–ù–û –°–¢–ê–†–ê–Ø –õ–û–ì–ò–ö–ê –û–°–¢–ê–õ–ê–°–¨:`);
    oldCalcLines.forEach((line, index) => {
      const lineNum = lines.indexOf(line) + 1;
      console.log(`    ${index + 1}. –°—Ç—Ä–æ–∫–∞ ${lineNum}: ${line.trim()}`);
    });
  } else {
    console.log(`    ‚úÖ –°—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
  }
  
} catch (error) {
  console.log(`  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è FarmingScheduler: ${error.message}`);
}

// 3. –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ì–û –í–†–ï–ú–ï–ù–ò –ò CRON
console.log('\nüìã 3. –ê–ù–ê–õ–ò–ó –í–†–ï–ú–ï–ù–ò –í–´–ü–û–õ–ù–ï–ù–ò–Ø:');

const now = new Date();
const minute = now.getMinutes();
const second = now.getSeconds();

console.log(`  ‚è∞ –¢–ï–ö–£–©–ï–ï –í–†–ï–ú–Ø:`);
console.log(`    ‚îú‚îÄ‚îÄ –í—Ä–µ–º—è: ${now.toLocaleTimeString()}`);
console.log(`    ‚îú‚îÄ‚îÄ –ú–∏–Ω—É—Ç–∞: ${minute}`);
console.log(`    ‚îú‚îÄ‚îÄ –°–µ–∫—É–Ω–¥–∞: ${second}`);
console.log(`    ‚îî‚îÄ‚îÄ –ö—Ä–∞—Ç–Ω–æ—Å—Ç—å 5: ${minute % 5 === 0 ? '–î–ê (CRON —Å—Ä–∞–±–æ—Ç–∞–µ—Ç!)' : `–ù–ï–¢ (–¥–æ CRON ${5 - (minute % 5)} –º–∏–Ω—É—Ç)`}`);

// –í—ã—á–∏—Å–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–µ CRON –∑–∞–ø—É—Å–∫–∏
const nextCronTimes = [];
for (let i = 0; i < 3; i++) {
  const nextTime = new Date(now);
  nextTime.setMinutes(Math.ceil((now.getMinutes() + i * 5) / 5) * 5, 0, 0);
  nextCronTimes.push(nextTime);
}

console.log(`\n  üìÖ –°–õ–ï–î–£–Æ–©–ò–ï CRON –ó–ê–ü–£–°–ö–ò (*/5 * * * *):`);
nextCronTimes.forEach((time, index) => {
  const minutesUntil = Math.ceil((time - now) / (60 * 1000));
  console.log(`    ${index + 1}. ${time.toLocaleTimeString()} (—á–µ—Ä–µ–∑ ${minutesUntil} –º–∏–Ω)`);
});

// 4. –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–ù–ò–• –ò–ó–ú–ï–ù–ï–ù–ò–ô –ë–ê–õ–ê–ù–°–ê
console.log('\nüìã 4. –ê–ù–ê–õ–ò–ó –ü–û–°–õ–ï–î–ù–ò–• –ò–ó–ú–ï–ù–ï–ù–ò–ô –ë–ê–õ–ê–ù–°–ê:');

// –î–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–≥–æ–≤ –±—Ä–∞—É–∑–µ—Ä–∞
const recentChanges = [
  { time: '10:06', balance: 280128.57518, change: 444.45 },
  { time: '10:09', balance: 280321.28695, change: 192.71 },
  { time: '10:10', balance: 280442.155006, change: 120.87 }
];

console.log(`  üìä –ò–ó–ú–ï–ù–ï–ù–ò–Ø User 184:`);
recentChanges.forEach((entry, index) => {
  const expectedInterval = 0.669826;
  const ratio = entry.change / expectedInterval;
  const periods = Math.round(entry.change / expectedInterval);
  
  console.log(`    ${index + 1}. ${entry.time}: +${entry.change.toFixed(2)} UNI (${ratio.toFixed(0)}x = ~${periods} –ø–µ—Ä–∏–æ–¥–æ–≤)`);
});

console.log(`\n  üîç –ü–ê–¢–¢–ï–†–ù –ê–ù–ê–õ–ò–ó:`);
console.log(`    ‚îú‚îÄ‚îÄ –ß–∞—Å—Ç–æ—Ç–∞: –∫–∞–∂–¥—ã–µ 1-4 –º–∏–Ω—É—Ç—ã (–ù–ï —Å—Ç—Ä–æ–≥–æ 5)`);
console.log(`    ‚îú‚îÄ‚îÄ –í–µ–ª–∏—á–∏–Ω–∞: 120-444 UNI (180-663 –ø–µ—Ä–∏–æ–¥–æ–≤)`);
console.log(`    ‚îú‚îÄ‚îÄ –¢—Ä–µ–Ω–¥: —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º`);
console.log(`    ‚îî‚îÄ‚îÄ –í—ã–≤–æ–¥: –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–µ—Ä–∏–æ–¥—ã —É–º–µ–Ω—å—à–∞—é—Ç—Å—è`);

// 5. –ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–´–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô
console.log('\nüìã 5. –ê–ù–ê–õ–ò–ó –†–ï–§–ï–†–ê–õ–¨–ù–´–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');

console.log(`  üí∞ –ù–ï–î–ê–í–ù–ò–ï –†–ï–§–ï–†–ê–õ–¨–ù–´–ï –ù–ê–ì–†–ê–î–´ (–∏–∑ –ª–æ–≥–æ–≤):`);
console.log(`    ‚îú‚îÄ‚îÄ 10:10:35: +0.12152778 UNI –æ—Ç User 190`);
console.log(`    ‚îú‚îÄ‚îÄ 10:10:34: +0.10416667 UNI –æ—Ç User 189`);
console.log(`    ‚îú‚îÄ‚îÄ 10:10:33: +35.00000000 UNI –æ—Ç User 190 (!!!)üö®`);
console.log(`    ‚îî‚îÄ‚îÄ 10:10:33: +0.08680556 UNI –æ—Ç User 188`);

const bigReward = 35.0;
const expectedReward = 0.669826 * 0.05; // 5% –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –¥–æ—Ö–æ–¥–∞
const bigRewardRatio = bigReward / expectedReward;

console.log(`\n  üîç –ê–ù–ê–õ–ò–ó –ë–û–õ–¨–®–û–ô –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –ù–ê–ì–†–ê–î–´:`);
console.log(`    ‚îú‚îÄ‚îÄ –ù–∞–≥—Ä–∞–¥–∞: ${bigReward} UNI`);
console.log(`    ‚îú‚îÄ‚îÄ –û–∂–∏–¥–∞–µ–º–∞—è –Ω–∞–≥—Ä–∞–¥–∞: ${expectedReward.toFixed(6)} UNI`);
console.log(`    ‚îú‚îÄ‚îÄ –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ: ${bigRewardRatio.toFixed(0)}x`);
console.log(`    ‚îú‚îÄ‚îÄ –î–æ—Ö–æ–¥ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: ${bigReward} UNI (100% —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞)`);
console.log(`    ‚îî‚îÄ‚îÄ –≠—Ç–æ –∑–Ω–∞—á–∏—Ç User 190 –ø–æ–ª—É—á–∏–ª ${bigReward} UNI —Ñ–∞—Ä–º–∏–Ω–≥-–¥–æ—Ö–æ–¥–∞!`);

// 6. –ò–¢–û–ì–û–í–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
console.log('\nüéØ –ò–¢–û–ì–û–í–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:');
console.log('='.repeat(80));

console.log(`\nüìä –°–û–°–¢–û–Ø–ù–ò–ï –ò–ù–¢–ï–†–í–ê–õ–¨–ù–û–ì–û –†–ï–ñ–ò–ú–ê:`);
console.log(`  ‚îú‚îÄ‚îÄ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ${process.env.UNI_FARMING_INTERVAL_MODE === 'true' ? '–î–ê' : '–ù–ï–¢'}`);

if (process.env.UNI_FARMING_INTERVAL_MODE === 'true') {
  console.log(`  ‚îú‚îÄ‚îÄ –û–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥: 0.67 UNI –∑–∞ 5 –º–∏–Ω—É—Ç`);
  console.log(`  ‚îú‚îÄ‚îÄ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –¥–æ—Ö–æ–¥: 120-444 UNI –∑–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª`);
  console.log(`  ‚îú‚îÄ‚îÄ –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ: 180-663x`);
  console.log(`  ‚îî‚îÄ‚îÄ –í–´–í–û–î: –ò–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –ù–ï –†–ê–ë–û–¢–ê–ï–¢ –≤ production`);
} else {
  console.log(`  ‚îî‚îÄ‚îÄ –ò–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`);
}

console.log(`\nüìä –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ü–†–û–ë–õ–ï–ú–´:`);
console.log(`  1. ‚ùå UnifiedFarmingCalculator –ù–ï —á–∏—Ç–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ runtime`);
console.log(`  2. ‚ùå FarmingScheduler –ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç UnifiedFarmingCalculator`);
console.log(`  3. ‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –ù–ï –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ production –ø—Ä–æ—Ü–µ—Å—Å–µ`);
console.log(`  4. ‚ùå –ö—ç—à–∏—Ä—É–µ—Ç—Å—è —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π`);
console.log(`  5. ‚ùå –†–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è –∫–æ–¥–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ`);

console.log(`\nüìä –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:`);
console.log(`  1. üîß –î–û–ë–ê–í–ò–¢–¨ debug –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ UnifiedFarmingCalculator`);
console.log(`  2. üîß –ü–†–û–í–ï–†–ò–¢–¨ —á—Ç–æ FarmingScheduler –≤—ã–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥`);
console.log(`  3. üîß –£–ë–ï–î–ò–¢–¨–°–Ø —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è —á–∏—Ç–∞–µ—Ç—Å—è –≤ runtime`);
console.log(`  4. üîß –°–û–ó–î–ê–¢–¨ emergency —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞`);
console.log(`  5. üîß –í–†–ï–ú–ï–ù–ù–û –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–¥–∏–Ω –∏–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–≤ –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏`);

const endTime = new Date();
const duration = (endTime - startTime) / 1000;

console.log(`\n‚è±Ô∏è  –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –∑–∞ ${duration.toFixed(1)} —Å–µ–∫—É–Ω–¥`);
console.log(`üìã –í—Ä–µ–º—è: ${endTime.toLocaleTimeString()}`);
console.log(`üéØ –°–¢–ê–¢–£–°: –ü–†–û–ë–õ–ï–ú–ê –õ–û–ö–ê–õ–ò–ó–û–í–ê–ù–ê - –ò–ù–¢–ï–†–í–ê–õ–¨–ù–´–ô –†–ï–ñ–ò–ú –ù–ï –ü–†–ò–ú–ï–ù–Ø–ï–¢–°–Ø`);