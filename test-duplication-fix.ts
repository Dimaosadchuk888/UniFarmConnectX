/**
 * –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏
 */

import { UnifiedTransactionService } from './core/TransactionService';

async function testDuplicationFix() {
  console.log('\n=== –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –î–£–ë–õ–ò–†–û–í–ê–ù–ò–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–ô ===\n');

  try {
    const transactionService = UnifiedTransactionService.getInstance();

    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: –∏–º–∏—Ç–∏—Ä—É–µ–º BOC —Å —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏
    const baseBoc = 'te6cckECAgEAAKoAAeGIAMtaj5JhEoDmTGdtuWKu2Ndd7Q45BQhTz1ozLYdEVqaKBInUgIq8dqMECzNwPyJ9eQjP329kuNZ3s0H41Z4miUDu4lsRhsaiGoplRRzfR9yKPZUoFjb+vQbut8XmenPdAAFNTRi7RHqnaAAAG7gAHAEAaEIAMtaj5JhEoDmTGdtuWKu2Ndd7Q45BQhTz1ozLYdEVqaKh3NZQAAAAAAAAAAAAAAAAAABMb2Yz';
    const bocWithSuffix = `${baseBoc}_1754223557625_bppxkqf9y`;

    console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:');
    console.log(`–ë–∞–∑–æ–≤—ã–π BOC: ${baseBoc.substring(0, 50)}...`);
    console.log(`BOC —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º: ${bocWithSuffix.substring(0, 60)}...`);

    // –ü–µ—Ä–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è - –±–∞–∑–æ–≤—ã–π BOC
    console.log('\n1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å –±–∞–∑–æ–≤—ã–º BOC...');
    const result1 = await transactionService.createTransaction({
      user_id: 999, // –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      type: 'TON_DEPOSIT',
      amount_ton: 1,
      amount_uni: 0,
      currency: 'TON',
      status: 'completed',
      description: `TON deposit from blockchain: ${baseBoc}`,
      metadata: {
        source: 'ton_deposit',
        tx_hash: baseBoc,
        ton_tx_hash: baseBoc,
        original_type: 'TON_DEPOSIT',
        wallet_address: 'test_wallet_address'
      }
    });

    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', result1);

    // –í—Ç–æ—Ä–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è - —Ç–æ—Ç –∂–µ BOC —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞)
    console.log('\n2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞)...');
    const result2 = await transactionService.createTransaction({
      user_id: 999, // –¢–æ—Ç –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      type: 'TON_DEPOSIT',
      amount_ton: 1,
      amount_uni: 0,
      currency: 'TON',
      status: 'completed',
      description: `TON deposit from blockchain: ${bocWithSuffix}`,
      metadata: {
        source: 'ton_deposit',
        tx_hash: bocWithSuffix,
        ton_tx_hash: bocWithSuffix,
        original_type: 'TON_DEPOSIT',
        wallet_address: 'test_wallet_address'
      }
    });

    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—Ç–æ—Ä–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', result2);

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('\nüìä –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
    
    if (result1.success && !result2.success) {
      console.log('‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log('‚úÖ –ü–µ—Ä–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
      console.log('‚úÖ –í—Ç–æ—Ä–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ (–¥—É–±–ª–∏–∫–∞—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω)');
      console.log(`‚úÖ –û—à–∏–±–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è: ${result2.error}`);
    } else if (result1.success && result2.success) {
      console.log('‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ù–ï –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–æ');
      console.log('‚ùå –û–±–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã - –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    } else {
      console.log('‚ö†Ô∏è –ù–ï–û–ñ–ò–î–ê–ù–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
      console.log(`–ü–µ—Ä–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: ${result1.success ? '—É—Å–ø–µ—Ö' : '–æ—à–∏–±–∫–∞'}`);
      console.log(`–í—Ç–æ—Ä–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: ${result2.success ? '—É—Å–ø–µ—Ö' : '–æ—à–∏–±–∫–∞'}`);
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä—è–µ–º extractBaseBoc –ª–æ–≥–∏–∫—É
    console.log('\nüîç –¢–ï–°–¢ –ò–ó–í–õ–ï–ß–ï–ù–ò–Ø –ë–ê–ó–û–í–û–ì–û BOC:');
    const testCases = [
      baseBoc,
      bocWithSuffix,
      'te6cckEC...test_1754223557625_abc123',
      'regular_hash_without_boc'
    ];

    // –ü–æ—Å–∫–æ–ª—å–∫—É extractBaseBoc –ø—Ä–∏–≤–∞—Ç–Ω—ã–π, —Ç–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    console.log('–¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏');

    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testDuplicationFix().then(() => {
  console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  process.exit(1);
});