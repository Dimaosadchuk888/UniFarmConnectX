const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);

async function checkReferralsTable() {
  console.log('=== –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶–´ REFERRALS ===\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –æ–¥–Ω—É –∑–∞–ø–∏—Å—å —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    const { data, error } = await supabase
      .from('referrals')
      .select('*')
      .limit(1);
    
    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error.message);
      return;
    }
    
    if (data && data.length > 0) {
      console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã referrals:');
      console.log('–ü–æ–ª—è:', Object.keys(data[0]));
      console.log('–ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏:', data[0]);
    } else {
      console.log('üìä –¢–∞–±–ª–∏—Ü–∞ referrals –ø—É—Å—Ç–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
    const { data: allData, error: allError } = await supabase
      .from('referrals')
      .select('*');
    
    if (allError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π:', allError.message);
    } else {
      console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ referrals: ${allData.length}`);
      
      if (allData.length > 0) {
        console.log('–í—Å–µ –∑–∞–ø–∏—Å–∏:');
        allData.forEach((record, index) => {
          console.log(`${index + 1}. ${JSON.stringify(record)}`);
        });
      }
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

checkReferralsTable();