#!/usr/bin/env node

/**
 * UniFarm Web Interface Launcher
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è Replit Preview
 */

import { spawn } from 'child_process';
import http from 'http';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
process.env.NODE_ENV = 'production';
process.env.PORT = '3000';
process.env.HOST = '0.0.0.0';

console.log('üåê –ó–∞–ø—É—Å–∫ UniFarm Web Interface...');
console.log('üìç URL: http://localhost:3000');
console.log('üîó Preview: https://uni-farm-connect-x-osadchukdmitro2.replit.app');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
function checkPort() {
  return new Promise((resolve) => {
    const server = http.createServer();
    server.listen(3000, '0.0.0.0', () => {
      server.close();
      resolve(true);
    });
    server.on('error', () => {
      resolve(false);
    });
  });
}

async function startWebInterface() {
  const portAvailable = await checkPort();
  
  if (!portAvailable) {
    console.log('‚ö†Ô∏è  –ü–æ—Ä—Ç 3000 –∑–∞–Ω—è—Ç, –∑–∞–≤–µ—Ä—à–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã...');
    try {
      spawn('pkill', ['-f', 'tsx server/index.ts'], { stdio: 'pipe' });
      await new Promise(resolve => setTimeout(resolve, 2000));
    } catch (error) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ pkill
    }
  }

  // –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
  const serverProcess = spawn('tsx', ['server/index.ts'], {
    stdio: ['pipe', 'pipe', 'pipe'],
    cwd: process.cwd(),
    env: process.env
  });

  // –ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è –≤—ã–≤–æ–¥–∞ –¥–ª—è –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã—Ö –ª–æ–≥–æ–≤
  let outputBuffer = '';
  
  serverProcess.stdout.on('data', (data) => {
    outputBuffer += data.toString();
    process.stdout.write(data);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    if (outputBuffer.includes('Frontend: http://0.0.0.0:3000')) {
      console.log('\n‚úÖ –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–° –ì–û–¢–û–í!');
      console.log('üîó –û—Ç–∫—Ä–æ–π—Ç–µ Preview –ø–∞–Ω–µ–ª—å –∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:');
      console.log('üì± https://uni-farm-connect-x-osadchukdmitro2.replit.app');
      console.log('üíª http://localhost:3000\n');
    }
  });

  serverProcess.stderr.on('data', (data) => {
    process.stderr.write(data);
  });

  serverProcess.on('error', (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', error.message);
    process.exit(1);
  });

  serverProcess.on('exit', (code) => {
    if (code === 0) {
      console.log('‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
    } else {
      console.error(`‚ùå –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º: ${code}`);
      process.exit(code);
    }
  });

  // Graceful shutdown
  process.on('SIGTERM', () => {
    console.log('üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');
    serverProcess.kill('SIGTERM');
  });

  process.on('SIGINT', () => {
    console.log('üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');
    serverProcess.kill('SIGINT');
  });
}

startWebInterface().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', error.message);
  process.exit(1);
});