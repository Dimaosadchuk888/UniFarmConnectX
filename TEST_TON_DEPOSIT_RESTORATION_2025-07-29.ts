#!/usr/bin/env tsx

/**
 * –¢–ï–°–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –°–ò–°–¢–ï–ú–´ TON –î–ï–ü–û–ó–ò–¢–û–í
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
 */

import { UnifiedTransactionService } from '../core/TransactionService';
import { BalanceManager } from '../core/BalanceManager';
import { supabase } from '../server/supabase';

const TEST_USER_ID = 999999; // –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
const TEST_TON_AMOUNT = 0.001; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å—É–º–º–∞

async function runRestorationTest() {
  console.log('üß™ –¢–ï–°–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –°–ò–°–¢–ï–ú–´ TON –î–ï–ü–û–ó–ò–¢–û–í');
  console.log('=' .repeat(60));

  try {
    // –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('\n1Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    await supabase.from('transactions').delete().eq('user_id', TEST_USER_ID);
    await supabase.from('users').delete().eq('id', TEST_USER_ID);
    
    // –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const { error: userError } = await supabase
      .from('users')
      .insert({
        id: TEST_USER_ID,
        telegram_id: TEST_USER_ID,
        username: 'test_restoration_user',
        balance_uni: 0,
        balance_ton: 0
      });

    if (userError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
      return;
    }
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');

    // –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞...');
    const balanceManager = BalanceManager.getInstance();
    const initialBalance = await balanceManager.getUserBalance(TEST_USER_ID);
    
    if (!initialBalance.success) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', initialBalance.error);
      return;
    }
    
    console.log(`‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${initialBalance.balance?.balance_ton} TON, ${initialBalance.balance?.balance_uni} UNI`);

    // –®–∞–≥ 4: –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ - —Å–æ–∑–¥–∞–Ω–∏–µ TON –¥–µ–ø–æ–∑–∏—Ç–∞
    console.log('\n4Ô∏è‚É£ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢: –°–æ–∑–¥–∞–Ω–∏–µ TON –¥–µ–ø–æ–∑–∏—Ç–∞...');
    const transactionService = UnifiedTransactionService.getInstance();
    
    const depositResult = await transactionService.createTransaction({
      user_id: TEST_USER_ID,
      type: 'TON_DEPOSIT',
      amount_ton: TEST_TON_AMOUNT,
      amount_uni: 0,
      currency: 'TON',
      status: 'completed',
      description: '–¢–µ—Å—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤',
      metadata: {
        source: 'restoration_test',
        tx_hash: 'test_hash_' + Date.now(),
        test: true
      }
    });

    if (!depositResult.success) {
      console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç:', depositResult.error);
      return;
    }
    
    console.log(`‚úÖ –î–µ–ø–æ–∑–∏—Ç —Å–æ–∑–¥–∞–Ω —Å ID: ${depositResult.transaction_id}`);

    // –®–∞–≥ 5: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê - –æ–±–Ω–æ–≤–∏–ª—Å—è –ª–∏ –±–∞–ª–∞–Ω—Å?
    console.log('\n5Ô∏è‚É£ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –û–±–Ω–æ–≤–∏–ª—Å—è –ª–∏ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?');
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–∞–ª–∞–Ω—Å–∞
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    const updatedBalance = await balanceManager.getUserBalance(TEST_USER_ID);
    
    if (!updatedBalance.success) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞:', updatedBalance.error);
      return;
    }

    const newTonBalance = updatedBalance.balance?.balance_ton || 0;
    const balanceIncrease = newTonBalance - (initialBalance.balance?.balance_ton || 0);

    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:`);
    console.log(`   –ë—ã–ª–æ: ${initialBalance.balance?.balance_ton} TON`);
    console.log(`   –°—Ç–∞–ª–æ: ${newTonBalance} TON`);
    console.log(`   –ü—Ä–∏—Ä–æ—Å—Ç: ${balanceIncrease} TON`);

    // –®–∞–≥ 6: –û–¶–ï–ù–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê
    console.log('\n6Ô∏è‚É£ –û–¶–ï–ù–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:');
    
    if (Math.abs(balanceIncrease - TEST_TON_AMOUNT) < 0.000001) {
      console.log('üéâ –£–°–ü–ï–•! –°–∏—Å—Ç–µ–º–∞ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ê');
      console.log('‚úÖ –î–µ–ø–æ–∑–∏—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      console.log('‚úÖ UnifiedTransactionService.updateUserBalance() —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log('‚úÖ BalanceManager.addBalance() —Ä–∞–±–æ—Ç–∞–µ—Ç');
    } else {
      console.log('‚ùå –ü–†–û–í–ê–õ! –°–∏—Å—Ç–µ–º–∞ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ù–ï –†–ê–ë–û–¢–ê–ï–¢');
      console.log('‚ùå –ë–∞–ª–∞–Ω—Å –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è –∏–ª–∏ –æ–±–Ω–æ–≤–∏–ª—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ');
      console.log(`‚ùå –û–∂–∏–¥–∞–ª–∏ –ø—Ä–∏—Ä–æ—Å—Ç: ${TEST_TON_AMOUNT} TON`);
      console.log(`‚ùå –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏—Ä–æ—Å—Ç: ${balanceIncrease} TON`);
    }

    // –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –ë–î
    console.log('\n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const { data: transaction, error: txError } = await supabase
      .from('transactions')
      .select('*')
      .eq('id', depositResult.transaction_id)
      .single();

    if (txError || !transaction) {
      console.error('‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î:', txError);
    } else {
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î:', {
        id: transaction.id,
        type: transaction.type,
        amount_ton: transaction.amount_ton,
        status: transaction.status
      });
    }

  } catch (error) {
    console.error('\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê:', error);
  } finally {
    // –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    await supabase.from('transactions').delete().eq('user_id', TEST_USER_ID);
    await supabase.from('users').delete().eq('id', TEST_USER_ID);
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
runRestorationTest().catch(console.error);