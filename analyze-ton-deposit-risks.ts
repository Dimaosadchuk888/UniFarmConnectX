import { supabase } from './core/supabaseClient';

async function analyzeTonDepositRisks() {
  console.log('‚ö†Ô∏è –ê–ù–ê–õ–ò–ó –†–ò–°–ö–û–í –î–û–ë–ê–í–õ–ï–ù–ò–Ø TON_DEPOSIT –¢–†–ê–ù–ó–ê–ö–¶–ò–ô');
  console.log('='.repeat(65));

  try {
    // 1. –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    console.log('\n1Ô∏è‚É£ –¢–ï–ö–£–©–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
    
    const { data: txTypes, error: typesError } = await supabase
      .from('transactions')
      .select('type')
      .order('created_at', { ascending: false })
      .limit(1000);

    if (!typesError && txTypes) {
      const typeStats: { [key: string]: number } = {};
      txTypes.forEach(tx => {
        typeStats[tx.type] = (typeStats[tx.type] || 0) + 1;
      });

      console.log('üìä –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:');
      Object.keys(typeStats).forEach(type => {
        console.log(`   ${type}: ${typeStats[type]} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      });
    }

    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –∫–æ–¥–µ –æ—Ç —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    console.log('\n2Ô∏è‚É£ –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò:');
    console.log('üîç –ú–µ—Å—Ç–∞, –≥–¥–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ–¥, –∑–∞–≤–∏—Å—è—â–∏–π –æ—Ç —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:');
    console.log('   - Frontend: –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, —Ñ–∏–ª—å—Ç—Ä—ã');
    console.log('   - Backend: –ü–æ–¥—Å—á–µ—Ç –±–∞–ª–∞–Ω—Å–æ–≤, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
    console.log('   - Scheduler\'—ã: –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ—Ö–æ–¥–æ–≤');
    console.log('   - Admin –ø–∞–Ω–µ–ª—å: –û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞');

    // 3. –ê–Ω–∞–ª–∏–∑ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ë–ê–õ–ê–ù–°–û–í –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:');
    
    const { data: userBalances, error: balanceError } = await supabase
      .from('users')
      .select('id, balance_ton, balance_uni')
      .gt('balance_ton', 0)
      .limit(10);

    if (!balanceError && userBalances) {
      console.log(`üí∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å TON –±–∞–ª–∞–Ω—Å–æ–º: ${userBalances.length}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      let balanceDiscrepancies = 0;
      for (const user of userBalances.slice(0, 5)) {
        const { data: userTx, error: txError } = await supabase
          .from('transactions')
          .select('amount_ton, type')
          .eq('user_id', user.id)
          .not('amount_ton', 'is', null);

        if (!txError && userTx) {
          const totalFromTx = userTx.reduce((sum, tx) => {
            const amount = parseFloat(tx.amount_ton || '0');
            return tx.type === 'REFERRAL_REWARD' || tx.type === 'FARMING_REWARD' ? sum + amount : sum;
          }, 0);

          const balanceDiff = Math.abs(user.balance_ton - totalFromTx);
          if (balanceDiff > 0.001) { // –ü–æ—Ä–æ–≥ –¥–ª—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏
            balanceDiscrepancies++;
            console.log(`   ‚ö†Ô∏è User ${user.id}: –±–∞–ª–∞–Ω—Å ${user.balance_ton}, –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π ${totalFromTx.toFixed(6)}`);
          }
        }
      }

      if (balanceDiscrepancies > 0) {
        console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –≤ –±–∞–ª–∞–Ω—Å–∞—Ö: ${balanceDiscrepancies}`);
      } else {
        console.log('‚úÖ –ë–∞–ª–∞–Ω—Å—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º');
      }
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–∏—è–Ω–∏—è –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\n4Ô∏è‚É£ –í–õ–ò–Ø–ù–ò–ï –ù–ê –°–¢–ê–¢–ò–°–¢–ò–ö–£:');
    
    const { data: farmingRewards, error: farmingError } = await supabase
      .from('transactions')
      .select('amount_ton, metadata')
      .eq('type', 'FARMING_REWARD')
      .not('amount_ton', 'is', null)
      .gt('amount_ton', 0)
      .limit(100);

    if (!farmingError && farmingRewards) {
      console.log(`üìà FARMING_REWARD —Å TON: ${farmingRewards.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º metadata –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤
      let originalDeposits = 0;
      let boostIncomes = 0;
      
      farmingRewards.forEach(tx => {
        try {
          const metadata = typeof tx.metadata === 'object' ? tx.metadata : 
            (typeof tx.metadata === 'string' ? JSON.parse(tx.metadata || '{}') : {});
          
          if (metadata.original_type === 'TON_BOOST_INCOME') {
            boostIncomes++;
          } else if (metadata.original_type === 'TON_DEPOSIT') {
            originalDeposits++;
          }
        } catch (e) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞
        }
      });

      console.log(`   –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –≤ metadata: ${originalDeposits}`);
      console.log(`   TON Boost –¥–æ—Ö–æ–¥—ã: ${boostIncomes}`);
    }

    // 5. –†–∏—Å–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    console.log('\n5Ô∏è‚É£ –í–û–ó–ú–û–ñ–ù–´–ï –†–ò–°–ö–ò –ü–†–ò –î–û–ë–ê–í–õ–ï–ù–ò–ò TON_DEPOSIT:');
    
    console.log('\nüî¥ –í–´–°–û–ö–ò–ï –†–ò–°–ö–ò:');
    console.log('   1. –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π - –µ—Å–ª–∏ –¥–µ–ø–æ–∑–∏—Ç —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω –∫–∞–∫ FARMING_REWARD');
    console.log('   2. –ù–∞—Ä—É—à–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ - –¥–≤–æ–π–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ TON');
    console.log('   3. –ü–æ–ª–æ–º–∫–∞ scheduler\'–æ–≤ - –µ—Å–ª–∏ –æ–Ω–∏ –æ–∂–∏–¥–∞—é—Ç —Ç–æ–ª—å–∫–æ FARMING_REWARD');
    console.log('   4. –û—à–∏–±–∫–∏ –≤ admin –ø–∞–Ω–µ–ª–∏ - –µ—Å–ª–∏ –æ–Ω–∞ —Å—á–∏—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã');

    console.log('\nüü° –°–†–ï–î–ù–ò–ï –†–ò–°–ö–ò:');
    console.log('   1. –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ - –æ–±—â–∏–µ —Å—É–º–º—ã –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∏–∑–º–µ–Ω—è—Ç—Å—è');
    console.log('   2. Frontend –æ—à–∏–±–∫–∏ - –µ—Å–ª–∏ UI –Ω–µ –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–º—É —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    console.log('   3. –ù–∞—Ä—É—à–µ–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö - –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ vs –Ω–æ–≤—ã–µ');

    console.log('\nüü¢ –ù–ò–ó–ö–ò–ï –†–ò–°–ö–ò:');
    console.log('   1. –£–ª—É—á—à–µ–Ω–∏–µ UX - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–≤–∏–¥—è—Ç –¥–µ–ø–æ–∑–∏—Ç—ã –≤ –∏—Å—Ç–æ—Ä–∏–∏');
    console.log('   2. –ë–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å');
    console.log('   3. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');

    // 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
    console.log('\n6Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ë–ï–ó–û–ü–ê–°–ù–û–ô –†–ï–ê–õ–ò–ó–ê–¶–ò–ò:');
    
    console.log('\n‚úÖ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò –ü–ï–†–ï–î –ò–ó–ú–ï–ù–ï–ù–ò–ï–ú:');
    console.log('   1. Backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    console.log('   2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –∫–æ–ø–∏–∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Ç —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    console.log('   4. –ê–Ω–∞–ª–∏–∑ scheduler\'–æ–≤ –∏ –∏—Ö –ª–æ–≥–∏–∫–∏');

    console.log('\nüõ°Ô∏è –ë–ï–ó–û–ü–ê–°–ù–´–ô –ü–û–î–•–û–î:');
    console.log('   1. –î–æ–±–∞–≤–∏—Ç—å TON_DEPOSIT —Ç–æ–ª—å–∫–æ –¥–ª—è –ù–û–í–´–• –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('   2. –ù–ï –∏–∑–º–µ–Ω—è—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ');
    console.log('   3. –î–æ–±–∞–≤–∏—Ç—å —Ñ–ª–∞–≥-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –¥–ª—è –æ—Ç–∫–∞—Ç–∞');
    console.log('   4. –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º');

    console.log('\n‚ö° –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–´:');
    console.log('   1. –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ "display_type" –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
    console.log('   2. –°–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('   3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å metadata –¥–ª—è –ø–æ–º–µ—Ç–∫–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤');

    // 7. –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤
    console.log('\n7Ô∏è‚É£ –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –†–ò–°–ö–û–í:');
    console.log('üìä –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: –°–†–ï–î–ù–ò–ô-–í–´–°–û–ö–ò–ô');
    console.log('‚è±Ô∏è –í—Ä–µ–º—è –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é: 2-4 —á–∞—Å–∞');
    console.log('üß™ –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –î–ê');
    console.log('üíæ Backup –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω: –î–ê');
    
    console.log('\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:');
    console.log('   –õ—É—á—à–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ë–ï–ó–û–ü–ê–°–ù–´–ô –ø–æ–¥—Ö–æ–¥:');
    console.log('   - –î–æ–±–∞–≤–∏—Ç—å TON_DEPOSIT —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ–≤—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('   - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å');
    console.log('   - –¢—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã');

  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –ê–ù–ê–õ–ò–ó–ê –†–ò–°–ö–û–í:', error);
  }
}

analyzeTonDepositRisks().catch(console.error);