#!/usr/bin/env tsx
/**
 * üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –î–ò–ê–ì–ù–û–ó: –ü–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ 1.65 TON –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255
 * –ò—Ç–æ–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */

import { supabase } from './core/supabase';

async function finalDiagnosisUser255() {
  console.log('üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –î–ò–ê–ì–ù–û–ó: –ü–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ 1.65 TON –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 255');
  console.log('='.repeat(80));

  try {
    // 1. –°–≤–æ–¥–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 255
    console.log('\n1Ô∏è‚É£ –°–í–û–î–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ID 255:');
    const { data: user255 } = await supabase
      .from('users')
      .select('*')
      .eq('id', 255)
      .single();

    if (user255) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 255 (Glazeb0):');
      console.log(`   telegram_id: ${user255.telegram_id}`);
      console.log(`   username: ${user255.username}`);
      console.log(`   first_name: ${user255.first_name}`);
      console.log(`   balance_ton: ${user255.balance_ton} TON`);
      console.log(`   balance_uni: ${user255.balance_uni} UNI`);
      console.log(`   ton_boost_package: ${user255.ton_boost_package}`);
      console.log(`   ton_boost_active: ${user255.ton_boost_active}`);
      console.log(`   ton_boost_rate: ${user255.ton_boost_rate}`);
      console.log(`   ton_farming_balance: ${user255.ton_farming_balance}`);
      console.log(`   ton_wallet_address: ${user255.ton_wallet_address || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);
      console.log(`   ton_wallet_verified: ${user255.ton_wallet_verified}`);
      console.log(`   created_at: ${user255.created_at}`);
    }

    // 2. –ü–æ–¥—Å—á–µ—Ç TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è
    console.log('\n2Ô∏è‚É£ –°–¢–ê–¢–ò–°–¢–ò–ö–ê TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø 255:');
    const { data: allTonTx } = await supabase
      .from('transactions')
      .select('type, amount, status, created_at')
      .eq('user_id', 255)
      .eq('currency', 'TON');

    if (allTonTx) {
      const stats = {
        tonDeposits: allTonTx.filter(tx => tx.type === 'TON_DEPOSIT').length,
        farmingRewards: allTonTx.filter(tx => tx.type === 'FARMING_REWARD').length,
        referralRewards: allTonTx.filter(tx => tx.type === 'REFERRAL_REWARD').length,
        withdrawals: allTonTx.filter(tx => tx.type === 'WITHDRAWAL').length,
        totalTransactions: allTonTx.length
      };

      const totalEarned = allTonTx
        .filter(tx => ['FARMING_REWARD', 'REFERRAL_REWARD', 'TON_DEPOSIT'].includes(tx.type))
        .reduce((sum, tx) => sum + parseFloat(tx.amount || '0'), 0);

      const totalSpent = allTonTx
        .filter(tx => ['WITHDRAWAL', 'FARMING_DEPOSIT'].includes(tx.type))
        .reduce((sum, tx) => sum + parseFloat(tx.amount || '0'), 0);

      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:');
      console.log(`   üì• TON_DEPOSIT: ${stats.tonDeposits} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      console.log(`   üí∞ FARMING_REWARD: ${stats.farmingRewards} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      console.log(`   üéÅ REFERRAL_REWARD: ${stats.referralRewards} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      console.log(`   üì§ WITHDRAWAL: ${stats.withdrawals} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      console.log(`   üìä –í—Å–µ–≥–æ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${stats.totalTransactions}`);
      console.log(`   üíµ –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${totalEarned.toFixed(6)} TON`);
      console.log(`   üí∏ –í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: ${totalSpent.toFixed(6)} TON`);
      console.log(`   üè¶ –†–∞—Å—á–µ—Ç–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${(totalEarned - totalSpent).toFixed(6)} TON`);
      console.log(`   üí≥ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å: ${user255?.balance_ton} TON`);
    }

    // 3. –ê–Ω–∞–ª–∏–∑ –¥—É–±–ª–∏–∫–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 256
    console.log('\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –î–£–ë–õ–ò–ö–ê–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ID 256:');
    const { data: user256 } = await supabase
      .from('users')
      .select('*')
      .eq('id', 256)
      .single();

    if (user256) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 256 (–¥—É–±–ª–∏–∫–∞—Ç):');
      console.log(`   telegram_id: ${user256.telegram_id} (–í–ù–ò–ú–ê–ù–ò–ï: ${user256.telegram_id})`);
      console.log(`   username: ${user256.username} (—Ç–æ—Ç –∂–µ —á—Ç–æ —É 255)`);
      console.log(`   ton_wallet_address: ${user256.ton_wallet_address?.slice(0, 30)}...`);
      console.log(`   ton_wallet_verified: ${user256.ton_wallet_verified}`);
      console.log(`   balance_ton: ${user256.balance_ton} TON`);
      console.log(`   created_at: ${user256.created_at}`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 256
      const { data: tx256 } = await supabase
        .from('transactions')
        .select('*')
        .eq('user_id', 256);

      console.log(`   üìä –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —É –¥—É–±–ª–∏–∫–∞—Ç–∞: ${tx256?.length || 0}`);
    }

    // 4. –ü–æ–∏—Å–∫ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ —Å –∞–¥—Ä–µ—Å–æ–º –∫–æ—à–µ–ª—å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 256
    console.log('\n4Ô∏è‚É£ –ü–û–ò–°–ö –î–ï–ü–û–ó–ò–¢–û–í –° –ö–û–®–ï–õ–¨–ö–û–ú –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø 256:');
    if (user256?.ton_wallet_address) {
      const { data: walletDeposits } = await supabase
        .from('transactions')
        .select('*')
        .eq('type', 'TON_DEPOSIT')
        .ilike('description', `%${user256.ton_wallet_address}%`);

      console.log(`‚úÖ –î–µ–ø–æ–∑–∏—Ç–æ–≤ —Å –∞–¥—Ä–µ—Å–æ–º –∫–æ—à–µ–ª—å–∫–∞ 256: ${walletDeposits?.length || 0}`);
      walletDeposits?.forEach((dep, i) => {
        console.log(`\nüí∞ –ù–∞–π–¥–µ–Ω–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç ${i + 1}:`);
        console.log(`   user_id: ${dep.user_id} (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 256, –∞ –Ω–µ 255!)`);
        console.log(`   amount: ${dep.amount} TON`);
        console.log(`   created_at: ${dep.created_at}`);
        console.log(`   status: ${dep.status}`);
        console.log(`   tx_hash: ${dep.tx_hash || '–ù–ï–¢ –•–ï–®–ê'}`);
      });
    }

    // 5. –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    console.log('\n5Ô∏è‚É£ –í–†–ï–ú–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TON BOOST –ê–ö–¢–ò–í–ê–¶–ò–ò:');
    
    // –ù–∞–π–¥–µ–º –∫–æ–≥–¥–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª—Å—è TON Boost —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 255
    const { data: firstBoostReward } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', 255)
      .ilike('description', '%TON Boost%')
      .order('created_at', { ascending: true })
      .limit(1);

    if (firstBoostReward && firstBoostReward.length > 0) {
      const boostActivationTime = new Date(firstBoostReward[0].created_at);
      console.log(`‚úÖ TON Boost –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: ${firstBoostReward[0].created_at}`);
      
      // –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 2 —á–∞—Å–æ–≤ –¥–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
      const twoHoursBefore = new Date(boostActivationTime.getTime() - 2 * 60 * 60 * 1000);
      const { data: suspiciousDeposits } = await supabase
        .from('transactions')
        .select('*')
        .eq('type', 'TON_DEPOSIT')
        .gte('created_at', twoHoursBefore.toISOString())
        .lte('created_at', boostActivationTime.toISOString());

      console.log(`\nüîç –î–µ–ø–æ–∑–∏—Ç—ã –∑–∞ 2 —á–∞—Å–∞ –¥–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ boost: ${suspiciousDeposits?.length || 0}`);
      suspiciousDeposits?.forEach((dep, i) => {
        console.log(`\n‚è∞ –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç ${i + 1}:`);
        console.log(`   user_id: ${dep.user_id}, amount: ${dep.amount} TON`);
        console.log(`   created_at: ${dep.created_at}`);
        const diffMinutes = Math.round((boostActivationTime.getTime() - new Date(dep.created_at).getTime()) / (1000 * 60));
        console.log(`   ‚è±Ô∏è –ó–∞ ${diffMinutes} –º–∏–Ω—É—Ç –¥–æ boost –∞–∫—Ç–∏–≤–∞—Ü–∏–∏`);
      });
    }

    console.log('\n' + '='.repeat(80));
    console.log('üö® –§–ò–ù–ê–õ–¨–ù–´–ô –î–ò–ê–ì–ù–û–ó –ü–†–û–ë–õ–ï–ú–´:');
    console.log('');
    console.log('‚úÖ –£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –§–ê–ö–¢–´:');
    console.log('1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 255 –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π TON Boost –ø–∞–∫–µ—Ç');
    console.log('2. –ü–æ–ª—É—á–∞–µ—Ç TON Boost –¥–æ—Ö–æ–¥—ã –∫–∞–∂–¥—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç');
    console.log('3. –ù–û –≤ –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ù–ï–¢ –Ω–∏ –æ–¥–Ω–æ–≥–æ TON_DEPOSIT');
    console.log('4. –ë–∞–ª–∞–Ω—Å TON —Ç–æ–ª—å–∫–æ –æ—Ç referral –∏ farming rewards');
    console.log('5. –°—É—â–µ—Å—Ç–≤—É–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID 256 —Å TON –∫–æ—à–µ–ª—å–∫–æ–º');
    console.log('');
    console.log('üîç –í–ï–†–û–Ø–¢–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê:');
    console.log('- –î–µ–ø–æ–∑–∏—Ç—ã 1.65 TON –±—ã–ª–∏ —Å–¥–µ–ª–∞–Ω—ã –≤ blockchain');
    console.log('- TON Boost –ø–∞–∫–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª—Å—è (–µ—Å—Ç—å –¥–æ—Ö–æ–¥—ã)');
    console.log('- –ù–æ webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ù–ï —Å–æ–∑–¥–∞–ª TON_DEPOSIT –∑–∞–ø–∏—Å–∏');
    console.log('- –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫–æ—à–µ–ª—å–∫–∞ –∏–ª–∏ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–µ–π');
    console.log('');
    console.log('üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:');
    console.log('1. –ù–∞–π—Ç–∏ blockchain tx_hash –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤ 0.65 + 1.0 TON');
    console.log('2. –í—Ä—É—á–Ω—É—é —Å–æ–∑–¥–∞—Ç—å TON_DEPOSIT –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    console.log('3. –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 1.65 TON');
    console.log('4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('='.repeat(80));

  } catch (error) {
    console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –§–ò–ù–ê–õ–¨–ù–û–ì–û –î–ò–ê–ì–ù–û–ó–ê:', error);
  }
}

finalDiagnosisUser255().catch(console.error);