#!/usr/bin/env node
/**
 * –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –í –ü–†–û–î–ê–ö–®–ù–ï
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–ª–∏—á–∏–π –º–µ–∂–¥—É Dev –∏ Prod –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ –∫—Ä–æ–Ω–∞
 */

const fs = require('fs');
const path = require('path');
require('dotenv').config();

function analyzeSchedulerConfig() {
  console.log('‚è±Ô∏è –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê - DEV VS PROD\n');

  // 1. –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('üîç –ê–ù–ê–õ–ò–ó –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø:');
  console.log(`   NODE_ENV: ${process.env.NODE_ENV || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
  console.log(`   BYPASS_AUTH: ${process.env.BYPASS_AUTH || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
  console.log(`   Database URL: ${process.env.SUPABASE_URL ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' : '–ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
  
  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  console.log('\nüìÇ –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê:');
  
  const schedulerFiles = [
    'server/index.ts',
    'core/scheduler/farmingScheduler.ts',
    'modules/scheduler/tonBoostIncomeScheduler.ts',
    'package.json'
  ];
  
  schedulerFiles.forEach(file => {
    if (fs.existsSync(file)) {
      console.log(`   ‚úÖ ${file} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      
      // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏ –∏—â–µ–º cron –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
      const content = fs.readFileSync(file, 'utf8');
      
      // –ü–æ–∏—Å–∫ cron expressions
      const cronMatches = content.match(/cron\.schedule\(['"`]([^'"`]+)['"`]/g);
      if (cronMatches) {
        console.log(`      üïê Cron expressions: ${cronMatches.join(', ')}`);
      }
      
      // –ü–æ–∏—Å–∫ setInterval
      const intervalMatches = content.match(/setInterval\([^,]+,\s*([^)]+)\)/g);
      if (intervalMatches) {
        console.log(`      ‚è±Ô∏è setInterval: ${intervalMatches.join(', ')}`);
      }
      
      // –ü–æ–∏—Å–∫ —É—Å–ª–æ–≤–∏–π NODE_ENV
      if (content.includes('NODE_ENV')) {
        const envLines = content.split('\n').filter(line => 
          line.includes('NODE_ENV') && 
          (line.includes('production') || line.includes('development'))
        );
        if (envLines.length > 0) {
          console.log(`      üîß NODE_ENV —É—Å–ª–æ–≤–∏—è –Ω–∞–π–¥–µ–Ω—ã:`);
          envLines.forEach(line => console.log(`         ${line.trim()}`));
        }
      }
    } else {
      console.log(`   ‚ùå ${file} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  });

  // 3. –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
  console.log('\nüñ•Ô∏è –ê–ù–ê–õ–ò–ó –ê–ö–¢–ò–í–ù–´–• NODE –ü–†–û–¶–ï–°–°–û–í:');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –∏–∑ ps aux –≤—ã–≤–æ–¥–∞
  const nodeProcesses = [
    'node /home/runner/workspace/node_modules/.bin/tsx server/index.ts',
    '/nix/store/skjnm7y5v5k4az630rb5qqi6cqg0n564-nodejs-18.16.0/bin/node --require ...'
  ];
  
  console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ Node.js –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: ${nodeProcesses.length}`);
  console.log('   üí° –≠—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã —Å–µ—Ä–≤–µ—Ä–∞');

  // 4. –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è
  console.log('\nüéØ –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –†–ê–°–•–û–ñ–î–ï–ù–ò–Ø DEV vs PROD:');
  
  console.log('   üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É—Å–ª–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–∏...');
  
  // –ß–∏—Ç–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  if (fs.existsSync('core/scheduler/farmingScheduler.ts')) {
    const schedulerContent = fs.readFileSync('core/scheduler/farmingScheduler.ts', 'utf8');
    
    if (schedulerContent.includes('production') || schedulerContent.includes('development')) {
      console.log('   üö® –ù–ê–ô–î–ï–ù–ê —É—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ NODE_ENV –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ!');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º distributed lock
    if (schedulerContent.includes('isProcessing') || schedulerContent.includes('distributed lock')) {
      console.log('   ‚úÖ Distributed lock –Ω–∞–π–¥–µ–Ω - –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
    if (schedulerContent.includes('4.5')) {
      console.log('   ‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª 4.5 –º–∏–Ω—É—Ç—ã –Ω–∞–π–¥–µ–Ω');
    }
  }

  // 5. –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  console.log('\nüìù –ü–û–ò–°–ö –õ–û–ì–û–í –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê:');
  
  const logFiles = [
    'farming-scheduler-log.txt',
    'logs/scheduler.log',
    'scheduler.log'
  ];
  
  logFiles.forEach(logFile => {
    if (fs.existsSync(logFile)) {
      console.log(`   ‚úÖ –õ–æ–≥ —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: ${logFile}`);
      try {
        const logContent = fs.readFileSync(logFile, 'utf8');
        const lines = logContent.split('\n').slice(-10); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫
        console.log('      üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:');
        lines.forEach(line => {
          if (line.trim()) console.log(`         ${line.trim()}`);
        });
      } catch (error) {
        console.log(`      ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–∞: ${error.message}`);
      }
    }
  });

  // 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ
  console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');
  console.log('   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é NODE_ENV –≤ –ø—Ä–æ–¥–∞–∫—à–Ω–µ');
  console.log('   2. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –∑–∞–ø—É—â–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–µ—Ä–∞');
  console.log('   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è');
  console.log('   4. –í–æ–∑–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å pm2 –∏–ª–∏ systemd –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤');
  console.log('   5. –î–æ–±–∞–≤–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID –∫ –∑–∞–ø—É—Å–∫–∞–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è');

  console.log('\nüìä –ê–ù–ê–õ–ò–ó BATCH –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
  console.log('   üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞: 5 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
  console.log('   üí° –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –µ—Å–ª–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  console.log('   ‚ö†Ô∏è –ù–û –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ 1-2 —Å–µ–∫—É–Ω–¥—ã - –∞–Ω–æ–º–∞–ª–∏—è');
  console.log('   üìã –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
  console.log('      - –í—Ç–æ—Ä–æ–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π');
  console.log('      - –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ');
  console.log('      - –ü—Ä–æ–±–ª–µ–º–∞ —Å distributed lock');
  console.log('      - –ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ä—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫');

  console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
  console.log('   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ (*/5 * * * * –∏ 5*60*1000)');
  console.log('   ‚ùì –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–∞—Ö –ø—Ä–æ—Ü–µ—Å—Å–∞');
  console.log('   üîç –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω–µ');
}

analyzeSchedulerConfig();