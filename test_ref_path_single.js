/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */

import fetch from 'node-fetch';

// –ë–∞–∑–æ–≤—ã–π URL API
const API_BASE_URL = 'https://8ac7b219-438d-4a0b-ab0e-d8b58de37c6d-00-8ncue1micrhz.sisko.replit.dev';

// ID –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const USER_ID = 8;

async function callApi(endpoint, method = 'GET', data = null) {
  const options = {
    method,
    headers: {
      'Content-Type': 'application/json',
    }
  };

  if (data) {
    options.body = JSON.stringify(data);
  }

  const url = `${API_BASE_URL}${endpoint}`;
  console.log(`[API Call] ${method} ${url}`);
  if (data) console.log('Data:', data);

  try {
    const response = await fetch(url, options);
    const result = await response.json();
    console.log('Response:', JSON.stringify(result, null, 2));
    return result;
  } catch (error) {
    console.error('API Error:', error);
    return { success: false, error: error.message };
  }
}

async function createReferralLink() {
  console.log(`\n=== –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–≤—è–∑–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=${USER_ID} —Å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª–µ–º ID=3 ===`);
  
  const result = await callApi('/api/test/referral/link', 'POST', {
    userId: USER_ID,
    inviterId: 3 // –°–≤—è–∑—ã–≤–∞–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º 3, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —É–∂–µ –µ—Å—Ç—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å 2
  });
  
  if (result.success) {
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å');
    
    if (result.data.referral && result.data.referral.ref_path) {
      console.log(`üìä ref_path: ${JSON.stringify(result.data.referral.ref_path)}`);
    } else {
      console.log('‚ö†Ô∏è ref_path –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ');
    }
  } else {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–≤—è–∑–∏:', result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
  }
}

async function checkReferralInfo() {
  console.log(`\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=${USER_ID} ===`);
  
  const result = await callApi(`/api/test/referral/user/${USER_ID}`);
  
  if (result.success) {
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ');
    
    if (result.data.hasInviter) {
      console.log(`üë§ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å: ID=${result.data.inviterId}`);
      
      if (result.data.ref_path && result.data.ref_path.length > 0) {
        console.log(`üìä ref_path: [${result.data.ref_path.join(' -> ')}]`);
        console.log(`üìè –ì–ª—É–±–∏–Ω–∞ —Ü–µ–ø–æ—á–∫–∏: ${result.data.ref_path.length} —É—Ä–æ–≤–Ω–µ–π`);
      } else {
        console.log('‚ö†Ô∏è ref_path –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç');
      }
    } else {
      console.log('‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—è');
    }
  } else {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function main() {
  console.log(`=== –¢–ï–°–¢ –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –¶–ï–ü–û–ß–ö–ò –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ID=${USER_ID} ===\n`);
  
  // –®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–≤—è–∑—å
  await createReferralLink();
  
  // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Ü–µ–ø–æ—á–∫–µ
  await checkReferralInfo();
}

main().catch(console.error);