import { supabase } from './core/supabaseClient';

async function checkFinalState() {
  const userId = '184';
  
  console.log('=== –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø ===\n');
  
  // 1. –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: user } = await supabase
    .from('users')
    .select('balance_ton, ton_farming_balance, ton_boost_active, ton_boost_package')
    .eq('id', userId)
    .single();
    
  console.log('–¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
  console.log(`‚îú‚îÄ‚îÄ balance_ton: ${user.balance_ton} TON`);
  console.log(`‚îú‚îÄ‚îÄ ton_farming_balance: ${user.ton_farming_balance} TON`);
  console.log(`‚îú‚îÄ‚îÄ –û–±—â–∞—è —Å—É–º–º–∞: ${parseFloat(user.balance_ton) + parseFloat(user.ton_farming_balance)} TON`);
  console.log(`‚îú‚îÄ‚îÄ ton_boost_active: ${user.ton_boost_active ? '‚úÖ' : '‚ùå'}`);
  console.log(`‚îî‚îÄ‚îÄ ton_boost_package: ${user.ton_boost_package}\n`);
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º ton_farming_data
  console.log('TON_FARMING_DATA:');
  const { data: farmingData, error: farmingError } = await supabase
    .from('ton_farming_data')
    .select('*')
    .eq('user_id', userId);
    
  if (farmingError) {
    console.log(`‚îî‚îÄ‚îÄ –û—à–∏–±–∫–∞: ${farmingError.message}\n`);
  } else if (!farmingData || farmingData.length === 0) {
    console.log('‚îî‚îÄ‚îÄ –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π\n');
  } else {
    farmingData.forEach(d => {
      console.log(`‚îú‚îÄ‚îÄ farming_balance: ${d.farming_balance || 'null'}`);
      console.log(`‚îú‚îÄ‚îÄ boost_active: ${d.boost_active ? '‚úÖ' : '‚ùå'}`);
      console.log(`‚îî‚îÄ‚îÄ updated_at: ${d.updated_at}\n`);
    });
  }
  
  // 3. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–∫—É–ø–æ–∫ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
  console.log('–¢–†–ê–ù–ó–ê–ö–¶–ò–ò –ü–û–ö–£–ü–û–ö –°–ï–ì–û–î–ù–Ø:');
  const todayStart = new Date();
  todayStart.setHours(0, 0, 0, 0);
  
  const { data: purchases } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', userId)
    .eq('type', 'BOOST_PURCHASE')
    .gte('created_at', todayStart.toISOString())
    .order('created_at', { ascending: false });
    
  if (purchases && purchases.length > 0) {
    let totalSpent = 0;
    purchases.forEach(tx => {
      const time = new Date(tx.created_at).toLocaleTimeString('ru-RU');
      console.log(`‚îú‚îÄ‚îÄ ${time}: ${tx.amount} TON - ${tx.description}`);
      totalSpent += Math.abs(parseFloat(tx.amount));
    });
    console.log(`‚îî‚îÄ‚îÄ –í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: ${totalSpent} TON\n`);
  } else {
    console.log('‚îî‚îÄ‚îÄ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π BOOST_PURCHASE –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n');
  }
  
  // 4. –ê–Ω–∞–ª–∏–∑
  console.log('üìä –ò–¢–û–ì–ò:');
  console.log('1. –ë—ã–ª–æ: 100.02 TON –≤ balance_ton + 115 TON –≤ farming = 215.02 TON');
  console.log(`2. –°—Ç–∞–ª–æ: ${user.balance_ton} TON + ${user.ton_farming_balance} TON = ${parseFloat(user.balance_ton) + parseFloat(user.ton_farming_balance)} TON`);
  console.log(`3. –†–∞–∑–Ω–∏—Ü–∞: ${215.02 - (parseFloat(user.balance_ton) + parseFloat(user.ton_farming_balance))} TON\n`);
  
  console.log('–ü–†–û–ë–õ–ï–ú–ê:');
  console.log('- –î–µ–Ω—å–≥–∏ —Å–ø–∏—Å–∞–ª–∏—Å—å —Å balance_ton');
  console.log('- –ù–ï –¥–æ–±–∞–≤–∏–ª–∏—Å—å –≤ ton_farming_balance');
  console.log('- ton_farming_data –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è');
  console.log('- –ö–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç fallback, –Ω–æ –æ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
}

checkFinalState();