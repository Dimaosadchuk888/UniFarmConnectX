#!/usr/bin/env tsx
/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –±–∞–ª–∞–Ω—Å–æ–≤ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
 * –ü—Ä–æ–±–ª–µ–º–∞: API –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 3.18 TON, –Ω–æ –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤–∏–¥–∏—Ç 0.01 TON
 */

import { supabase } from './core/supabase';
import { WalletService } from './modules/wallet/service';
import { SupabaseUserRepository } from './modules/user/service';

const userRepository = new SupabaseUserRepository();
const walletService = new WalletService();

async function checkBalanceDiscrepancy() {
  console.log('\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –ë–ê–õ–ê–ù–°–û–í –ü–†–ò –í–´–í–û–î–ï');
  console.log('='.repeat(80));
  
  const userId = '184'; // User ID –∏–∑ –ª–æ–≥–æ–≤
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ API endpoint
    console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ß–ï–†–ï–ó API ENDPOINT:');
    const user = await userRepository.getUserById(parseInt(userId));
    if (user) {
      console.log(`   balance_ton –≤ –ë–î: ${user.balance_ton} TON`);
      console.log(`   ton_farming_balance: ${user.ton_farming_balance || 'null'}`);
      console.log(`   ton_farming_accumulated: ${user.ton_farming_accumulated || 'null'}`);
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users
    console.log('\n2Ô∏è‚É£ –ü–†–Ø–ú–û–ô –ó–ê–ü–†–û–° –ö –ë–î:');
    const { data: dbUser, error } = await supabase
      .from('users')
      .select('id, username, balance_ton, ton_farming_balance, ton_farming_accumulated, ton_boost_active')
      .eq('id', parseInt(userId))
      .single();
      
    if (dbUser) {
      console.log(`   ID: ${dbUser.id}, Username: ${dbUser.username}`);
      console.log(`   balance_ton: ${dbUser.balance_ton} TON`);
      console.log(`   ton_farming_balance: ${dbUser.ton_farming_balance || 'null'}`);
      console.log(`   ton_farming_accumulated: ${dbUser.ton_farming_accumulated || 'null'}`);
      console.log(`   ton_boost_active: ${dbUser.ton_boost_active}`);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–∑ WalletService
    console.log('\n3Ô∏è‚É£ –°–ò–ú–£–õ–Ø–¶–ò–Ø –í–ê–õ–ò–î–ê–¶–ò–ò –í–´–í–û–î–ê:');
    const withdrawAmount = 1; // –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–≤–µ—Å—Ç–∏ 1 TON
    console.log(`   –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–≤–µ—Å—Ç–∏: ${withdrawAmount} TON`);
    
    // –ö–æ–ø–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ processWithdrawal
    const currentBalance = parseFloat(dbUser?.balance_ton || "0");
    console.log(`   currentBalance –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏: ${currentBalance} TON`);
    console.log(`   –ü—Ä–æ–≤–µ—Ä–∫–∞: ${currentBalance} >= ${withdrawAmount} ? ${currentBalance >= withdrawAmount ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π farming –¥–æ—Ö–æ–¥
    console.log('\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê TON FARMING –î–ê–ù–ù–´–•:');
    const { data: farmingData } = await supabase
      .from('ton_farming_data')
      .select('*')
      .eq('user_id', parseInt(userId))
      .single();
      
    if (farmingData) {
      console.log(`   farming_balance: ${farmingData.farming_balance} TON`);
      console.log(`   farming_rate: ${farmingData.farming_rate}`);
      console.log(`   boost_active: ${farmingData.boost_active}`);
      console.log(`   last_calculation_time: ${farmingData.last_calculation_time}`);
      
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥
      if (farmingData.last_calculation_time) {
        const now = new Date();
        const lastCalc = new Date(farmingData.last_calculation_time);
        const hoursPassed = (now.getTime() - lastCalc.getTime()) / (1000 * 60 * 60);
        const accumulatedIncome = parseFloat(farmingData.farming_balance) * parseFloat(farmingData.farming_rate) * hoursPassed / 24;
        console.log(`   –ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥ –∑–∞ ${hoursPassed.toFixed(2)} —á–∞—Å–æ–≤: ${accumulatedIncome.toFixed(6)} TON`);
      }
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ farming reward
    console.log('\n5Ô∏è‚É£ –ü–û–°–õ–ï–î–ù–ò–ï FARMING REWARD –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:');
    const { data: farmingRewards } = await supabase
      .from('transactions')
      .select('id, amount_ton, created_at, metadata')
      .eq('user_id', parseInt(userId))
      .eq('type', 'FARMING_REWARD')
      .eq('currency', 'TON')
      .order('created_at', { ascending: false })
      .limit(5);
      
    if (farmingRewards && farmingRewards.length > 0) {
      const totalFarmingRewards = farmingRewards.reduce((sum, tx) => sum + parseFloat(tx.amount_ton || '0'), 0);
      console.log(`   –ù–∞–π–¥–µ–Ω–æ ${farmingRewards.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞ —Å—É–º–º—É: ${totalFarmingRewards.toFixed(6)} TON`);
      farmingRewards.forEach(tx => {
        console.log(`   - ${new Date(tx.created_at).toLocaleString()}: ${tx.amount_ton} TON`);
      });
    }
    
    // 6. –ò—Ç–æ–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
    console.log('\n6Ô∏è‚É£ –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó:');
    console.log(`   –û—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –±–∞–ª–∞–Ω—Å –≤ UI: 3.181141 TON`);
    console.log(`   balance_ton –≤ –ë–î: ${dbUser?.balance_ton || '?'} TON`);
    console.log(`   –†–∞–∑–Ω–∏—Ü–∞: ${3.181141 - parseFloat(dbUser?.balance_ton || '0')} TON`);
    
    if (Math.abs(parseFloat(dbUser?.balance_ton || '0') - 0.01) < 0.001) {
      console.log('\n‚ùå –ü–†–û–ë–õ–ï–ú–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê: balance_ton = 0.01, –Ω–æ UI –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 3.18+');
      console.log('   –ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π farming –¥–æ—Ö–æ–¥ –ù–ï –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ balance_ton!');
    } else if (Math.abs(parseFloat(dbUser?.balance_ton || '0') - 3.181141) < 0.01) {
      console.log('\n‚úÖ balance_ton –≤ –ë–î —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–º—É –±–∞–ª–∞–Ω—Å—É');
      console.log('   –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ race condition');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
  
  process.exit(0);
}

checkBalanceDiscrepancy();