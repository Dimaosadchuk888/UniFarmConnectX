/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö webhook –ø—É—Ç–µ–π
 */

import fetch from 'node-fetch';

const BASE_URL = 'https://uni-farm-connect-x-osadchukdmitro2.replit.app';
const WEBHOOK_PATHS = [
  '/webhook',
  '/api/webhook', 
  '/bot/webhook',
  '/telegram/webhook',
  '/api/v2/telegram/webhook'
];

const testUpdate = {
  update_id: 123456789,
  message: {
    message_id: 1,
    from: { id: 123456789, first_name: "Test" },
    chat: { id: 123456789 },
    text: "/start"
  }
};

async function testWebhookPath(path) {
  try {
    const response = await fetch(`${BASE_URL}${path}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'TelegramBot'
      },
      body: JSON.stringify(testUpdate)
    });

    const result = await response.text();
    return {
      path,
      status: response.status,
      success: response.status === 200,
      response: result.substring(0, 100)
    };
  } catch (error) {
    return {
      path,
      status: 'ERROR',
      success: false,
      error: error.message
    };
  }
}

async function testAllPaths() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É—é –≤—Å–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ webhook –ø—É—Ç–∏...');
  
  const results = [];
  for (const path of WEBHOOK_PATHS) {
    console.log(`üìç –¢–µ—Å—Ç–∏—Ä—É—é: ${path}`);
    const result = await testWebhookPath(path);
    results.push(result);
    
    if (result.success) {
      console.log(`‚úÖ ${path} - –†–ê–ë–û–¢–ê–ï–¢`);
    } else {
      console.log(`‚ùå ${path} - ${result.status}`);
    }
  }
  
  console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:');
  const working = results.filter(r => r.success);
  const failed = results.filter(r => !r.success);
  
  console.log(`‚úÖ –†–∞–±–æ—Ç–∞—é—â–∏–µ –ø—É—Ç–∏: ${working.length}`);
  working.forEach(r => console.log(`  - ${r.path}`));
  
  console.log(`‚ùå –ù–µ—Ä–∞–±–æ—á–∏–µ –ø—É—Ç–∏: ${failed.length}`);
  failed.forEach(r => console.log(`  - ${r.path} (${r.status})`));
  
  if (working.length > 0) {
    console.log(`\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ${working[0].path} –¥–ª—è Telegram webhook`);
    return working[0].path;
  } else {
    console.log('\nüîß –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ - –≤—Å–µ –ø—É—Ç–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã');
    return null;
  }
}

testAllPaths();