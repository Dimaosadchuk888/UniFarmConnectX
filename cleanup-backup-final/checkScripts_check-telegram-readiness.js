
import fetch from 'node-fetch';
import dotenv from 'dotenv';

dotenv.config();

const API_BASE = 'https://uni-farm-connect-xo-osadchukdmitro2.replit.app';
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

console.log('üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Telegram Mini App\n');

// –≠—Ç–∞–ø 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
async function checkAPIEndpoints() {
  console.log('üì° –≠—Ç–∞–ø 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º /api/v2/me
    const meResponse = await fetch(`${API_BASE}/api/v2/me`, {
      headers: {
        'x-guest-id': 'test-guest-id-12345'
      }
    });
    
    console.log(`‚úÖ /api/v2/me —Å—Ç–∞—Ç—É—Å: ${meResponse.status}`);
    
    if (meResponse.status === 200) {
      const data = await meResponse.json();
      console.log('   –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    } else if (meResponse.status === 404) {
      console.log('   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (–æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ guest_id)');
    } else {
      console.log(`‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${meResponse.status}`);
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API: ${error.message}`);
  }
}

// –≠—Ç–∞–ø 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Bot –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
async function checkTelegramBot() {
  console.log('\nü§ñ –≠—Ç–∞–ø 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Bot');
  
  if (!BOT_TOKEN) {
    console.log('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    return;
  }
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getMe`);
    const botData = await botInfo.json();
    
    if (botData.ok) {
      console.log(`‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @${botData.result.username}`);
      console.log(`   ID: ${botData.result.id}`);
      console.log(`   –ò–º—è: ${botData.result.first_name}`);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    const webhookInfo = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
    const webhookData = await webhookInfo.json();
    
    if (webhookData.ok) {
      if (webhookData.result.url) {
        console.log(`‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${webhookData.result.url}`);
        console.log(`   –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${webhookData.result.last_error_message || '–Ω–µ—Ç'}`);
      } else {
        console.log('‚ö†Ô∏è Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      }
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞: ${error.message}`);
  }
}

// –≠—Ç–∞–ø 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î
async function checkDatabase() {
  console.log('\nüíæ –≠—Ç–∞–ø 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î');
  
  try {
    const response = await fetch(`${API_BASE}/api/admin/db-status`);
    
    if (response.status === 200) {
      const data = await response.json();
      console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞');
      
      if (data.tables) {
        console.log(`   –¢–∞–±–ª–∏—Ü –Ω–∞–π–¥–µ–Ω–æ: ${data.tables.length}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        const requiredTables = ['users', 'transactions', 'referrals', 'missions'];
        requiredTables.forEach(table => {
          if (data.tables.includes(table)) {
            console.log(`   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ ${table} –Ω–∞–π–¥–µ–Ω–∞`);
          } else {
            console.log(`   ‚ùå –¢–∞–±–ª–∏—Ü–∞ ${table} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
          }
        });
      }
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ë–î: —Å—Ç–∞—Ç—É—Å ${response.status}`);
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: ${error.message}`);
  }
}

// –≠—Ç–∞–ø 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ initData
async function checkInitDataValidation() {
  console.log('\nüîê –≠—Ç–∞–ø 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ initData');
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π initData (–Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π)
  const testInitData = 'user=%7B%22id%22%3A123456789%2C%22username%22%3A%22testuser%22%7D&auth_date=1640995200&hash=invalid_hash';
  
  try {
    const response = await fetch(`${API_BASE}/api/v2/auth/telegram`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-telegram-init-data': testInitData
      },
      body: JSON.stringify({
        telegram_id: 123456789,
        username: 'testuser',
        initData: testInitData
      })
    });
    
    console.log(`   –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ initData: —Å—Ç–∞—Ç—É—Å ${response.status}`);
    
    if (response.status === 403) {
      console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã');
    } else if (response.status === 200) {
      console.log('‚ö†Ô∏è –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)');
    } else {
      console.log(`‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: ${response.status}`);
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: ${error.message}`);
  }
}

// –≠—Ç–∞–ø 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
async function checkFunctionalModules() {
  console.log('\nüéÆ –≠—Ç–∞–ø 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π');
  
  const modules = [
    { name: '–ú–∏—Å—Å–∏–∏', endpoint: '/api/v2/missions' },
    { name: 'UNI –§–∞—Ä–º–∏–Ω–≥', endpoint: '/api/v2/uni-farming/status?user_id=1' },
    { name: 'TON –ë—É—Å—Ç—ã', endpoint: '/api/v2/ton-farming/info?user_id=1' },
    { name: 'Daily Bonus', endpoint: '/api/v2/daily-bonus/status?user_id=1' }
  ];
  
  for (const module of modules) {
    try {
      const response = await fetch(`${API_BASE}${module.endpoint}`);
      
      if (response.status === 200) {
        console.log(`   ‚úÖ ${module.name}: —Ä–∞–±–æ—Ç–∞–µ—Ç`);
      } else {
        console.log(`   ‚ùå ${module.name}: —Å—Ç–∞—Ç—É—Å ${response.status}`);
      }
    } catch (error) {
      console.log(`   ‚ùå ${module.name}: –æ—à–∏–±–∫–∞ ${error.message}`);
    }
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function runTelegramReadinessCheck() {
  await checkAPIEndpoints();
  await checkTelegramBot();
  await checkDatabase();
  await checkInitDataValidation();
  await checkFunctionalModules();
  
  console.log('\nüèÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã');
  console.log('2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º Telegram –∞–∫–∫–∞—É–Ω—Ç–æ–º');
  console.log('3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ Telegram Mini App');
}

runTelegramReadinessCheck().catch(console.error);
