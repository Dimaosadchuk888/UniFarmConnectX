/**
 * –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê USER #25 –í PRODUCTION SUPABASE
 * –¢–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
 */

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå SUPABASE_URL –∏–ª–∏ SUPABASE_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function diagnoseUser25() {
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê USER #25 –í PRODUCTION SUPABASE');
  console.log('================================================');
  
  try {
    // 1. –ü–æ–∏—Å–∫ User #25
    console.log('\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ User #25...');
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('id, telegram_id, username, balance_ton, ref_code, created_at')
      .or('id.eq.25,telegram_id.eq.425855744')
      .maybeSingle();
    
    if (userError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError.message);
      return;
    }
    
    if (!user) {
      console.log('‚ùå User #25 –ù–ï –ù–ê–ô–î–ï–ù –≤ Production Supabase');
      console.log('   - –ü—Ä–æ–≤–µ—Ä–∏–ª–∏ id=25 –∏ telegram_id=425855744');
      console.log('   - –í–æ–∑–º–æ–∂–Ω–æ –¥–∞–Ω–Ω—ã–µ –≤ –¥—Ä—É–≥–æ–π –±–∞–∑–µ/–æ–∫—Ä—É–∂–µ–Ω–∏–∏');
      return;
    }
    
    console.log('‚úÖ User –Ω–∞–π–¥–µ–Ω:', {
      id: user.id,
      telegram_id: user.telegram_id,
      username: user.username,
      balance_ton: user.balance_ton,
      ref_code: user.ref_code,
      created_at: user.created_at
    });
    
    // 2. –ü–æ–∏—Å–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è User #25
    console.log('\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
    const { data: transactions, error: txError } = await supabase
      .from('transactions')
      .select('id, type, amount, currency, status, description, created_at')
      .eq('user_id', user.id)
      .or('description.ilike.%00a1ba3c2614f4d65cc346805feea96042cb111351b3977c68f3379ddb90e1b4%,description.ilike.%TON%')
      .order('created_at', { ascending: false })
      .limit(10);
    
    if (txError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', txError.message);
    } else {
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${transactions?.length || 0} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:`);
      transactions?.forEach(tx => {
        console.log(`   - ID: ${tx.id}, Type: ${tx.type}, Amount: ${tx.amount} ${tx.currency}`);
        console.log(`     Description: ${tx.description}`);
        console.log(`     Created: ${tx.created_at}`);
      });
      
      // –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å —Ö–µ—à–µ–º
      const targetTx = transactions?.find(tx => 
        tx.description?.includes('00a1ba3c2614f4d65cc346805feea96042cb111351b3977c68f3379ddb90e1b4')
      );
      
      if (targetTx) {
        console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å —Ü–µ–ª–µ–≤—ã–º hash –ù–ê–ô–î–ï–ù–ê:', targetTx.id);
      } else {
        console.log('‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å hash 00a1ba3c... –ù–ï –ù–ê–ô–î–ï–ù–ê');
      }
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–µ–ø–æ–∑–∏—Ç–∞
    console.log('\n3. –ü–æ–∏—Å–∫ TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤...');
    const { data: deposits, error: depError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', user.id)
      .eq('currency', 'TON')
      .eq('type', 'DEPOSIT')
      .order('created_at', { ascending: false })
      .limit(5);
    
    if (depError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤:', depError.message);
    } else {
      console.log(`üí∞ –ù–∞–π–¥–µ–Ω–æ ${deposits?.length || 0} TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤:`);
      deposits?.forEach(dep => {
        console.log(`   - Amount: ${dep.amount} TON, Status: ${dep.status}`);
        console.log(`     Created: ${dep.created_at}`);
        console.log(`     Description: ${dep.description}`);
      });
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const { count: totalTx } = await supabase
      .from('transactions')
      .select('*', { count: 'exact', head: true })
      .eq('user_id', user.id);
    
    console.log(`üìà –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${totalTx}`);
    console.log(`üíµ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å TON: ${user.balance_ton}`);
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
diagnoseUser25();