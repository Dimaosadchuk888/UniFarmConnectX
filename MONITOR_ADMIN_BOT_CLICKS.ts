/**
 * –ñ–ò–í–û–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì –ù–ê–ñ–ê–¢–ò–ô –ö–ù–û–ü–û–ö –ê–î–ú–ò–ù –ë–û–¢–ê
 * –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–æ–≥–¥–∞ –Ω–∞–∂–∏–º–∞–µ—Ç—Å—è "–û–¥–æ–±—Ä–∏—Ç—å"
 */

import { supabase } from './core/supabase';

async function monitorAdminBotActivity() {
  console.log('üëÄ –ñ–ò–í–û–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì –ê–ö–¢–ò–í–ù–û–°–¢–ò –ê–î–ú–ò–ù –ë–û–¢–ê');
  console.log('=' .repeat(50));

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ adminBot –≤ –±–∞–∑–µ (–µ—Å–ª–∏ –µ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è)
    console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï–î–ù–ï–ô –ê–ö–¢–ò–í–ù–û–°–¢–ò –ê–î–ú–ò–ù –ë–û–¢–ê:');
    
    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å —Å —Å–∏–º—É–ª—è—Ü–∏–µ–π –Ω–∞–∂–∞—Ç–∏—è "–û–¥–æ–±—Ä–∏—Ç—å"
    console.log('\n2Ô∏è‚É£ –°–ò–ú–£–õ–Ø–¶–ò–Ø –ù–ê–ñ–ê–¢–ò–Ø –ö–ù–û–ü–ö–ò "–û–î–û–ë–†–ò–¢–¨":');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é –∑–∞—è–≤–∫—É
    const { data: testRequest } = await supabase
      .from('withdraw_requests')
      .select('id')
      .eq('status', 'pending')
      .limit(1)
      .maybeSingle();

    if (!testRequest) {
      console.log('‚ùå –ù–µ—Ç pending –∑–∞—è–≤–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    console.log(`üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∑–∞—è–≤–∫–æ–π ID: ${testRequest.id}`);

    // –°–∏–º—É–ª—è—Ü–∏—è callback_query –æ—Ç Telegram
    const callbackQueryPayload = {
      update_id: 999999,
      callback_query: {
        id: "test_callback_query_123",
        from: {
          id: 425855744, // ID –î–∏–º—ã
          is_bot: false,
          first_name: "Dima",
          username: "DimaOsadchuk",
          language_code: "ru"
        },
        message: {
          message_id: 123,
          from: {
            id: 7234567890, // ID –∞–¥–º–∏–Ω –±–æ—Ç–∞
            is_bot: true,
            first_name: "UniFarm Admin",
            username: "unifarm_admin_bot"
          },
          chat: {
            id: 425855744,
            first_name: "Dima",
            username: "DimaOsadchuk",
            type: "private"
          },
          date: Math.floor(Date.now() / 1000),
          text: "üö® –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –í–´–í–û–î...",
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å",
                  callback_data: `approve_withdrawal:${testRequest.id}`
                }
              ]
            ]
          }
        },
        chat_instance: "123456789",
        data: `approve_withdrawal:${testRequest.id}`
      }
    };

    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∫ webhook —Å callback_data: "${callbackQueryPayload.callback_query.data}"`);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫ webhook –∞–¥–º–∏–Ω –±–æ—Ç–∞
    try {
      const response = await fetch('http://localhost:3000/api/v2/admin-bot/webhook', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(callbackQueryPayload)
      });

      const responseText = await response.text();
      console.log(`üì¨ Webhook –æ—Ç–≤–µ—Ç: ${response.status} ${response.statusText}`);
      console.log(`üìÑ –û—Ç–≤–µ—Ç: ${responseText}`);

      // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
      await new Promise(resolve => setTimeout(resolve, 1000));

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
      const { data: updatedRequest } = await supabase
        .from('withdraw_requests')
        .select('status, processed_at, processed_by')
        .eq('id', testRequest.id)
        .single();

      console.log('\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢ –û–ë–†–ê–ë–û–¢–ö–ò:');
      if (updatedRequest?.status === 'approved') {
        console.log('‚úÖ –£–°–ü–ï–•! –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞:');
        console.log(`   - –°—Ç–∞—Ç—É—Å: ${updatedRequest.status}`);
        console.log(`   - –û–±—Ä–∞–±–æ—Ç–∞–Ω–∞: ${updatedRequest.processed_at}`);
        console.log(`   - –ö–µ–º: ${updatedRequest.processed_by}`);
      } else {
        console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê! –ó–∞—è–≤–∫–∞ –ù–ï –æ–¥–æ–±—Ä–µ–Ω–∞:');
        console.log(`   - –°—Ç–∞—Ç—É—Å: ${updatedRequest?.status || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
        console.log('   - –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ –∫–Ω–æ–ø–∫–∞ "–û–¥–æ–±—Ä–∏—Ç—å" –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞');
      }

    } catch (fetchError) {
      console.log('‚ùå –û–®–ò–ë–ö–ê WEBHOOK:', fetchError);
    }

    // 3. –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
    console.log('\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –í–û–ó–ú–û–ñ–ù–´–• –ü–†–ò–ß–ò–ù –ü–†–û–ë–õ–ï–ú–´:');
    console.log('üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã "–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞":');
    console.log('   1. Race condition - –∑–∞—è–≤–∫–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–æ–º');
    console.log('   2. –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∞–¥–º–∏–Ω–∞ –≤ callback_query');
    console.log('   3. –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ callback_data –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤');
    console.log('   4. –ü—Ä–æ–±–ª–µ–º–∞ —Å Supabase –ø–æ–∏—Å–∫–æ–º –ø–æ UUID');
    console.log('   5. –ö–æ–Ω—Ñ–ª–∏–∫—Ç –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:', error);
  }

  console.log('\nüéØ –ú–û–ù–ò–¢–û–†–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù');
  console.log('–¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –Ω–∞–∂–∞—Ç—å "–û–¥–æ–±—Ä–∏—Ç—å" –≤ —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ');
}

// –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitorAdminBotActivity().catch(console.error);