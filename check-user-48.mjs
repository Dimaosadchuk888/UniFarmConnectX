import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY
);

async function checkUser48() {
  console.log('\n=== –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï USER_ID=48 ===\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: user, error: userError } = await supabase
    .from('users')
    .select('*')
    .eq('id', 48)
    .single();
    
  if (userError) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
    return;
  }
  
  console.log('üë§ –î–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø 48:');
  console.log('ID:', user.id);
  console.log('Telegram ID:', user.telegram_id);
  console.log('Username:', user.username);
  console.log('First Name:', user.first_name);
  console.log('Last Name:', user.last_name);
  console.log('Ref Code:', user.ref_code);
  console.log('UNI Balance:', user.balance_uni);
  console.log('TON Balance:', user.balance_ton);
  console.log('TON Boost Package:', user.ton_boost_package);
  console.log('Is Active:', user.is_active);
  console.log('Banned:', user.banned);
  console.log('UNI Farming Active:', user.uni_farming_start_timestamp ? true : false);
  console.log('Created At:', user.created_at);
  
  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  const { data: transactions, error: txError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', 48)
    .order('created_at', { ascending: false })
    .limit(5);
    
  console.log('\nüìä –ü–û–°–õ–ï–î–ù–ò–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:');
  if (transactions && transactions.length > 0) {
    transactions.forEach(tx => {
      console.log(`- ${tx.type}: ${tx.amount} ${tx.currency} (${new Date(tx.created_at).toLocaleString()})`);
    });
  } else {
    console.log('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ boost –ø–æ–∫—É–ø–æ–∫
  const { data: boostPurchases } = await supabase
    .from('boost_purchases')
    .select('*')
    .eq('user_id', 48)
    .order('created_at', { ascending: false })
    .limit(5);
    
  console.log('\nüöÄ BOOST –ü–û–ö–£–ü–ö–ò:');
  if (boostPurchases && boostPurchases.length > 0) {
    boostPurchases.forEach(boost => {
      console.log(`- ${boost.package_name}: ${boost.amount} TON (${boost.status})`);
    });
  } else {
    console.log('Boost –ø–æ–∫—É–ø–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
  
  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
  const { data: referrals } = await supabase
    .from('users')
    .select('id, username, created_at')
    .eq('referred_by', 48);
    
  console.log('\nüë• –†–ï–§–ï–†–ê–õ–´:');
  console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', referrals?.length || 0);
}

checkUser48().catch(console.error);