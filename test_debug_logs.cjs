// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ console.log
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

async function testDebugLogs() {
  console.log('=== –¢–ï–°–¢ –õ–û–ì–û–í ===');
  
  const testTelegramId = Date.now();
  const testUsername = `test_${testTelegramId}`;
  const refCode = 'REF_1752755835358_yjrusv';
  
  console.log('üöÄ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:');
  console.log(`   telegram_id: ${testTelegramId}`);
  console.log(`   username: ${testUsername}`);
  console.log(`   ref_code: ${refCode}`);
  
  const authData = {
    direct_registration: true,
    telegram_id: testTelegramId,
    username: testUsername,
    first_name: "Test User",
    refBy: refCode
  };
  
  try {
    console.log('\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...');
    
    const authResponse = await fetch('http://localhost:3000/api/v2/auth/telegram', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(authData)
    });
    
    console.log(`üì• –û—Ç–≤–µ—Ç: ${authResponse.status} ${authResponse.statusText}`);
    
    if (authResponse.ok) {
      const result = await authResponse.json();
      console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç');
      console.log(`   user_id: ${result.data.user.id}`);
      console.log(`   referred_by: ${result.data.user.referred_by}`);
      
      // –û—á–∏—Å—Ç–∫–∞
      const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);
      await supabase.from('users').delete().eq('id', result.data.user.id);
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω');
    } else {
      const error = await authResponse.text();
      console.log('‚ùå –û—à–∏–±–∫–∞:', error);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
  }
  
  console.log('\n=== –ü–†–û–í–ï–†–¨–¢–ï –õ–û–ì–ò –°–ï–†–í–ï–†–ê ===');
  console.log('–ò—â–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è:');
  console.log('- üéØ –ù–ê–ß–ò–ù–ê–Æ –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–≤—è–∑–∏');
  console.log('- üéØ –†–ï–ó–£–õ–¨–¢–ê–¢ processReferral');
  console.log('- üéØ –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ');
  console.log('- üéØ –ü–†–û–ü–£–°–ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏');
}

testDebugLogs().catch(console.error);