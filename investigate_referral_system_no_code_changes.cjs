#!/usr/bin/env node
/**
 * –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´
 * –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ö–û–î–ê - —Ç–æ–ª—å–∫–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑
 */

const fs = require('fs');
const { exec } = require('child_process');

console.log('üîç –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´');
console.log('===============================================');
console.log('üìã –†–µ–∂–∏–º: –¢–û–õ–¨–ö–û –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–¥–∞)\n');

// 1. –ê–ù–ê–õ–ò–ó –ö–û–î–ê - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–Ω–µ—Å–µ–Ω—ã
function analyzeCodeChanges() {
    console.log('üìã 1. –ê–ù–ê–õ–ò–ó –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –í –ö–û–î–ï:');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º ValidationResult –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        const telegramUtils = fs.readFileSync('utils/telegram.ts', 'utf8');
        const hasStartParamInterface = telegramUtils.includes('start_param?: string');
        const hasStartParamExtraction = telegramUtils.includes('const start_param = urlParams.get(\'start_param\')');
        const hasStartParamReturn = telegramUtils.includes('return { valid: true, user, start_param }');
        
        console.log('   ‚úÖ ValidationResult.start_param:', hasStartParamInterface);
        console.log('   ‚úÖ start_param –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è:', hasStartParamExtraction);
        console.log('   ‚úÖ start_param –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è:', hasStartParamReturn);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º AuthService –∏–∑–º–µ–Ω–µ–Ω–∏—è
        const authService = fs.readFileSync('modules/auth/service.ts', 'utf8');
        const hasValidationStartParam = authService.includes('validation.start_param');
        const usesStartParamPriority = authService.includes('validation.start_param || options.ref_by') || 
                                      authService.includes('validation.start_param || refBy');
        const hasStartParamLogging = authService.includes('start_param: validation.start_param');
        
        console.log('   ‚úÖ validation.start_param –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è:', hasValidationStartParam);
        console.log('   ‚úÖ start_param –∏–º–µ–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:', usesStartParamPriority);
        console.log('   ‚úÖ start_param –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è:', hasStartParamLogging);
        
        const codeHealth = hasStartParamInterface && hasStartParamExtraction && 
                          hasStartParamReturn && hasValidationStartParam && 
                          usesStartParamPriority && hasStartParamLogging;
        
        console.log(`   üìä –û–ë–©–ò–ô –°–¢–ê–¢–£–° –ö–û–î–ê: ${codeHealth ? '‚úÖ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –í–ù–ï–°–ï–ù–´' : '‚ùå –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´'}\n`);
        
        return codeHealth;
    } catch (error) {
        console.log('   ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞:', error.message);
        return false;
    }
}

// 2. –°–ò–ú–£–õ–Ø–¶–ò–Ø validateTelegramInitData
function simulateValidation() {
    console.log('üìã 2. –°–ò–ú–£–õ–Ø–¶–ò–Ø –§–£–ù–ö–¶–ò–ò –í–ê–õ–ò–î–ê–¶–ò–ò:');
    
    const testCases = [
        {
            name: 'Telegram —Å—Å—ã–ª–∫–∞ —Å start_param',
            initData: 'user=%7B%22id%22%3A999999999%2C%22first_name%22%3A%22Test%22%7D&auth_date=1642632825&start_param=REF123&hash=abc'
        },
        {
            name: 'Telegram —Å—Å—ã–ª–∫–∞ —Å startapp',
            initData: 'user=%7B%22id%22%3A999999998%2C%22first_name%22%3A%22Test2%22%7D&auth_date=1642632825&startapp=PROMO456&hash=def'
        },
        {
            name: '–û–±—ã—á–Ω–∞—è —Å—Å—ã–ª–∫–∞ –±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª–∞',
            initData: 'user=%7B%22id%22%3A999999997%2C%22first_name%22%3A%22Test3%22%7D&auth_date=1642632825&hash=ghi'
        }
    ];
    
    testCases.forEach((testCase, index) => {
        console.log(`   ${index + 1}. ${testCase.name}:`);
        
        const params = new URLSearchParams(testCase.initData);
        const user = params.get('user');
        const start_param = params.get('start_param');
        const startapp = params.get('startapp');
        
        console.log(`      - user: ${user ? '–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
        console.log(`      - start_param: "${start_param || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}"`);
        console.log(`      - startapp: "${startapp || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}"`);
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        const expectedResult = {
            valid: true,
            user: user ? JSON.parse(user) : null,
            start_param: start_param || null
        };
        
        console.log(`      - –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${JSON.stringify(expectedResult, null, 8)}`);
        console.log();
    });
}

// 3. –¢–†–ê–°–°–ò–†–û–í–ö–ê –ü–û–¢–û–ö–ê –î–ê–ù–ù–´–•
function traceDataFlow() {
    console.log('üìã 3. –¢–†–ê–°–°–ò–†–û–í–ö–ê –ü–û–¢–û–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–•:');
    
    console.log('   üìä –ü–û–¢–û–ö –î–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø (0% —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å):');
    console.log('      1. Telegram initData —Å–æ–¥–µ—Ä–∂–∏—Ç start_param=REF123');
    console.log('      2. validateTelegramInitData –∏–∑–≤–ª–µ–∫–∞–µ—Ç start_param');
    console.log('      3. ‚ùå –ù–û –ù–ï –í–û–ó–í–†–ê–©–ê–ï–¢ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ { valid, user }');
    console.log('      4. AuthService –ø–æ–ª—É—á–∞–µ—Ç validation –ë–ï–ó start_param');
    console.log('      5. referralCode = undefined || options.ref_by');
    console.log('      6. processReferral –ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è (–Ω–µ—Ç refCode)');
    console.log('      7. ‚ùå referred_by –æ—Å—Ç–∞–µ—Ç—Å—è null\n');
    
    console.log('   üìä –ü–û–¢–û–ö –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø (95-100% —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å):');
    console.log('      1. Telegram initData —Å–æ–¥–µ—Ä–∂–∏—Ç start_param=REF123');
    console.log('      2. validateTelegramInitData –∏–∑–≤–ª–µ–∫–∞–µ—Ç start_param');
    console.log('      3. ‚úÖ –í–û–ó–í–†–ê–©–ê–ï–¢ { valid, user, start_param }');
    console.log('      4. AuthService –ø–æ–ª—É—á–∞–µ—Ç validation.start_param');
    console.log('      5. referralCode = "REF123" || options.ref_by');
    console.log('      6. ‚úÖ processReferral –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å refCode="REF123"');
    console.log('      7. ‚úÖ referred_by –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞\n');
}

// 4. –ê–ù–ê–õ–ò–ó –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –î–ê–ù–ù–´–•
async function analyzeExistingData() {
    console.log('üìã 4. –ê–ù–ê–õ–ò–ó –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –î–ê–ù–ù–´–• –í –°–ò–°–¢–ï–ú–ï:');
    
    return new Promise((resolve) => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö –≤ –ª–æ–≥–∞—Ö
        exec('find . -name "*.log" -o -name "logs" -type d 2>/dev/null', (error, stdout) => {
            if (stdout) {
                console.log('   üìÇ –ù–∞–π–¥–µ–Ω—ã –ª–æ–≥ —Ñ–∞–π–ª—ã/–ø–∞–ø–∫–∏:', stdout.trim());
            } else {
                console.log('   üìÇ –õ–æ–≥ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏');
            }
            
            // –ü–æ–∏—Å–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–¥–µ
            exec('grep -r "–†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–í–Ø–ó–¨" . --include="*.ts" --include="*.js" 2>/dev/null', (error, stdout) => {
                if (stdout) {
                    console.log('   üìä –ù–∞–π–¥–µ–Ω—ã —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –≤ –∫–æ–¥–µ:');
                    stdout.split('\n').slice(0, 3).forEach(line => {
                        if (line.trim()) console.log('      -', line.trim());
                    });
                } else {
                    console.log('   üìä –†–µ—Ñ–µ—Ä—Ä–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –≤ –∫–æ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                }
                
                resolve();
            });
        });
    });
}

// 5. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ
function testingRecommendations() {
    console.log('\nüìã 5. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ë–ï–ó–û–ü–ê–°–ù–û–ú–£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ:');
    
    console.log('   üß™ –í–ê–†–ò–ê–ù–¢ 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä–Ω—É—é –∫–æ–Ω—Å–æ–ª—å');
    console.log('      1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000');
    console.log('      2. –û—Ç–∫—Ä–æ–π—Ç–µ DevTools Console');
    console.log('      3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:');
    console.log('         fetch("/api/auth/telegram", {');
    console.log('           method: "POST",');
    console.log('           headers: { "Content-Type": "application/json" },');
    console.log('           body: JSON.stringify({');
    console.log('             initData: "user=%7B%22id%22%3A999999999%2C%22first_name%22%3A%22TestUser%22%7D&auth_date=' + Math.floor(Date.now() / 1000) + '&start_param=REF999&hash=test"');
    console.log('           })');
    console.log('         }).then(r => r.json()).then(console.log)');
    
    console.log('\n   üß™ –í–ê–†–ò–ê–ù–¢ 2: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞');
    console.log('      - –ò—â–∏—Ç–µ –∑–∞–ø–∏—Å–∏ "start_param: REF999"');
    console.log('      - –ò—â–∏—Ç–µ –∑–∞–ø–∏—Å–∏ "ref_by: REF999"');
    console.log('      - –ò—â–∏—Ç–µ –∑–∞–ø–∏—Å–∏ "validation.start_param"');
    console.log('      - –ò—â–∏—Ç–µ –∑–∞–ø–∏—Å–∏ "–†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–í–Ø–ó–¨ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù–ê"');
    
    console.log('\n   üß™ –í–ê–†–ò–ê–ù–¢ 3: –°–æ–∑–¥–∞–Ω–∏–µ HTML —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    console.log('      - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ test_complete_referral_fix.html');
    console.log('      - –ó–∞–ø—É—Å–∫–∞–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏');
    console.log('      - –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –æ—Ç–≤–µ—Ç—ã API –±–µ–∑ —Ä–∏—Å–∫–∞ –¥–ª—è –ë–î');
    
    console.log('\n   üß™ –í–ê–†–ò–ê–ù–¢ 4: –ê–Ω–∞–ª–∏–∑ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤');
    console.log('      - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ curl –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤');
    console.log('      - –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–æ–≤');
    console.log('      - –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –∏ —Å—Ç–∞—Ç—É—Å—ã');
}

// 6. –ö–†–ò–¢–ï–†–ò–ò –£–°–ü–ï–•–ê
function successCriteria() {
    console.log('\nüìã 6. –ö–†–ò–¢–ï–†–ò–ò –£–°–ü–ï–•–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:');
    
    console.log('   ‚úÖ –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –ö–†–ò–¢–ï–†–ò–ò:');
    console.log('      1. validateTelegramInitData –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç start_param');
    console.log('      2. AuthService –∏—Å–ø–æ–ª—å–∑—É–µ—Ç validation.start_param');
    console.log('      3. –í –ª–æ–≥–∞—Ö –ø–æ—è–≤–ª—è—é—Ç—Å—è –∑–∞–ø–∏—Å–∏ –æ start_param');
    console.log('      4. processReferral –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º');
    
    console.log('\n   ‚úÖ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –ö–†–ò–¢–ï–†–ò–ò:');
    console.log('      1. –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —Å referred_by != null');
    console.log('      2. –í —Ç–∞–±–ª–∏—Ü–µ referrals –ø–æ—è–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏');
    console.log('      3. –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('      4. –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã 95-100%');
    
    console.log('\n   ‚ö†Ô∏è  –ò–ù–î–ò–ö–ê–¢–û–†–´ –ü–†–û–ë–õ–ï–ú:');
    console.log('      ‚ùå start_param –Ω–µ –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏–∑ initData');
    console.log('      ‚ùå –í –ª–æ–≥–∞—Ö –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ validation.start_param');
    console.log('      ‚ùå processReferral –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è');
    console.log('      ‚ùå referred_by –æ—Å—Ç–∞–µ—Ç—Å—è null –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
}

// –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
async function main() {
    const codeOk = analyzeCodeChanges();
    simulateValidation();
    traceDataFlow();
    await analyzeExistingData();
    testingRecommendations();
    successCriteria();
    
    console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø:');
    
    if (codeOk) {
        console.log('‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã –≤ –∫–æ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
        console.log('‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∞');
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é');
        console.log('\nüìä –°–¢–ê–¢–£–°: –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´');
        console.log('üîú –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
    } else {
        console.log('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö –∫–æ–¥–∞');
        console.log('üîú –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –¥–æ–∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥');
    }
    
    console.log('\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏');
    console.log('–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º Telegram –∞–∫–∫–∞—É–Ω—Ç–æ–º');
    console.log('–∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –≤–∞–ª–∏–¥–Ω—ã–π HMAC –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.');
}

main().catch(console.error);