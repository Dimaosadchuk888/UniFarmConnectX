/**
 * –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–ë–†–ê–ë–û–¢–ö–ò CALLBACK_QUERY
 * –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ AdminBotController.handleUpdate()
 */

import { AdminBotController } from './modules/adminBot/controller';
import { supabase } from './core/supabase';

async function debugCallbackQueryProcessing() {
  console.log('üêõ –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CALLBACK_QUERY');
  console.log('=' .repeat(50));

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é –∑–∞—è–≤–∫—É
    const { data: testRequest } = await supabase
      .from('withdraw_requests')
      .select('id, username, amount_ton')
      .eq('status', 'pending')
      .limit(1)
      .maybeSingle();

    if (!testRequest) {
      console.log('‚ùå –ù–µ—Ç pending –∑–∞—è–≤–æ–∫');
      return;
    }

    console.log(`üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∑–∞—è–≤–∫–æ–π ID: ${testRequest.id}`);

    // 2. –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä AdminBotController
    console.log('\nüîß –°–û–ó–î–ê–ù–ò–ï ADMINBOTCONTROLLER:');
    const adminBotController = new AdminBotController();
    console.log('‚úÖ AdminBotController —Å–æ–∑–¥–∞–Ω');

    // 3. –°–∏–º—É–ª–∏—Ä—É–µ–º —Ç–æ—á–Ω—ã–π callback_query –æ—Ç Telegram
    const callbackQueryUpdate = {
      update_id: 123456789,
      callback_query: {
        id: "callback_query_test_123",
        from: {
          id: 425855744, // –î–∏–º–∞ –û—Å–∞–¥—á—É–∫
          is_bot: false,
          first_name: "Dima",
          username: "DimaOsadchuk",
          language_code: "ru"
        },
        message: {
          message_id: 456,
          from: {
            id: 7234567890, // Admin bot ID
            is_bot: true,
            first_name: "UniFarm Admin",
            username: "unifarm_admin_bot"
          },
          chat: {
            id: 425855744,
            first_name: "Dima",
            username: "DimaOsadchuk",
            type: "private"
          },
          date: Math.floor(Date.now() / 1000),
          text: "üö® –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –í–´–í–û–î..."
        },
        chat_instance: "test_chat_instance",
        data: `approve_withdrawal:${testRequest.id}`
      }
    };

    console.log(`üì§ –î–∞–Ω–Ω—ã–µ callback_query:`);
    console.log(`   - from.username: ${callbackQueryUpdate.callback_query.from.username}`);
    console.log(`   - data: ${callbackQueryUpdate.callback_query.data}`);

    // 4. –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ handleUpdate –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    console.log('\nüöÄ –ü–†–Ø–ú–û–ô –í–´–ó–û–í ADMINBOTCONTROLLER.HANDLEUPDATE:');
    
    try {
      await adminBotController.handleUpdate(callbackQueryUpdate);
      console.log('‚úÖ handleUpdate –≤—ã–ø–æ–ª–Ω–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
    } catch (error) {
      console.log('‚ùå –û–®–ò–ë–ö–ê –≤ handleUpdate:', error);
      if (error instanceof Error) {
        console.log('   - Message:', error.message);
        console.log('   - Stack:', error.stack);
      }
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
    console.log('\nüìã –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê:');
    const { data: updatedRequest } = await supabase
      .from('withdraw_requests')
      .select('status, processed_at, processed_by')
      .eq('id', testRequest.id)
      .single();

    if (updatedRequest?.status === 'approved') {
      console.log('‚úÖ –£–°–ü–ï–•! –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞:');
      console.log(`   - –°—Ç–∞—Ç—É—Å: ${updatedRequest.status}`);
      console.log(`   - –í—Ä–µ–º—è: ${updatedRequest.processed_at}`);
      console.log(`   - –ö–µ–º: ${updatedRequest.processed_by}`);
    } else {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê! –ó–∞—è–≤–∫–∞ –ù–ï –æ–¥–æ–±—Ä–µ–Ω–∞:');
      console.log(`   - –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: ${updatedRequest?.status}`);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã
      console.log('\nüîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:');
      console.log('   1. –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∞–¥–º–∏–Ω–∞');
      console.log('   2. –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ callback_data');
      console.log('   3. –ü—Ä–æ–±–ª–µ–º–∞ —Å approveWithdrawal()');
      console.log('   4. –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ');
    }

    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –æ—Ç–¥–µ–ª—å–Ω–æ
    console.log('\nüîê –¢–ï–°–¢ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ê–î–ú–ò–ù–ê:');
    const { AdminBotService } = await import('./modules/adminBot/service');
    const adminBotService = new AdminBotService();
    
    const isAuthorized = await adminBotService.isAuthorizedAdmin('DimaOsadchuk');
    console.log(`   - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è DimaOsadchuk: ${isAuthorized ? '–†–ê–ó–†–ï–®–ï–ù–ê' : '–ó–ê–ü–†–ï–©–ï–ù–ê'}`);

    // 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é approveWithdrawal –æ—Ç–¥–µ–ª—å–Ω–æ
    console.log('\n‚öôÔ∏è –ü–†–Ø–ú–û–ô –¢–ï–°–¢ APPROVEWITHDRAWAL:');
    try {
      const approveResult = await adminBotService.approveWithdrawal(testRequest.id, 'DimaOsadchuk');
      console.log(`   - –†–µ–∑—É–ª—å—Ç–∞—Ç approveWithdrawal: ${approveResult ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê'}`);
      
      if (approveResult) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑ —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞
        const { data: finalCheck } = await supabase
          .from('withdraw_requests')
          .select('status')
          .eq('id', testRequest.id)
          .single();
        console.log(`   - –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${finalCheck?.status}`);
      }
    } catch (approveError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤ approveWithdrawal:', approveError);
    }

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }

  console.log('\nüéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
debugCallbackQueryProcessing().catch(console.error);