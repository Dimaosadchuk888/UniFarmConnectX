import { supabase } from './core/supabase';

async function deepInvestigation() {
  console.log('üîç –£–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã TON Boost\n');

  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ users
  console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ users –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74:');
  
  const { data: user, error: userError } = await supabase
    .from('users')
    .select('*')
    .eq('id', 74)
    .single();

  if (!userError && user) {
    console.log('\nüìä –ü–æ–ª—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å TON Boost:');
    console.log(`- ton_boost_active: ${user.ton_boost_active}`);
    console.log(`- ton_boost_package: ${user.ton_boost_package}`); 
    console.log(`- ton_farming_deposit: ${user.ton_farming_deposit}`);
    console.log(`- ton_farming_balance: ${user.ton_farming_balance}`);
    console.log(`- ton_farming_rate: ${user.ton_farming_rate}%`);
    console.log(`- ton_farming_last_update: ${user.ton_farming_last_update ? new Date(user.ton_farming_last_update).toLocaleString() : 'null'}`);
  }

  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫ TON Boost
  console.log('\n2Ô∏è‚É£ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74:');
  
  const { data: purchases, error: purchaseError } = await supabase
    .from('transactions')
    .select('*')
    .eq('user_id', 74)
    .like('description', '%–ü–æ–∫—É–ø–∫–∞ TON Boost%')
    .order('created_at', { ascending: false })
    .limit(10);

  if (!purchaseError && purchases) {
    console.log(`\n–ù–∞–π–¥–µ–Ω–æ ${purchases.length} –ø–æ–∫—É–ø–æ–∫:`);
    let totalSpent = 0;
    purchases.forEach((tx, index) => {
      console.log(`\n${index + 1}. ${tx.description}`);
      console.log(`   –°—É–º–º–∞: ${tx.amount} TON`);
      console.log(`   –î–∞—Ç–∞: ${new Date(tx.created_at).toLocaleString()}`);
      totalSpent += parseFloat(tx.amount);
    });
    console.log(`\nüí∞ –û–±—â–∞—è —Å—É–º–º–∞ –ø–æ—Ç—Ä–∞—á–µ–Ω–∞ –Ω–∞ TON Boost: ${totalSpent} TON`);
  }

  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å ton_boost_active
  console.log('\n3Ô∏è‚É£ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ TON Boost (–∏–∑ —Ç–∞–±–ª–∏—Ü—ã users):');
  
  const { data: activeUsers, error: activeError } = await supabase
    .from('users')
    .select('id, telegram_id, ton_boost_active, ton_boost_package, ton_farming_balance, ton_farming_deposit')
    .eq('ton_boost_active', true)
    .order('ton_farming_balance', { ascending: false });

  if (!activeError && activeUsers) {
    console.log(`\n–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö: ${activeUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-5 –ø–æ –±–∞–ª–∞–Ω—Å—É
    console.log('\n–¢–æ–ø-5 –ø–æ –±–∞–ª–∞–Ω—Å—É —Ñ–∞—Ä–º–∏–Ω–≥–∞:');
    activeUsers.slice(0, 5).forEach((user, index) => {
      console.log(`${index + 1}. User ${user.id} (telegram: ${user.telegram_id})`);
      console.log(`   –ü–∞–∫–µ—Ç: ${user.ton_boost_package}`);
      console.log(`   –î–µ–ø–æ–∑–∏—Ç: ${user.ton_farming_deposit} TON`);
      console.log(`   –ë–∞–ª–∞–Ω—Å: ${user.ton_farming_balance} TON`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74
    const user74 = activeUsers.find(u => u.id === 74);
    if (user74) {
      console.log(`\n‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 74 –ê–ö–¢–ò–í–ï–ù –≤ TON Boost!`);
      console.log(`–ù–æ –µ–≥–æ –±–∞–ª–∞–Ω—Å —Ñ–∞—Ä–º–∏–Ω–≥–∞: ${user74.ton_farming_balance} TON`);
    } else {
      console.log(`\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 74 –ù–ï –∞–∫—Ç–∏–≤–µ–Ω –≤ TON Boost`);
    }
  }

  // 4. –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—á–µ—Ç–∞ –¥–æ—Ö–æ–¥–∞
  if (user && user.ton_boost_active) {
    console.log('\n4Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—á–µ—Ç–∞ –¥–æ—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74:');
    
    const deposit = parseFloat(user.ton_farming_deposit) || 0;
    const balance = parseFloat(user.ton_farming_balance) || 0;
    const rate = parseFloat(user.ton_farming_rate) || 0;
    
    console.log(`\nüìä –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞:`);
    console.log(`- –î–µ–ø–æ–∑–∏—Ç: ${deposit} TON`);
    console.log(`- –ë–∞–ª–∞–Ω—Å: ${balance} TON`);
    console.log(`- –°—Ç–∞–≤–∫–∞: ${rate}% –≤ –¥–µ–Ω—å`);
    
    const dailyIncome = balance * (rate / 100);
    const incomePerMinute = dailyIncome / 1440; // 1440 –º–∏–Ω—É—Ç –≤ –¥–Ω–µ
    const incomePer5Minutes = incomePerMinute * 5;
    
    console.log(`\nüí∞ –†–∞—Å—á–µ—Ç–Ω—ã–π –¥–æ—Ö–æ–¥:`);
    console.log(`- –í –¥–µ–Ω—å: ${dailyIncome.toFixed(6)} TON`);
    console.log(`- –ó–∞ 5 –º–∏–Ω—É—Ç: ${incomePer5Minutes.toFixed(6)} TON`);
    
    console.log(`\nüîç –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –¥–æ—Ö–æ–¥ –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ~0.043 TON –∑–∞ 5 –º–∏–Ω—É—Ç`);
    
    if (Math.abs(incomePer5Minutes - 0.043) > 0.001) {
      console.log('\n‚ö†Ô∏è –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –º–µ–∂–¥—É —Ä–∞—Å—á–µ—Ç–Ω—ã–º –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –¥–æ—Ö–æ–¥–æ–º!');
      
      // –û–±—Ä–∞—Ç–Ω—ã–π —Ä–∞—Å—á–µ—Ç - –∫–∞–∫–æ–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–∞–ª–∞–Ω—Å –¥–ª—è –¥–æ—Ö–æ–¥–∞ 0.043
      const actualBalance = (0.043 * 1440) / (5 * rate / 100);
      console.log(`\nüî¢ –û–±—Ä–∞—Ç–Ω—ã–π —Ä–∞—Å—á–µ—Ç:`);
      console.log(`–î–ª—è –¥–æ—Ö–æ–¥–∞ 0.043 TON –∑–∞ 5 –º–∏–Ω—É—Ç –ø—Ä–∏ —Å—Ç–∞–≤–∫–µ ${rate}%`);
      console.log(`–ù–µ–æ–±—Ö–æ–¥–∏–º –±–∞–ª–∞–Ω—Å: ${actualBalance.toFixed(2)} TON`);
    }
  }

  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
  console.log('\n5Ô∏è‚É£ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:');
  
  const lastIncome = 0.043065548; // –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  const rate = 1.5; // Standard Boost - 1.5% –≤ –¥–µ–Ω—å
  const minutesPerDay = 1440;
  const incomeInterval = 5; // –º–∏–Ω—É—Ç
  
  const calculatedBalance = (lastIncome * minutesPerDay) / (incomeInterval * rate / 100);
  
  console.log(`\nüî¢ –†–∞—Å—á–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:`);
  console.log(`- –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥: ${lastIncome} TON –∑–∞ 5 –º–∏–Ω—É—Ç`);
  console.log(`- –°—Ç–∞–≤–∫–∞: ${rate}% –≤ –¥–µ–Ω—å`);
  console.log(`- –†–∞—Å—á–µ—Ç–Ω—ã–π –±–∞–ª–∞–Ω—Å –≤ —Ñ–∞—Ä–º–∏–Ω–≥–µ: ${calculatedBalance.toFixed(2)} TON`);
  
  console.log(`\n‚ùó –í–´–í–û–î: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 74 –∏–º–µ–µ—Ç ~${calculatedBalance.toFixed(0)} TON –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Ñ–∞—Ä–º–∏–Ω–≥–µ,`);
  console.log(`–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–∞–Ω –±–∞–ª–∞–Ω—Å ${user?.ton_farming_balance || 0} TON`);
}

deepInvestigation().catch(console.error);