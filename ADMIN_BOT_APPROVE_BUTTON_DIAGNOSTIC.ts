/**
 * –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –ö–ù–û–ü–ö–û–ô "–û–î–û–ë–†–ò–¢–¨"
 * –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: –ø–æ—á–µ–º—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–û–¥–æ–±—Ä–∏—Ç—å" –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç "–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
 */

import { supabase } from './core/supabase';
import { logger } from './core/logger';

async function diagnosticApproveButtonIssue() {
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –ö–ù–û–ü–ö–û–ô "–û–î–û–ë–†–ò–¢–¨"');
  console.log('=' .repeat(60));

  try {
    // 1. –ü–†–û–í–ï–†–Ø–ï–ú –°–¢–†–£–ö–¢–£–†–£ CALLBACK_DATA –í –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø–•
    console.log('\n1Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ CALLBACK_DATA:');
    console.log('üìÑ –í notifyWithdrawal() —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏:');
    console.log('   - –û–¥–æ–±—Ä–∏—Ç—å: callback_data = `approve_withdrawal:${withdrawRequest.id}`');
    console.log('   - –û—Ç–∫–ª–æ–Ω–∏—Ç—å: callback_data = `reject_withdrawal:${withdrawRequest.id}`');
    console.log('');
    console.log('üîÑ –í handleCallbackQuery() –æ–±—Ä–∞–±–æ—Ç–∫–∞:');
    console.log('   - action = "approve_withdrawal"');
    console.log('   - params[0] = requestId');
    console.log('   - –í—ã–∑—ã–≤–∞–µ—Ç—Å—è: handleApproveCommand(chatId, [params[0]], username)');

    // 2. –ü–û–õ–£–ß–ê–ï–ú –†–ï–ê–õ–¨–ù–£–Æ –ó–ê–Ø–í–ö–£ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
    console.log('\n2Ô∏è‚É£ –ü–û–õ–£–ß–ï–ù–ò–ï –†–ï–ê–õ–¨–ù–û–ô –ó–ê–Ø–í–ö–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    const { data: testRequest, error: requestError } = await supabase
      .from('withdraw_requests')
      .select('*')
      .eq('status', 'pending')
      .order('created_at', { ascending: false })
      .limit(1)
      .maybeSingle();

    if (requestError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏:', requestError.message);
      return;
    }

    if (!testRequest) {
      console.log('‚ùå –ù–µ—Ç pending –∑–∞—è–≤–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞:`);
    console.log(`   - ID: ${testRequest.id}`);
    console.log(`   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${testRequest.username || testRequest.telegram_id}`);
    console.log(`   - –°—É–º–º–∞: ${testRequest.amount_ton} TON`);
    console.log(`   - –°—Ç–∞—Ç—É—Å: ${testRequest.status}`);

    // 3. –¢–ï–°–¢–ò–†–£–ï–ú –ü–û–ò–°–ö –ó–ê–Ø–í–ö–ò –ü–û ID (–ö–ê–ö –í approveWithdrawal)
    console.log('\n3Ô∏è‚É£ –¢–ï–°–¢ –ü–û–ò–°–ö–ê –ó–ê–Ø–í–ö–ò –ü–û ID (–ö–ê–ö –í approveWithdrawal):');
    const { data: foundRequest, error: fetchError } = await supabase
      .from('withdraw_requests')
      .select('*')
      .eq('id', testRequest.id)
      .single();

    if (fetchError) {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê! –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞—è–≤–∫–∏:', fetchError.message);
      console.log('   - Code:', fetchError.code);
      console.log('   - Details:', fetchError.details);
      console.log('   - Hint:', fetchError.hint);
    } else if (!foundRequest) {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê! –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ ID');
    } else {
      console.log('‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ:');
      console.log(`   - ID: ${foundRequest.id}`);
      console.log(`   - –°—Ç–∞—Ç—É—Å: ${foundRequest.status}`);
    }

    // 4. –ê–ù–ê–õ–ò–ó –í–û–ó–ú–û–ñ–ù–´–• –ü–†–û–ë–õ–ï–ú
    console.log('\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –í–û–ó–ú–û–ñ–ù–´–• –ü–†–û–ë–õ–ï–ú:');
    
    // 4.1 –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç ID (UUID vs —á–∏—Å–ª–æ)
    console.log(`üîç –§–æ—Ä–º–∞—Ç ID –∑–∞—è–≤–∫–∏: ${testRequest.id}`);
    const isUUID = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(testRequest.id);
    console.log(`   - –≠—Ç–æ UUID: ${isUUID ? '–î–ê' : '–ù–ï–¢'}`);

    // 4.2 –ü—Ä–æ–≤–µ—Ä—è–µ–º callback_data –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
    const expectedCallbackData = `approve_withdrawal:${testRequest.id}`;
    console.log(`üîó –û–∂–∏–¥–∞–µ–º—ã–π callback_data: "${expectedCallbackData}"`);
    console.log(`   - –î–ª–∏–Ω–∞: ${expectedCallbackData.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    // Telegram –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç callback_data –¥–æ 64 –±–∞–π—Ç
    if (expectedCallbackData.length > 64) {
      console.log('‚ö†Ô∏è –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: callback_data –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç 64 —Å–∏–º–≤–æ–ª–∞!');
    }

    // 4.3 –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–±–æ—Ä callback_data
    const parts = expectedCallbackData.split(':');
    const action = parts[0];
    const params = parts.slice(1);
    console.log(`üîÑ –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–∑–±–æ—Ä–∞ callback_data:`);
    console.log(`   - action: "${action}"`);
    console.log(`   - params[0]: "${params[0]}"`);
    console.log(`   - params.length: ${params.length}`);

    // 5. –ü–†–û–í–ï–†–Ø–ï–ú –í–°–ï PENDING –ó–ê–Ø–í–ö–ò
    console.log('\n5Ô∏è‚É£ –°–ü–ò–°–û–ö –í–°–ï–• PENDING –ó–ê–Ø–í–û–ö:');
    const { data: allPending, error: allError } = await supabase
      .from('withdraw_requests')
      .select('id, username, amount_ton, created_at, status')
      .eq('status', 'pending')
      .order('created_at', { ascending: false })
      .limit(10);

    if (allError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫:', allError.message);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ pending –∑–∞—è–≤–æ–∫: ${allPending?.length || 0}`);
      allPending?.forEach((req, index) => {
        const callbackLength = `approve_withdrawal:${req.id}`.length;
        const status = callbackLength > 64 ? '‚ö†Ô∏è –î–õ–ò–ù–ù–û' : '‚úÖ';
        console.log(`   ${index + 1}. ${req.id} (${req.username}) - callback: ${callbackLength} —Å–∏–º–≤–æ–ª–æ–≤ ${status}`);
      });
    }

    // 6. –ü–†–û–í–ï–†–Ø–ï–ú –õ–û–ì–ò –ê–î–ú–ò–ù –ë–û–¢–ê
    console.log('\n6Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ü–†–û–í–ï–†–ö–ï –õ–û–ì–û–í:');
    console.log('üìã –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –Ω–∞–∂–∞—Ç–∏–∏ "–û–¥–æ–±—Ä–∏—Ç—å" –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞:');
    console.log('   - [AdminBot] –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram');
    console.log('   - [AdminBot] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback query');
    console.log('   - [AdminBot] Callback query –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log('   - [AdminBot] Withdrawal request not found');
    console.log('   - [AdminBot] Error approving withdrawal');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }

  console.log('\n' + '=' .repeat(60));
  console.log('üîö –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê');
  console.log('üéØ –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì: –ù–∞–∂–º–∏—Ç–µ "–û–¥–æ–±—Ä–∏—Ç—å" –≤ –±–æ—Ç–µ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞');
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
diagnosticApproveButtonIssue().catch(console.error);