#!/usr/bin/env tsx
/**
 * üîç –ê–ù–ê–õ–ò–ó –ü–û–¢–û–ö–ê –û–ë–†–ê–ë–û–¢–ö–ò –î–ï–ü–û–ó–ò–¢–û–í
 * –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–æ—á–µ–∫ –≤ –∫–æ–¥–µ –≥–¥–µ –º–æ–∂–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Å–±–æ–π
 */

import { supabase } from './core/supabase';

async function analyzeDepositProcessingFlow() {
  console.log('üîç –ê–ù–ê–õ–ò–ó –ü–û–¢–û–ö–ê –û–ë–†–ê–ë–û–¢–ö–ò –î–ï–ü–û–ó–ò–¢–û–í');
  console.log('='.repeat(80));

  try {
    // –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞  
    console.log('\nüìä –ö–†–ê–¢–ö–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´:');
    console.log('- –ò–∑ 27 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å TON Boost, 21 –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö (77.8%)');
    console.log('- –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞: NO_DEPOSITS –∏–ª–∏ INSUFFICIENT_DEPOSITS');
    console.log('- –í—Ä–µ–º—è: –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏—é–ª—å 2025 (17 –∏–∑ 21)');
    console.log('- –¢–æ–ª—å–∫–æ 3 —É—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞ —Å August 2025');
    
    // 1. –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –Ω—É–ª–µ–≤—ã–º–∏ –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏ –Ω–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º
    console.log('\n1Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –° –ü–û–õ–û–ñ–ò–¢–ï–õ–¨–ù–´–ú –ë–ê–õ–ê–ù–°–û–ú –ë–ï–ó –î–ï–ü–û–ó–ò–¢–û–í:');
    
    const problematicUsers = [255, 305, 192, 230, 246, 245, 194, 307, 226]; // NO_DEPOSITS users
    
    for (const userId of problematicUsers.slice(0, 5)) {
      const { data: user } = await supabase
        .from('users')
        .select('id, username, balance_ton, ton_boost_active, ton_boost_package')
        .eq('id', userId)
        .single();

      if (user && user.balance_ton > 0) {
        console.log(`\nüîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} (${user.username}):`);
        console.log(`   Balance TON: ${user.balance_ton}`);
        console.log(`   TON Boost: –ø–∞–∫–µ—Ç ${user.ton_boost_package}, –∞–∫—Ç–∏–≤–µ–Ω: ${user.ton_boost_active}`);
        
        // –ò—â–µ–º –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–µ–ª –±–∞–ª–∞–Ω—Å (–µ—Å–ª–∏ –Ω–µ –∏–∑ –¥–µ–ø–æ–∑–∏—Ç–æ–≤)
        const { data: tonTx } = await supabase
          .from('transactions')
          .select('type, amount, description, created_at')
          .eq('user_id', userId)
          .eq('currency', 'TON')
          .order('created_at', { ascending: true });

        console.log(`   –ò—Å—Ç–æ—á–Ω–∏–∫–∏ TON –±–∞–ª–∞–Ω—Å–∞:`);
        tonTx?.forEach((tx, i) => {
          if (i < 3) { // –ø–µ—Ä–≤—ã–µ 3 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            console.log(`     ${tx.type}: ${tx.amount} TON (${tx.created_at.slice(0, 16)})`);
          }
        });
        
        const totalFromRewards = tonTx
          ?.filter(tx => tx.type === 'REFERRAL_REWARD' || tx.type === 'FARMING_REWARD')
          .reduce((sum, tx) => sum + parseFloat(tx.amount || '0'), 0) || 0;
          
        console.log(`   –í—Å–µ–≥–æ –æ—Ç rewards: ${totalFromRewards.toFixed(6)} TON`);
        console.log(`   –ù–µ–æ–±—ä—è—Å–Ω–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${(user.balance_ton - totalFromRewards).toFixed(6)} TON`);
      }
    }

    // 2. –ü–æ–∏—Å–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º pending –∏–ª–∏ failed
    console.log('\n2Ô∏è‚É£ –ü–û–ò–°–ö –ó–ê–í–ò–°–®–ò–• –ò –ù–ï–£–î–ê–í–®–ò–•–°–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
    
    const { data: pendingTx, error: pendingError } = await supabase
      .from('transactions')
      .select('user_id, type, amount, status, created_at, metadata')
      .eq('type', 'TON_DEPOSIT')
      .in('status', ['pending', 'failed', 'error'])
      .gte('created_at', '2025-07-01T00:00:00.000Z')
      .order('created_at', { ascending: false });

    if (!pendingError && pendingTx) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–≤–∏—Å—à–∏—Ö/–Ω–µ—É–¥–∞–≤—à–∏—Ö—Å—è TON –¥–µ–ø–æ–∑–∏—Ç–æ–≤: ${pendingTx.length}`);
      
      pendingTx.forEach((tx, i) => {
        console.log(`\n‚è≥ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${i + 1}:`);
        console.log(`   user_id: ${tx.user_id}, amount: ${tx.amount} TON`);
        console.log(`   status: ${tx.status}, created: ${tx.created_at}`);
        console.log(`   metadata:`, tx.metadata);
      });
    }

    // 3. –ê–Ω–∞–ª–∏–∑ metadata –≤ TON_DEPOSIT —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö
    console.log('\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó METADATA –í TON –î–ï–ü–û–ó–ò–¢–ê–•:');
    
    const { data: allDeposits, error: allDepositsError } = await supabase
      .from('transactions')
      .select('user_id, amount, metadata, created_at')
      .eq('type', 'TON_DEPOSIT')
      .gte('created_at', '2025-07-01T00:00:00.000Z')
      .order('created_at', { ascending: false })
      .limit(10);

    if (!allDepositsError && allDeposits) {
      console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ metadata –ø–æ—Å–ª–µ–¥–Ω–∏—Ö ${allDeposits.length} –¥–µ–ø–æ–∑–∏—Ç–æ–≤:`);
      
      const metadataTypes = {};
      allDeposits.forEach(dep => {
        const metadata = dep.metadata || {};
        const type = metadata.transaction_type || 'unknown';
        metadataTypes[type] = (metadataTypes[type] || 0) + 1;
      });
      
      console.log('üìä –¢–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ metadata:');
      Object.entries(metadataTypes).forEach(([type, count]) => {
        console.log(`   ${type}: ${count} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      });
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ UnifiedTransactionService
    console.log('\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –î–ï–î–£–ü–õ–ò–ö–ê–¶–ò–ò –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
    
    // –ü–æ–∏—Å–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ tx_hash
    const { data: duplicateTx, error: dupError } = await supabase
      .from('transactions')
      .select('tx_hash, COUNT(*) as count')
      .eq('type', 'TON_DEPOSIT')
      .not('tx_hash', 'is', null)
      .gte('created_at', '2025-07-01T00:00:00.000Z')
      .group('tx_hash')
      .having('COUNT(*)', 'gt', 1);

    if (!dupError && duplicateTx) {
      console.log(`üîç –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö tx_hash: ${duplicateTx.length}`);
      
      if (duplicateTx.length > 0) {
        console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞–π–¥–µ–Ω—ã!');
        duplicateTx.slice(0, 3).forEach(dup => {
          console.log(`   tx_hash: ${dup.tx_hash?.slice(0, 20)}... (${dup.count} —Ä–∞–∑)`);
        });
      }
    }

    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–æ–Ω –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ TON Boost
    console.log('\n5Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –í–†–ï–ú–ï–ù–ù–´–• –û–ö–û–ù –ê–ö–¢–ò–í–ê–¶–ò–ò TON BOOST:');
    
    // –î–ª—è 3 –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–º–æ—Ç—Ä–∏–º –∫–æ–≥–¥–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª—Å—è boost
    const sampleUsers = [255, 305, 192];
    
    for (const userId of sampleUsers) {
      const { data: firstBoost } = await supabase
        .from('transactions')
        .select('created_at, description')
        .eq('user_id', userId)
        .ilike('description', '%TON Boost%')
        .order('created_at', { ascending: true })
        .limit(1);

      if (firstBoost && firstBoost.length > 0) {
        console.log(`\n‚è∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}:`);
        console.log(`   –ü–µ—Ä–≤—ã–π TON Boost –¥–æ—Ö–æ–¥: ${firstBoost[0].created_at}`);
        
        // –ò—â–µ–º –¥–µ–ø–æ–∑–∏—Ç—ã –≤ –æ–∫–Ω–µ ¬±2 —á–∞—Å–∞
        const boostTime = new Date(firstBoost[0].created_at);
        const windowStart = new Date(boostTime.getTime() - 2 * 60 * 60 * 1000);
        const windowEnd = new Date(boostTime.getTime() + 2 * 60 * 60 * 1000);
        
        const { data: nearbyDeposits } = await supabase
          .from('transactions')
          .select('user_id, amount, created_at')
          .eq('type', 'TON_DEPOSIT')
          .gte('created_at', windowStart.toISOString())
          .lte('created_at', windowEnd.toISOString());

        console.log(`   –î–µ–ø–æ–∑–∏—Ç—ã –≤ –æ–∫–Ω–µ ¬±2 —á–∞—Å–∞: ${nearbyDeposits?.length || 0}`);
        nearbyDeposits?.forEach(dep => {
          const diffMinutes = Math.round((new Date(dep.created_at).getTime() - boostTime.getTime()) / (1000 * 60));
          console.log(`     user_id ${dep.user_id}: ${dep.amount} TON (${diffMinutes > 0 ? '+' : ''}${diffMinutes} –º–∏–Ω)`);
        });
      }
    }

    console.log('\n' + '='.repeat(80));
    console.log('üéØ –í–´–Ø–í–õ–ï–ù–ù–´–ï –ü–ê–¢–¢–ï–†–ù–´ –°–ò–°–¢–ï–ú–ù–û–ô –ü–†–û–ë–õ–ï–ú–´:');
    console.log('');
    console.log('1. üîÑ –ü–†–û–ë–õ–ï–ú–ê –ß–ê–°–¢–ò–ß–ù–û–ô –û–ë–†–ê–ë–û–¢–ö–ò:');
    console.log('   - TON Boost –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è (–≤–∏–¥–∏–º –¥–æ—Ö–æ–¥—ã)');
    console.log('   - –ù–æ TON_DEPOSIT –∑–∞–ø–∏—Å–∏ –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è');
    console.log('   - –ë–∞–ª–∞–Ω—Å —á–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è (–æ—Ç–∫—É–¥–∞-—Ç–æ –±–µ—Ä–µ—Ç—Å—è TON)');
    console.log('');
    console.log('2. ‚è±Ô∏è –í–†–ï–ú–ï–ù–ù–ê–Ø –î–ï–°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø:');
    console.log('   - Boost –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è');
    console.log('   - –ù–æ –¥–µ–ø–æ–∑–∏—Ç—ã –≤ —ç—Ç–æ –≤—Ä–µ–º—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    console.log('   - –í–æ–∑–º–æ–∂–Ω–æ webhook vs scheduler —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ');
    console.log('');
    console.log('3. üìä –°–¢–ê–¢–ò–°–¢–ò–ß–ï–°–ö–ê–Ø –ê–ù–û–ú–ê–õ–ò–Ø:');
    console.log('   - 77.8% –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑ TON Boost –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    console.log('   - –¢–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∏–¥–µ–∞–ª—å–Ω–æ');
    console.log('   - –ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞—á–∞–ª–∞—Å—å –≤ –∏—é–ª–µ 2025');
    console.log('');
    console.log('4. üîß –í–ï–†–û–Ø–¢–ù–´–ï –ü–†–ò–ß–ò–ù–´:');
    console.log('   a) Webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–æ –ø–∞–¥–∞–µ—Ç –Ω–∞ —ç—Ç–∞–ø–µ —Å–æ–∑–¥–∞–Ω–∏—è TON_DEPOSIT');
    console.log('   b) UnifiedTransactionService –±–ª–æ–∫–∏—Ä—É–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã –Ω–æ –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∑–∞–ø–∏—Å—å');
    console.log('   c) Scheduler –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç boost –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('   d) Race condition –º–µ–∂–¥—É webhook –∏ scheduler –æ–±—Ä–∞–±–æ—Ç–∫–æ–π');
    console.log('='.repeat(80));

  } catch (error) {
    console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ê–ù–ê–õ–ò–ó–ê:', error);
  }
}

analyzeDepositProcessingFlow().catch(console.error);