#!/usr/bin/env node

/**
 * –ê–ù–ê–õ–ò–ó –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –ò–ó–ú–ï–ù–ï–ù–ò–Ø –†–ï–§–ï–†–ï–†–ê
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–º–µ–Ω—ã —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–≤—è–∑–∏ –±–µ–∑ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
 */

import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.SUPABASE_URL || 'https://placeholder.supabase.co',
  process.env.SUPABASE_SERVICE_ROLE_KEY || 'placeholder'
);

console.log("üîç –ê–ù–ê–õ–ò–ó –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –ò–ó–ú–ï–ù–ï–ù–ò–Ø –†–ï–§–ï–†–ï–†–ê");
console.log("===========================================");

async function analyzeReferralChangeSafety() {
  try {
    // 1. –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    console.log("\nüìä –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´:");
    console.log("------------------------------------------");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ID 100 –∏ 115
    const { data: users, error: usersError } = await supabase
      .from('users')
      .select('id, telegram_id, created_at, referred_by, ref_code')
      .in('id', [100, 115])
      .order('id');

    if (usersError) {
      console.log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)");
      return analyzeTheoreticalSafety();
    }

    if (users && users.length > 0) {
      users.forEach(user => {
        console.log(`‚úÖ User ${user.id}: telegram_id=${user.telegram_id}, created=${user.created_at}, referred_by=${user.referred_by}`);
      });
    }

    // 2. –ê–Ω–∞–ª–∏–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π
    const { data: referrals, error: referralsError } = await supabase
      .from('referrals')
      .select('user_id, inviter_id, level, reward_uni, reward_ton')
      .in('user_id', [100, 115]);

    if (!referralsError && referrals) {
      console.log(`\nüìà –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:`);
      referrals.forEach(ref => {
        console.log(`   User ${ref.user_id} ‚Üí Inviter ${ref.inviter_id}: UNI=${ref.reward_uni}, TON=${ref.reward_ton}`);
      });
    }

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å–≤—è–∑–∏  
    console.log("\nüîÑ –ü–†–û–í–ï–†–ö–ê –ù–ê –¶–ò–ö–õ–ò–ß–ï–°–ö–ò–ï –°–í–Ø–ó–ò:");
    const result = checkCircularReference(100, 115);
    console.log(result.message);

    // 4. –ê–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è –Ω–∞ —Å–∏—Å—Ç–µ–º—É
    console.log("\n‚ö° –ê–ù–ê–õ–ò–ó –í–õ–ò–Ø–ù–ò–Ø –ù–ê –°–ò–°–¢–ï–ú–£:");
    console.log("------------------------------");
    analyzeSystemImpact();

  } catch (error) {
    console.log("üîß –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É (–ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)");
    analyzeTheoreticalSafety();
  }
}

function checkCircularReference(userId1, userId2) {
  console.log(`   –ü—Ä–æ–≤–µ—Ä—è–µ–º: User ${userId1} ‚Üí User ${userId2}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –í—Ä–µ–º–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞
  if (userId1 < userId2) {
    return {
      safe: true,
      message: `‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ: User ${userId1} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Ä–∞–Ω—å—à–µ User ${userId2}`
    };
  } else {
    return {
      safe: false,
      message: `‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: User ${userId1} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ–∑–∂–µ User ${userId2} - –≤–æ–∑–º–æ–∂–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞—Ä–∞–¥–æ–∫—Å`
    };
  }
}

function analyzeSystemImpact() {
  console.log("üìã –í–õ–ò–Ø–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø –†–ï–§–ï–†–ï–†–ê:");
  
  const impacts = [
    {
      component: "–¢–∞–±–ª–∏—Ü–∞ users.referred_by",
      impact: "üü° –°–†–ï–î–ù–ò–ô",
      description: "–ü—Ä–æ—Å—Ç–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—è, –æ–±—Ä–∞—Ç–∏–º–æ"
    },
    {
      component: "–¢–∞–±–ª–∏—Ü–∞ referrals",
      impact: "üî¥ –í–´–°–û–ö–ò–ô", 
      description: "–¢—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –≤—Å–µ—Ö –Ω–∞–≥—Ä–∞–¥ –∏ —É—Ä–æ–≤–Ω–µ–π"
    },
    {
      component: "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞",
      impact: "üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô",
      description: "–ú–æ–∂–µ—Ç –Ω–∞—Ä—É—à–∏—Ç—å 20-—É—Ä–æ–≤–Ω–µ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É"
    },
    {
      component: "–ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã",
      impact: "üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô",
      description: "–ù—É–∂–µ–Ω –ø–µ—Ä–µ—Å—á–µ—Ç –≤—Å–µ—Ö –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –≤—ã–ø–ª–∞—Ç"
    },
    {
      component: "–ë—É–¥—É—â–∏–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è",
      impact: "üü° –°–†–ï–î–ù–ò–ô",
      description: "–ù–æ–≤—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –ø–æ–π–¥—É—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —Ä–µ—Ñ–µ—Ä—É"
    }
  ];

  impacts.forEach(item => {
    console.log(`   ${item.impact} ${item.component}: ${item.description}`);
  });
}

function analyzeTheoreticalSafety() {
  console.log("\nüßÆ –¢–ï–û–†–ï–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò:");
  console.log("=====================================");

  console.log("\n‚úÖ –ß–¢–û –ú–û–ñ–ù–û –ò–ó–ú–ï–ù–ò–¢–¨ –ë–ï–ó–û–ü–ê–°–ù–û:");
  console.log("- users.referred_by –ø–æ–ª–µ (–ø—Ä–æ—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)");
  console.log("- –ë—É–¥—É—â–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è");
  console.log("- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ UI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π");

  console.log("\n‚ùå –ß–¢–û –°–û–ó–î–ê–ï–¢ –†–ò–°–ö–ò:");
  console.log("- –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ referrals");
  console.log("- –£–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã");
  console.log("- 20-—É—Ä–æ–≤–Ω–µ–≤—ã–µ —Ü–µ–ø–æ—á–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π");
  console.log("- –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–¥–æ–∫—Å–æ–≤ (User 100 ‚Üí User 115)");

  console.log("\nüîß –ë–ï–ó–û–ü–ê–°–ù–û–ï –†–ï–®–ï–ù–ò–ï:");
  console.log("1. –ù–ï –∏–∑–º–µ–Ω—è—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ");
  console.log("2. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–≤—è–∑—å —Å —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞");
  console.log("3. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –Ω–µ—Ç—Ä–æ–Ω—É—Ç—ã–º–∏");
  console.log("4. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É —Ç–æ–ª—å–∫–æ –∫ –±—É–¥—É—â–∏–º –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è–º");

  console.log("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:");
  console.log("üü° –£–°–õ–û–í–ù–û –ë–ï–ó–û–ü–ê–°–ù–û —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏:");
  console.log("   - –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥");
  console.log("   - –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–µ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –†–ê–ù–¨–®–ï");
  console.log("   - –° –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å–≤—è–∑–∏");
  console.log("   - –° –ø–æ–ª–Ω—ã–º –∞—É–¥–∏—Ç–æ–º –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π");
  
  console.log("\nüî¥ –ù–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø –µ—Å–ª–∏:");
  console.log("   - –£–∂–µ –µ—Å—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã");
  console.log("   - User 115 —É–∂–µ –∫–æ–≥–æ-—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª (—Ü–µ–ø–æ—á–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)");
  console.log("   - –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ production");
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
analyzeReferralChangeSafety().then(() => {
  console.log("\nüèÅ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù");
}).catch(error => {
  console.error("–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:", error.message);
  analyzeTheoreticalSafety();
});