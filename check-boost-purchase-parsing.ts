// –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ min_amount –≤ BOOST_PURCHASE —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö

const BOOST_PACKAGES = {
  STARTER: {
    name: 'Starter Boost',
    daily_rate: '0.01',
    min_amount: '1.0',
    max_amount: '1000.0',
    duration_days: 365,
    uni_bonus: '10000'
  },
  STANDARD: {
    name: 'Standard Boost',
    daily_rate: '0.015',
    min_amount: '5.0',
    max_amount: '5000.0',
    duration_days: 365,
    uni_bonus: '50000'
  },
  ADVANCED: {
    name: 'Advanced Boost',
    daily_rate: '0.02',
    min_amount: '10.0',
    max_amount: '10000.0',
    duration_days: 365,
    uni_bonus: '100000'
  },
  PREMIUM: {
    name: 'Premium Boost',
    daily_rate: '0.025',
    min_amount: '25.0',
    max_amount: '25000.0',
    duration_days: 365,
    uni_bonus: '500000'
  },
  ELITE: {
    name: 'Elite Boost',
    daily_rate: '0.03',
    min_amount: '100.0',
    max_amount: '100000.0',
    duration_days: 365,
    uni_bonus: '1000000'
  }
};

console.log('üîç –ü–†–û–í–ï–†–ö–ê –ü–ê–†–°–ò–ù–ì–ê min_amount –î–õ–Ø BOOST –ü–ê–ö–ï–¢–û–í\n');
console.log('='*60 + '\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ –ø–∞–∫–µ—Ç–∞
Object.entries(BOOST_PACKAGES).forEach(([key, pkg]) => {
  console.log(`üì¶ ${key} (${pkg.name}):`);
  console.log(`  ‚Ä¢ min_amount (—Å—Ç—Ä–æ–∫–∞): "${pkg.min_amount}"`);
  
  const parsedValue = parseFloat(pkg.min_amount);
  console.log(`  ‚Ä¢ parseFloat —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${parsedValue}`);
  console.log(`  ‚Ä¢ –¢–∏–ø –ø–æ—Å–ª–µ parseFloat: ${typeof parsedValue}`);
  console.log(`  ‚Ä¢ isNaN: ${isNaN(parsedValue)}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –ø—Ä–∏ toString()
  const backToString = parsedValue.toString();
  console.log(`  ‚Ä¢ toString() —Ä–µ–∑—É–ª—å—Ç–∞—Ç: "${backToString}"`);
  
  // –°–∏–º—É–ª—è—Ü–∏—è –∫–æ–¥–∞ –∏–∑ purchaseWithInternalWallet
  const requiredAmount = parseFloat(pkg.min_amount || "0");
  console.log(`  ‚Ä¢ requiredAmount (—Å fallback): ${requiredAmount}`);
  console.log(`  ‚Ä¢ –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: "${requiredAmount.toString()}"`);
  
  console.log('');
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–≥–æ —Å–ª—É—á–∞—è —Å undefined
console.log('\nüìå –ü–†–û–í–ï–†–ö–ê –ì–†–ê–ù–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í:\n');

const testCases = [
  { input: undefined, label: 'undefined' },
  { input: null, label: 'null' },
  { input: '', label: '–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞' },
  { input: '0', label: '"0"' },
  { input: '0.0', label: '"0.0"' },
  { input: 0, label: '0 (—á–∏—Å–ª–æ)' }
];

testCases.forEach(test => {
  const result = parseFloat(test.input || "0");
  console.log(`${test.label} ‚Üí parseFloat ‚Üí ${result} ‚Üí toString ‚Üí "${result.toString()}"`);
});

console.log('\nüí° –í–´–í–û–î–´:\n');
console.log('–ï—Å–ª–∏ min_amount –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–∞—Ä—Å–∏—Ç—Å—è, –ø—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:');
console.log('1. boostPackage.min_amount = undefined (–Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—è)');
console.log('2. boostPackage = null/undefined');
console.log('3. –û—à–∏–±–∫–∞ –≤ –ª–æ–≥–∏–∫–µ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');