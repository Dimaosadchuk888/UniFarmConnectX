const fs = require('fs');

console.log('üîç –ü–†–û–í–ï–†–ö–ê –ü–†–ò–ú–ï–ù–ï–ù–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–û–í');
console.log('='.repeat(60));

// –ü—Ä–æ–≤–µ—Ä–∫–∞ UNI Farming Scheduler
const farmingSchedulerPath = 'core/scheduler/farmingScheduler.ts';
if (fs.existsSync(farmingSchedulerPath)) {
  const content = fs.readFileSync(farmingSchedulerPath, 'utf8');
  
  console.log('\nüìÑ UNI FARMING SCHEDULER (farmingScheduler.ts):');
  
  // –ò—â–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
  const hasImmediateStart = content.includes('this.processUniFarmingIncome()') && 
                           content.includes('this.processTonFarmingIncome()') &&
                           content.includes('–ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–∞–∑—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ');
  
  if (hasImmediateStart) {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—É—Å–∫–∏ –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –∫–æ–¥–µ!');
    console.log('   –°—Ç—Ä–æ–∫–∏ 52-60 –ù–ï —É–¥–∞–ª–µ–Ω—ã.');
  } else {
    console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—É—Å–∫–∏ —É–±—Ä–∞–Ω—ã –∏–∑ –∫–æ–¥–∞.');
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º start() –º–µ—Ç–æ–¥
  const startMethodMatch = content.match(/start\(\)\s*\{[\s\S]*?\n\s*\}/);
  if (startMethodMatch) {
    console.log('\nüìã –¢–µ–∫—É—â–∏–π start() –º–µ—Ç–æ–¥:');
    console.log(startMethodMatch[0]);
  }
} else {
  console.log('‚ùå –§–∞–π–ª farmingScheduler.ts –Ω–µ –Ω–∞–π–¥–µ–Ω!');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ TON Boost Scheduler  
const tonSchedulerPath = 'modules/scheduler/tonBoostIncomeScheduler.ts';
if (fs.existsSync(tonSchedulerPath)) {
  const content = fs.readFileSync(tonSchedulerPath, 'utf8');
  
  console.log('\nüìÑ TON BOOST SCHEDULER (tonBoostIncomeScheduler.ts):');
  
  // –ò—â–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
  const hasImmediateStart = content.includes('this.processTonBoostIncome()') && 
                           content.includes('–ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —Å—Ä–∞–∑—É');
  
  if (hasImmediateStart) {
    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—É—Å–∫–∏ –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –∫–æ–¥–µ!');
    console.log('   –°—Ç—Ä–æ–∫–∏ 31-35 –ù–ï —É–¥–∞–ª–µ–Ω—ã.');
  } else {
    console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—É—Å–∫–∏ —É–±—Ä–∞–Ω—ã –∏–∑ –∫–æ–¥–∞.');
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º start() –º–µ—Ç–æ–¥
  const startMethodMatch = content.match(/start\(\)\s*\{[\s\S]*?\n\s*\}/);
  if (startMethodMatch) {
    console.log('\nüìã –¢–µ–∫—É—â–∏–π start() –º–µ—Ç–æ–¥:');
    console.log(startMethodMatch[0]);
  }
} else {
  console.log('‚ùå –§–∞–π–ª tonBoostIncomeScheduler.ts –Ω–µ –Ω–∞–π–¥–µ–Ω!');
}

console.log('\n' + '='.repeat(60));
console.log('üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
console.log('–ï—Å–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –≤ –∫–æ–¥–µ, –Ω–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –≤—Å–µ –µ—â–µ –∞–Ω–æ–º–∞–ª—å–Ω—ã–µ,');
console.log('—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.');