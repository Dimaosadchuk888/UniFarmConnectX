import { supabase } from './core/supabase.js';

async function checkTonIncomeTransactions() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–æ—Ö–æ–¥–æ–≤ TON Boost\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏ TON
    const { data: incomeTransactions, error } = await supabase
      .from('transactions')
      .select('*')
      .eq('type', 'FARMING_REWARD')
      .eq('currency', 'TON')
      .gt('amount_ton', 0)
      .order('created_at', { ascending: false })
      .limit(10);

    if (!error && incomeTransactions && incomeTransactions.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${incomeTransactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–æ—Ö–æ–¥–æ–≤:\n`);
      
      incomeTransactions.forEach(tx => {
        console.log(`ID: ${tx.id}`);
        console.log(`User: ${tx.user_id}`);
        console.log(`Amount: +${tx.amount_ton} TON`);
        console.log(`Description: ${tx.description}`);
        console.log(`Created: ${new Date(tx.created_at).toLocaleString()}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º metadata
        if (tx.metadata) {
          console.log('Metadata:', JSON.stringify(tx.metadata, null, 2));
        }
        console.log('---');
      });
    } else {
      console.log('‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–æ—Ö–æ–¥–æ–≤ TON Boost –ø–æ–∫–∞ –Ω–µ—Ç');
      console.log('\n–ü—Ä–∏—á–∏–Ω—ã:');
      console.log('1. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
      console.log('2. –°–µ—Ä–≤–µ—Ä –º–æ–≥ –±—ã—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –Ω–µ–¥–∞–≤–Ω–æ');
      console.log('3. –ñ–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞');
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞
    const now = new Date();
    console.log(`\n‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${now.toLocaleString()}`);
    const minutesUntilNext = 5 - (now.getMinutes() % 5);
    console.log(`–°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑: ${minutesUntilNext} –º–∏–Ω—É—Ç`);

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
    const { data: lastTx } = await supabase
      .from('transactions')
      .select('created_at, type')
      .order('created_at', { ascending: false })
      .limit(1)
      .single();

    if (lastTx) {
      console.log(`\nüìä –ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ:`);
      console.log(`–¢–∏–ø: ${lastTx.type}`);
      console.log(`–í—Ä–µ–º—è: ${new Date(lastTx.created_at).toLocaleString()}`);
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

checkTonIncomeTransactions().catch(console.error);