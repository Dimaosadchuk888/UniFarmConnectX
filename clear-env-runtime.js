
#!/usr/bin/env node

/**
 * –ó–ê–î–ê–ß–ê T11: –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö PostgreSQL/Neon –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
 */

console.log('üßπ –ó–ê–î–ê–ß–ê T11: –ù–∞—á–∏–Ω–∞—é —Ñ–∏–Ω–∞–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...\n');

// –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è (T11.1)
const obsoleteVars = [
  'DATABASE_URL',
  'PGHOST',
  'PGPORT', 
  'PGUSER',
  'PGPASSWORD',
  'PGDATABASE',
  'DATABASE_PROVIDER',
  'USE_NEON_DB',
  'NEON_DATABASE_URL',
  'FORCE_NEON_DB',
  'DISABLE_REPLIT_DB'
];

// –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
const keepVars = [
  'SUPABASE_URL',
  'SUPABASE_KEY',
  'TELEGRAM_BOT_TOKEN',
  'NODE_ENV',
  'PORT'
];

console.log('‚ùå T11.1: –£–¥–∞–ª—è—é —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ PostgreSQL/Neon –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
let removedCount = 0;
obsoleteVars.forEach(varName => {
  if (process.env[varName]) {
    console.log(`  - ${varName}: [–£–î–ê–õ–ï–ù–ê]`);
    delete process.env[varName];
    removedCount++;
  } else {
    console.log(`  - ${varName}: [–£–ñ–ï –û–¢–°–£–¢–°–¢–í–£–ï–¢]`);
  }
});

console.log('\n‚úÖ T11.2: –ü—Ä–æ–≤–µ—Ä—è—é –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ Supabase –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
let supabaseVarsOk = 0;
keepVars.forEach(varName => {
  if (process.env[varName]) {
    console.log(`  - ${varName}: [–ê–ö–¢–ò–í–ù–ê]`);
    supabaseVarsOk++;
  } else {
    console.log(`  - ${varName}: [–û–¢–°–£–¢–°–¢–í–£–ï–¢ - –¢–†–ï–ë–£–ï–¢ –ù–ê–°–¢–†–û–ô–ö–ò]`);
  }
});

// T11.3: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
console.log('\nüîç T11.3: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
const remainingDbVars = Object.keys(process.env).filter(key => 
  key.includes('DATABASE') || key.startsWith('PG') || key.includes('NEON')
);

if (remainingDbVars.length > 0) {
  console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—Å—Ç–∞–≤—à–∏–µ—Å—è DB –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
  remainingDbVars.forEach(key => console.log(`  - ${key}`));
} else {
  console.log('‚úÖ –í—Å–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã');
}

// T11.4: –ü—Ä–æ–≤–µ—Ä–∫–∞ Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
console.log('\nüîó T11.4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Supabase:');
if (process.env.SUPABASE_URL && process.env.SUPABASE_KEY) {
  console.log('‚úÖ Supabase –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
} else {
  console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Supabase');
}

// T11.5: –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
console.log('\nüìä T11.5: –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –ó–ê–î–ê–ß–ò T11:');
console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: ${removedCount}/${obsoleteVars.length}`);
console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö Supabase –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: ${supabaseVarsOk}/${keepVars.length}`);
console.log(`‚úÖ –û—Å—Ç–∞–≤—à–∏—Ö—Å—è DB –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: ${remainingDbVars.length}`);
console.log(`‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ —Å Supabase API`);

console.log('\nüéØ –ó–ê–î–ê–ß–ê T11 –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
