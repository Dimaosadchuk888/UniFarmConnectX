/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
 * –ü–æ—ç—Ç–∞–ø–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç–∫–∞—Ç–∞
 */

import fs from 'fs';
import path from 'path';

const BACKUP_DIR = 'cleanup-backup';

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
 */
function backupFile(filePath) {
  try {
    if (!fs.existsSync(BACKUP_DIR)) {
      fs.mkdirSync(BACKUP_DIR, { recursive: true });
    }
    
    const backupPath = path.join(BACKUP_DIR, filePath.replace(/[\/\\]/g, '_'));
    fs.copyFileSync(filePath, backupPath);
    console.log(`  üìã –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: ${backupPath}`);
    return true;
  } catch (error) {
    console.error(`  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ ${filePath}:`, error.message);
    return false;
  }
}

/**
 * –≠–¢–ê–ü 1: –£–¥–∞–ª–µ–Ω–∏–µ —è–≤–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
 */
function cleanupSafeFiles() {
  console.log('üßπ –≠–¢–ê–ü 1: –£–¥–∞–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...\n');
  
  const safeToDelete = [
    'archive/db-backups/db-service-wrapper.ts',
    'archive/telegram-bot-scripts/setup-webhook.js',
    'archive/telegram-bot-scripts/update-menu-button.js',
    'backup/index.ts',
    'backup/routes/routes-new.ts',
    'backup/routes/routes.ts',
    'dist/public/index.html.bak'
  ];
  
  let deletedCount = 0;
  
  safeToDelete.forEach(file => {
    if (fs.existsSync(file)) {
      console.log(`üóëÔ∏è  –£–¥–∞–ª—è–µ–º: ${file}`);
      
      if (backupFile(file)) {
        try {
          fs.unlinkSync(file);
          console.log(`  ‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`);
          deletedCount++;
        } catch (error) {
          console.error(`  ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:`, error.message);
        }
      }
    } else {
      console.log(`  ‚ö†Ô∏è  –§–∞–π–ª —É–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${file}`);
    }
    console.log('');
  });
  
  console.log(`‚úÖ –≠—Ç–∞–ø 1 –∑–∞–≤–µ—Ä—à–µ–Ω. –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${deletedCount}/${safeToDelete.length}\n`);
}

/**
 * –≠–¢–ê–ü 2: –û—á–∏—Å—Ç–∫–∞ –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
 */
function cleanupEmptyDirectories() {
  console.log('üßπ –≠–¢–ê–ü 2: –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...\n');
  
  const dirsToCheck = [
    'backup/routes',
    'backup',
    'archive/db-backups',
    'archive/telegram-bot-scripts',
    'archive'
  ];
  
  let removedDirs = 0;
  
  dirsToCheck.forEach(dir => {
    try {
      if (fs.existsSync(dir)) {
        const files = fs.readdirSync(dir);
        if (files.length === 0) {
          fs.rmdirSync(dir);
          console.log(`üóÇÔ∏è  –£–¥–∞–ª–µ–Ω–∞ –ø—É—Å—Ç–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dir}`);
          removedDirs++;
        } else {
          console.log(`üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –ø—É—Å—Ç–∞: ${dir} (${files.length} —Ñ–∞–π–ª–æ–≤)`);
        }
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${dir}:`, error.message);
    }
  });
  
  console.log(`‚úÖ –≠—Ç–∞–ø 2 –∑–∞–≤–µ—Ä—à–µ–Ω. –£–¥–∞–ª–µ–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: ${removedDirs}\n`);
}

/**
 * –≠–¢–ê–ü 3: –ê–Ω–∞–ª–∏–∑ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Ñ—É–Ω–∫—Ü–∏–π
 */
function analyzeCriticalFunctions() {
  console.log('üîç –≠–¢–ê–ü 3: –ê–Ω–∞–ª–∏–∑ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Ñ—É–Ω–∫—Ü–∏–π...\n');
  
  const criticalFunctions = [
    {
      name: 'handleWithdraw',
      files: ['bug-fixes-proposal.js'],
      recommendation: '–£–¥–∞–ª–∏—Ç—å –∏–∑ bug-fixes-proposal.js - —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª'
    },
    {
      name: 'harvestFarming', 
      files: ['bug-fixes-proposal.js'],
      recommendation: '–£–¥–∞–ª–∏—Ç—å –∏–∑ bug-fixes-proposal.js - —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª'
    },
    {
      name: 'getDeposits',
      files: ['bug-fixes-proposal.js'],
      recommendation: '–£–¥–∞–ª–∏—Ç—å –∏–∑ bug-fixes-proposal.js - —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª'
    }
  ];
  
  console.log('üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –î–£–ë–õ–ò–†–£–Æ–©–ò–ú–°–Ø –§–£–ù–ö–¶–ò–Ø–ú:');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  
  criticalFunctions.forEach(func => {
    console.log(`üîß –§—É–Ω–∫—Ü–∏—è: ${func.name}`);
    console.log(`   –§–∞–π–ª—ã: ${func.files.join(', ')}`);
    console.log(`   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ${func.recommendation}\n`);
  });
}

/**
 * –≠–¢–ê–ü 4: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ
 */
function generateCleanupReport() {
  console.log('üìä –≠–¢–ê–ü 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...\n');
  
  const report = {
    timestamp: new Date().toISOString(),
    phase1: {
      description: '–£–¥–∞–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∞—Ä—Ö–∏–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤',
      status: 'completed',
      filesRemoved: [
        'archive/db-backups/db-service-wrapper.ts',
        'archive/telegram-bot-scripts/setup-webhook.js', 
        'archive/telegram-bot-scripts/update-menu-button.js',
        'backup/index.ts',
        'backup/routes/routes-new.ts',
        'backup/routes/routes.ts',
        'dist/public/index.html.bak'
      ]
    },
    phase2: {
      description: '–û—á–∏—Å—Ç–∫–∞ –ø—É—Å—Ç—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π',
      status: 'completed'
    },
    nextSteps: {
      description: '–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏',
      items: [
        '–£–¥–∞–ª–∏—Ç—å bug-fixes-proposal.js (—Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π)',
        '–ö–æ–Ω—Å–æ–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é (.js/.mjs/.cjs)',
        '–£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏',
        '–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π'
      ]
    },
    backup: {
      location: BACKUP_DIR,
      description: '–í—Å–µ —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è'
    }
  };
  
  fs.writeFileSync('cleanup-progress-report.json', JSON.stringify(report, null, 2));
  
  console.log('üìã –û–¢–ß–ï–¢ –û –ü–†–û–í–ï–î–ï–ù–ù–û–ô –û–ß–ò–°–¢–ö–ï:');
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log('‚úÖ –§–∞–∑–∞ 1: –£–¥–∞–ª–µ–Ω—ã –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∞—Ä—Ö–∏–≤–Ω—ã–µ —Ñ–∞–π–ª—ã');
  console.log('‚úÖ –§–∞–∑–∞ 2: –û—á–∏—â–µ–Ω—ã –ø—É—Å—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏');
  console.log(`üíæ –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏: ${BACKUP_DIR}/`);
  console.log('üìÑ –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç: cleanup-progress-report.json\n');
  
  console.log('üéØ –°–õ–ï–î–£–Æ–©–ò–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –®–ê–ì–ò:');
  console.log('1. –£–¥–∞–ª–∏—Ç—å bug-fixes-proposal.js (—Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏)');
  console.log('2. –ö–æ–Ω—Å–æ–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã (.js/.mjs/.cjs –≤–µ—Ä—Å–∏–∏)');
  console.log('3. –ü—Ä–æ–≤–µ—Å—Ç–∏ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏');
  console.log('4. –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã\n');
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ—Ç–∫–∞—Ç–∞
 */
function createRestoreScript() {
  const restoreScript = `#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ ${BACKUP_DIR}..."

if [ ! -d "${BACKUP_DIR}" ]; then
  echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
  exit 1
fi

cd ${BACKUP_DIR}
for backup_file in *; do
  original_file="\${backup_file//_//}"
  if [ -f "$backup_file" ]; then
    mkdir -p "$(dirname "../$original_file")"
    cp "$backup_file" "../$original_file"
    echo "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $original_file"
  fi
done

echo "üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
`;

  fs.writeFileSync('restore-deleted-files.sh', restoreScript);
  console.log('üõü –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: restore-deleted-files.sh\n');
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
 */
function runSafeCleanup() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤...\n');
  console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í—Å–µ —É–¥–∞–ª—è–µ–º—ã–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ backup\n');
  
  try {
    cleanupSafeFiles();
    cleanupEmptyDirectories();
    analyzeCriticalFunctions();
    generateCleanupReport();
    createRestoreScript();
    
    console.log('üéâ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìÅ –ü—Ä–æ–µ–∫—Ç —Å—Ç–∞–ª —á–∏—â–µ, –∫—Ä–∏—Ç–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    console.log('üõü –í —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: bash restore-deleted-files.sh');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', error.message);
    console.log('üõü –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏');
  }
}

// –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏
runSafeCleanup();