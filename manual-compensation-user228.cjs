/**
 * –†–£–ß–ù–ê–Ø –ö–û–ú–ü–ï–ù–°–ê–¶–ò–Ø USER 228 - 1.0 TON
 * –ü—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥—É–ª–∏
 */

async function manualCompensation() {
  console.log('üí∞ –†–£–ß–ù–ê–Ø –ö–û–ú–ü–ï–ù–°–ê–¶–ò–Ø USER 228');
  console.log('–°—É–º–º–∞: 1.0 TON');
  console.log('–û—Å–Ω–æ–≤–∞–Ω–∏–µ: –ü–æ—Ç–µ—Ä—è–Ω–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è d1077cd0\n');

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –Ω–∞–ø—Ä—è–º—É—é
    const path = require('path');
    const { createRequire } = require('module');
    const require = createRequire(import.meta.url);

    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º
    const modulePaths = [
      './core/BalanceManager.js',
      './dist/core/BalanceManager.js', 
      './modules/wallet/service.js',
      './dist/modules/wallet/service.js'
    ];

    let BalanceManager = null;
    let WalletService = null;

    for (const modulePath of modulePaths) {
      try {
        if (modulePath.includes('BalanceManager')) {
          BalanceManager = require(modulePath).BalanceManager;
          if (BalanceManager) {
            console.log(`‚úÖ BalanceManager –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑: ${modulePath}`);
            break;
          }
        }
      } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∏–º–ø–æ—Ä—Ç–∞
      }
    }

    if (!BalanceManager) {
      console.log('‚ö†Ô∏è BalanceManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π API –ø–æ–¥—Ö–æ–¥');
      
      // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —á–µ—Ä–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π API
      const fetch = require('node-fetch');
      const response = await fetch('http://localhost:3000/api/v2/wallet/manual-credit', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          user_id: 228,
          amount: '1.0',
          currency: 'TON',
          description: '–ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –ø–æ—Ç–µ—Ä—è–Ω–Ω–æ–≥–æ TON –¥–µ–ø–æ–∑–∏—Ç–∞ d1077cd0',
          type: 'compensation'
        })
      });

      if (response.ok) {
        const result = await response.json();
        console.log('‚úÖ –ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ API:', result);
        return;
      } else {
        console.log('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä—è–º–æ–º—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é');
      }
    }

    // –ï—Å–ª–∏ –≤—Å–µ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç, —Å–æ–∑–¥–∞–µ–º –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é —á–µ—Ä–µ–∑ —Ñ–∞–π–ª–æ–≤—É—é –∏–Ω—ä–µ–∫—Ü–∏—é
    console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ SQL –∏–Ω—ä–µ–∫—Ü–∏–∏ –¥–ª—è –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏...');
    
    const compensationSQL = `
-- –ö–û–ú–ü–ï–ù–°–ê–¶–ò–Ø USER 228 - 1.0 TON
-- –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:

-- 1. –°–æ–∑–¥–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
INSERT INTO transactions (
  user_id, 
  type, 
  amount, 
  currency, 
  description, 
  metadata,
  status,
  created_at, 
  updated_at
) VALUES (
  228,
  'FARMING_REWARD',
  '1.0',
  'TON',
  '–ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –ø–æ—Ç–µ—Ä—è–Ω–Ω–æ–≥–æ TON –¥–µ–ø–æ–∑–∏—Ç–∞ d1077cd0 –∏–∑-–∑–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–æ–π —Å—Ö–µ–º—ã User 249',
  '{"compensation": true, "original_transaction": "d1077cd0", "fraud_case": "User_249_scheme", "authorized_by": "manual_admin"}',
  'completed',
  NOW(),
  NOW()
);

-- 2. –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
UPDATE users 
SET balance_ton = (CAST(balance_ton AS DECIMAL) + 1.0)::TEXT 
WHERE id = 228;

-- 3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
SELECT 
  id, 
  balance_ton, 
  (SELECT COUNT(*) FROM transactions WHERE user_id = 228 AND description LIKE '%–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è%d1077cd0%') as compensation_count
FROM users 
WHERE id = 228;
`;

    require('fs').writeFileSync('EXECUTE_COMPENSATION_USER228.sql', compensationSQL);
    console.log('üìÑ SQL —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω: EXECUTE_COMPENSATION_USER228.sql');

    // –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º JSON –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    const autoCompensation = {
      action: 'compensate_user',
      user_id: 228,
      amount: '1.0',
      currency: 'TON',
      reason: 'Lost transaction d1077cd0 due to fraud scheme User 249',
      transaction_type: 'FARMING_REWARD',
      status: 'ready_for_execution',
      created_at: new Date().toISOString(),
      sql_file: 'EXECUTE_COMPENSATION_USER228.sql'
    };

    require('fs').writeFileSync('AUTO_COMPENSATION_USER228.json', JSON.stringify(autoCompensation, null, 2));
    console.log('üìã –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: AUTO_COMPENSATION_USER228.json');

    console.log('\nüéØ –ö–û–ú–ü–ï–ù–°–ê–¶–ò–Ø –ü–û–î–ì–û–¢–û–í–õ–ï–ù–ê:');
    console.log('   üìÑ SQL —Å–∫—Ä–∏–ø—Ç –≥–æ—Ç–æ–≤ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é');
    console.log('   üí∞ –°—É–º–º–∞: 1.0 TON –¥–ª—è User 228');
    console.log('   üìã –û—Å–Ω–æ–≤–∞–Ω–∏–µ: –ü–æ—Ç–µ—Ä—è–Ω–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è d1077cd0');
    console.log('   ‚ö° –°—Ç–∞—Ç—É—Å: –ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º');

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

manualCompensation();