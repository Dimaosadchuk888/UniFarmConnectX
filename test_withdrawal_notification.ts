// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –∞–¥–º–∏–Ω –±–æ—Ç–∞ –æ –∑–∞—è–≤–∫–∞—Ö –Ω–∞ –≤—ã–≤–æ–¥

import { createClient } from '@supabase/supabase-js';
import { AdminBotService } from './modules/adminBot/service';
import { config } from 'dotenv';

config({ path: '.env' });

const supabaseUrl = process.env.VITE_SUPABASE_URL!;
const supabaseKey = process.env.SUPABASE_SERVICE_KEY || process.env.VITE_SUPABASE_ANON_KEY!;
const supabase = createClient(supabaseUrl, supabaseKey);

async function testAdminNotification() {
  console.log('\n=== –¢–ï–°–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –ê–î–ú–ò–ù –ë–û–¢–ê –û –ó–ê–Ø–í–ö–ï –ù–ê –í–´–í–û–î ===\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
    const { data: admins, error: adminError } = await supabase
      .from('users')
      .select('id, telegram_id, username, is_admin')
      .or('username.eq.a888bnd,username.eq.DimaOsadchuk')
      .limit(10);

    if (adminError) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤:', adminError);
      return;
    }

    console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', admins);

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–¥–º–∏–Ω–æ–≤ —Å is_admin = true
    const actualAdmins = admins?.filter(u => u.is_admin);
    console.log('\n–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Å is_admin=true:', actualAdmins);

    if (!actualAdmins || actualAdmins.length === 0) {
      console.error('\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å is_admin=true');
      console.log('\n–£–°–¢–ê–ù–û–í–ö–ê –§–õ–ê–ì–ê is_admin –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ is_admin –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      for (const user of (admins || [])) {
        const { error: updateError } = await supabase
          .from('users')
          .update({ is_admin: true })
          .eq('id', user.id);
          
        if (updateError) {
          console.error(`–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ is_admin –¥–ª—è ${user.username}:`, updateError);
        } else {
          console.log(`‚úÖ is_admin —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è ${user.username}`);
        }
      }
    }

    // 3. –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–≤–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∞
    console.log('\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥:');
    const { data: lastWithdrawal, error: withdrawalError } = await supabase
      .from('withdraw_requests')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(1)
      .single();

    if (withdrawalError) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏:', withdrawalError);
      return;
    }

    console.log('–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞—è–≤–∫–∞:', lastWithdrawal);

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º ADMIN_BOT_TOKEN
    console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ ADMIN_BOT_TOKEN:');
    console.log('–¢–æ–∫–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', !!process.env.ADMIN_BOT_TOKEN);
    console.log('–î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞:', process.env.ADMIN_BOT_TOKEN?.length || 0);

    // 5. –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä AdminBotService –∏ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    console.log('\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:');
    const adminBotService = new AdminBotService();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥ sendMessage –Ω–∞–ø—Ä—è–º—É—é
    if (actualAdmins && actualAdmins.length > 0) {
      const testAdmin = actualAdmins[0];
      console.log(`\n–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É ${testAdmin.username}:`);
      
      try {
        const testMessage = `üîß –¢–ï–°–¢–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï\n\n–≠—Ç–æ —Ç–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –∞–¥–º–∏–Ω –±–æ—Ç–∞ UniFarm.\n–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.`;
        
        // @ts-ignore - –≤—Ä–µ–º–µ–Ω–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–æ–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –º–µ—Ç–æ–¥—É
        const sendResult = await adminBotService.sendMessage(testAdmin.telegram_id, testMessage);
        console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', sendResult);
      } catch (sendError) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', sendError);
      }
    }

    // 6. –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ
    if (lastWithdrawal) {
      console.log('\n6. –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞—è–≤–∫–µ –Ω–∞ –≤—ã–≤–æ–¥:');
      const notificationResult = await adminBotService.notifyWithdrawal(lastWithdrawal);
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notificationResult);
    }

  } catch (error) {
    console.error('\n–û–®–ò–ë–ö–ê:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAdminNotification().then(() => {
  console.log('\n=== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù ===\n');
  process.exit(0);
}).catch(error => {
  console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});