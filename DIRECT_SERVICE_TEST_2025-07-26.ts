/**
 * üß™ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ UNIFIEDTRANSACTIONSERVICE
 * 
 * –î–∞—Ç–∞: 26 –∏—é–ª—è 2025
 * –ó–∞–¥–∞—á–∞: –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞—â–∏—Ç—É –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
 */

import { UnifiedTransactionService } from './core/TransactionService';

async function directServiceTest(): Promise<void> {
  console.log('\nüß™ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –ó–ê–©–ò–¢–´ –ß–ï–†–ï–ó UNIFIEDTRANSACTIONSERVICE');
  console.log('=' .repeat(70));
  console.log(`–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`);
  console.log('=' .repeat(70));

  try {
    const service = UnifiedTransactionService.getInstance();
    const testHash = 'direct_service_test_' + Date.now();
    
    console.log(`üîë –¢–µ—Å—Ç–æ–≤—ã–π hash: ${testHash}`);
    console.log(`üë§ –¢–µ—Å—Ç–æ–≤—ã–π User ID: 247`);
    
    // –≠–¢–ê–ü 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('\nüìù –≠–¢–ê–ü 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
    const firstResult = await service.createTransaction({
      user_id: 247,
      type: 'TON_DEPOSIT',
      amount_uni: 0,
      amount_ton: 0.001,
      currency: 'TON',
      description: 'Direct service test - –ø–µ—Ä–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è',
      metadata: {
        tx_hash: testHash,
        test: true,
        direct_service: true
      }
    });
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:');
    console.log(`   Success: ${firstResult.success}`);
    if (firstResult.success) {
      console.log(`   Transaction ID: ${firstResult.transaction_id}`);
      console.log('   ‚úÖ –ü–µ—Ä–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log(`   Error: ${firstResult.error}`);
      return;
    }
    
    // –≠–¢–ê–ü 2: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–∞
    console.log('\nüîÑ –≠–¢–ê–ü 2: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –î–£–ë–õ–ò–ö–ê–¢–ê...');
    const duplicateResult = await service.createTransaction({
      user_id: 247,
      type: 'TON_DEPOSIT',
      amount_uni: 0,
      amount_ton: 0.002, // –î—Ä—É–≥–∞—è —Å—É–º–º–∞
      currency: 'TON',
      description: 'Direct service test - –î–£–ë–õ–ò–ö–ê–¢ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)',
      metadata: {
        tx_hash: testHash, // –¢–û–¢ –ñ–ï HASH!
        test: true,
        direct_service: true,
        is_duplicate: true
      }
    });
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ø—ã—Ç–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log(`   Success: ${duplicateResult.success}`);
    console.log(`   Error: ${duplicateResult.error || '–Ω–µ—Ç'}`);
    
    // –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–ê
    if (!duplicateResult.success && duplicateResult.error?.includes('—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')) {
      console.log('\nüéâ –û–¢–õ–ò–ß–ù–û! –ü–†–û–ì–†–ê–ú–ú–ù–ê–Ø –ó–ê–©–ò–¢–ê –†–ê–ë–û–¢–ê–ï–¢!');
      console.log('   ‚úÖ UnifiedTransactionService –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –¥—É–±–ª–∏–∫–∞—Ç');
      console.log('   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–ª–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –¥—É–±–ª—è');
      console.log('   ‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∑–∞—â–∏—Ç–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ —Å–µ—Ä–≤–∏—Å–∞ –∞–∫—Ç–∏–≤–Ω–∞');
    } else if (duplicateResult.success) {
      console.log('\n‚ùå –ö–†–ò–¢–ò–ß–ù–û: –î—É–±–ª–∏–∫–∞—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω!');
      console.log(`   üí• Transaction ID –¥—É–±–ª–∏–∫–∞—Ç–∞: ${duplicateResult.transaction_id}`);
      console.log('   üîß –ó–∞—â–∏—Ç–∞ –ù–ï –†–ê–ë–û–¢–ê–ï–¢');
    } else {
      console.log('\n‚ùì –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç');
      console.log(`   üí° –û—à–∏–±–∫–∞: ${duplicateResult.error}`);
    }
    
    // –≠–¢–ê–ü 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    console.log('\nüìä –≠–¢–ê–ü 3: –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø –ó–ê–©–ò–¢–´');
    console.log('-' .repeat(50));
    
    if (!duplicateResult.success && duplicateResult.error?.includes('—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')) {
      console.log('‚úÖ –ó–ê–©–ò–¢–ê –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê –£–°–ü–ï–®–ù–û!');
      console.log('\nüìã –î–ï–¢–ê–õ–ò –£–°–ü–ï–®–ù–û–ô –ó–ê–©–ò–¢–´:');
      console.log('   - –ú–µ—Ç–æ–¥: –ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ UnifiedTransactionService');
      console.log('   - –£—Ä–æ–≤–µ–Ω—å: Application-level –∑–∞—â–∏—Ç–∞');
      console.log('   - –ü–æ–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏: tx_hash_unique');
      console.log('   - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è');
      console.log('   - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –û–¥–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è SELECT –æ–ø–µ—Ä–∞—Ü–∏—è');
      
      console.log('\nüõ°Ô∏è –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ü–†–û–ì–†–ê–ú–ú–ù–û–ô –ó–ê–©–ò–¢–´:');
      console.log('   ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –ë–î');
      console.log('   ‚úÖ –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ø—ã—Ç–æ–∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è');
      console.log('   ‚úÖ –ü–æ–ª–Ω–∞—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ—Å—Ç—å –ª–æ–≥–∏–∫–∏');
      console.log('   ‚úÖ –õ–µ–≥–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞');
      console.log('   ‚úÖ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –±–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î');
      
      console.log('\nüéØ –ü–†–û–ë–õ–ï–ú–ê USER 25 –†–ï–®–ï–ù–ê:');
      console.log('   ‚úÖ –ù–æ–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –Ω–µ –±—É–¥—É—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å—Å—è');
      console.log('   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç TON –¥–µ–ø–æ–∑–∏—Ç –¥—É–±–ª–µ–π');
      console.log('   ‚úÖ –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
      
    } else {
      console.log('‚ùå –ó–ê–©–ò–¢–ê –ù–ï –ê–ö–¢–ò–í–ù–ê');
      console.log('üîß –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê');
    }
    
    // –≠–¢–ê–ü 4: –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüßπ –≠–¢–ê–ü 4: –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•');
    console.log('-' .repeat(50));
    
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º supabase –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    const { supabase } = await import('./core/supabase');
    const { error: cleanupError } = await supabase
      .from('transactions')
      .delete()
      .eq('tx_hash_unique', testHash);
      
    if (cleanupError) {
      console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: ${cleanupError.message}`);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
    }
    
    console.log('\nüíæ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù');
    
  } catch (error) {
    console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ —Ç–µ—Å—Ç–∞:', error);
    console.log('\nüõ°Ô∏è –°–ò–°–¢–ï–ú–ê –û–°–¢–ê–ï–¢–°–Ø –°–¢–ê–ë–ò–õ–¨–ù–û–ô');
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä—è–º–æ–≥–æ —Ç–µ—Å—Ç–∞
directServiceTest()
  .then(() => {
    console.log('\nüèÅ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –ó–ê–©–ò–¢–´ –ó–ê–í–ï–†–®–ï–ù');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\nüí• –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ —Ç–µ—Å—Ç–∞:', error);
    process.exit(1);
  });