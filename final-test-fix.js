/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ TON Boost –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
 */

import { createClient } from '@supabase/supabase-js';

async function finalTestFix() {
  const supabaseUrl = process.env.SUPABASE_URL;
  const supabaseKey = process.env.SUPABASE_KEY;
  
  const supabase = createClient(supabaseUrl, supabaseKey);
  
  console.log('=== –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ===');
  
  // 1. –°–æ—Å—Ç–æ—è–Ω–∏–µ –î–û –ø–æ–∫—É–ø–∫–∏
  const { data: userBefore } = await supabase
    .from('users')
    .select('id, balance_ton, ton_boost_package, ton_boost_rate')
    .eq('id', 48)
    .single();
  
  console.log('\n1. –°–û–°–¢–û–Ø–ù–ò–ï –î–û:');
  console.log('   TON:', userBefore.balance_ton);
  console.log('   –ü–∞–∫–µ—Ç:', userBefore.ton_boost_package);
  console.log('   –°—Ç–∞–≤–∫–∞:', userBefore.ton_boost_rate);
  
  // 2. –ü–æ–∫—É–ø–∫–∞ Elite –ø–∞–∫–µ—Ç–∞
  console.log('\n2. –ü–û–ö–£–ü–ö–ê ELITE –ü–ê–ö–ï–¢–ê:');
  
  const purchaseResponse = await fetch('http://localhost:3000/api/v2/boost/purchase', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjQ4LCJ0ZWxlZ3JhbV9pZCI6NDgsInVzZXJuYW1lIjoiZGVtb191c2VyIiwicmVmX2NvZGUiOiJSRUZfMTc1MDk1MjU3NjYxNF90OTM4dnMiLCJpYXQiOjE3NTE2MTAzNzgsImV4cCI6MTc1MjIxNTE3OH0.v95q1-qqaPthRflbCtJqTAQEpvAgpDwmWzWyFbPQuoM'
    },
    body: JSON.stringify({
      user_id: '48',
      boost_id: '5', // Elite Boost (3% daily)
      payment_method: 'wallet'
    })
  });
  
  const result = await purchaseResponse.json();
  console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', result.success ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê');
  
  // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
  await new Promise(resolve => setTimeout(resolve, 3000));
  
  // 3. –°–æ—Å—Ç–æ—è–Ω–∏–µ –ü–û–°–õ–ï –ø–æ–∫—É–ø–∫–∏
  const { data: userAfter } = await supabase
    .from('users')
    .select('id, balance_ton, ton_boost_package, ton_boost_rate')
    .eq('id', 48)
    .single();
  
  console.log('\n3. –°–û–°–¢–û–Ø–ù–ò–ï –ü–û–°–õ–ï:');
  console.log('   TON:', userAfter.balance_ton);
  console.log('   –ü–∞–∫–µ—Ç:', userAfter.ton_boost_package);
  console.log('   –°—Ç–∞–≤–∫–∞:', userAfter.ton_boost_rate);
  
  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  const isActive = userAfter.ton_boost_package && userAfter.ton_boost_package !== 0;
  const hasBalance = parseFloat(userAfter.balance_ton) >= 10;
  
  console.log('\n4. –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ê–¶–ò–ò:');
  console.log('   –ü–∞–∫–µ—Ç –∞–∫—Ç–∏–≤–µ–Ω:', isActive ? '–î–ê' : '–ù–ï–¢');
  console.log('   –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ TON:', hasBalance ? '–î–ê' : '–ù–ï–¢');
  console.log('   –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞–π–¥–µ—Ç:', (isActive && hasBalance) ? '–î–ê' : '–ù–ï–¢');
  
  if (isActive && hasBalance) {
    console.log('\n   üéØ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û!');
    console.log('   –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞—á–Ω–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è TON –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
    
    // –†–∞—Å—Å—á–∏—Ç–∞–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
    const deposit = Math.max(0, parseFloat(userAfter.balance_ton) - 10);
    const dailyRate = userAfter.ton_boost_rate;
    const dailyIncome = deposit * dailyRate;
    const fiveMinIncome = dailyIncome / 288;
    
    console.log(`   - –î–µ–ø–æ–∑–∏—Ç: ${deposit} TON`);
    console.log(`   - –°—Ç–∞–≤–∫–∞: ${(dailyRate * 100)}% –≤ –¥–µ–Ω—å`);
    console.log(`   - –î–æ—Ö–æ–¥ –∑–∞ 5 –º–∏–Ω: ${fiveMinIncome.toFixed(8)} TON`);
    
  } else {
    console.log('\n   ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
  }
  
  console.log('\n=== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù ===');
}

finalTestFix().catch(console.error);