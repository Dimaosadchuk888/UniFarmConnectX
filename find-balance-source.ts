import { supabase } from './core/supabase';

async function findBalanceSource() {
  console.log('üîç –ü–æ–∏—Å–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è TON Boost –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞\n');

  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å TON –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74
  const { data: user74, error: userError } = await supabase
    .from('users')
    .select('*')
    .eq('id', 74)
    .single();

  if (!userError && user74) {
    console.log('1Ô∏è‚É£ –ë–∞–ª–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 74:');
    console.log(`- balance_ton (–æ—Å–Ω–æ–≤–Ω–æ–π): ${user74.balance_ton} TON`);
    console.log(`- ton_farming_balance: ${user74.ton_farming_balance} TON`);
    console.log(`- ton_farming_deposit: ${user74.ton_farming_deposit || 'null'}`);
    console.log(`- ton_boost_active: ${user74.ton_boost_active}`);
    console.log(`- ton_boost_package: ${user74.ton_boost_package}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å
    const possibleFarmingBalance = parseFloat(user74.balance_ton) || 0;
    console.log(`\nüéØ –û—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å TON: ${possibleFarmingBalance.toFixed(2)} TON`);
    
    // –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–∞ –æ—Ç —ç—Ç–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
    const rate = 1.5; // Standard Boost
    const dailyIncome = possibleFarmingBalance * (rate / 100);
    const incomePer5Minutes = (dailyIncome / 1440) * 5;
    
    console.log(`\nüí∞ –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å (${possibleFarmingBalance.toFixed(2)} TON):`);
    console.log(`- –î–æ—Ö–æ–¥ –∑–∞ 5 –º–∏–Ω—É—Ç –ø—Ä–∏ —Å—Ç–∞–≤–∫–µ ${rate}%: ${incomePer5Minutes.toFixed(6)} TON`);
    console.log(`- –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –¥–æ—Ö–æ–¥ –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ~0.043 TON`);
    
    if (Math.abs(incomePer5Minutes - 0.043) < 0.001) {
      console.log(`\n‚úÖ –°–û–í–ü–ê–î–ï–ù–ò–ï! –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å TON!`);
    }
  }

  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å ton_boost_active
  console.log('\n\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—Ä—É–≥–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
  
  const { data: activeUsers, error: activeError } = await supabase
    .from('users')
    .select('id, balance_ton, ton_farming_balance, ton_boost_active, ton_boost_package')
    .eq('ton_boost_active', true)
    .limit(5);

  if (!activeError && activeUsers) {
    console.log(`\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤—ã—Ö 5 –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:`);
    
    activeUsers.forEach(user => {
      console.log(`\nUser ${user.id}:`);
      console.log(`- balance_ton: ${user.balance_ton}`);
      console.log(`- ton_farming_balance: ${user.ton_farming_balance}`);
      console.log(`- ton_boost_package: ${user.ton_boost_package}`);
    });
  }

  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  console.log('\n\n3Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
  
  const { data: recentTx, error: txError } = await supabase
    .from('transactions')
    .select('user_id, amount, description')
    .eq('currency', 'TON')
    .like('description', '%TON Boost –¥–æ—Ö–æ–¥%')
    .order('created_at', { ascending: false })
    .limit(20);

  if (!txError && recentTx) {
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    const userIncomes = recentTx.reduce((acc, tx) => {
      if (!acc[tx.user_id]) {
        acc[tx.user_id] = [];
      }
      acc[tx.user_id].push(parseFloat(tx.amount));
      return acc;
    }, {} as Record<number, number[]>);

    console.log('\n–î–æ—Ö–æ–¥—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:');
    
    for (const [userId, incomes] of Object.entries(userIncomes)) {
      const avgIncome = incomes.reduce((a, b) => a + b, 0) / incomes.length;
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: userData } = await supabase
        .from('users')
        .select('balance_ton, ton_boost_package')
        .eq('id', parseInt(userId))
        .single();
      
      if (userData) {
        console.log(`\nUser ${userId}:`);
        console.log(`- –°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥: ${avgIncome.toFixed(6)} TON`);
        console.log(`- balance_ton: ${userData.balance_ton} TON`);
        console.log(`- –ü–∞–∫–µ—Ç: ${userData.ton_boost_package}`);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞–≤–∫—É –ø–æ –ø–∞–∫–µ—Ç—É
        const rates: Record<number, number> = {
          1: 1.0,   // Starter
          2: 1.5,   // Standard
          3: 2.0,   // Advanced
          4: 2.5,   // Premium
          5: 3.0    // Elite
        };
        
        const rate = rates[userData.ton_boost_package] || 1.5;
        const calculatedBalance = (avgIncome * 1440) / (5 * rate / 100);
        
        console.log(`- –†–∞—Å—á–µ—Ç–Ω—ã–π –±–∞–ª–∞–Ω—Å —Ñ–∞—Ä–º–∏–Ω–≥–∞: ${calculatedBalance.toFixed(2)} TON`);
        console.log(`- –†–∞–∑–Ω–∏—Ü–∞ —Å balance_ton: ${Math.abs(calculatedBalance - parseFloat(userData.balance_ton)).toFixed(2)} TON`);
      }
    }
  }

  // 4. –ò—Ç–æ–≥–æ–≤—ã–π –≤—ã–≤–æ–¥
  console.log('\n\nüìä –ò–¢–û–ì–û–í–´–ô –í–´–í–û–î:');
  console.log('‚ùó –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ TON Boost –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ–ª–µ balance_ton (–æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å) –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–æ—Ö–æ–¥–∞');
  console.log('‚ùó –ü–æ–ª–µ ton_farming_balance –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è –∏–ª–∏ –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–∫—É–ø–∫–∞—Ö');
  console.log('‚ùó –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ TON Boost –ø–∞–∫–µ—Ç–∞ –≤–µ—Å—å –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å TON –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –¥–æ—Ö–æ–¥');
}

findBalanceSource().catch(console.error);