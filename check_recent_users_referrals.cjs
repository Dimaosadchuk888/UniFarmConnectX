// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);

async function checkRecentUsersReferrals() {
  console.log('=== –ü–†–û–í–ï–†–ö–ê –ù–û–í–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ===');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ 18 –∏—é–ª—è 2025
    const { data: recentUsers, error } = await supabase
      .from('users')
      .select('id, telegram_id, username, referred_by, created_at')
      .gte('created_at', '2025-07-18T06:00:00')
      .order('created_at', { ascending: false });
    
    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.message);
      return;
    }
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${recentUsers.length} –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ 18 –∏—é–ª—è 06:00`);
    
    if (recentUsers.length === 0) {
      console.log('‚ö†Ô∏è  –ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç. –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - —Å–∏—Å—Ç–µ–º–∞ –µ—â–µ –Ω–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∞—Å—å –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.');
      return;
    }
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüìã –ê–Ω–∞–ª–∏–∑ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
    
    let usersWithReferrals = 0;
    let usersWithoutReferrals = 0;
    let usersWithReferralRecords = 0;
    let usersWithoutReferralRecords = 0;
    
    for (const user of recentUsers) {
      console.log(`\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID ${user.id}:`);
      console.log(`   telegram_id: ${user.telegram_id}`);
      console.log(`   username: ${user.username}`);
      console.log(`   referred_by: ${user.referred_by}`);
      console.log(`   created_at: ${user.created_at}`);
      
      if (user.referred_by) {
        usersWithReferrals++;
        console.log('   ‚úÖ –ò–º–µ–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–∞');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å—å –≤ referrals
        const { data: referralRecord } = await supabase
          .from('referrals')
          .select('*')
          .eq('user_id', user.id)
          .single();
        
        if (referralRecord) {
          usersWithReferralRecords++;
          console.log('   ‚úÖ –ó–∞–ø–∏—Å—å –≤ referrals –µ—Å—Ç—å');
          console.log(`   üìã –°–æ–∑–¥–∞–Ω–∞: ${referralRecord.created_at}`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É
          const userTime = new Date(user.created_at);
          const referralTime = new Date(referralRecord.created_at);
          const timeDiff = Math.abs(referralTime - userTime);
          
          console.log(`   ‚è±Ô∏è  –†–∞–∑–Ω–∏—Ü–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–∏: ${timeDiff}ms`);
          
          if (timeDiff < 5000) {
            console.log('   ‚úÖ –ó–∞–ø–∏—Å–∏ —Å–æ–∑–¥–∞–Ω—ã —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (—Ä–∞–∑–Ω–∏—Ü–∞ < 5 —Å–µ–∫)');
          } else {
            console.log('   ‚ùå –ó–∞–ø–∏—Å–∏ —Å–æ–∑–¥–∞–Ω—ã —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π (—Ä–∞–∑–Ω–∏—Ü–∞ > 5 —Å–µ–∫)');
          }
        } else {
          usersWithoutReferralRecords++;
          console.log('   ‚ùå –ó–∞–ø–∏—Å—å –≤ referrals –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }
      } else {
        usersWithoutReferrals++;
        console.log('   ‚ö†Ô∏è  –ù–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–∞');
      }
    }
    
    console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log(`–í—Å–µ–≥–æ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${recentUsers.length}`);
    console.log(`–° —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏: ${usersWithReferrals}`);
    console.log(`–ë–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${usersWithoutReferrals}`);
    console.log(`–° –∑–∞–ø–∏—Å—è–º–∏ –≤ referrals: ${usersWithReferralRecords}`);
    console.log(`–ë–µ–∑ –∑–∞–ø–∏—Å–µ–π –≤ referrals: ${usersWithoutReferralRecords}`);
    
    // –í—ã—á–∏—Å–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    if (usersWithReferrals > 0) {
      const efficiency = (usersWithReferralRecords / usersWithReferrals) * 100;
      console.log(`\nüìà –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–¨ –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´: ${efficiency.toFixed(1)}%`);
      
      if (efficiency === 100) {
        console.log('‚úÖ –ò–î–ï–ê–õ–¨–ù–ê–Ø –†–ê–ë–û–¢–ê - –≤—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
      } else if (efficiency >= 80) {
        console.log('‚úÖ –•–û–†–û–®–ê–Ø –†–ê–ë–û–¢–ê - –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
      } else if (efficiency >= 50) {
        console.log('‚ö†Ô∏è  –°–†–ï–î–ù–Ø–Ø –†–ê–ë–û–¢–ê - –ø–æ–ª–æ–≤–∏–Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Ç–µ—Ä—è–µ—Ç—Å—è');
      } else {
        console.log('‚ùå –ü–õ–û–•–ê–Ø –†–ê–ë–û–¢–ê - –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Ç–µ—Ä—è–µ—Ç—Å—è');
      }
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
  }
}

checkRecentUsersReferrals().catch(console.error);