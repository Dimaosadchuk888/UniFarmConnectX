#!/usr/bin/env node
/**
 * –ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ TON –î–ï–ü–û–ó–ò–¢–û–í
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—á–µ–º—É –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
 */

const http = require('http');
const fs = require('fs');

async function makeApiRequest(path, method = 'GET', body = null) {
  return new Promise((resolve, reject) => {
    const options = {
      hostname: 'localhost',
      port: 3000,
      path: path,
      method: method,
      headers: {
        'Content-Type': 'application/json',
      }
    };

    const req = http.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => data += chunk);
      res.on('end', () => {
        try {
          const parsedData = JSON.parse(data);
          resolve({ status: res.statusCode, data: parsedData });
        } catch (e) {
          resolve({ status: res.statusCode, data: data });
        }
      });
    });

    req.on('error', reject);
    req.setTimeout(10000, () => reject(new Error('Timeout')));
    
    if (body) {
      req.write(JSON.stringify(body));
    }
    
    req.end();
  });
}

async function diagnoseTonDepositsIssue() {
  console.log('üîç –ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ TON –î–ï–ü–û–ó–ò–¢–û–í');
  console.log('='.repeat(60));
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª—Å—è
  console.log('\n1Ô∏è‚É£ –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –í –ö–û–î–ï');
  
  try {
    const serviceCode = fs.readFileSync('modules/wallet/service.ts', 'utf8');
    const hasCorrectFix = serviceCode.includes("eq('metadata->tx_hash', ton_tx_hash)");
    const hasOldBug = serviceCode.includes("eq('description', ton_tx_hash)");
    
    console.log(`‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–¥–µ: ${hasCorrectFix}`);
    console.log(`‚ùå –°—Ç–∞—Ä–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ: ${hasOldBug}`);
    
    if (!hasCorrectFix) {
      console.log('üö® –ö–†–ò–¢–ò–ß–ù–û: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ù–ï –ü–†–ò–ú–ï–ù–ò–õ–û–°–¨ –≤ –∫–æ–¥–µ!');
      return;
    }
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–¥–∞: ${error.message}`);
  }
  
  // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π TON –¥–µ–ø–æ–∑–∏—Ç endpoint
  console.log('\n2Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TON DEPOSIT ENDPOINT');
  
  try {
    // –°–∏–º—É–ª—è—Ü–∏—è TON –¥–µ–ø–æ–∑–∏—Ç–∞ (–±–µ–∑ JWT –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è)
    const testDepositData = {
      user_id: 184,
      ton_tx_hash: "test_tx_" + Date.now(),
      amount: 0.1,
      wallet_address: "UQTest_Address_123"
    };
    
    console.log('üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–µ–ø–æ–∑–∏—Ç–∞:', testDepositData);
    
    // –ù–ï –¥–µ–ª–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç JWT —Ç–æ–∫–µ–Ω–∞
    console.log('‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤ (—Ç—Ä–µ–±—É–µ—Ç JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)');
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ endpoint: ${error.message}`);
  }
  
  // 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ—Ä–Ω–µ–≤—ã–µ –ø—Ä–∏—á–∏–Ω—ã
  console.log('\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –í–û–ó–ú–û–ñ–ù–´–• –ö–û–†–ù–ï–í–´–• –ü–†–ò–ß–ò–ù');
  
  console.log('\nüéØ –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê 1: –ù–ï–ü–†–ê–í–ò–õ–¨–ù–ê–Ø –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø');
  console.log('- TON –¥–µ–ø–æ–∑–∏—Ç—ã –æ—Ç "—Ä–∞–∑–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤" –º–æ–≥—É—Ç –∏–º–µ—Ç—å —Ä–∞–∑–Ω—ã–µ telegram_id');
  console.log('- getUserByTelegramId –º–æ–∂–µ—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('- –ò–ª–∏ JWT —Ç–æ–∫–µ–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  
  console.log('\nüéØ –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê 2: –û–®–ò–ë–ö–ò –í –õ–û–ì–ê–• –°–ï–†–í–ï–†–ê');
  console.log('- processTonDeposit –º–æ–∂–µ—Ç –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è —Å –æ—à–∏–±–∫–∞–º–∏');
  console.log('- Supabase –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–æ–≥—É—Ç fails –±–µ–∑ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è');
  console.log('- –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –Ω–æ –±–∞–ª–∞–Ω—Å—ã –Ω–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è');
  
  console.log('\nüéØ –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê 3: –ü–†–û–ë–õ–ï–ú–´ –° METADATA –°–¢–†–£–ö–¢–£–†–û–ô');
  console.log('- metadata –ø–æ–ª–µ –º–æ–∂–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—å tx_hash');
  console.log('- –ò–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ metadata –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π');
  console.log('- JSON –ø–æ–ª–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç');
  
  console.log('\nüéØ –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê 4: –ö–≠–®–ò–†–û–í–ê–ù–ò–ï/–°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø');
  console.log('- Frontend –∫—ç—à –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –¥–µ–ø–æ–∑–∏—Ç–∞');
  console.log('- WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç');
  console.log('- balanceService –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ');
  
  console.log('\nüéØ –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê 5: –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–û–¢–û–ö –î–ê–ù–ù–´–•');
  console.log('- TonDepositCard –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  console.log('- tonConnectService –º–æ–∂–µ—Ç –ø–æ–¥–º–µ–Ω—è—Ç—å tx_hash');
  console.log('- JWT payload —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π user_id');
  
  // 4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ
  console.log('\n4Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –î–ê–õ–¨–ù–ï–ô–®–ï–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–ï');
  
  console.log('\nüîç –ß–¢–û –ù–£–ñ–ù–û –ü–†–û–í–ï–†–ò–¢–¨:');
  console.log('1. –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –≤–æ –≤—Ä–µ–º—è –ø–æ–ø—ã—Ç–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–∞');
  console.log('2. –î–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç frontend');
  console.log('3. JWT —Ç–æ–∫–µ–Ω –∏ telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log('4. –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
  console.log('5. –°—Ç—Ä—É–∫—Ç—É—Ä—É metadata –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö');
  
  console.log('\nüìù –ö–û–ú–ê–ù–î–´ –î–õ–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');
  console.log('- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏: tail -f server.log');
  console.log('- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä console –≤–æ –≤—Ä–µ–º—è –¥–µ–ø–æ–∑–∏—Ç–∞');
  console.log('- –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å JWT —Ç–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ user_id');
  console.log('- –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —á–µ—Ä–µ–∑ Supabase');
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É Supabase
  console.log('\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò SUPABASE');
  
  try {
    const supabaseConfig = fs.readFileSync('core/supabase.ts', 'utf8');
    console.log('‚úÖ –§–∞–π–ª core/supabase.ts –Ω–∞–π–¥–µ–Ω');
    
    if (supabaseConfig.includes('createClient')) {
      console.log('‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    } else {
      console.log('‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π Supabase –∫–ª–∏–µ–Ω—Ç–∞');
    }
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Supabase: ${error.message}`);
  }
  
  return true;
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
diagnoseTonDepositsIssue()
  .then(() => console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞'))
  .catch(error => console.error('\n‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error));