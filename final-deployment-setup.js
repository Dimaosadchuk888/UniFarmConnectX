#!/usr/bin/env node
/**
 * –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ UniFarm –∫ deployment
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Supabase
 */

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Å—Ç–∞—Ä—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
delete process.env.DATABASE_URL;
delete process.env.PGHOST;
delete process.env.PGUSER;
delete process.env.PGPASSWORD;
delete process.env.PGPORT;
delete process.env.PGDATABASE;

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
process.env.NODE_ENV = 'production';
process.env.PORT = '3000';
process.env.TELEGRAM_BOT_TOKEN = '7980427501:AAHdia3LusU9dk2aRvhXgmj9Ozo08nR0Gug';
process.env.SUPABASE_URL = 'https://wunnsvicbebssrjqedor.supabase.co';
process.env.SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind1bm5zdmljYmVic3NyanFlZG9yIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk5MDMwNzcsImV4cCI6MjA2NTQ3OTA3N30.4ShnO3KXxi66rEMPkmAafAfN-IFImDd1YwMnrRDPD1c';

console.log('üöÄ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–û–î–ì–û–¢–û–í–ö–ê UNIFARM –ö DEPLOYMENT');
console.log('================================================');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_KEY
);

async function finalDeploymentCheck() {
  console.log('\n‚úÖ –£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï:');
  console.log(`NODE_ENV: ${process.env.NODE_ENV}`);
  console.log(`PORT: ${process.env.PORT}`);
  console.log(`TELEGRAM_BOT_TOKEN: ${process.env.TELEGRAM_BOT_TOKEN.substring(0, 20)}...`);
  console.log(`SUPABASE_URL: ${process.env.SUPABASE_URL}`);
  console.log(`SUPABASE_KEY: ${process.env.SUPABASE_KEY.substring(0, 30)}...`);

  console.log('\n‚ùå –£–î–ê–õ–ï–ù–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï:');
  const removedVars = ['DATABASE_URL', 'PGHOST', 'PGUSER', 'PGPASSWORD', 'PGPORT', 'PGDATABASE'];
  removedVars.forEach(varName => {
    console.log(`${varName}: ${process.env[varName] ? '–í–°–ï –ï–©–ï –ü–†–ò–°–£–¢–°–¢–í–£–ï–¢' : '–£–î–ê–õ–ï–ù–ê'}`);
  });

  console.log('\nüîó –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SUPABASE –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:');
  try {
    const { data, error } = await supabase.from('users').select('id').limit(1);
    if (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${error.message}`);
      return false;
    }
    console.log('‚úÖ Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${data?.length || 0}`);
  } catch (connectionError) {
    console.log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${connectionError.message}`);
    return false;
  }

  console.log('\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–°–ù–û–í–ù–´–• –û–ü–ï–†–ê–¶–ò–ô:');
  
  // –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
  try {
    const testData = {
      telegram_id: 999999999,
      username: 'deployment_test',
      ref_code: `DEPLOY_${Date.now()}`,
      balance_uni: '0',
      balance_ton: '0'
    };

    const { data: newUser, error: createError } = await supabase
      .from('users')
      .insert(testData)
      .select()
      .single();

    if (createError) {
      console.log(`‚ö†Ô∏è –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è: ${createError.message}`);
    } else {
      console.log(`‚úÖ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ID ${newUser.id}`);
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await supabase.from('users').delete().eq('id', newUser.id);
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
    }
  } catch (testError) {
    console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${testError.message}`);
  }

  console.log('\nüéØ –ì–û–¢–û–í–ù–û–°–¢–¨ –ö DEPLOYMENT:');
  
  const allVariablesClean = !removedVars.some(varName => process.env[varName]);
  const requiredVarsPresent = [
    'NODE_ENV', 'PORT', 'TELEGRAM_BOT_TOKEN', 'SUPABASE_URL', 'SUPABASE_KEY'
  ].every(varName => process.env[varName]);

  if (allVariablesClean && requiredVarsPresent) {
    console.log('‚úÖ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –ö DEPLOYMENT');
    console.log('‚úÖ –í—Å–µ —Å—Ç–∞—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
    console.log('‚úÖ Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç');
    console.log('‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–µ–∫—Ä–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    console.log('\nüöÄ –ú–û–ñ–ù–û –ó–ê–ü–£–°–ö–ê–¢–¨ DEPLOYMENT!');
    return true;
  } else {
    console.log('‚ùå –°–ò–°–¢–ï–ú–ê –ù–ï –ì–û–¢–û–í–ê –ö DEPLOYMENT');
    if (!allVariablesClean) {
      console.log('‚ùå –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–∞—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ');
    }
    if (!requiredVarsPresent) {
      console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ');
    }
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
finalDeploymentCheck()
  .then(isReady => {
    console.log('\n================================================');
    if (isReady) {
      console.log('üéâ UniFarm –≥–æ—Ç–æ–≤ –∫ deployment –Ω–∞ Replit!');
      console.log('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: node stable-server.js');
      process.exit(0);
    } else {
      console.log('‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞');
      process.exit(1);
    }
  })
  .catch(error => {
    console.error(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    process.exit(1);
  });