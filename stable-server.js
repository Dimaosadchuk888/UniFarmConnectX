#!/usr/bin/env node

/**
 * UniFarm Production Server Launcher
 * ะกัะฐะฑะธะปัะฝัะน ะทะฐะฟััะบ production ัะตัะฒะตัะฐ ั ะธัะฟัะฐะฒะปะตะฝะฝัะผะธ ะบัะธัะธัะตัะบะธะผะธ ะฑะปะพะบะตัะฐะผะธ
 * ะะฐะดะฐัะธ 2-8 ะฒัะฟะพะปะฝะตะฝั ััะฟะตัะฝะพ
 */

import { spawn } from 'child_process';
import path from 'path';

// ะัะธะฝัะดะธัะตะปัะฝะพ ัััะฐะฝะฐะฒะปะธะฒะฐะตะผ production ัะตะถะธะผ
process.env.NODE_ENV = 'production';

console.log('๐ UniFarm Production Server Starting...');
console.log('๐ฆ Environment: production');
console.log('๐ง ะัะธัะธัะตัะบะธะต ะฑะปะพะบะตัั ััััะฐะฝะตะฝั (ะะฐะดะฐัะธ 2-8)');
console.log('โก TSX Runtime ะดะปั TypeScript ะฟะพะดะดะตัะถะบะธ');

// ะะฐะฟััะบ ัะตัะฒะตัะฐ ัะตัะตะท TSX ะดะปั TypeScript ะฟะพะดะดะตัะถะบะธ
const serverProcess = spawn('npx', ['tsx', 'server/index.ts'], {
  stdio: 'inherit',
  cwd: process.cwd(),
  env: {
    ...process.env,
    NODE_ENV: 'production',
    PORT: process.env.PORT || '3000',
    HOST: '0.0.0.0'
  }
});

// ะะฑัะฐะฑะพัะบะฐ ะพัะธะฑะพะบ ะทะฐะฟััะบะฐ
serverProcess.on('error', (error) => {
  console.error('โ ะัะธะฑะบะฐ ะทะฐะฟััะบะฐ ัะตัะฒะตัะฐ:', error.message);
  process.exit(1);
});

// ะะฑัะฐะฑะพัะบะฐ ะทะฐะฒะตััะตะฝะธั ัะตัะฒะตัะฐ
serverProcess.on('exit', (code) => {
  if (code === 0) {
    console.log('โ ะกะตัะฒะตั ะบะพััะตะบัะฝะพ ะทะฐะฒะตััะตะฝ');
  } else {
    console.error(`โ ะกะตัะฒะตั ะทะฐะฒะตััะตะฝ ั ะบะพะดะพะผ: ${code}`);
    process.exit(code);
  }
});

// Graceful shutdown
process.on('SIGTERM', () => {
  console.log('๐ ะะพะปััะตะฝ SIGTERM, ะทะฐะฒะตััะตะฝะธะต ัะตัะฒะตัะฐ...');
  serverProcess.kill('SIGTERM');
});

process.on('SIGINT', () => {
  console.log('๐ ะะพะปััะตะฝ SIGINT, ะทะฐะฒะตััะตะฝะธะต ัะตัะฒะตัะฐ...');
  serverProcess.kill('SIGINT');
});