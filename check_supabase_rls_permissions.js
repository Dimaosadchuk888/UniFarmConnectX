/**
 * –ü–†–û–í–ï–†–ö–ê –ü–†–ê–í –î–û–°–¢–£–ü–ê SUPABASE RLS –î–õ–Ø –¢–ê–ë–õ–ò–¶–´ REFERRALS
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å Row Level Security
 */

console.log('üîí –ü–†–û–í–ï–†–ö–ê SUPABASE RLS PERMISSIONS');
console.log('=====================================\n');

async function checkSupabaseRLSPermissions() {
  console.log('1Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–ê–í –ó–ê–ü–ò–°–ò –í –¢–ê–ë–õ–ò–¶–£ REFERRALS:');
  console.log('--------------------------------------------------');
  
  // –ü–æ–ª—É—á–∞–µ–º JWT —Ç–æ–∫–µ–Ω –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  const jwt = localStorage.getItem('unifarm_jwt_token');
  console.log(`üîë JWT Token: ${jwt ? '–ù–ê–ô–î–ï–ù' : '–ù–ï –ù–ê–ô–î–ï–ù'}`);
  
  if (!jwt) {
    console.log('‚ùå JWT —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω - –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞');
    return;
  }
  
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ referrals —á–µ—Ä–µ–∑ backend API
    console.log('\n2Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ß–ï–†–ï–ó BACKEND API:');
    console.log('--------------------------------------------------');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    const testData = {
      telegram_id: 888888888,
      username: 'test_rls_user_' + Date.now(),
      first_name: 'RLS Test',
      ref_by: 'TEST_REF_RLS'
    };
    
    console.log('üìù –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', testData);
    
    const response = await fetch('/api/v2/auth/telegram', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${jwt}`
      },
      body: JSON.stringify({
        initData: `user=${JSON.stringify({
          id: testData.telegram_id,
          username: testData.username,
          first_name: testData.first_name
        })}`,
        ref_by: testData.ref_by
      })
    });
    
    console.log(`üìä –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} ${response.statusText}`);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:', data);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥ —Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å)
      console.log('\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –õ–û–ì–û–í –°–ï–†–í–ï–†–ê:');
      console.log('--------------------------------------------------');
      console.log('üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ console/logs –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç:');
      console.log('   üîç "[AuthService] –ù–ê–ß–ò–ù–ê–ï–¢–°–Ø –ù–ï–ú–ï–î–õ–ï–ù–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê"');
      console.log('   ‚úÖ "[AuthService] ‚úÖ –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–í–Ø–ó–¨ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù–ê"');
      console.log('   ‚ùå "[AuthService] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê —Å–æ–∑–¥–∞–Ω–∏—è referrals –∑–∞–ø–∏—Å–∏"');
      console.log('   üîê "RLS policy violation" –∏–ª–∏ "insufficient privileges"');
      
    } else {
      const errorData = await response.text();
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', errorData);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Supabase
    console.log('\n4Ô∏è‚É£ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –í–û–ó–ú–û–ñ–ù–´–• –ü–†–û–ë–õ–ï–ú RLS:');
    console.log('--------------------------------------------------');
    console.log('üîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:');
    console.log('   1. üö´ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç RLS policies –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã referrals');
    console.log('   2. üîê Policy –±–ª–æ–∫–∏—Ä—É–µ—Ç INSERT –æ–ø–µ—Ä–∞—Ü–∏–∏');
    console.log('   3. üé≠ JWT token –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ claims');
    console.log('   4. üîÑ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π user_id –≤ policy —É—Å–ª–æ–≤–∏—è—Ö');
    
    console.log('\nüõ†Ô∏è –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('   1. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å RLS policies –≤ Supabase Dashboard');
    console.log('   2. ‚úÖ –°–æ–∑–¥–∞—Ç—å policy: ALLOW INSERT for authenticated users');
    console.log('   3. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å JWT payload –∏ user claims');
    console.log('   4. ‚úÖ –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å RLS –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ RLS:', error);
  }
  
  console.log('\n5Ô∏è‚É£ SQL –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø RLS:');
  console.log('--------------------------------------------------');
  console.log('-- –°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—É—é policy –¥–ª—è INSERT –≤ referrals');
  console.log(`
ALTER TABLE referrals ENABLE ROW LEVEL SECURITY;

-- Policy –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
CREATE POLICY "Allow referral creation" ON referrals
  FOR INSERT WITH CHECK (true);

-- Policy –¥–ª—è —á—Ç–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π  
CREATE POLICY "Allow referral reading" ON referrals
  FOR SELECT USING (true);

-- –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å RLS –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–ù–ï –¥–ª—è production!)
-- ALTER TABLE referrals DISABLE ROW LEVEL SECURITY;
  `);
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
if (typeof window !== 'undefined') {
  checkSupabaseRLSPermissions();
} else {
  console.log('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞');
}