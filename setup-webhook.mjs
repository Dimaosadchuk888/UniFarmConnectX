/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook Telegram –±–æ—Ç–∞ (ESM –≤–µ—Ä—Å–∏—è)
 * 
 * –ó–∞–ø—É—Å–∫: node setup-webhook.mjs
 */

import fetch from 'node-fetch';

// –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

// –ü–æ–ª—É—á–∞–µ–º URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
// –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ, –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–µ–≤–æ–π URL
let appUrl = process.argv[2] || 'https://uni-farm-connect-2-misterxuniverse.replit.app';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if (!BOT_TOKEN) {
  console.error('‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

// –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram webhook —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–ª–µ–¥—É—é—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:');
console.log(`üì° URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${appUrl}`);
console.log(`üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞: ${BOT_TOKEN.substring(0, 10)}...`);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL
try {
  new URL(appUrl);
} catch (e) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∑–∞–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node setup-webhook.mjs <URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è>');
  console.log('–ü—Ä–∏–º–µ—Ä: node setup-webhook.mjs https://your-app.replit.app');
  process.exit(1);
}

// –£–¥–∞–ª—è–µ–º —Å–ª–µ—à –≤ –∫–æ–Ω—Ü–µ URL, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
if (appUrl.endsWith('/')) {
  appUrl = appUrl.slice(0, -1);
}

const webhookUrl = `${appUrl}/api/telegram/webhook`;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram API
async function callTelegramApi(method, data = {}) {
  try {
    const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/${method}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data)
    });

    const result = await response.json();
    return result;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ ${method}:`, error.message);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º webhook
async function getWebhookInfo() {
  try {
    const result = await callTelegramApi('getWebhookInfo');
    
    if (!result || !result.ok) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook:', result?.description || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      if (result?.error_code) {
        console.error(`   –ö–æ–¥ –æ—à–∏–±–∫–∏: ${result.error_code}`);
      }
      return null;
    }
    
    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook
    const webhookData = result.result;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤—ã–≤–æ–¥–∏–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
    if (webhookData) {
      const ipAddress = webhookData.ip_address ? webhookData.ip_address : '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω';
      const lastErrorDate = webhookData.last_error_date 
        ? new Date(webhookData.last_error_date * 1000).toISOString() 
        : '–ù–µ—Ç –æ—à–∏–±–æ–∫';
      const lastErrorMessage = webhookData.last_error_message || '–ù–µ—Ç –æ—à–∏–±–æ–∫';
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      if (webhookData.last_error_date) {
        console.log('‚ö†Ô∏è –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞ webhook:');
        console.log(`   –î–∞—Ç–∞: ${lastErrorDate}`);
        console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${lastErrorMessage}`);
      }
      
      if (webhookData.url) {
        console.log(`   IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: ${ipAddress}`);
        console.log(`   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π: ${webhookData.max_connections || '–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'}`);
        console.log(`   –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${webhookData.allowed_updates?.join(', ') || '–≤—Å–µ —Ç–∏–ø—ã'}`);
      }
    }
    
    return webhookData;
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook:', error);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook
async function setWebhook() {
  console.log(`üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è URL: ${webhookUrl}`);
  
  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è webhook
  const webhookConfig = {
    url: webhookUrl,
    drop_pending_updates: true,
    allowed_updates: ['message', 'edited_message', 'callback_query', 'inline_query'],
    max_connections: 40 // –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –±–æ—Ç–æ–≤
  };
  
  console.log('üõ†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è webhook:', JSON.stringify(webhookConfig, null, 2));
  
  try {
    const result = await callTelegramApi('setWebhook', webhookConfig);
    
    if (!result || !result.ok) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook:', result?.description || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      if (result?.error_code) {
        console.error(`   –ö–æ–¥ –æ—à–∏–±–∫–∏: ${result.error_code}`);
      }
      return false;
    }
    
    console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    return true;
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:', error);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('ü§ñ –ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram webhook...');
  console.log('‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:', new Date().toISOString());
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook...');
    const webhookInfo = await getWebhookInfo();
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è webhook
    if (webhookInfo) {
      console.log('‚ÑπÔ∏è –¢–µ–∫—É—â–∏–π webhook:');
      console.log(`   URL: ${webhookInfo.url || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
      console.log(`   –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${webhookInfo.pending_update_count}`);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ webhook —É–∂–µ –Ω–∞ –Ω—É–∂–Ω—ã–π URL
      if (webhookInfo.url === webhookUrl) {
        console.log('‚úÖ Webhook —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL');
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ø–∏–Ω–≥—É–µ–º –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
        try {
          const botInfo = await callTelegramApi('getMe');
          if (botInfo && botInfo.ok) {
            console.log('‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:');
            console.log(`   –ò–º—è: ${botInfo.result.first_name}`);
            console.log(`   Username: @${botInfo.result.username}`);
            console.log(`   ID: ${botInfo.result.id}`);
          } else {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ. –¢–æ–∫–µ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º.');
          }
        } catch (e) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞:', e);
        }
        
        return;
      }
      
      // –ï—Å–ª–∏ webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –¥—Ä—É–≥–æ–π URL, —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      if (webhookInfo.url) {
        console.log(`‚ö†Ô∏è –¢–µ–∫—É—â–∏–π webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –¥—Ä—É–≥–æ–π URL: ${webhookInfo.url}`);
        console.log('üîÑ –ü–µ—Ä–µ–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –Ω–∞ –Ω–æ–≤—ã–π URL...');
      }
    } else {
      console.log('‚ÑπÔ∏è –¢–µ–∫—É—â–∏–π webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é');
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
    const webhookResult = await setWebhook();
    
    if (!webhookResult) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook. –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook...');
    const newWebhookInfo = await getWebhookInfo();
    
    if (newWebhookInfo && newWebhookInfo.url === webhookUrl) {
      console.log('üéâ Webhook —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω!');
      console.log(`üåê WebApp —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å Telegram –Ω–∞: ${webhookUrl}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞
      try {
        const botInfo = await callTelegramApi('getMe');
        if (botInfo && botInfo.ok) {
          console.log('‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:');
          console.log(`   –ò–º—è: ${botInfo.result.first_name}`);
          console.log(`   Username: @${botInfo.result.username}`);
          console.log(`   ID: ${botInfo.result.id}`);
        } else {
          console.warn('‚ö†Ô∏è Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ.');
        }
      } catch (e) {
        console.warn('‚ö†Ô∏è Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞:', e);
      }
    } else {
      console.error('‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ webhook.');
      console.error('   –û–∂–∏–¥–∞–µ–º—ã–π URL:', webhookUrl);
      console.error('   –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π URL:', newWebhookInfo?.url || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ webhook:', error);
  } finally {
    console.log('‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:', new Date().toISOString());
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main().catch(error => {
  console.error('‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});