/**
 * –¢–†–ï–ô–°–ò–ù–ì –ü–†–û–ë–õ–ï–ú–´ TON DEPOSIT
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —É–∑–ª–æ–≤: Frontend ‚Üí API Routes ‚Üí Controller ‚Üí Service ‚Üí Database
 */

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';
import fs from 'fs';

dotenv.config();

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);

async function traceTonDepositIssue() {
  console.log('üîç –¢–†–ï–ô–°–ò–ù–ì TON DEPOSIT ISSUE');
  console.log('===============================');
  
  try {
    // 1. –ü–†–û–í–ï–†–ö–ê FRONTEND –ö–û–î–ê tonConnectService
    console.log('\n1. üì± –ê–ù–ê–õ–ò–ó FRONTEND –ö–û–î–ê:');
    
    const tonConnectContent = fs.readFileSync('client/src/services/tonConnectService.ts', 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ backend –≤—ã–∑–æ–≤–∞
    const hasBackendCall = tonConnectContent.includes('correctApiRequest(\'/api/v2/wallet/ton-deposit\'');
    const hasImport = tonConnectContent.includes('import(@/lib/correctApiRequest)');
    const hasTryCatch = tonConnectContent.includes('[TON_DEPOSIT]');
    
    console.log(`   - Backend API –≤—ã–∑–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${hasBackendCall ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`   - Dynamic import correctApiRequest: ${hasImport ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`   - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ TON_DEPOSIT: ${hasTryCatch ? '–î–ê' : '–ù–ï–¢'}`);
    
    // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –≤—ã–∑–æ–≤–æ–º
    if (hasBackendCall) {
      const lines = tonConnectContent.split('\n');
      const callLineIndex = lines.findIndex(line => line.includes('correctApiRequest(\'/api/v2/wallet/ton-deposit\''));
      if (callLineIndex >= 0) {
        console.log(`   - –ù–∞–π–¥–µ–Ω –≤—ã–∑–æ–≤ –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${callLineIndex + 1}:`);
        console.log(`     ${lines[callLineIndex].trim()}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–∫—Ä—É–≥ –≤—ã–∑–æ–≤–∞
        const contextStart = Math.max(0, callLineIndex - 2);
        const contextEnd = Math.min(lines.length, callLineIndex + 3);
        console.log('   - –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–∑–æ–≤–∞:');
        for (let i = contextStart; i < contextEnd; i++) {
          console.log(`     ${i + 1}: ${lines[i]}`);
        }
      }
    }
    
    // 2. –ü–†–û–í–ï–†–ö–ê ROUTES CONFIGURATION
    console.log('\n2. üõ£Ô∏è –ê–ù–ê–õ–ò–ó ROUTES:');
    
    const routesContent = fs.readFileSync('server/routes.ts', 'utf8');
    const hasTonDepositRoute = routesContent.includes('/api/v2/wallet/ton-deposit') || routesContent.includes('ton-deposit');
    const hasWalletRoutes = routesContent.includes('wallet');
    
    console.log(`   - TON deposit route –Ω–∞–π–¥–µ–Ω: ${hasTonDepositRoute ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`   - Wallet routes –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç: ${hasWalletRoutes ? '–î–ê' : '–ù–ï–¢'}`);
    
    if (hasTonDepositRoute) {
      const routeLines = routesContent.split('\n');
      const routeLineIndex = routeLines.findIndex(line => line.includes('ton-deposit'));
      if (routeLineIndex >= 0) {
        console.log(`   - Route –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${routeLineIndex + 1}:`);
        console.log(`     ${routeLines[routeLineIndex].trim()}`);
      }
    }
    
    // 3. –ü–†–û–í–ï–†–ö–ê CONTROLLER
    console.log('\n3. üéõÔ∏è –ê–ù–ê–õ–ò–ó CONTROLLER:');
    
    const controllerContent = fs.readFileSync('modules/wallet/controller.ts', 'utf8');
    const hasTonDepositMethod = controllerContent.includes('async tonDeposit');
    const hasProcessTonDeposit = controllerContent.includes('processTonDeposit');
    const hasValidation = controllerContent.includes('ton_tx_hash') && controllerContent.includes('amount');
    
    console.log(`   - tonDeposit –º–µ—Ç–æ–¥ –Ω–∞–π–¥–µ–Ω: ${hasTonDepositMethod ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`   - –í—ã–∑–æ–≤ processTonDeposit: ${hasProcessTonDeposit ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`   - –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: ${hasValidation ? '–î–ê' : '–ù–ï–¢'}`);
    
    // 4. –ü–†–û–í–ï–†–ö–ê SERVICE
    console.log('\n4. ‚öôÔ∏è –ê–ù–ê–õ–ò–ó SERVICE:');
    
    try {
      const serviceContent = fs.readFileSync('modules/wallet/service.ts', 'utf8');
      const hasProcessMethod = serviceContent.includes('processTonDeposit');
      const hasBalanceManager = serviceContent.includes('BalanceManager') || serviceContent.includes('addBalance');
      const hasTransactionCreate = serviceContent.includes('transaction') && serviceContent.includes('create');
      
      console.log(`   - processTonDeposit –º–µ—Ç–æ–¥: ${hasProcessMethod ? '–î–ê' : '–ù–ï–¢'}`);
      console.log(`   - BalanceManager –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: ${hasBalanceManager ? '–î–ê' : '–ù–ï–¢'}`);
      console.log(`   - –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${hasTransactionCreate ? '–î–ê' : '–ù–ï–¢'}`);
      
    } catch (serviceError) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è service.ts: ${serviceError.message}`);
    }
    
    // 5. –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• –ù–ê –û–®–ò–ë–ö–ò
    console.log('\n5. üíæ –ü–†–û–í–ï–†–ö–ê –ë–î –ù–ê –û–®–ò–ë–ö–ò:');
    
    // –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö —á–µ—Ä–µ–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å error –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
    const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000).toISOString();
    const { data: errorLogs, error: logError } = await supabase
      .from('transactions')
      .select('*')
      .gte('created_at', oneHourAgo)
      .or('description.ilike.%error%,description.ilike.%failed%,description.ilike.%exception%')
      .order('created_at', { ascending: false });
    
    if (logError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫:', logError.message);
    } else {
      console.log(`   - –ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫ –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö –∑–∞ —á–∞—Å: ${errorLogs?.length || 0}`);
      errorLogs?.slice(0, 3).forEach(log => {
        console.log(`     - ${log.created_at}: ${log.description}`);
      });
    }
    
    // 6. –ü–†–û–í–ï–†–ö–ê JWT TOKEN ISSUES
    console.log('\n6. üîê –ü–†–û–í–ï–†–ö–ê JWT –ü–†–û–ë–õ–ï–ú:');
    
    // User #25 –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å JWT —Ç–æ–∫–µ–Ω–∞–º–∏
    const { data: user25, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('id', 25)
      .single();
    
    if (userError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è User #25:', userError.message);
    } else {
      console.log(`   - User #25 –Ω–∞–π–¥–µ–Ω: ID ${user25.id}, telegram_id ${user25.telegram_id}`);
      console.log(`   - Username: ${user25.username || '–ù–ï–¢'}`);
      console.log(`   - Balance TON: ${user25.balance_ton}`);
    }
    
    // 7. –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´
    console.log('\n7. üéØ –î–ò–ê–ì–ù–û–ó –ü–†–û–ë–õ–ï–ú–´:');
    console.log('========================');
    
    const frontendOk = hasBackendCall && hasImport && hasTryCatch;
    const routingOk = hasTonDepositRoute && hasWalletRoutes;
    const controllerOk = hasTonDepositMethod && hasProcessTonDeposit && hasValidation;
    
    console.log(`frontend_integration: ${frontendOk ? '–ò–°–ü–†–ê–í–ï–ù' : '–ü–†–û–ë–õ–ï–ú–ê'}`);
    console.log(`routing_configuration: ${routingOk ? '–ò–°–ü–†–ê–í–ï–ù' : '–ü–†–û–ë–õ–ï–ú–ê'}`);
    console.log(`controller_logic: ${controllerOk ? '–ò–°–ü–†–ê–í–ï–ù' : '–ü–†–û–ë–õ–ï–ú–ê'}`);
    console.log(`database_connectivity: –†–ê–ë–û–¢–ê–ï–¢ (–≤–∏–¥–Ω—ã –¥—Ä—É–≥–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)`);
    
    if (frontendOk && routingOk && controllerOk) {
      console.log('–í–û–ó–ú–û–ñ–ù–ê–Ø_–ü–†–ò–ß–ò–ù–ê: –ü—Ä–æ–±–ª–µ–º–∞ –≤ Service —Å–ª–æ–µ –∏–ª–∏ –≤ JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
      console.log('–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å processTonDeposit –≤ WalletService');
    } else {
      console.log('–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø_–ü–†–û–ë–õ–ï–ú–ê: –ù–∞—Ä—É—à–µ–Ω–∞ —Ü–µ–ø–æ—á–∫–∞ Frontend ‚Üí Backend');
      if (!frontendOk) console.log('  - Frontend –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç backend –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      if (!routingOk) console.log('  - Routes –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
      if (!controllerOk) console.log('  - Controller –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã');
    }
    
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¢–†–ï–ô–°–ò–ù–ì–ê:', error.message);
  }
}

traceTonDepositIssue();