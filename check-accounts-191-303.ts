import { supabase } from './core/supabaseClient';

async function checkAccounts191To303() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –ê–ö–ö–ê–£–ù–¢–û–í 191-303 –ò –ò–°–¢–û–ß–ù–ò–ö–û–í TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ô');
  console.log('='.repeat(70));

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫–∫–∞—É–Ω—Ç—ã 191-303
    console.log('\n1Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ê–ö–ö–ê–£–ù–¢–û–í 191-303:');
    
    const { data: problemAccounts, error: accountsError } = await supabase
      .from('users')
      .select('*')
      .gte('id', 191)
      .lte('id', 303)
      .order('id', { ascending: true });

    if (!accountsError && problemAccounts) {
      console.log(`üìä –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ 191-303: ${problemAccounts.length}`);
      
      let tonBalanceCount = 0;
      let tonBoostActiveCount = 0;
      let uniActiveCount = 0;
      let noWalletCount = 0;
      
      console.log('\nüîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó:');
      problemAccounts.forEach(user => {
        if (user.balance_ton > 0) tonBalanceCount++;
        if (user.ton_boost_active) tonBoostActiveCount++;
        if (user.uni_farming_active) uniActiveCount++;
        if (!user.ton_wallet_address) noWalletCount++;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö
        if (problemAccounts.indexOf(user) < 10) {
          console.log(`   User ${user.id}:`);
          console.log(`     TON Balance: ${user.balance_ton}`);
          console.log(`     TON Boost: ${user.ton_boost_active ? '–î–ê' : '–ù–ï–¢'}`);
          console.log(`     UNI Farming: ${user.uni_farming_active ? '–î–ê' : '–ù–ï–¢'}`);
          console.log(`     Wallet: ${user.ton_wallet_address || '–ù–ï–¢'}`);
          console.log(`     –°–æ–∑–¥–∞–Ω: ${user.created_at}`);
          console.log('     ---');
        }
      });
      
      console.log('\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ê–ö–ö–ê–£–ù–¢–û–í 191-303:');
      console.log(`   –° TON –±–∞–ª–∞–Ω—Å–æ–º: ${tonBalanceCount}`);
      console.log(`   –° –∞–∫—Ç–∏–≤–Ω—ã–º TON Boost: ${tonBoostActiveCount}`);
      console.log(`   –° –∞–∫—Ç–∏–≤–Ω—ã–º UNI Farming: ${uniActiveCount}`);
      console.log(`   –ë–µ–∑ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞: ${noWalletCount}`);
      console.log(`   –ü—Ä–æ—Ü–µ–Ω—Ç –±–µ–∑ –∫–æ—à–µ–ª—å–∫–∞: ${Math.round(noWalletCount / problemAccounts.length * 100)}%`);
    }

    // 2. –ò—â–µ–º TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —ç—Ç–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    console.log('\n2Ô∏è‚É£ TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –ê–ö–ö–ê–£–ù–¢–û–í 191-303:');
    
    const { data: tonTransactions, error: tonTxError } = await supabase
      .from('transactions')
      .select('*')
      .gte('user_id', 191)
      .lte('user_id', 303)
      .or('amount_ton.gt.0,currency.eq.TON')
      .order('created_at', { ascending: false })
      .limit(20);

    if (!tonTxError && tonTransactions && tonTransactions.length > 0) {
      console.log(`üí∞ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞–π–¥–µ–Ω–æ: ${tonTransactions.length}`);
      
      tonTransactions.forEach((tx, idx) => {
        console.log(`   ${idx + 1}. User ${tx.user_id}: [${tx.created_at}]`);
        console.log(`      Type: ${tx.type}`);
        console.log(`      Amount TON: ${tx.amount_ton}`);
        console.log(`      Amount: ${tx.amount}`);
        console.log(`      Currency: ${tx.currency}`);
        console.log(`      Description: ${(tx.description || '').substring(0, 50)}...`);
        console.log(`      Status: ${tx.status}`);
        console.log('      ---');
      });
    } else {
      console.log('‚ùå TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ 191-303 –ù–ï –ù–ê–ô–î–ï–ù–û');
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º ton_farming_data –¥–ª—è —ç—Ç–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    console.log('\n3Ô∏è‚É£ TON FARMING DATA –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ 191-303:');
    
    const { data: farmingData, error: farmingError } = await supabase
      .from('ton_farming_data')
      .select('*')
      .gte('user_id', 191)
      .lte('user_id', 303)
      .order('user_id', { ascending: true });

    if (!farmingError && farmingData && farmingData.length > 0) {
      console.log(`üåæ –ó–∞–ø–∏—Å–µ–π –≤ ton_farming_data: ${farmingData.length}`);
      
      farmingData.forEach((farm, idx) => {
        if (idx < 10) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
          console.log(`   User ${farm.user_id}:`);
          console.log(`     Farming Balance: ${farm.farming_balance}`);
          console.log(`     Boost Active: ${farm.boost_active}`);
          console.log(`     Package: ${farm.boost_package_id || '–ù–ï–¢'}`);
          console.log(`     Rate: ${farm.farming_rate || '–ù–ï–¢'}`);
          console.log(`     Created: ${farm.created_at}`);
          console.log('     ---');
        }
      });
    } else {
      console.log('‚ùå TON farming data –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ 191-303 –ù–ï –ù–ê–ô–î–ï–ù–û');
    }

    // 4. –û–¢–ö–£–î–ê –ò–î–£–¢ TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ò –°–ï–ô–ß–ê–°?
    console.log('\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ò–°–¢–û–ß–ù–ò–ö–û–í TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
    
    // –ò—â–µ–º –≤—Å–µ TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
    const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000).toISOString();
    
    const { data: recentTonTx, error: recentTonError } = await supabase
      .from('transactions')
      .select('*')
      .gte('created_at', oneHourAgo)
      .or('amount_ton.gt.0,currency.eq.TON')
      .order('created_at', { ascending: false })
      .limit(50);

    if (!recentTonError && recentTonTx && recentTonTx.length > 0) {
      console.log(`‚ö° TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å: ${recentTonTx.length}`);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—è, –≥–¥–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è TON
      const fieldAnalysis = {
        amount_ton: 0,
        amount: 0,
        currency_ton: 0,
        farming_reward: 0,
        referral_reward: 0
      };
      
      recentTonTx.forEach(tx => {
        if (tx.amount_ton && tx.amount_ton > 0) fieldAnalysis.amount_ton++;
        if (tx.amount && tx.currency === 'TON') fieldAnalysis.amount++;
        if (tx.currency === 'TON') fieldAnalysis.currency_ton++;
        if (tx.type === 'FARMING_REWARD') fieldAnalysis.farming_reward++;
        if (tx.type === 'REFERRAL_REWARD') fieldAnalysis.referral_reward++;
      });
      
      console.log('\nüìä –ê–ù–ê–õ–ò–ó –ü–û–õ–ï–ô TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
      console.log(`   amount_ton > 0: ${fieldAnalysis.amount_ton} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      console.log(`   amount + currency=TON: ${fieldAnalysis.amount} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      console.log(`   currency = TON: ${fieldAnalysis.currency_ton} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      console.log(`   FARMING_REWARD: ${fieldAnalysis.farming_reward} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      console.log(`   REFERRAL_REWARD: ${fieldAnalysis.referral_reward} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      
      console.log('\nüí° –ü–†–ò–ú–ï–†–´ –ü–û–°–õ–ï–î–ù–ò–• TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
      recentTonTx.slice(0, 5).forEach((tx, idx) => {
        console.log(`   ${idx + 1}. User ${tx.user_id}: ${tx.type}`);
        console.log(`      amount_ton: ${tx.amount_ton}`);
        console.log(`      amount: ${tx.amount}`);
        console.log(`      currency: ${tx.currency}`);
        console.log(`      –ö—É–¥–∞ –∑–∞–ø–∏—Å–∞–Ω–æ: ${tx.amount_ton > 0 ? 'amount_ton' : 'amount+currency'}`);
        console.log('      ---');
      });
    } else {
      console.log('‚ùå TON —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å –ù–ï –ù–ê–ô–î–ï–ù–û');
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã transactions
    console.log('\n5Ô∏è‚É£ –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ TRANSACTIONS:');
    
    const { data: sampleTx, error: sampleError } = await supabase
      .from('transactions')
      .select('*')
      .limit(1);

    if (!sampleError && sampleTx && sampleTx.length > 0) {
      const tx = sampleTx[0];
      console.log('üîç –ü–û–õ–Ø –í –¢–ê–ë–õ–ò–¶–ï TRANSACTIONS:');
      Object.keys(tx).forEach(key => {
        console.log(`   ${key}: ${typeof tx[key]} = ${tx[key]}`);
      });
    }

    // 6. –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–ó
    console.log('\n6Ô∏è‚É£ –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–ó:');
    
    console.log('\nüéØ –ü–†–û–ë–õ–ï–ú–´ –ê–ö–ö–ê–£–ù–¢–û–í 191-303:');
    if (problemAccounts) {
      const problematicUsers = problemAccounts.filter(u => 
        (u.balance_ton > 0 && !u.ton_boost_active) || 
        (!u.ton_wallet_address && u.balance_ton > 0)
      );
      
      console.log(`   –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ${problematicUsers.length}`);
      console.log(`   –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:`);
      console.log(`   - –ï—Å—Ç—å TON –±–∞–ª–∞–Ω—Å, –Ω–æ TON Boost –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω`);
      console.log(`   - –ù–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞`);
      console.log(`   - –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ ton_farming_data`);
    }
    
    console.log('\nüí∞ –ò–°–¢–û–ß–ù–ò–ö–ò TON –¢–†–ê–ù–ó–ê–ö–¶–ò–ô:');
    console.log(`   –û—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫: FARMING_REWARD –∏ REFERRAL_REWARD`);
    console.log(`   –ü–æ–ª—è –∑–∞–ø–∏—Å–∏: amount_ton –∏ amount+currency`);
    console.log(`   –î–µ–ø–æ–∑–∏—Ç–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: –ù–ï –°–û–ó–î–ê–Æ–¢–°–Ø –æ—Ç–¥–µ–ª—å–Ω–æ`);
    
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
  }
}

checkAccounts191To303().catch(console.error);