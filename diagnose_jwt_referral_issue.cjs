/**
 * –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê JWT –ò –†–ï–§–ï–†–ê–õ–¨–ù–´–• –ü–†–û–ë–õ–ï–ú
 * –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã —Å User ID 224
 */

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

async function diagnoseJWTReferralIssue() {
  console.log('=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê JWT –ò –†–ï–§–ï–†–ê–õ–¨–ù–´–• –ü–†–û–ë–õ–ï–ú ===\n');
  
  try {
    // 1. –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
    console.log('üîç 1. –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ID 224');
    
    const { data: problemUser, error: problemUserError } = await supabase
      .from('users')
      .select('*')
      .eq('id', 224)
      .single();
    
    if (problemUserError) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 224 –ù–ï –ù–ê–ô–î–ï–ù:', problemUserError.message);
      return;
    }
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID 224 –Ω–∞–π–¥–µ–Ω:');
    console.log(`   Telegram ID: ${problemUser.telegram_id}`);
    console.log(`   Username: ${problemUser.username}`);
    console.log(`   Ref Code: ${problemUser.ref_code}`);
    console.log(`   Referred by: ${problemUser.referred_by || '–ù–ï–¢'}`);
    console.log(`   –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date(problemUser.created_at).toLocaleString('ru-RU')}`);
    
    // 2. –ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–û–ì–û –ö–û–î–ê –ö–û–¢–û–†–´–ô –î–û–õ–ñ–ï–ù –ë–´–õ –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨–°–Ø
    console.log('\nüîó 2. –ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–û–ì–û –ö–û–î–ê –†–ï–§–ï–†–ï–†–ê');
    
    const { data: referrerUser, error: referrerError } = await supabase
      .from('users')
      .select('*')
      .eq('ref_code', 'REF_1750079004411_nddfp2')
      .single();
    
    if (referrerError) {
      console.log('‚ùå –†–µ—Ñ–µ—Ä–µ—Ä –ù–ï –ù–ê–ô–î–ï–ù:', referrerError.message);
    } else {
      console.log('‚úÖ –†–µ—Ñ–µ—Ä–µ—Ä –Ω–∞–π–¥–µ–Ω:');
      console.log(`   ID: ${referrerUser.id}`);
      console.log(`   Telegram ID: ${referrerUser.telegram_id}`);
      console.log(`   Username: ${referrerUser.username}`);
      console.log(`   Ref Code: ${referrerUser.ref_code}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–ª–∂–Ω–∞ –ª–∏ –±—ã–ª–∞ –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–∞ —Å–≤—è–∑—å
      console.log('\nüîç –ê–ù–ê–õ–ò–ó –û–ñ–ò–î–ê–ï–ú–û–ô –°–í–Ø–ó–ò:');
      console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${problemUser.id} –¥–æ–ª–∂–µ–Ω –±—ã–ª —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ ${referrerUser.id}`);
      console.log(`   –§–∞–∫—Ç: referred_by = ${problemUser.referred_by || '–ù–ï–¢'}`);
      console.log(`   –û–∂–∏–¥–∞–ª–æ—Å—å: referred_by = ${referrerUser.id}`);
      
      if (problemUser.referred_by == referrerUser.id) {
        console.log('‚úÖ –°–≤—è–∑—å –≤ users –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
      } else {
        console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –°–≤—è–∑—å –≤ users –ù–ï –°–û–ó–î–ê–ù–ê');
      }
    }
    
    // 3. –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–ò–°–ò –í REFERRALS
    console.log('\nüîç 3. –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–ò–°–ò –í REFERRALS');
    
    const { data: referralRecord, error: referralError } = await supabase
      .from('referrals')
      .select('*')
      .eq('user_id', 224)
      .single();
    
    if (referralError) {
      console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ó–∞–ø–∏—Å—å –≤ referrals –ù–ï –ù–ê–ô–î–ï–ù–ê');
      console.log('   –û—à–∏–±–∫–∞:', referralError.message);
    } else {
      console.log('‚úÖ –ó–∞–ø–∏—Å—å –≤ referrals –Ω–∞–π–¥–µ–Ω–∞:');
      console.log(`   User ID: ${referralRecord.user_id}`);
      console.log(`   Referrer ID: ${referralRecord.referrer_id || '–ù–ï–¢'}`);
      console.log(`   –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date(referralRecord.created_at).toLocaleString('ru-RU')}`);
    }
    
    // 4. –ê–ù–ê–õ–ò–ó –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–û–ô –ü–†–û–ë–õ–ï–ú–´
    console.log('\nüèóÔ∏è 4. –ê–ù–ê–õ–ò–ó –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–û–ô –ü–†–û–ë–õ–ï–ú–´');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - –±—ã–ª–æ –ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ –Ω–∞—à–µ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è?
    const fixTime = new Date('2025-07-18T16:30:00.000Z'); // –í—Ä–µ–º—è –∫–æ–≥–¥–∞ –º—ã –≤–Ω–µ—Å–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const userCreationTime = new Date(problemUser.created_at);
    
    console.log('–í—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏–∑:');
    console.log(`   –í—Ä–µ–º—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${fixTime.toLocaleString('ru-RU')}`);
    console.log(`   –í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${userCreationTime.toLocaleString('ru-RU')}`);
    console.log(`   –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ü–û–°–õ–ï –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${userCreationTime > fixTime ? '–î–ê' : '–ù–ï–¢'}`);
    
    if (userCreationTime > fixTime) {
      console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ü–û–°–õ–ï –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å –ù–ï –†–ê–ë–û–¢–ê–ï–¢');
    } else {
      console.log('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –î–û –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ');
    }
    
    // 5. –ü–†–û–í–ï–†–ö–ê –ü–†–û–ë–õ–ï–ú –° –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ò–ú –ò–ú–ü–û–†–¢–û–ú
    console.log('\nüîç 5. –ü–†–û–í–ï–†–ö–ê –ü–†–û–ë–õ–ï–ú –° –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ò–ú –ò–ú–ü–û–†–¢–û–ú');
    
    console.log('–ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:');
    console.log('1. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç await import() –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å .ts —Ñ–∞–π–ª–∞–º–∏ –≤ production');
    console.log('2. TSX –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∏–º–ø–æ—Ä—Ç—ã');
    console.log('3. Node.js —Ç—Ä–µ–±—É–µ—Ç .js —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞');
    console.log('4. –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏');
    
    // 6. –ü–†–û–í–ï–†–ö–ê –õ–û–ì–ò–ö–ò –ù–ê–®–ï–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø
    console.log('\nüîß 6. –ü–†–û–í–ï–†–ö–ê –õ–û–ì–ò–ö–ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø');
    
    console.log('–í–Ω–µ—Å–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:');
    console.log('‚úÖ processReferral() –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ findOrCreateFromTelegram()');
    console.log('‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π');
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –°–†–ê–ó–£ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('‚úÖ Try-catch –∑–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–æ–∫');
    
    // 7. –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ï–†–í–ï–†–ù–û–ì–û –°–¢–ê–¢–£–°–ê
    console.log('\nüîç 7. –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ï–†–í–ï–†–ù–û–ì–û –°–¢–ê–¢–£–°–ê');
    
    try {
      const response = await fetch('http://localhost:3000/health');
      if (response.ok) {
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç');
      } else {
        console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç');
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É:', error.message);
    }
    
    // 8. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ
    console.log('\nüí° 8. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ');
    
    console.log('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —Å –Ω–æ–≤—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏');
    console.log('2. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
    console.log('4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫');
    console.log('5. –î–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è');
    
    // 9. –¢–ï–°–¢–û–í–ê–Ø –°–°–´–õ–ö–ê
    console.log('\nüîó 9. –¢–ï–°–¢–û–í–ê–Ø –°–°–´–õ–ö–ê');
    console.log('–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
    console.log('https://t.me/UniFarming_Bot/UniFarm?startapp=REF_1750079004411_nddfp2');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }
}

diagnoseJWTReferralIssue();