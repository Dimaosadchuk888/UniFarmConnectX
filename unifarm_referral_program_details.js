/**
 * –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –ü–ê–†–¢–ù–ï–†–°–ö–û–ô –ü–†–û–ì–†–ê–ú–ú–´ UNIFARM
 * –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ 20-—É—Ä–æ–≤–Ω–µ–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
 */

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
 */
function showReferralProgramStructure() {
  console.log('üîó –ü–ê–†–¢–ù–ï–†–°–ö–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê UNIFARM - 20-–£–†–û–í–ù–ï–í–ê–Ø –°–ò–°–¢–ï–ú–ê');
  console.log('='.repeat(70));
  
  console.log('\nüìã –ö–û–ú–ò–°–°–ò–û–ù–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:');
  
  // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–º–∏—Å—Å–∏–π –ø–æ —É—Ä–æ–≤–Ω—è–º
  const commissionStructure = {
    1: { percent: 100, description: '–ü—Ä—è–º–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª' },
    2: { percent: 2, description: '–†–µ—Ñ–µ—Ä–∞–ª 2-–≥–æ —É—Ä–æ–≤–Ω—è' },
    3: { percent: 3, description: '–†–µ—Ñ–µ—Ä–∞–ª 3-–≥–æ —É—Ä–æ–≤–Ω—è' },
    4: { percent: 4, description: '–†–µ—Ñ–µ—Ä–∞–ª 4-–≥–æ —É—Ä–æ–≤–Ω—è' },
    5: { percent: 5, description: '–†–µ—Ñ–µ—Ä–∞–ª 5-–≥–æ —É—Ä–æ–≤–Ω—è' },
    6: { percent: 6, description: '–†–µ—Ñ–µ—Ä–∞–ª 6-–≥–æ —É—Ä–æ–≤–Ω—è' },
    7: { percent: 7, description: '–†–µ—Ñ–µ—Ä–∞–ª 7-–≥–æ —É—Ä–æ–≤–Ω—è' },
    8: { percent: 8, description: '–†–µ—Ñ–µ—Ä–∞–ª 8-–≥–æ —É—Ä–æ–≤–Ω—è' },
    9: { percent: 9, description: '–†–µ—Ñ–µ—Ä–∞–ª 9-–≥–æ —É—Ä–æ–≤–Ω—è' },
    10: { percent: 10, description: '–†–µ—Ñ–µ—Ä–∞–ª 10-–≥–æ —É—Ä–æ–≤–Ω—è' },
    11: { percent: 11, description: '–†–µ—Ñ–µ—Ä–∞–ª 11-–≥–æ —É—Ä–æ–≤–Ω—è' },
    12: { percent: 12, description: '–†–µ—Ñ–µ—Ä–∞–ª 12-–≥–æ —É—Ä–æ–≤–Ω—è' },
    13: { percent: 13, description: '–†–µ—Ñ–µ—Ä–∞–ª 13-–≥–æ —É—Ä–æ–≤–Ω—è' },
    14: { percent: 14, description: '–†–µ—Ñ–µ—Ä–∞–ª 14-–≥–æ —É—Ä–æ–≤–Ω—è' },
    15: { percent: 15, description: '–†–µ—Ñ–µ—Ä–∞–ª 15-–≥–æ —É—Ä–æ–≤–Ω—è' },
    16: { percent: 16, description: '–†–µ—Ñ–µ—Ä–∞–ª 16-–≥–æ —É—Ä–æ–≤–Ω—è' },
    17: { percent: 17, description: '–†–µ—Ñ–µ—Ä–∞–ª 17-–≥–æ —É—Ä–æ–≤–Ω—è' },
    18: { percent: 18, description: '–†–µ—Ñ–µ—Ä–∞–ª 18-–≥–æ —É—Ä–æ–≤–Ω—è' },
    19: { percent: 19, description: '–†–µ—Ñ–µ—Ä–∞–ª 19-–≥–æ —É—Ä–æ–≤–Ω—è' },
    20: { percent: 20, description: '–†–µ—Ñ–µ—Ä–∞–ª 20-–≥–æ —É—Ä–æ–≤–Ω—è' }
  };
  
  Object.keys(commissionStructure).forEach(level => {
    const info = commissionStructure[level];
    const stars = level == 1 ? '‚≠ê‚≠ê‚≠ê' : level <= 5 ? '‚≠ê‚≠ê' : '‚≠ê';
    console.log(`  Level ${level.padStart(2, ' ')}: ${info.percent.toString().padStart(3, ' ')}% ${stars} - ${info.description}`);
  });
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã —Ä–µ–∞–ª—å–Ω—ã—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π
 */
function showRealExamples() {
  console.log('\nüí∞ –ü–†–ò–ú–ï–†–´ –†–ï–ê–õ–¨–ù–´–• –ù–ê–ß–ò–°–õ–ï–ù–ò–ô:');
  
  const examples = [
    {
      scenario: '1 UNI Farming –¥–æ—Ö–æ–¥',
      sourceIncome: 1.0,
      levels: [1, 2, 3, 4, 5]
    },
    {
      scenario: '10 UNI –ö—Ä—É–ø–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç',
      sourceIncome: 10.0,
      levels: [1, 2, 3, 4, 5]
    },
    {
      scenario: '100 UNI VIP –¥–µ–ø–æ–∑–∏—Ç',
      sourceIncome: 100.0,
      levels: [1, 2, 3, 4, 5, 10, 15, 20]
    }
  ];
  
  examples.forEach(example => {
    console.log(`\nüìà ${example.scenario}:`);
    console.log(`   –ò—Å—Ö–æ–¥–Ω—ã–π –¥–æ—Ö–æ–¥: ${example.sourceIncome} UNI`);
    
    let totalCommissions = 0;
    
    example.levels.forEach(level => {
      const commissionRate = level === 1 ? 1.0 : level / 100;
      const commission = example.sourceIncome * commissionRate;
      totalCommissions += commission;
      
      console.log(`   Level ${level.toString().padStart(2, ' ')}: ${(commissionRate * 100).toString().padStart(3, ' ')}% = ${commission.toFixed(6)} UNI`);
    });
    
    console.log(`   üíé –û–±—â–∞—è –≤—ã–ø–ª–∞—Ç–∞: ${totalCommissions.toFixed(6)} UNI`);
  });
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–æ—Ö–æ–¥–∞ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π
 */
function showIncomeSource() {
  console.log('\nüí∏ –ò–°–¢–û–ß–ù–ò–ö–ò –î–û–•–û–î–ê –î–õ–Ø –†–ï–§–ï–†–ê–õ–¨–ù–´–• –ù–ê–ß–ò–°–õ–ï–ù–ò–ô:');
  
  console.log('\n1. UNI FARMING (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç):');
  console.log('   ‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
  console.log('   üí∞ –î–æ—Ö–æ–¥: 0.001 - 0.01 UNI –∑–∞ —Ü–∏–∫–ª (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞)');
  console.log('   üîÑ –°—Ç–∞—Ç—É—Å: –ê–ö–¢–ò–í–ï–ù - 22 —Ñ–∞—Ä–º–µ—Ä–∞');
  
  console.log('\n2. TON BOOST PACKAGES (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç):');
  console.log('   ‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
  console.log('   üí∞ –î–æ—Ö–æ–¥: 0.001 - 0.005 TON –∑–∞ —Ü–∏–∫–ª (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–∞–∫–µ—Ç–∞)');
  console.log('   üîÑ –°—Ç–∞—Ç—É—Å: –ê–ö–¢–ò–í–ï–ù - 27 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è–º–∏');
  
  console.log('\n3. DAILY BONUS (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ):');
  console.log('   ‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: 1 —Ä–∞–∑ –≤ –¥–µ–Ω—å');
  console.log('   üí∞ –î–æ—Ö–æ–¥: 1-10 UNI (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç streak)');
  console.log('   üîÑ –°—Ç–∞—Ç—É—Å: –ê–ö–¢–ò–í–ï–ù');
  
  console.log('\n4. MISSIONS REWARDS (–ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é):');
  console.log('   ‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: –ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –∑–∞–¥–∞–Ω–∏—è');
  console.log('   üí∞ –î–æ—Ö–æ–¥: 0.5-50 UNI (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏)');
  console.log('   üîÑ –°—Ç–∞—Ç—É—Å: –í –†–ê–ó–†–ê–ë–û–¢–ö–ï');
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã –∏–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è T63-T64
 */
function showTestingCases() {
  console.log('\nüß™ –†–ï–ê–õ–¨–ù–´–ï –ö–ï–ô–°–´ –ò–ó –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
  
  console.log('\n–ö–µ–π—Å 1: User final_test_user');
  console.log('  Farming –¥–æ—Ö–æ–¥: 0.001 UNI');
  console.log('  –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞: 1 —É—Ä–æ–≤–µ–Ω—å');
  console.log('  –ù–∞—á–∏—Å–ª–µ–Ω–∏—è:');
  console.log('    Level 1: 100% = 0.001000 UNI');
  console.log('  –û–±—â–∞—è –≤—ã–ø–ª–∞—Ç–∞: 0.001000 UNI');
  
  console.log('\n–ö–µ–π—Å 2: User test_user_3');
  console.log('  Farming –¥–æ—Ö–æ–¥: 0.01 UNI');
  console.log('  –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞: 2 —É—Ä–æ–≤–Ω—è');
  console.log('  –ù–∞—á–∏—Å–ª–µ–Ω–∏—è:');
  console.log('    Level 1: 100% = 0.010000 UNI');
  console.log('    Level 2: 2% = 0.000200 UNI');
  console.log('  –û–±—â–∞—è –≤—ã–ø–ª–∞—Ç–∞: 0.010200 UNI');
  
  console.log('\n–ö–µ–π—Å 3: 20-—É—Ä–æ–≤–Ω–µ–≤–∞—è —Ü–µ–ø–æ—á–∫–∞ (–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª)');
  console.log('  Farming –¥–æ—Ö–æ–¥: 1.0 UNI');
  console.log('  –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞: 20 —É—Ä–æ–≤–Ω–µ–π');
  console.log('  –†–∞—Å—á–µ—Ç–Ω—ã–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è:');
  console.log('    Level 1: 100% = 1.000000 UNI');
  console.log('    Level 2-5: 2%-5% = 0.140000 UNI');
  console.log('    Level 6-10: 6%-10% = 0.400000 UNI');
  console.log('    Level 11-15: 11%-15% = 0.650000 UNI');
  console.log('    Level 16-20: 16%-20% = 0.900000 UNI');
  console.log('  –û–±—â–∞—è –≤—ã–ø–ª–∞—Ç–∞: 3.090000 UNI');
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã
 */
function showMathematicalBreakdown() {
  console.log('\nüìä –ú–ê–¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ú–û–î–ï–õ–¨:');
  
  console.log('\n–§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞ –∫–æ–º–∏—Å—Å–∏–∏:');
  console.log('  Level 1: commission = income √ó 1.00 (100%)');
  console.log('  Level 2-20: commission = income √ó (level / 100)');
  
  console.log('\n–ü—Ä–∏–º–µ—Ä –¥–ª—è –¥–æ—Ö–æ–¥–∞ 0.1 UNI:');
  let totalPayout = 0;
  
  for (let level = 1; level <= 20; level++) {
    const rate = level === 1 ? 1.0 : level / 100;
    const commission = 0.1 * rate;
    totalPayout += commission;
    
    if (level <= 5 || level % 5 === 0) {
      console.log(`  Level ${level.toString().padStart(2, ' ')}: ${(rate * 100).toString().padStart(3, ' ')}% = ${commission.toFixed(6)} UNI`);
    }
  }
  
  console.log(`  ... (–ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏)`);
  console.log(`  üíé –û–±—â–∞—è –≤—ã–ø–ª–∞—Ç–∞ –∑–∞ 20 —É—Ä–æ–≤–Ω–µ–π: ${totalPayout.toFixed(6)} UNI`);
  console.log(`  üìà –ú—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–æ—Ä: x${(totalPayout / 0.1).toFixed(2)} –æ—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞`);
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ—Ö–æ–¥—ã
 */
function showEarningsPotential() {
  console.log('\nüíé –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ï –î–û–•–û–î–´ –ü–ê–†–¢–ù–ï–†–û–í:');
  
  const scenarios = [
    { daily: 1, monthly: 30, description: '–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' },
    { daily: 5, monthly: 150, description: '–ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' },
    { daily: 20, monthly: 600, description: 'VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' }
  ];
  
  scenarios.forEach(scenario => {
    console.log(`\nüéØ ${scenario.description}:`);
    console.log(`   –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–æ—Ö–æ–¥ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: ${scenario.daily} UNI`);
    console.log(`   –ú–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: ${scenario.monthly} UNI`);
    
    // –†–∞—Å—á–µ—Ç –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞ Level 1
    const level1Daily = scenario.daily * 1.0; // 100%
    const level1Monthly = scenario.monthly * 1.0;
    
    console.log(`   –î–æ—Ö–æ–¥ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ Level 1:`);
    console.log(`     –ï–∂–µ–¥–Ω–µ–≤–Ω–æ: ${level1Daily.toFixed(2)} UNI`);
    console.log(`     –ï–∂–µ–º–µ—Å—è—á–Ω–æ: ${level1Monthly.toFixed(2)} UNI`);
    
    // –†–∞—Å—á–µ—Ç –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞ Level 2
    const level2Daily = scenario.daily * 0.02; // 2%
    const level2Monthly = scenario.monthly * 0.02;
    
    console.log(`   –î–æ—Ö–æ–¥ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ Level 2:`);
    console.log(`     –ï–∂–µ–¥–Ω–µ–≤–Ω–æ: ${level2Daily.toFixed(4)} UNI`);
    console.log(`     –ï–∂–µ–º–µ—Å—è—á–Ω–æ: ${level2Monthly.toFixed(2)} UNI`);
  });
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
 */
async function runReferralProgramAnalysis() {
  try {
    console.log('–î–ï–¢–ê–õ–¨–ù–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê –ü–ê–†–¢–ù–ï–†–°–ö–û–ô –ü–†–û–ì–†–ê–ú–ú–´ UNIFARM');
    console.log(`–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: ${new Date().toLocaleString('ru-RU')}`);
    console.log('='.repeat(70));
    
    showReferralProgramStructure();
    showRealExamples();
    showIncomeSource();
    showTestingCases();
    showMathematicalBreakdown();
    showEarningsPotential();
    
    console.log('\n' + '='.repeat(70));
    console.log('üìã –ö–õ–Æ–ß–ï–í–´–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:');
    console.log('‚úÖ 20-—É—Ä–æ–≤–Ω–µ–≤–∞—è –≥–ª—É–±–∏–Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏');
    console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
    console.log('‚úÖ –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∫–æ–º–∏—Å—Å–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞');
    console.log('‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–æ—Ö–æ–¥–∞');
    console.log('‚úÖ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏ —É—Å—Ç–æ–π—á–∏–≤–∞—è –º–æ–¥–µ–ª—å');
    console.log('\nüéØ –°–¢–ê–¢–£–°: –ü–û–õ–ù–û–°–¢–¨–Æ –ê–ö–¢–ò–í–ù–ê –ò –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù–ê');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error.message);
  }
}

runReferralProgramAnalysis();