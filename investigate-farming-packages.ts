import { supabase } from './core/supabase';

async function investigateFarmingPackages() {
  console.log('üîç –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï FARMING-–ü–ê–ö–ï–¢–û–í');
  console.log('================================\n');

  const userId = 74;
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø');
    const { data: userData, error: userError } = await supabase
      .from('users')
      .select('id, telegram_id, balance_uni, balance_ton, uni_farming_active, uni_deposit_amount, uni_farming_balance, uni_farming_rate, uni_farming_start_timestamp')
      .eq('id', userId)
      .single();
    
    if (userError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
    } else {
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
      console.log(JSON.stringify(userData, null, 2));
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º farming_sessions
    console.log('\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê FARMING SESSIONS');
    const { data: farmingSessions, error: farmingError } = await supabase
      .from('farming_sessions')
      .select('*')
      .eq('user_id', userId)
      .order('created_at', { ascending: false });
    
    if (farmingError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è farming sessions:', farmingError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ farming sessions: ${farmingSessions?.length || 0}`);
      if (farmingSessions && farmingSessions.length > 0) {
        console.log('–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–µ—Å—Å–∏–∏:');
        farmingSessions.slice(0, 3).forEach((session, index) => {
          console.log(`\n–°–µ—Å—Å–∏—è ${index + 1}:`);
          console.log(JSON.stringify(session, null, 2));
        });
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ç–∏–ø–∞ FARMING_REWARD (–≤–º–µ—Å—Ç–æ FARMING_DEPOSIT)
    console.log('\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –¢–†–ê–ù–ó–ê–ö–¶–ò–ô FARMING_REWARD');
    const { data: farmingTransactions, error: transError } = await supabase
      .from('transactions')
      .select('*')
      .eq('user_id', userId)
      .eq('type', 'FARMING_REWARD')
      .order('created_at', { ascending: false })
      .limit(10);
    
    if (transError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', transError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π FARMING_DEPOSIT: ${farmingTransactions?.length || 0}`);
      if (farmingTransactions && farmingTransactions.length > 0) {
        console.log('–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:');
        farmingTransactions.forEach((tx, index) => {
          console.log(`\n–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${index + 1}:`);
          console.log(`ID: ${tx.id}`);
          console.log(`–°—É–º–º–∞: ${tx.amount} ${tx.currency}`);
          console.log(`–°–æ–∑–¥–∞–Ω–∞: ${tx.created_at}`);
          console.log(`–î–µ—Ç–∞–ª–∏: ${JSON.stringify(tx.details)}`);
        });
      }
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
    console.log('\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ù–ï–î–ê–í–ù–ò–• –¢–†–ê–ù–ó–ê–ö–¶–ò–ô');
    const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000).toISOString();
    const { data: recentTransactions, error: recentError } = await supabase
      .from('transactions')
      .select('id, type, amount, currency, created_at')
      .eq('user_id', userId)
      .gte('created_at', oneHourAgo)
      .order('created_at', { ascending: false });
    
    if (recentError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–¥–∞–≤–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', recentError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å: ${recentTransactions?.length || 0}`);
      if (recentTransactions && recentTransactions.length > 0) {
        recentTransactions.forEach((tx, index) => {
          console.log(`\n–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${index + 1}:`);
          console.log(`–¢–∏–ø: ${tx.type}`);
          console.log(`–°—É–º–º–∞: ${tx.amount} ${tx.currency}`);
          console.log(`–í—Ä–µ–º—è: ${tx.created_at}`);
        });
      }
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü
    console.log('\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ–π –≤ users
    const { data: userColumns } = await supabase.rpc('get_table_columns', { table_name: 'users' });
    if (userColumns) {
      const farmingFields = ['uni_farming_active', 'uni_deposit_amount', 'uni_farming_balance', 'uni_farming_rate', 'uni_farming_start'];
      console.log('\n–ü–æ–ª—è farming –≤ —Ç–∞–±–ª–∏—Ü–µ users:');
      farmingFields.forEach(field => {
        const exists = userColumns.some((col: any) => col.column_name === field);
        console.log(`${field}: ${exists ? '‚úÖ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û'}`);
      });
    }

    // 6. –°–≤–æ–¥–∫–∞ –ø–æ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
    console.log('\n6Ô∏è‚É£ –°–í–û–î–ö–ê –ü–û –ö–û–ù–°–ò–°–¢–ï–ù–¢–ù–û–°–¢–ò –î–ê–ù–ù–´–•');
    if (userData) {
      console.log(`\n–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`);
      console.log(`- –ë–∞–ª–∞–Ω—Å UNI: ${userData.balance_uni}`);
      console.log(`- Farming –∞–∫—Ç–∏–≤–µ–Ω: ${userData.uni_farming_active}`);
      console.log(`- –°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–∞: ${userData.uni_deposit_amount}`);
      console.log(`- Farming –±–∞–ª–∞–Ω—Å: ${userData.uni_farming_balance}`);
      console.log(`- –°—Ç–∞–≤–∫–∞: ${userData.uni_farming_rate}%`);
      console.log(`- –ù–∞—á–∞–ª–æ farming: ${userData.uni_farming_start_timestamp}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å UI –¥–∞–Ω–Ω—ã–º–∏
      console.log('\n–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å UI –¥–∞–Ω–Ω—ã–º–∏:');
      console.log('- UI –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å: 670558.000323');
      console.log(`- –ë–î –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å: ${userData.balance_uni}`);
      console.log('- UI –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ–ø–æ–∑–∏—Ç: 200442');
      console.log(`- –ë–î –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ–ø–æ–∑–∏—Ç: ${userData.uni_deposit_amount}`);
    }

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
investigateFarmingPackages();